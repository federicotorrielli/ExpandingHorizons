{"cat":"animals","slot":"product","value":"wax","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can produce\";         A textual example of the semantic relation is \"product wax\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bee, goose, silkworm, spider, beaver, sheep, cow, chicken, pig, horse"}
{"cat":"animals","slot":"product","value":"propolis","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can produce\";         A textual example of the semantic relation is \"product propolis\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":" bee, beaver, cow, deer, dog, duck, goat, horse, sheep, silkworm"}
{"cat":"animals","slot":"product","value":"mucus","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can produce\";         A textual example of the semantic relation is \"product mucus\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        snail, slug, earthworm, hagfish, spider, fly, bee, snake, frog, chicken"}
{"cat":"animals","slot":"product","value":"honey","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can produce\";         A textual example of the semantic relation is \"product honey\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":" bees, honeybees, bumblebees, wasps, hornets, ants, termites, beetles, butterflies, moths"}
{"cat":"animals","slot":"time","value":"summer","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are active during\";         A textual example of the semantic relation is \"time summer\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bees, butterflies, ants, squirrels, rabbits, deer, foxes, birds, snakes, lizards"}
{"cat":"animals","slot":"time","value":"night","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are active during\";         A textual example of the semantic relation is \"time night\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        \"owl, bat, raccoon, fox, deer, wolf, coyote, skunk, possum, cat\""}
{"cat":"animals","slot":"sound","value":"growl","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can\";         A textual example of the semantic relation is \"sound growl\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, lion, tiger, bear, wolf, fox, hyena, cheetah, panther"}
{"cat":"animals","slot":"sound","value":"bark","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can\";         A textual example of the semantic relation is \"sound bark\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, wolf, fox, deer, rabbit, cat, lion, tiger, bear, elephant"}
{"cat":"animals","slot":"sound","value":"trumpeting","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can\";         A textual example of the semantic relation is \"sound trumpeting\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        lion, elephant, donkey, zebra, giraffe, kangaroo, camel, horse, hippopotamus, rhinoceros"}
{"cat":"animals","slot":"sound","value":"croaking","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can\";         A textual example of the semantic relation is \"sound croaking\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        frog, toad, crow, raven, owl, coyote, wolf, lion, tiger, bear"}
{"cat":"animals","slot":"sound","value":"cry","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"\";         A textual example of the semantic relation is \"sound cry\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        wolf, dog, cat, lion, tiger, elephant, giraffe, zebra, hippopotamus, rhinoceros"}
{"cat":"animals","slot":"shape","value":"long","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"shape long\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        snake, crocodile, alligator, lizard, eel, worm, python, anaconda, constrictor, viper"}
{"cat":"animals","slot":"shape","value":"elongated","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"shape elongated\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        snake, eel, salamander, lizard, alligator, crocodile, otter, cat, weasel, seal"}
{"cat":"animals","slot":"accessory","value":"leash","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are related with\";         A textual example of the semantic relation is \"accessory leash\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, rabbit, horse, cow, pig, chicken, fish, snake, lion"}
{"cat":"animals","slot":"accessory","value":"muzzle","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are related with\";         A textual example of the semantic relation is \"accessory muzzle\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, horse, cow, pig, chicken, fish, snake, rabbit, elephant"}
{"cat":"animals","slot":"accessory","value":"collar","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are related with\";         A textual example of the semantic relation is \"accessory collar\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, rabbit, hamster, guinea pig, horse, cow, pig, chicken, fish"}
{"cat":"animals","slot":"shape","value":"circular","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"shape circular\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        tiger, lion, elephant, giraffe, zebra, hippopotamus, crocodile, snake, monkey, ape"}
{"cat":"animals","slot":"shape","value":"round","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"shape round\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, rabbit, hamster, fish, bird, horse, cow, pig, sheep"}
{"cat":"animals","slot":"accessory","value":"dog","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are related with\";         A textual example of the semantic relation is \"accessory dog\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, horse, cow, pig, sheep, chicken, fish, bird, rabbit"}
{"cat":"animals","slot":"shape","value":"pear","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"shape pear\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, rabbit, hamster, guinea pig, snake, lizard, fish, bird, horse"}
{"cat":"animals","slot":"group","value":"herd","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are grouped in\";         A textual example of the semantic relation is \"group herd\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        lion, tiger, elephant, giraffe, zebra, hippopotamus, rhinoceros, leopard, cheetah, hyena"}
{"cat":"animals","slot":"group","value":"swarm","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are grouped in\";         A textual example of the semantic relation is \"group swarm\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        lion, tiger, elephant, giraffe, zebra, hippopotamus, rhinoceros, cheetah, leopard, hyena"}
{"cat":"animals","slot":"group","value":"infestation","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are grouped in\";         A textual example of the semantic relation is \"group infestation\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        ants, bees, wasps, termites, cockroaches, flies, mosquitoes, spiders, ticks, fleas"}
{"cat":"animals","slot":"group","value":"hive","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are grouped in\";         A textual example of the semantic relation is \"group hive\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        hive, swarm, herd, flock, pack, school, colony, pod, troop, pride"}
{"cat":"animals","slot":"sound","value":"yelp","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"\";         A textual example of the semantic relation is \"sound yelp\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, bird, horse, cow, pig, sheep, goat, rabbit, turtle"}
{"cat":"animals","slot":"group","value":"colony","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are grouped in\";         A textual example of the semantic relation is \"group colony\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        lion, tiger, elephant, giraffe, zebra, hippopotamus, rhinoceros, crocodile, cheetah, leopard"}
{"cat":"animals","slot":"sound","value":"howl","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can\";         A textual example of the semantic relation is \"sound howl\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, wolf, coyote, fox, hyena, dingo, jackal, howler monkey, elephant, lion"}
{"cat":"animals","slot":"user","value":"cook","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are used by\";         A textual example of the semantic relation is \"user cooks\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, horse, cow, pig, sheep, goat, chicken, duck, rabbit"}
{"cat":"animals","slot":"user","value":"hunter","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are used by\";         A textual example of the semantic relation is \"user hunters\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        lion, tiger, leopard, cheetah, jaguar, panther, puma, cougar, ocelot, serval"}
{"cat":"animals","slot":"user","value":"lover","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are used by\";         A textual example of the semantic relation is \"user lovers\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, horse, cow, chicken, sheep, goat, pig, rabbit, fish"}
{"cat":"animals","slot":"user","value":"shepherd","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are used by\";         A textual example of the semantic relation is \"user shepherds\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shepherd, sheepdog, herder, cowboy, rancher, farmer, trainer, breeder, veterinarian, zookeeper"}
{"cat":"animals","slot":"user","value":"poacher","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are used by\";         A textual example of the semantic relation is \"user poachers\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        elephant, rhino, tiger, lion, leopard, giraffe, zebra, hippo, crocodile, buffalo"}
{"cat":"animals","slot":"user","value":"beekeeper","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are used by\";         A textual example of the semantic relation is \"user beekeepers\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bees, honey, beehives, pollen, wax, honeycomb, royal jelly, propolis, bee venom, bee bread"}
{"cat":"animals","slot":"user","value":"blind","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are used by\";         A textual example of the semantic relation is \"user blinds\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dogs, cats, horses, cows, pigs, sheep, goats, chickens, ducks, rabbits"}
{"cat":"animals","slot":"user","value":"policeman","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are used by\";         A textual example of the semantic relation is \"user policemen\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        cats, dogs, horses, cows, pigs, sheep, goats, chickens, ducks, rabbits"}
{"cat":"animals","slot":"user","value":"owner","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are used by\";         A textual example of the semantic relation is \"user owners\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, horse, cow, pig, sheep, goat, chicken, duck, rabbit"}
{"cat":"animals","slot":"accessory","value":"kennel","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are related with\";         A textual example of the semantic relation is \"accessory kennel\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, horse, cow, pig, sheep, goat, chicken, rabbit, fish"}
{"cat":"animals","slot":"accessory","value":"trainer","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are related with\";         A textual example of the semantic relation is \"accessory trainer\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        cat, dog, horse, rabbit, turtle, snake, hamster, fish, bird, monkey"}
{"cat":"animals","slot":"accessory","value":"handler","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are related with\";         A textual example of the semantic relation is \"accessory handler\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, rabbit, hamster, snake, lizard, fish, bird, horse, cow"}
{"cat":"animals","slot":"purpose","value":"food","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are used for\";         A textual example of the semantic relation is \"purpose food\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        cow, chicken, pig, sheep, goat, turkey, duck, rabbit, fish, lobster"}
{"cat":"animals","slot":"purpose","value":"attraction","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are used for\";         A textual example of the semantic relation is \"purpose attraction\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        horse, dog, cat, rabbit, hamster, guinea pig, parrot, fish, snake, lizard"}
{"cat":"animals","slot":"purpose","value":"research","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are used for\";         A textual example of the semantic relation is \"purpose research\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        rabbit, mouse, rat, guinea pig, zebrafish, fruit fly, worm, frog, chicken, pig"}
{"cat":"animals","slot":"purpose","value":"guard","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are used to\";         A textual example of the semantic relation is \"purpose guard\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, horse, cow, sheep, pig, chicken, goat, rabbit, fish"}
{"cat":"animals","slot":"purpose","value":"hunting","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are used for\";         A textual example of the semantic relation is \"purpose hunting\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        horse, dog, falcon, hound, hawk, terrier, foxhound, beagle, mastiff, greyhound"}
{"cat":"animals","slot":"purpose","value":"wild","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are used for\";         A textual example of the semantic relation is \"purpose wild\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        horse, dog, cat, cow, sheep, pig, chicken, goat, duck, rabbit"}
{"cat":"animals","slot":"purpose","value":"stray","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are used for\";         A textual example of the semantic relation is \"purpose stray\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, horse, cow, pig, sheep, goat, chicken, duck, fish"}
{"cat":"animals","slot":"purpose","value":"haulage","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are used for\";         A textual example of the semantic relation is \"purpose haulage\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"10 words: horse, ox, donkey, mule, camel, llama, yak, reindeer, elephant, dog"}
{"cat":"animals","slot":"purpose","value":"transport","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are used for\";         A textual example of the semantic relation is \"purpose transport\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        horse, camel, donkey, elephant, llama, reindeer, yak, ostrich, rhinoceros, hippopotamus"}
{"cat":"animals","slot":"purpose","value":"beast of burden","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are used for\";         A textual example of the semantic relation is \"purpose beast of burden\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        elephant, horse, ox, donkey, camel, llama, reindeer, yak, water buffalo, mule"}
{"cat":"animals","slot":"behavior","value":"faithful","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"behavior faithful\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, horse, cow, elephant, lion, tiger, bear, wolf, dolphin"}
{"cat":"animals","slot":"behavior","value":"obedient","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"behavior obedient\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, rabbit, hamster, guinea pig, fish, bird, horse, cow, turtle"}
{"cat":"animals","slot":"behavior","value":"playful","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"behavior playful\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"10 words: cat, dog, horse, rabbit, tiger, lion, elephant, giraffe, dolphin, whale."}
{"cat":"animals","slot":"behavior","value":"loyal","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"behavior loyal\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":" dog, cat, horse, elephant, dolphin, penguin, lion, tiger, giraffe, monkey"}
{"cat":"animals","slot":"behavior","value":"affectionate","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"behavior affectionate\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, horse, rabbit, hamster, fish, turtle, bird, snake, lizard"}
{"cat":"animals","slot":"behavior","value":"healthy","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"behavior healthy\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, horse, cow, chicken, pig, sheep, goat, rabbit, fish"}
{"cat":"animals","slot":"behavior","value":"cute","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"behavior cute\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"1. dog, 2. cat, 3. rabbit, 4. hamster, 5. guinea pig, 6. ferret, 7. horse, 8. cow, 9. pig, 10. sheep"}
{"cat":"animals","slot":"behavior","value":"friendly","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"behavior friendly\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"1. dog, 2. cat, 3. horse, 4. rabbit, 5. hamster, 6. goldfish, 7. parrot, 8. turtle, 9. guinea pig, 10. snake"}
{"cat":"animals","slot":"behavior","value":"feral","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"behavior feral\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        lion, tiger, bear, wolf, fox, leopard, jaguar, cheetah, panther, puma"}
{"cat":"animals","slot":"behavior","value":"happy","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"behavior happy\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, rabbit, hamster, horse, cow, sheep, pig, chicken, fish"}
{"cat":"animals","slot":"behavior","value":"cunning","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"behavior cunning\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, horse, cow, pig, sheep, chicken, goat, rabbit, fish"}
{"cat":"animals","slot":"behavior","value":"rabid","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"behavior rabid\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, rabbit, horse, cow, pig, sheep, goat, chicken, fish"}
{"cat":"animals","slot":"behavior","value":"aggressive","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"behavior aggressive\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        lion, tiger, bear, wolf, shark, snake, crocodile, eagle, hawk, falcon"}
{"cat":"animals","slot":"behavior","value":"submissive","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"behavior submissive\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        cat, dog, horse, cow, pig, chicken, goat, sheep, rabbit, fish"}
{"cat":"animals","slot":"movement","value":"slow","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"movement slow\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        turtle, sloth, snail, tortoise, koala, panda, manatee, sloth bear, three-toed sloth, okapi"}
{"cat":"animals","slot":"movement","value":"chase","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can\";         A textual example of the semantic relation is \"movement chase\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        lion, tiger, cheetah, leopard, hyena, wolf, fox, bear, crocodile, shark"}
{"cat":"animals","slot":"movement","value":"attack","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can\";         A textual example of the semantic relation is \"movement attack\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        lion, tiger, bear, wolf, shark, eagle, snake, crocodile, cheetah, leopard"}
{"cat":"animals","slot":"size","value":"small","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"size small\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        ant, bee, butterfly, cricket, frog, ladybug, mouse, rabbit, spider, worm"}
{"cat":"animals","slot":"size","value":"large","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"size large\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":" elephant, whale, giraffe, lion, tiger, bear, rhino, hippo, crocodile, snake"}
{"cat":"animals","slot":"size","value":"big","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"size big\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        elephant, giraffe, lion, tiger, bear, whale, hippopotamus, rhino, crocodile, snake"}
{"cat":"animals","slot":"size","value":"medium","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"size medium\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, horse, cow, pig, sheep, chicken, rabbit, fish, bird"}
{"cat":"animals","slot":"group","value":"larva","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are grouped in\";         A textual example of the semantic relation is \"group larva\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, horse, cow, pig, sheep, chicken, elephant, lion, giraffe"}
{"cat":"animals","slot":"user","value":"trainer","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are used by\";         A textual example of the semantic relation is \"user trainers\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dogs, cats, horses, elephants, dolphins, lions, tigers, bears, monkeys, whales"}
{"cat":"animals","slot":"user","value":"handler","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are used by\";         A textual example of the semantic relation is \"user handlers\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dogs, cats, horses, cows, pigs, sheep, goats, chickens, ducks, rabbits"}
{"cat":"animals","slot":"purpose","value":"pet","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are used for\";         A textual example of the semantic relation is \"purpose pet\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        cat, dog, fish, hamster, rabbit, turtle, snake, lizard, parrot, horse"}
{"cat":"animals","slot":"sound","value":"pet","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can\";         A textual example of the semantic relation is \"sound pet\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, rabbit, hamster, fish, bird, turtle, snake, lizard, horse"}
{"cat":"animals","slot":"group","value":"nest","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are grouped in\";         A textual example of the semantic relation is \"group nest\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        lion, tiger, elephant, giraffe, zebra, hippopotamus, rhinoceros, cheetah, leopard"}
{"cat":"animals","slot":"purpose","value":"prey","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are used for\";         A textual example of the semantic relation is \"purpose prey\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        deer, rabbit, squirrel, fox, wolf, bear, moose, elk, antelope, caribou"}
{"cat":"animals","slot":"part","value":"eye","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part eye\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, rabbit, snake, fish, bird, horse, cow, turtle, lion"}
{"cat":"animals","slot":"part","value":"head","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part head\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        ant, bear, cat, dog, elephant, fox, horse, lion, monkey, tiger"}
{"cat":"animals","slot":"part","value":"mouth","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part mouth\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        \"cat, dog, horse, cow, pig, sheep, goat, chicken, duck, fish\""}
{"cat":"animals","slot":"part","value":"leg","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part leg\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        cat, dog, horse, cow, pig, chicken, goat, sheep, rabbit, fish"}
{"cat":"animals","slot":"part","value":"tongue","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part tongue\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, rabbit, horse, cow, elephant, snake, fish, bird, monkey"}
{"cat":"animals","slot":"part","value":"paw","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part paw\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, horse, rabbit, cow, pig, lion, tiger, elephant, giraffe"}
{"cat":"animals","slot":"part","value":"fur","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part fur\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        cat, dog, rabbit, horse, cow, sheep, pig, goat, chicken, duck"}
{"cat":"animals","slot":"part","value":"coat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part coat\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, horse, elephant, lion, tiger, giraffe, zebra, panda, kangaroo"}
{"cat":"animals","slot":"part","value":"skin","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part skin\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, horse, cow, pig, chicken, sheep, goat, rabbit, turtle"}
{"cat":"animals","slot":"part","value":"ear","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part ear\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, horse, cow, pig, sheep, goat, chicken, duck, rabbit"}
{"cat":"animals","slot":"part","value":"hair","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part hair\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, horse, cow, pig, sheep, goat, chicken, duck, rabbit"}
{"cat":"animals","slot":"part","value":"tooth","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part tooth\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"10 words that belong to the category \"animals\" and satisfy the semantic relation \"can have\" are:\n        1. Dog\n        2. Cat\n        3. Horse\n        4. Cow\n        5. Elephant\n        6. Lion\n        7. Tiger\n        8. Giraffe\n        9. Monkey\n        10. Penguin"}
{"cat":"animals","slot":"part","value":"bone","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part bone\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, horse, cow, pig, sheep, goat, chicken, duck, fish"}
{"cat":"animals","slot":"part","value":"antenna","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part antenna\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        ant, bee, butterfly, cockroach, cricket, fly, grasshopper, mosquito, spider, wasp"}
{"cat":"animals","slot":"part","value":"flesh","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part flesh\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, rabbit, horse, cow, chicken, pig, sheep, goat, turkey"}
{"cat":"animals","slot":"part","value":"neck","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part neck\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        horse, dog, cat, rabbit, snake, turtle, fish, bird, deer, lion"}
{"cat":"animals","slot":"part","value":"toe","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part toe\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, horse, cow, pig, chicken, lion, tiger, elephant, giraffe"}
{"cat":"animals","slot":"part","value":"tail","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part tail\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        cat, dog, horse, cow, sheep, pig, rabbit, snake, turtle, fish"}
{"cat":"animals","slot":"part","value":"wing","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part wing\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        horse, cow, pig, sheep, goat, chicken, duck, goose, turkey, rabbit"}
{"cat":"animals","slot":"part","value":"nose","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part nose\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        cat, dog, horse, lion, elephant, giraffe, snake, fish, whale, dolphin"}
{"cat":"animals","slot":"part","value":"stinger","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part stinger\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bee, wasp, scorpion, jellyfish, spider, centipede, snake, ants, beetle, caterpillar"}
{"cat":"animals","slot":"part","value":"fang","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part fang\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        lion, tiger, wolf, fox, bear, snake, shark, eagle, crocodile, scorpion"}
{"cat":"animals","slot":"part","value":"legs","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part legs\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"10 animals that can have legs: horse, dog, cat, elephant, lion, tiger, bear, giraffe, kangaroo, deer"}
{"cat":"animals","slot":"part","value":"foot","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part foot\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, horse, cow, pig, sheep, goat, chicken, duck, rabbit"}
{"cat":"animals","slot":"part","value":"sac","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part sac\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, horse, cow, pig, sheep, goat, rabbit, chicken, fish"}
{"cat":"animals","slot":"part","value":"beak","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part beak\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        \"bird, duck, parrot, eagle, toucan, pelican, flamingo, chicken, ostrich, penguin\""}
{"cat":"animals","slot":"part","value":"abdomen","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part abdomen\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        cat, dog, rabbit, horse, cow, pig, sheep, goat, chicken, duck"}
{"cat":"animals","slot":"part","value":"body","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part body\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, horse, cow, pig, chicken, sheep, goat, lion, tiger"}
{"cat":"animals","slot":"part","value":"tentacle","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part tentacle\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        \"dog, cat, horse, cow, pig, sheep, chicken, fish, snake, lizard\""}
{"cat":"animals","slot":"part","value":"feeler","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part feeler\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        cat, dog, elephant, giraffe, horse, kangaroo, lion, monkey, pig, tiger"}
{"cat":"animals","slot":"part","value":"pad","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part pad\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, horse, cow, pig, sheep, goat, chicken, duck, rabbit"}
{"cat":"animals","slot":"part","value":"trunk","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part trunk\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"10 animals that can have a trunk: elephant, rhinoceros, hippopotamus, tapir, camel, giraffe, anteater, sloth, aardvark, armadillo"}
{"cat":"animals","slot":"part","value":"tusk","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part tusk\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        elephant, walrus, boar, warthog, narwhal, mammoth, hippopotamus, aardvark, rhinoceros, mastodon"}
{"cat":"animals","slot":"part","value":"egg","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part egg\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"10 words that belong to the category \"animals\" and satisfy the semantic relation \"can have\" are: horse, dog, cat, cow, sheep, pig, chicken, fish, snake, and turtle."}
{"cat":"animals","slot":"part","value":"shell","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part shell\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        turtle, crab, lobster, snail, hermit crab, conch, oyster, clam, mussel, scallop"}
{"cat":"animals","slot":"part","value":"horn","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part horn\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        antelope, deer, elk, goat, giraffe, sheep, cattle, buffalo, rhino, cow"}
{"cat":"animals","slot":"part","value":"claw","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part claw\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"10 words that belong to the category \"animals\" and satisfy the semantic relation \"can have\": cat, dog, lion, tiger, bear, wolf, fox, deer, rabbit, snake."}
{"cat":"animals","slot":"part","value":"belly","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part belly\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, horse, cow, pig, sheep, goat, chicken, duck, rabbit"}
{"cat":"animals","slot":"part","value":"nail","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part nail\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"10 words that belong to the category \"animals\" and satisfy the semantic relation \"can have\":\n        dog, cat, horse, cow, pig, chicken, rabbit, fish, turtle, snake"}
{"cat":"animals","slot":"part","value":"flag","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part flag\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        cat, dog, horse, cow, pig, sheep, goat, rabbit, chicken, fish"}
{"cat":"animals","slot":"part","value":"jaw","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part jaw\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, horse, cow, pig, sheep, goat, chicken, duck, fish"}
{"cat":"animals","slot":"part","value":"whisker","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part whisker\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"10 words: cat, dog, rabbit, horse, cow, lion, tiger, elephant, snake, whale"}
{"cat":"animals","slot":"part","value":"sting","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part sting\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bee, wasp, scorpion, jellyfish, sea urchin, centipede, lion, tiger, bear, shark"}
{"cat":"animals","slot":"movement","value":"run","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can\";         A textual example of the semantic relation is \"movement run\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        cat, dog, horse, elephant, lion, tiger, giraffe, zebra, dolphin, whale"}
{"cat":"animals","slot":"movement","value":"fly","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can\";         A textual example of the semantic relation is \"movement fly\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        \"fly, swim, run, jump, crawl, walk, gallop, slither, hop, trot\""}
{"cat":"animals","slot":"movement","value":"swim","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can\";         A textual example of the semantic relation is \"movement swim\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        fish, dolphin, seal, whale, shark, turtle, penguin, otter, crab, octopus"}
{"cat":"animals","slot":"movement","value":"leap","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can\";         A textual example of the semantic relation is \"movement leap\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        tiger, cheetah, deer, gazelle, kangaroo, frog, rabbit, squirrel, monkey, dolphin"}
{"cat":"animals","slot":"movement","value":"jump","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can\";         A textual example of the semantic relation is \"movement jump\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        lion, tiger, cheetah, kangaroo, frog, rabbit, deer, horse, dog, cat"}
{"cat":"animals","slot":"movement","value":"hop","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can\";         A textual example of the semantic relation is \"movement hop\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        rabbit, kangaroo, frog, grasshopper, flea, bird, squirrel, monkey, deer, bunny"}
{"cat":"animals","slot":"movement","value":"creep","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can\";         A textual example of the semantic relation is \"movement creep\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        ant, snail, snake, caterpillar, spider, worm, slug, millipede, centipede, inchworm"}
{"cat":"animals","slot":"movement","value":"crawl","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can\";         A textual example of the semantic relation is \"movement crawl\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        ant, crab, snail, spider, turtle, worm, caterpillar, slug, lobster, octopus"}
{"cat":"animals","slot":"place","value":"land","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can be found or used in\";         A textual example of the semantic relation is \"place lands\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, horse, cow, pig, sheep, chicken, fish, bird, elephant"}
{"cat":"animals","slot":"place","value":"garden","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can be found or used in\";         A textual example of the semantic relation is \"place gardens\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, rabbit, hamster, fish, turtle, bird, horse, cow, pig"}
{"cat":"animals","slot":"place","value":"ditch","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can be found or used in\";         A textual example of the semantic relation is \"place ditches\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        cat, dog, horse, cow, pig, sheep, chicken, duck, goat, rabbit"}
{"cat":"animals","slot":"place","value":"sea","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can be found or used in\";         A textual example of the semantic relation is \"place seas\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        seal, dolphin, whale, shark, octopus, jellyfish, crab, lobster, sea turtle, sea lion"}
{"cat":"animals","slot":"place","value":"circus","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can be found or used in\";         A textual example of the semantic relation is \"place circuss\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        elephant, tiger, lion, monkey, horse, camel, giraffe, zebra, bear, snake"}
{"cat":"animals","slot":"place","value":"Asia","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can be found or used in\";         A textual example of the semantic relation is \"place Asias\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        tiger, elephant, monkey, snake, crocodile, deer, leopard, bear, panda, yak"}
{"cat":"animals","slot":"place","value":"underwater","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can be found or used in\";         A textual example of the semantic relation is \"place underwaters\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        fish, shark, octopus, whale, dolphin, seal, sea turtle, jellyfish, coral, crab"}
{"cat":"animals","slot":"place","value":"India","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can be found or used in\";         A textual example of the semantic relation is \"place Indias\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        tiger, elephant, lion, monkey, snake, crocodile, peacock, parrot, camel, cow"}
{"cat":"animals","slot":"place","value":"Sri Lanka","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can be found or used in\";         A textual example of the semantic relation is \"place Sri Lankas\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        elephant, leopard, sloth, bear, tiger, lion, monkey, deer, snake, crocodile"}
{"cat":"animals","slot":"place","value":"Thailand","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can be found or used in\";         A textual example of the semantic relation is \"place Thailands\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        elephant, tiger, monkey, snake, crocodile, gibbon, deer, bird, fish, buffalo"}
{"cat":"animals","slot":"place","value":"Kenia","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can be found or used in\";         A textual example of the semantic relation is \"place Kenias\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        lion, elephant, giraffe, zebra, wildebeest, hippopotamus, rhinoceros, crocodile, cheetah, leopard"}
{"cat":"animals","slot":"place","value":"terrarium","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can be found or used in\";         A textual example of the semantic relation is \"place terrariums\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"iguana, snake, lizard, turtle, frog, gecko, spider, scorpion, tarantula, hermit crab"}
{"cat":"animals","slot":"place","value":"Namibia","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can be found or used in\";         A textual example of the semantic relation is \"place Namibias\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        elephant, lion, giraffe, zebra, rhino, cheetah, leopard, hyena, ostrich, antelope"}
{"cat":"animals","slot":"place","value":"zoo","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can be found or used in\";         A textual example of the semantic relation is \"place zoos\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        elephant, lion, tiger, giraffe, zebra, panda, kangaroo, hippopotamus, rhinoceros, gorilla"}
{"cat":"animals","slot":"place","value":"Tanzania","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can be found or used in\";         A textual example of the semantic relation is \"place Tanzanias\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        elephant, lion, giraffe, zebra, hippopotamus, rhinoceros, leopard, cheetah, wildebeest, warthog"}
{"cat":"animals","slot":"place","value":"Africa","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can be found or used in\";         A textual example of the semantic relation is \"place Africas\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        lion, elephant, giraffe, zebra, hippopotamus, rhino, cheetah, leopard, hyena, crocodile"}
{"cat":"animals","slot":"place","value":"water","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can be found or used in\";         A textual example of the semantic relation is \"place water\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        lion, tiger, elephant, giraffe, zebra, hippopotamus, crocodile, rhinoceros, antelope, gazelle"}
{"cat":"animals","slot":"place","value":"pond","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can be found or used in\";         A textual example of the semantic relation is \"place ponds\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        cat, dog, horse, cow, pig, sheep, goat, chicken, duck, rabbit"}
{"cat":"animals","slot":"place","value":"tropic","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can be found or used in\";         A textual example of the semantic relation is \"place tropics\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"iguana, monkey, parrot, jaguar, toucan, sloth, anaconda, piranha, capybara, tapir"}
{"cat":"animals","slot":"place","value":"sanctuary","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can be found or used in\";         A textual example of the semantic relation is \"place sanctuaries\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        tiger, lion, elephant, giraffe, zebra, hippopotamus, rhinoceros, cheetah, leopard, chimpanzee"}
{"cat":"animals","slot":"place","value":"hive","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can be found or used in\";         A textual example of the semantic relation is \"place hives\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":" bees, honey, pollen, wax, hives, nectar, queen, worker, drone, honeycomb"}
{"cat":"animals","slot":"movement","value":"walk","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can\";         A textual example of the semantic relation is \"movement walk\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"10 words: dog, cat, horse, elephant, lion, tiger, bear, monkey, snake, dolphin"}
{"cat":"animals","slot":"user","value":"circus","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are used by\";         A textual example of the semantic relation is \"user circuss\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        lion, elephant, tiger, bear, monkey, horse, camel, snake, parrot, dolphin"}
{"cat":"animals","slot":"place","value":"colony","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can be found or used in\";         A textual example of the semantic relation is \"place colonies\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bees, ants, termites, wasps, hornets, yellow jackets, africanized honey bees, bumblebees, fire ants, carpenter ants"}
{"cat":"animals","slot":"place","value":"kennel","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can be found or used in\";         A textual example of the semantic relation is \"place kennels\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, bird, rabbit, hamster, fish, snake, lizard, turtle, ferret"}
{"cat":"animals","slot":"colorPattern","value":"black","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"colorPattern black\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        cat, dog, rabbit, hamster, fish, bird, turtle, snake, lizard, horse"}
{"cat":"animals","slot":"colorPattern","value":"brown","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"colorPattern brown\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        lion, tiger, leopard, cheetah, jaguar, cougar, panther, puma, ocelot, serval"}
{"cat":"animals","slot":"colorPattern","value":"spotted","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"colorPattern spotted\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        tiger, leopard, cheetah, jaguar, ocelot, lynx, serval, bobcat, leopard cat, caracal"}
{"cat":"animals","slot":"colorPattern","value":"yellow","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"colorPattern yellow\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        tiger, lion, leopard, cheetah, jaguar, cougar, serval, caracal, ocelot, margay"}
{"cat":"animals","slot":"colorPattern","value":"grey","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"colorPattern grey\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, rabbit, hamster, guinea pig, fish, turtle, bird, horse, cow"}
{"cat":"animals","slot":"colorPattern","value":"green","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"colorPattern green\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        tiger, leopard, cheetah, jaguar, lion, panther, cougar, ocelot, serval, caracal"}
{"cat":"animals","slot":"colorPattern","value":"white","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"colorPattern white\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, rabbit, hamster, guinea pig, horse, cow, pig, sheep, chicken"}
{"cat":"animals","slot":"colorPattern","value":"orange","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"colorPattern orange\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"10 words that belong to the category \"animals\" and satisfy the semantic relation \"can be\" are: lion, tiger, leopard, cheetah, jaguar, puma, ocelot, serval, caracal, and margay."}
{"cat":"animals","slot":"colorPattern","value":"solid","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"colorPattern solid\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, rabbit, hamster, guinea pig, snake, lizard, fish, turtle, bird"}
{"cat":"animals","slot":"colorPattern","value":"red","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"colorPattern red\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"10 animals that can be red: fox, cardinal, crab, lobster, salmon, flamingo, squirrel, ladybug, robin, poppy."}
{"cat":"animals","slot":"colorPattern","value":"beige","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"colorPattern beige\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        cat, dog, rabbit, hamster, fish, snake, lizard, horse, cow, pig"}
{"cat":"animals","slot":"colorPattern","value":"striped","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"colorPattern striped\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        tiger, zebra, skunk, raccoon, badger, leopard, seal, cat, fish, snake"}
{"cat":"animals","slot":"colorPattern","value":"blue","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"colorPattern blue\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"10 words that belong to the category \"animals\" and satisfy the semantic relation \"can be\" are: \"blue, whale, dolphin, octopus, shark, turtle, seal, penguin, jellyfish, starfish\"."}
{"cat":"animals","slot":"colorPattern","value":"leopard","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"colorPattern leopard\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        leopard, zebra, tiger, cheetah, jaguar, giraffe, snake, crocodile, lion, panther"}
{"cat":"animals","slot":"activity","value":"breathe","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"activity breathe\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, horse, cow, pig, chicken, lion, tiger, elephant, giraffe"}
{"cat":"animals","slot":"activity","value":"eat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"activity eat\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, rabbit, hamster, turtle, fish, bird, horse, cow, pig"}
{"cat":"animals","slot":"activity","value":"drink","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"activity drink\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, horse, cow, pig, sheep, goat, rabbit, chicken, fish"}
{"cat":"animals","slot":"activity","value":"play","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"activity play\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"10 words that belong to the category \"animals\" and satisfy the semantic relation \"can be\" are: \"dog, cat, bird, fish, horse, cow, pig, rabbit, turtle, snake\"."}
{"cat":"animals","slot":"activity","value":"bury","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"activity bury\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, rabbit, hamster, turtle, fish, bird, snake, lizard, frog"}
{"cat":"animals","slot":"activity","value":"fetch","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"activity fetch\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, horse, rabbit, turtle, snake, fish, bird, monkey, elephant"}
{"cat":"animals","slot":"activity","value":"chase","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"activity chase\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        tiger, lion, cheetah, leopard, jaguar, hyena, wolf, fox, jackal, coyote"}
{"cat":"animals","slot":"activity","value":"chew","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"activity chew\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, horse, cow, sheep, pig, chicken, fish, snake, turtle"}
{"cat":"animals","slot":"activity","value":"bath","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"activity bath\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, bird, fish, horse, cow, pig, rabbit, turtle, snake"}
{"cat":"animals","slot":"activity","value":"growl","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"activity growl\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, lion, tiger, bear, wolf, fox, raccoon, deer, elephant"}
{"cat":"animals","slot":"activity","value":"roam","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"activity roam\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        lion, tiger, elephant, giraffe, zebra, cheetah, rhino, hippo, crocodile, hyena"}
{"cat":"animals","slot":"activity","value":"hunt","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"activity hunt\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        lion, tiger, leopard, cheetah, hyena, jackal, wolf, fox, hawk, eagle"}
{"cat":"animals","slot":"activity","value":"kill","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"activity kill\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"10 words: lion, tiger, wolf, bear, crocodile, shark, snake, scorpion, spider, eagle"}
{"cat":"animals","slot":"activity","value":"forage","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"activity forage\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        lion, tiger, bear, elephant, giraffe, zebra, kangaroo, koala, panda, monkey"}
{"cat":"animals","slot":"activity","value":"bite","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"activity bite\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, horse, lion, tiger, elephant, bear, snake, shark, dolphin"}
{"cat":"animals","slot":"activity","value":"feed","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"activity feed\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"10 words that belong to the category \"animals\" and satisfy the semantic relation \"can be\" are: lion, tiger, bear, elephant, giraffe, zebra, kangaroo, monkey, snake, shark."}
{"cat":"animals","slot":"activity","value":"pollinate","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"activity pollinate\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bee, butterfly, hummingbird, moth, bat, beetle, fly, wasp, ant, bird"}
{"cat":"animals","slot":"activity","value":"sing","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"activity sing\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"10 words that belong to the category \"animals\": dog, cat, bird, fish, rabbit, turtle, horse, cow, lion, elephant"}
{"cat":"animals","slot":"activity","value":"graze","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"activity graze\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        cat, dog, horse, cow, sheep, goat, pig, chicken, duck, rabbit"}
{"cat":"animals","slot":"activity","value":"live","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"activity live\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, rabbit, hamster, fish, turtle, bird, horse, cow, pig"}
{"cat":"animals","slot":"activity","value":"lick","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"activity lick\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, horse, cow, pig, chicken, fish, snake, lion, elephant"}
{"cat":"animals","slot":"activity","value":"croak","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"activity croak\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        cat, dog, horse, cow, pig, chicken, sheep, goat, rabbit, fish"}
{"cat":"animals","slot":"activity","value":"roar","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"activity roar\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        lion, tiger, bear, elephant, gorilla, leopard, jaguar, panther, cheetah, hippopotamus"}
{"cat":"animals","slot":"activity","value":"migrate","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"activity migrate\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"10 words: lion, tiger, elephant, giraffe, zebra, hippopotamus, rhinoceros, crocodile, cheetah, leopard"}
{"cat":"animals","slot":"activity","value":"watch","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"activity watch\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, bird, fish, horse, cow, pig, sheep, rabbit, turtle"}
{"cat":"animals","slot":"activity","value":"suffer","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"activity suffer\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"10 words that belong to the category \"animals\": dog, cat, rabbit, hamster, goldfish, parrot, snake, turtle, horse, lion."}
{"cat":"animals","slot":"activity","value":"bait","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"activity bait\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        cat, dog, rabbit, fish, bird, horse, cow, pig, sheep, turtle"}
{"cat":"animals","slot":"activity","value":"funnel","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"activity funnel\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        cat, dog, horse, cow, lion, tiger, elephant, giraffe, penguin, dolphin"}
{"cat":"animals","slot":"activity","value":"die","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"activity die\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, horse, cow, pig, sheep, goat, rabbit, chicken, fish"}
{"cat":"animals","slot":"activity","value":"trumpet","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"activity trumpet\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        cat, dog, horse, cow, pig, sheep, goat, chicken, duck, rabbit"}
{"cat":"animals","slot":"activity","value":"fuck","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"activity fuck\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, horse, cow, pig, chicken, fish, snake, lion, elephant"}
{"cat":"animals","slot":"activity","value":"browse","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"activity browse\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, horse, cow, pig, sheep, chicken, duck, goose, rabbit"}
{"cat":"animals","slot":"activity","value":"trot","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"activity trot\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, horse, elephant, lion, giraffe, snake, turtle, dolphin, whale"}
{"cat":"animals","slot":"activity","value":"sting","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"activity sting\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bee, wasp, scorpion, jellyfish, stingray, sea urchin, cat, dog, horse, cow"}
{"cat":"animals","slot":"activity","value":"slither","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"activity slither\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"iguana, python, snake, eel, worm, slug, caterpillar, snail, salamander, millipede"}
{"cat":"animals","slot":"activity","value":"bark","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"activity bark\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":" dog, cat, bird, fish, rabbit, turtle, hamster, guinea pig, horse, cow"}
{"cat":"animals","slot":"activity","value":"overwinter","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"activity overwinter\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        deer, bear, rabbit, squirrel, mouse, bat, hedgehog, raccoon, skunk, opossum"}
{"cat":"animals","slot":"activity","value":"love","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"activity love\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, horse, cow, pig, chicken, sheep, goat, rabbit, fish"}
{"cat":"animals","slot":"activity","value":"sleep","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"activity sleep\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, horse, cow, pig, sheep, chicken, rabbit, fish, turtle"}
{"cat":"animals","slot":"generalization","value":"mammal","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization mammal\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, rabbit, horse, cow, elephant, lion, tiger, monkey, dolphin"}
{"cat":"animals","slot":"generalization","value":"placental mammal","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization placental mammal\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, horse, cow, pig, sheep, goat, rabbit, chicken, fish"}
{"cat":"animals","slot":"generalization","value":"placental","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization placental\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        cat, dog, lion, tiger, elephant, giraffe, zebra, kangaroo, whale, dolphin"}
{"cat":"animals","slot":"generalization","value":"eutherian mammal","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization eutherian mammal\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        lion, tiger, elephant, giraffe, zebra, hippopotamus, rhinoceros, cheetah, leopard, hyena"}
{"cat":"animals","slot":"generalization","value":"eutherian","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization eutherian\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, lion, tiger, elephant, giraffe, monkey, snake, fish, bird"}
{"cat":"animals","slot":"generalization","value":"carnivore","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization carnivore\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        tiger, lion, leopard, jaguar, cheetah, hyena, wolf, bear, fox, coyote"}
{"cat":"animals","slot":"generalization","value":"gastropod","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization gastropod\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, rabbit, hamster, fish, bird, horse, cow, pig, turtle"}
{"cat":"animals","slot":"generalization","value":"insect","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization insect\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, elephant, lion, tiger, giraffe, zebra, monkey, snake, whale"}
{"cat":"animals","slot":"generalization","value":"vertebrate","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization vertebrate\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        lion, tiger, elephant, giraffe, zebra, hippopotamus, rhinoceros, cheetah, leopard, hyena"}
{"cat":"animals","slot":"generalization","value":"craniate","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization craniate\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, horse, cow, pig, sheep, goat, chicken, duck, fish"}
{"cat":"animals","slot":"generalization","value":"amphibian","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization amphibian\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, horse, cow, sheep, pig, chicken, fish, snake, elephant"}
{"cat":"animals","slot":"generalization","value":"feline","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization feline\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        cat, dog, lion, tiger, elephant, giraffe, snake, fish, bird, whale"}
{"cat":"animals","slot":"generalization","value":"felid","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization felid\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        cat, dog, lion, tiger, elephant, giraffe, zebra, monkey, bear, whale"}
{"cat":"animals","slot":"generalization","value":"reptile","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization reptile\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, horse, cow, elephant, lion, tiger, bear, whale, dolphin"}
{"cat":"animals","slot":"generalization","value":"being","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization being\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        lion, tiger, elephant, giraffe, zebra, hippopotamus, rhinoceros, crocodile, cheetah, leopard"}
{"cat":"animals","slot":"generalization","value":"reptilian","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization reptilian\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"iguana, snake, alligator, turtle, lizard, crocodile, gecko, chameleon, tortoise, komodo dragon"}
{"cat":"animals","slot":"generalization","value":"canid","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization canid\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, horse, cow, pig, sheep, chicken, fish, whale, elephant"}
{"cat":"animals","slot":"generalization","value":"organism","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization organism\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, elephant, lion, tiger, giraffe, zebra, panda, kangaroo, dolphin"}
{"cat":"animals","slot":"generalization","value":"oviparous","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization oviparous\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, horse, cow, pig, chicken, duck, sheep, goat, rabbit"}
{"cat":"animals","slot":"generalization","value":"canine","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization canine\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, horse, cow, pig, chicken, fish, snake, lion, elephant"}
{"cat":"animals","slot":"generalization","value":"big cat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization big cat\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        lion, tiger, leopard, jaguar, cheetah, cougar, panther, puma, ocelot, serval"}
{"cat":"animals","slot":"generalization","value":"animate thing","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization animate thing\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, horse, cow, pig, chicken, elephant, lion, tiger, bear"}
{"cat":"animals","slot":"generalization","value":"living thing","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization living thing\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, horse, cow, pig, chicken, sheep, goat, rabbit, fish"}
{"cat":"animals","slot":"generalization","value":"diapsid reptile","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization diapsid reptile\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        lion, tiger, elephant, giraffe, zebra, rhino, hippo, crocodile, cheetah, leopard"}
{"cat":"animals","slot":"generalization","value":"cat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization cat\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, horse, cow, pig, sheep, chicken, fish, elephant, giraffe"}
{"cat":"animals","slot":"generalization","value":"diapsid","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization diapsid\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"iguana, snake, crocodile, turtle, lizard, bird, dinosaur, pterosaur, plesiosaur, ichthyosaur"}
{"cat":"animals","slot":"generalization","value":"artiodactyl","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization artiodactyl\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"10 words: sheep, cow, deer, goat, pig, camel, llama, giraffe, hippopotamus, dolphin"}
{"cat":"animals","slot":"generalization","value":"proboscidean","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization proboscidean\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"10 words: elephant, giraffe, lion, tiger, zebra, hippopotamus, rhinoceros, crocodile, cheetah, leopard"}
{"cat":"animals","slot":"generalization","value":"ruminant","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization ruminant\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        deer, sheep, goat, cow, buffalo, antelope, giraffe, yak, camel, elk"}
{"cat":"animals","slot":"generalization","value":"artiodactyl mammal","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization artiodactyl mammal\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"10 words that belong to the category \"animals\"\n        Example: \"cat, dog, elephant, lion, tiger, giraffe, zebra, whale, dolphin, shark\""}
{"cat":"animals","slot":"generalization","value":"saurian","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization saurian\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        cat, dog, bird, fish, rabbit, turtle, snake, horse, cow, pig"}
{"cat":"animals","slot":"generalization","value":"anapsid reptile","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization anapsid reptile\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, lion, tiger, elephant, giraffe, snake, fish, bird, rabbit"}
{"cat":"animals","slot":"generalization","value":"marine mussel","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization marine mussel\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, bird, fish, horse, cow, pig, rabbit, turtle, snake"}
{"cat":"animals","slot":"generalization","value":"pelecypod","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization pelecypod\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"1. dog, 2. cat, 3. elephant, 4. lion, 5. tiger, 6. giraffe, 7. zebra, 8. dolphin, 9. whale, 10. shark"}
{"cat":"animals","slot":"generalization","value":"pachyderm","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization pachyderm\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"10 words that belong to the category \"animals\" and satisfy the semantic relation \"are\".\n        elephant, hippopotamus, rhinoceros, giraffe, armadillo, sloth, tapir, aardvark, manatee, dugong"}
{"cat":"animals","slot":"generalization","value":"gnawing mammal","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization gnawing mammal\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"10 words: dog, cat, horse, cow, pig, sheep, goat, rabbit, chicken, fish"}
{"cat":"animals","slot":"generalization","value":"unit","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization unit\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        cat, dog, horse, elephant, lion, tiger, bear, snake, fish, bird"}
{"cat":"animals","slot":"generalization","value":"arachnoid","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization arachnoid\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, horse, cow, pig, sheep, chicken, fish, bird, rabbit"}
{"cat":"animals","slot":"generalization","value":"mussel","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization mussel\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, horse, cow, pig, sheep, goat, chicken, duck, fish"}
{"cat":"animals","slot":"generalization","value":"chelonian reptile","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization chelonian reptile\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        tiger, lion, elephant, giraffe, zebra, monkey, ape, bear, wolf, fox"}
{"cat":"animals","slot":"generalization","value":"arachnid","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization arachnid\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        cat, dog, lion, tiger, elephant, giraffe, snake, fish, bird, whale"}
{"cat":"animals","slot":"generalization","value":"chelonian","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization chelonian\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"iguana, turtle, tortoise, lizard, snake, crocodile, alligator, caiman, tuatara, chelonian"}
{"cat":"animals","slot":"generalization","value":"hermaphrodite","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization hermaphrodite\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        cat, dog, horse, cow, pig, sheep, goat, rabbit, chicken, fish"}
{"cat":"animals","slot":"generalization","value":"ungulate","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization ungulate\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        horse, cow, sheep, deer, goat, pig, dog, cat, elephant, lion"}
{"cat":"animals","slot":"generalization","value":"leporid","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization leporid\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, rabbit, horse, cow, pig, sheep, goat, chicken, duck"}
{"cat":"animals","slot":"generalization","value":"primate","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization primate\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        lion, tiger, bear, elephant, giraffe, zebra, monkey, ape, chimpanzee, gorilla"}
{"cat":"animals","slot":"generalization","value":"mytilid","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization mytilid\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"1. dog, 2. cat, 3. elephant, 4. lion, 5. tiger, 6. giraffe, 7. zebra, 8. monkey, 9. dolphin, 10. whale"}
{"cat":"animals","slot":"generalization","value":"anapsid","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization anapsid\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, horse, cow, pig, chicken, fish, rabbit, snake, turtle"}
{"cat":"animals","slot":"generalization","value":"lamellibranch","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization lamellibranch\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"10 animals: lion, tiger, elephant, giraffe, zebra, rhino, hippo, kangaroo, crocodile, snake"}
{"cat":"animals","slot":"generalization","value":"bivalve","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization bivalve\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, horse, cow, pig, sheep, chicken, goat, rabbit, fish"}
{"cat":"animals","slot":"generalization","value":"even-toed ungulate","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization even-toed ungulate\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"10 words: horse, cow, pig, sheep, goat, deer, buffalo, camel, llama, alpaca"}
{"cat":"animals","slot":"generalization","value":"proboscidian","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization proboscidian\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        elephant, hippopotamus, rhinoceros, giraffe, lion, tiger, leopard, cheetah, hyena, wolf"}
{"cat":"animals","slot":"generalization","value":"whole","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization whole\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, rabbit, horse, cow, pig, sheep, chicken, duck, fish"}
{"cat":"animals","slot":"generalization","value":"hoofed mammal","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization hoofed mammal\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        deer, antelope, zebra, horse, donkey, mule, giraffe, okapi, tapir, rhinoceros"}
{"cat":"animals","slot":"generalization","value":"crustacean","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization crustacean\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, horse, cow, pig, sheep, chicken, elephant, tiger, lion"}
{"cat":"animals","slot":"generalization","value":"lagomorph","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization lagomorph\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        cat, dog, horse, cow, lion, elephant, giraffe, dolphin, whale, penguin"}
{"cat":"animals","slot":"generalization","value":"leporid mammal","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization leporid mammal\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"10 words: tiger, lion, elephant, giraffe, zebra, rhino, hippo, monkey, ape, gorilla"}
{"cat":"animals","slot":"generalization","value":"herbivorous","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization herbivorous\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        lion, tiger, elephant, giraffe, zebra, hippopotamus, rhinoceros, cheetah, leopard, hyena"}
{"cat":"animals","slot":"generalization","value":"animal","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization animal\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, elephant, lion, tiger, giraffe, snake, dolphin, whale, shark"}
{"cat":"animals","slot":"generalization","value":"arthropod","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization arthropod\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, horse, cow, pig, sheep, chicken, rabbit, fish, bird"}
{"cat":"animals","slot":"generalization","value":"invertebrate","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization invertebrate\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, horse, cow, pig, sheep, chicken, fish, snake, elephant"}
{"cat":"animals","slot":"part","value":"collar","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part collar\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"10 words that belong to the category \"animals\" and satisfy the semantic relation \"can have\": dog, cat, horse, cow, pig, sheep, goat, chicken, duck, fish."}
{"cat":"animals","slot":"activity","value":"nest","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"activity nest\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bee, wasp, hornet, bird, squirrel, raccoon, opossum, snake, lizard, frog"}
{"cat":"animals","slot":"generalization","value":"hymenopteron","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization hymenopteron\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"1. lion, 2. tiger, 3. bear, 4. elephant, 5. giraffe, 6. zebra, 7. kangaroo, 8. koala, 9. panda, 10. cheetah"}
{"cat":"animals","slot":"generalization","value":"hymenopter","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization hymenopter\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, rabbit, hamster, goldfish, parrot, horse, cow, elephant, tiger"}
{"cat":"animals","slot":"generalization","value":"chordate","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization chordate\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, horse, cow, pig, sheep, chicken, fish, snake, bird"}
{"cat":"animals","slot":"generalization","value":"hymenopteran","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization hymenopteran\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        ant, bee, wasp, hornet, yellowjacket, beetle, fly, moth, butterfly, aphid"}
{"cat":"animals","slot":"generalization","value":"hymenopterous insect","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization hymenopterous insect\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, horse, cow, pig, chicken, sheep, goat, rabbit, fish"}
{"cat":"animals","slot":"place","value":"larva","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can be found or used in\";         A textual example of the semantic relation is \"place larvas\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"1. Bees, 2. Ants, 3. Butterflies, 4. Mosquitoes, 5. Caterpillars, 6. Flies, 7. Moths, 8. Dragonflies, 9. Spiders, 10. Ladybugs"}
{"cat":"animals","slot":"generalization","value":"mollusk","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization mollusk\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        cat, dog, horse, cow, pig, sheep, chicken, duck, rabbit, fish"}
{"cat":"animals","slot":"generalization","value":"herbivore","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization herbivore\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        cat, dog, lion, tiger, elephant, giraffe, zebra, monkey, panda, koala"}
{"cat":"animals","slot":"activity","value":"walk","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"activity walk\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        cat, dog, horse, cow, lion, tiger, elephant, giraffe, monkey, dolphin"}
{"cat":"animals","slot":"activity","value":"crawl","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"activity crawl\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, horse, cow, pig, sheep, goat, chicken, duck, fish"}
{"cat":"animals","slot":"activity","value":"run","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"activity run\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"10 words that belong to the category \"animals\" and satisfy the semantic relation \"can be\" are: lion, tiger, elephant, giraffe, zebra, rhino, hippo, cheetah, leopard, hyena."}
{"cat":"animals","slot":"activity","value":"fly","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"activity fly\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        lion, tiger, elephant, giraffe, zebra, hippopotamus, rhinoceros, leopard, cheetah, hyena"}
{"cat":"animals","slot":"activity","value":"yelp","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"activity yelp\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        cat, dog, horse, lion, elephant, snake, bird, fish, rabbit, turtle"}
{"cat":"animals","slot":"activity","value":"swim","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"activity swim\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, horse, rabbit, tiger, elephant, dolphin, whale, shark, octopus"}
{"cat":"animals","slot":"activity","value":"leap","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"activity leap\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        cat, dog, horse, cow, pig, sheep, goat, chicken, duck, rabbit"}
{"cat":"animals","slot":"activity","value":"howl","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"activity howl\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, wolf, coyote, fox, hyena, jackal, dingo, raccoon, monkey, ape"}
{"cat":"animals","slot":"activity","value":"hop","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"activity hop\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        cat, dog, rabbit, horse, cow, chicken, fish, bird, snake, lizard"}
{"cat":"animals","slot":"activity","value":"creep","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"activity creep\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, horse, cow, pig, sheep, chicken, fish, bird, monkey"}
{"cat":"animals","slot":"activity","value":"jump","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"activity jump\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        lion, tiger, leopard, cheetah, jaguar, panther, puma, cougar, ocelot, jaguarundi"}
{"cat":"animals","slot":"generalization","value":"lepidopteron","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization lepidopteron\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"10 words: dog, cat, horse, cow, pig, sheep, goat, chicken, duck, rabbit"}
{"cat":"animals","slot":"generalization","value":"lepidopterous insect","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization lepidopterous insect\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, horse, cow, pig, sheep, chicken, duck, rabbit, fish"}
{"cat":"animals","slot":"generalization","value":"decapod","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization decapod\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        cats, dogs, horses, cows, pigs, sheep, goats, chickens, ducks, geese"}
{"cat":"animals","slot":"generalization","value":"ectotherm","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization ectotherm\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, horse, cow, chicken, pig, sheep, goat, rabbit, fish"}
{"cat":"animals","slot":"generalization","value":"decapod crustacean","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization decapod crustacean\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        cat, dog, horse, cow, pig, chicken, sheep, goat, rabbit, fish"}
{"cat":"animals","slot":"generalization","value":"domestic animal","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization domestic animal\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":" dog, cat, hamster, rabbit, guinea pig, goldfish, turtle, horse, cow, chicken"}
{"cat":"animals","slot":"generalization","value":"domesticated animal","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization domesticated animal\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, horse, cow, pig, sheep, chicken, duck, goat, rabbit"}
{"cat":"animals","slot":"generalization","value":"lepidopteran","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization lepidopteran\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        cat, dog, horse, cow, pig, sheep, goat, rabbit, chicken, fish"}
{"cat":"animals","slot":"specialization","value":"worker","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization worker\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, horse, cow, pig, chicken, sheep, goat, rabbit, turtle"}
{"cat":"animals","slot":"specialization","value":"drone","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization drone\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        lion, tiger, elephant, giraffe, zebra, rhinoceros, hippopotamus, crocodile, cheetah, leopard"}
{"cat":"animals","slot":"specialization","value":"German Shepherd","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization German Shepherd\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, horse, cow, pig, chicken, fish, lion, tiger, elephant"}
{"cat":"animals","slot":"specialization","value":"Beagle","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization Beagle\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, horse, cow, pig, sheep, goat, chicken, duck, fish"}
{"cat":"animals","slot":"specialization","value":"Poodle","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization Poodle\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, rabbit, hamster, guinea pig, horse, cow, pig, chicken, fish"}
{"cat":"animals","slot":"specialization","value":"Golden Retriever","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization Golden Retriever\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, horse, cow, pig, chicken, sheep, goat, rabbit, fish"}
{"cat":"animals","slot":"specialization","value":"Yorkshire Terrier","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization Yorkshire Terrier\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, bird, fish, horse, cow, pig, sheep, turtle, rabbit"}
{"cat":"animals","slot":"specialization","value":"Labrador","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization Labrador\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, rabbit, hamster, goldfish, parrot, horse, cow, lion, elephant"}
{"cat":"animals","slot":"specialization","value":"Bulldog","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization Bulldog\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"1. Dog, 2. Cat, 3. Rabbit, 4. Horse, 5. Cow, 6. Pig, 7. Sheep, 8. Chicken, 9. Duck, 10. Fish."}
{"cat":"animals","slot":"specialization","value":"queen","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization queen\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        lion, tiger, elephant, giraffe, zebra, monkey, bear, whale, dolphin, shark"}
{"cat":"animals","slot":"specialization","value":"Boxer","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization Boxer\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, horse, cow, pig, chicken, sheep, goat, rabbit, fish"}
{"cat":"animals","slot":"specialization","value":"Rottweiler","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization Rottweiler\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, bird, fish, horse, rabbit, turtle, snake, hamster, dolphin"}
{"cat":"animals","slot":"specialization","value":"archaeopteryx","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization archaeopteryx\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, bird, fish, horse, cow, pig, sheep, rabbit, turtle"}
{"cat":"animals","slot":"specialization","value":"red fox","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization red fox\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"10 words: dog, cat, rabbit, horse, cow, chicken, pig, sheep, goat, fish."}
{"cat":"animals","slot":"specialization","value":"Felis catus","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization Felis catus\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        Felis catus, Canis lupus familiaris, Equus ferus caballus, Bubalus bubalis, Ovis aries, Sus scrofa domesticus, Gallus gallus domesticus, Lama glama, Capra aegagrus hircus, Bos taurus"}
{"cat":"animals","slot":"specialization","value":"Arctic fox","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization Arctic fox\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        Arctic fox, polar bear, penguin, seal, walrus, narwhal, beluga whale, orca, wolf, moose"}
{"cat":"animals","slot":"specialization","value":"peanut worm","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization peanut worm\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, bird, fish, horse, cow, pig, rabbit, snake, turtle"}
{"cat":"animals","slot":"specialization","value":"lamellicorn beetle","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization lamellicorn beetle\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        \"dog, cat, rabbit, hamster, goldfish, snake, parrot, horse, cow, elephant\""}
{"cat":"animals","slot":"specialization","value":"working dog","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization working dog\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, rabbit, horse, cow, sheep, pig, chicken, fish, snake"}
{"cat":"animals","slot":"specialization","value":"fertilized egg","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization fertilized egg\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, horse, cow, pig, sheep, chicken, fish, whale, tiger"}
{"cat":"animals","slot":"specialization","value":"meloid","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization meloid\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, horse, cow, pig, chicken, sheep, goat, rabbit, fish"}
{"cat":"animals","slot":"specialization","value":"giant","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization giant\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"10 animals: dog, cat, elephant, lion, tiger, giraffe, zebra, penguin, kangaroo, dolphin"}
{"cat":"animals","slot":"specialization","value":"night bird","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization night bird\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        lion, tiger, elephant, giraffe, zebra, cheetah, rhinoceros, hippopotamus, crocodile, hyena"}
{"cat":"animals","slot":"specialization","value":"flightless bird","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization flightless bird\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        lion, tiger, elephant, giraffe, zebra, monkey, bear, wolf, snake, eagle"}
{"cat":"animals","slot":"specialization","value":"pug","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization pug\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        cat, dog, horse, cow, pig, sheep, chicken, fish, whale, turtle"}
{"cat":"animals","slot":"specialization","value":"soft-shell crab","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization soft-shell crab\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, horse, cow, pig, sheep, chicken, fish, bird, rabbit"}
{"cat":"animals","slot":"specialization","value":"sea creature","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization sea creature\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dolphin, whale, shark, seal, octopus, jellyfish, sea turtle, starfish, crab, lobster"}
{"cat":"animals","slot":"specialization","value":"sea animal","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization sea animal\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dolphin, seal, shark, whale, jellyfish, octopus, sea turtle, sea horse, crab, lobster"}
{"cat":"animals","slot":"specialization","value":"predatory animal","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization predatory animal\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        lion, tiger, leopard, cheetah, hyena, wolf, bear, shark, eagle, snake"}
{"cat":"animals","slot":"specialization","value":"leaf beetle","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization leaf beetle\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, rabbit, hamster, fish, horse, cow, lion, elephant, tiger"}
{"cat":"animals","slot":"specialization","value":"leaf-cutter bee","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization leaf-cutter bee\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, rabbit, horse, cow, chicken, pig, sheep, goat, fish"}
{"cat":"animals","slot":"specialization","value":"stayer","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization stayer\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"10 words that belong to the category \"animals\": lion, tiger, elephant, giraffe, zebra, monkey, snake, crocodile, dolphin, whale"}
{"cat":"animals","slot":"specialization","value":"homopterous insect","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization homopterous insect\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, horse, cow, pig, chicken, fish, snake, lion, elephant"}
{"cat":"animals","slot":"specialization","value":"fire ant","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization fire ant\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        lion, tiger, elephant, giraffe, zebra, rhino, hippo, cheetah, monkey, chimpanzee"}
{"cat":"animals","slot":"specialization","value":"moss animal","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization moss animal\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, horse, cow, pig, sheep, chicken, duck, rabbit, fish"}
{"cat":"animals","slot":"specialization","value":"comb jelly","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization comb jelly\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, horse, cow, sheep, pig, chicken, fish, snake, lion"}
{"cat":"animals","slot":"specialization","value":"Newfoundland dog","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization Newfoundland dog\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, bird, fish, horse, cow, pig, rabbit, turtle, snake"}
{"cat":"animals","slot":"specialization","value":"pooch","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization pooch\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, horse, cow, pig, sheep, chicken, fish, snake, lion"}
{"cat":"animals","slot":"specialization","value":"mollusc","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization mollusc\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, horse, cow, sheep, pig, chicken, fish, elephant, lion"}
{"cat":"animals","slot":"specialization","value":"leaf-miner","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization leaf-miner\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        cat, dog, elephant, lion, tiger, giraffe, panda, kangaroo, dolphin, whale"}
{"cat":"animals","slot":"specialization","value":"gray fox","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization gray fox\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        lion, tiger, elephant, giraffe, zebra, rhino, hippo, kangaroo, koala, panda"}
{"cat":"animals","slot":"specialization","value":"predator","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization predator\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        lion, tiger, wolf, leopard, cheetah, jaguar, lynx, cougar, panther, puma"}
{"cat":"animals","slot":"specialization","value":"mussel shrimp","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization mussel shrimp\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"10 words that belong to the category \"animals\" and satisfy the semantic relation \"are\": dog, cat, horse, cow, pig, chicken, sheep, goat, rabbit, fish."}
{"cat":"animals","slot":"specialization","value":"poriferan","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization poriferan\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        \"dog, cat, rabbit, hamster, fish, bird, horse, cow, pig, sheep\""}
{"cat":"animals","slot":"specialization","value":"thysanuron","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization thysanuron\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        cat, dog, rabbit, horse, cow, pig, chicken, sheep, goat, fish"}
{"cat":"animals","slot":"specialization","value":"neuropteran","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization neuropteran\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"10 words that belong to the category \"animals\" are: dog, cat, horse, cow, lion, elephant, dolphin, snake, eagle, and octopus."}
{"cat":"animals","slot":"specialization","value":"legionary ant","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization legionary ant\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, elephant, lion, tiger, giraffe, monkey, snake, whale, shark"}
{"cat":"animals","slot":"specialization","value":"echinoderm","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization echinoderm\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, horse, cow, pig, sheep, chicken, duck, goose, turkey"}
{"cat":"animals","slot":"specialization","value":"longicorn","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization longicorn\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, horse, cow, pig, chicken, sheep, goat, rabbit, fish"}
{"cat":"animals","slot":"specialization","value":"slave-maker","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization slave-maker\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        tiger, lion, elephant, giraffe, zebra, kangaroo, koala, panda, gorilla, chimpanzee"}
{"cat":"animals","slot":"specialization","value":"Anoplophora glabripennis","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization Anoplophora glabripennis\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"10 words: tiger, lion, elephant, giraffe, zebra, hippopotamus, rhinoceros, crocodile, cheetah, leopard"}
{"cat":"animals","slot":"specialization","value":"ringlet butterfly","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization ringlet butterfly\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        lion, tiger, elephant, giraffe, zebra, hippopotamus, rhinoceros, crocodile, cheetah, leopard"}
{"cat":"animals","slot":"specialization","value":"Nomia melanderi","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization Nomia melanderi\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"1. dog, 2. cat, 3. lion, 4. tiger, 5. elephant, 6. giraffe, 7. zebra, 8. kangaroo, 9. koala, 10. panda"}
{"cat":"animals","slot":"specialization","value":"flea","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization flea\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        cat, dog, horse, cow, pig, sheep, goat, chicken, duck, fish"}
{"cat":"animals","slot":"specialization","value":"aquatic bird","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization aquatic bird\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        penguin, seal, dolphin, whale, otter, fish, shark, octopus, jellyfish, sea turtle"}
{"cat":"animals","slot":"specialization","value":"cock","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization cock\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, rabbit, hamster, snake, lizard, fish, bird, horse, cow"}
{"cat":"animals","slot":"specialization","value":"chrysomelid","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization chrysomelid\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"10 words that belong to the category \"animals\" are: dog, cat, horse, cow, pig, sheep, chicken, fish, rabbit, and snake."}
{"cat":"animals","slot":"specialization","value":"Dungeness crab","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization Dungeness crab\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"1. dog, 2. cat, 3. rabbit, 4. horse, 5. cow, 6. pig, 7. chicken, 8. fish, 9. turtle, 10. snake"}
{"cat":"animals","slot":"specialization","value":"stonefly","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization stonefly\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, horse, cow, pig, sheep, chicken, fish, elephant, tiger"}
{"cat":"animals","slot":"specialization","value":"lycaenid","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization lycaenid\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        cat, dog, lion, tiger, elephant, giraffe, snake, bird, fish, whale"}
{"cat":"animals","slot":"specialization","value":"danaid","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization danaid\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        ant, bear, cat, dog, elephant, giraffe, lion, monkey, snake, tiger"}
{"cat":"animals","slot":"specialization","value":"nymphalid butterfly","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization nymphalid butterfly\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"10 words: lion, tiger, elephant, giraffe, zebra, kangaroo, koala, panda, dolphin, whale"}
{"cat":"animals","slot":"specialization","value":"leaf-cutting bee","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization leaf-cutting bee\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        lion, elephant, giraffe, zebra, hippopotamus, rhinoceros, cheetah, leopard, hyena, crocodile"}
{"cat":"animals","slot":"specialization","value":"lapdog","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization lapdog\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, rabbit, hamster, fish, horse, cow, pig, chicken, snake"}
{"cat":"animals","slot":"specialization","value":"thysanopteron","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization thysanopteron\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, horse, cow, chicken, pig, sheep, goat, rabbit, fish"}
{"cat":"animals","slot":"specialization","value":"stomatopod crustacean","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization stomatopod crustacean\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        tiger, lion, elephant, giraffe, zebra, hippopotamus, rhinoceros, cheetah, leopard, hyena"}
{"cat":"animals","slot":"specialization","value":"Vulpes fulva","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization Vulpes fulva\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, rabbit, horse, cow, pig, sheep, chicken, goat, fish"}
{"cat":"animals","slot":"specialization","value":"biped","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization biped\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, horse, cow, pig, chicken, sheep, goat, rabbit, fish"}
{"cat":"animals","slot":"specialization","value":"marine animal","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization marine animal\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dolphin, whale, shark, seal, octopus, sea turtle, jellyfish, crab, lobster, squid"}
{"cat":"animals","slot":"specialization","value":"Vulpes vulpes","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization Vulpes vulpes\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, horse, cow, pig, sheep, chicken, duck, fish, rabbit"}
{"cat":"animals","slot":"specialization","value":"thoroughbred","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization thoroughbred\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, horse, cow, pig, chicken, sheep, goat, rabbit, fish"}
{"cat":"animals","slot":"specialization","value":"wolf pup","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization wolf pup\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"1. wolf, 2. pup, 3. kitten, 4. puppy, 5. cub, 6. calf, 7. foal, 8. fawn, 9. joey, 10. piglet"}
{"cat":"animals","slot":"specialization","value":"swimming crab","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization swimming crab\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"10 animals: lion, tiger, elephant, giraffe, zebra, rhinoceros, hippopotamus, cheetah, leopard, hyena"}
{"cat":"animals","slot":"specialization","value":"stone crab","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization stone crab\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, bird, fish, horse, cow, lion, tiger, bear, elephant"}
{"cat":"animals","slot":"specialization","value":"lightning bug","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization lightning bug\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        cat, dog, horse, cow, chicken, pig, sheep, goat, rabbit, turtle"}
{"cat":"animals","slot":"specialization","value":"white ant","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization white ant\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, rabbit, hamster, goldfish, turtle, snake, parrot, horse, cow"}
{"cat":"animals","slot":"specialization","value":"odonate","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization odonate\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        lion, tiger, bear, elephant, giraffe, zebra, kangaroo, koala, panda, cheetah"}
{"cat":"animals","slot":"specialization","value":"passeriform bird","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization passeriform bird\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"10 words: dog, cat, rabbit, hamster, fish, bird, horse, cow, pig, turtle"}
{"cat":"animals","slot":"specialization","value":"Archaeopteryx lithographica","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization Archaeopteryx lithographica\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        Archaeopteryx lithographica, Tyrannosaurus rex, Stegosaurus, Triceratops, Velociraptor, Brachiosaurus, Diplodocus, Ankylosaurus, Apatosaurus, Pterodactylus"}
{"cat":"animals","slot":"specialization","value":"twitterer","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization twitterer\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        cat, dog, horse, cow, pig, chicken, sheep, goat, rabbit, fish"}
{"cat":"animals","slot":"specialization","value":"sulfur butterfly","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization sulfur butterfly\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        ant, bee, butterfly, cat, dog, elephant, giraffe, lion, monkey, tiger"}
{"cat":"animals","slot":"specialization","value":"leaf miner","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization leaf miner\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        cat, dog, bird, fish, rabbit, turtle, hamster, horse, cow, pig"}
{"cat":"animals","slot":"specialization","value":"cottontail","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization cottontail\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, rabbit, horse, cow, pig, sheep, chicken, duck, fish"}
{"cat":"animals","slot":"specialization","value":"barker","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization barker\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, horse, cow, pig, sheep, chicken, duck, goat, rabbit"}
{"cat":"animals","slot":"specialization","value":"Vulpes velox","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization Vulpes velox\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        Vulpes velox, Canis lupus, Ursus arctos, Felis catus, Equus caballus, Bubalus bubalis, Oryctolagus cuniculus, Sus scrofa, Gallus gallus, Bos taurus"}
{"cat":"animals","slot":"specialization","value":"Formica rufa","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization Formica rufa\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        Formica rufa, Panthera leo, Canis lupus, Ursus arctos, Equus ferus, Felis catus, Balaenoptera musculus, Chelonia mydas, Dugong dugon, Elephas maximus"}
{"cat":"animals","slot":"specialization","value":"spitz","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization spitz\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, horse, cow, pig, sheep, goat, chicken, duck, fish"}
{"cat":"animals","slot":"specialization","value":"Fenusa pusilla","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization Fenusa pusilla\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, horse, cow, pig, sheep, chicken, duck, goose, rabbit"}
{"cat":"animals","slot":"specialization","value":"Great Pyrenees","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization Great Pyrenees\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, horse, cow, pig, sheep, goat, chicken, duck, rabbit"}
{"cat":"animals","slot":"specialization","value":"mongrel","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization mongrel\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, horse, cow, pig, chicken, sheep, goat, fish, bird"}
{"cat":"animals","slot":"specialization","value":"wildcat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization wildcat\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        lion, tiger, leopard, cheetah, jaguar, cougar, panther, ocelot, serval, caracal"}
{"cat":"animals","slot":"specialization","value":"ephemeron","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization ephemeron\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"10 words that belong to the category \"animals\": dog, cat, horse, cow, pig, chicken, fish, rabbit, snake, monkey."}
{"cat":"animals","slot":"specialization","value":"leporide","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization leporide\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        rabbit, hare, deer, antelope, buffalo, elephant, rhinoceros, hippopotamus, giraffe, camel"}
{"cat":"animals","slot":"specialization","value":"holometabola","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization holometabola\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, horse, cow, chicken, pig, sheep, goat, rabbit, fish"}
{"cat":"animals","slot":"specialization","value":"passerine","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization passerine\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        cat, dog, horse, cow, pig, sheep, goat, chicken, duck, rabbit"}
{"cat":"animals","slot":"specialization","value":"weevil","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization weevil\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        lion, tiger, elephant, giraffe, zebra, hippopotamus, rhinoceros, leopard, cheetah, hyena"}
{"cat":"animals","slot":"specialization","value":"griffon","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization griffon\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"10 animals: dog, cat, rabbit, horse, cow, pig, chicken, lion, tiger, elephant"}
{"cat":"animals","slot":"specialization","value":"protoavis","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization protoavis\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, bird, fish, horse, cow, pig, rabbit, turtle, snake"}
{"cat":"animals","slot":"specialization","value":"hunting dog","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization hunting dog\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, horse, cow, pig, sheep, goat, chicken, duck, rabbit"}
{"cat":"animals","slot":"specialization","value":"plecopteran","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization plecopteran\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"1. elephant, 2. lion, 3. tiger, 4. bear, 5. wolf, 6. fox, 7. deer, 8. rabbit, 9. squirrel, 10. raccoon"}
{"cat":"animals","slot":"specialization","value":"tiger beetle","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization tiger beetle\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        lion, tiger, elephant, giraffe, zebra, kangaroo, koala, panda, gorilla, chimpanzee"}
{"cat":"animals","slot":"specialization","value":"phasmid insect","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization phasmid insect\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"10 words: ant, bee, butterfly, cat, dog, elephant, fish, horse, lion, monkey"}
{"cat":"animals","slot":"specialization","value":"gallinacean","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization gallinacean\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        cow, pig, sheep, horse, chicken, turkey, duck, goose, goat, donkey"}
{"cat":"animals","slot":"specialization","value":"rabbit ears","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization rabbit ears\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        cat, dog, rabbit, tiger, lion, elephant, giraffe, snake, fish, bird"}
{"cat":"animals","slot":"specialization","value":"bird louse","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization bird louse\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"10 words that belong to the category \"animals\" and satisfy the semantic relation \"are\" are: \"dog, cat, horse, cow, pig, chicken, fish, snake, lion, elephant\"."}
{"cat":"animals","slot":"specialization","value":"carpenter ant","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization carpenter ant\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, bird, fish, horse, cow, pig, rabbit, turtle, snake"}
{"cat":"animals","slot":"specialization","value":"bark beetle","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization bark beetle\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"10 words: dog, cat, rabbit, horse, cow, sheep, pig, chicken, duck, fish"}
{"cat":"animals","slot":"specialization","value":"four-footed butterfly","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization four-footed butterfly\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, horse, cow, pig, sheep, chicken, duck, goose, turkey"}
{"cat":"animals","slot":"specialization","value":"trichopterous insect","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization trichopterous insect\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"10 words that belong to the category \"animals\" are: lion, tiger, elephant, giraffe, zebra, kangaroo, koala, panda, wolf, dolphin."}
{"cat":"animals","slot":"specialization","value":"work animal","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization work animal\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        horse, dog, cat, cow, pig, sheep, goat, chicken, duck, goose"}
{"cat":"animals","slot":"specialization","value":"neuropterous insect","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization neuropterous insect\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, horse, cow, pig, chicken, sheep, goat, rabbit, fish"}
{"cat":"animals","slot":"specialization","value":"Vulpes macrotis","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization Vulpes macrotis\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        \"Vulpes macrotis,Canis latrans,Lynx rufus,Mustela frenata,Odocoileus hemionus,Procyon lotor,Sciurus niger,Sylvilagus audubonii,Tamiasciurus hudsonicus,Ursus americanus\""}
{"cat":"animals","slot":"specialization","value":"sea moss","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization sea moss\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, rabbit, hamster, snake, fish, bird, horse, cow, turtle"}
{"cat":"animals","slot":"specialization","value":"orthopterous insect","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization orthopterous insect\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        lion, tiger, elephant, giraffe, zebra, rhino, hippo, cheetah, leopard, hyena"}
{"cat":"animals","slot":"specialization","value":"little black ant","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization little black ant\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        ant, bee, butterfly, cat, dog, elephant, fish, horse, lion, snake"}
{"cat":"animals","slot":"specialization","value":"molter","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization molter\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        lion, tiger, elephant, giraffe, zebra, cheetah, hippopotamus, rhinoceros, crocodile, snake"}
{"cat":"animals","slot":"specialization","value":"longicorn beetle","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization longicorn beetle\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, rabbit, hamster, goldfish, turtle, parrot, horse, cow, elephant"}
{"cat":"animals","slot":"specialization","value":"Old World rabbit","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization Old World rabbit\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        elephant, lion, tiger, giraffe, zebra, kangaroo, monkey, snake, shark, dolphin"}
{"cat":"animals","slot":"specialization","value":"ladybug","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization ladybug\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        ladybug, butterfly, bee, ant, spider, worm, snail, slug, caterpillar, moth"}
{"cat":"animals","slot":"specialization","value":"malacostracan crustacean","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization malacostracan crustacean\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        cat, dog, horse, cow, pig, sheep, chicken, duck, goose, turkey"}
{"cat":"animals","slot":"specialization","value":"pierid butterfly","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization pierid butterfly\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        butterfly, bee, ant, spider, fly, beetle, dragonfly, grasshopper, ladybug, moth"}
{"cat":"animals","slot":"specialization","value":"female","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization female\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        lioness, tigress, leopardess, cheetahess, pantheress, lynxess, pumaess, cougaress, jaguaress, ocelotess"}
{"cat":"animals","slot":"specialization","value":"Felis domesticus","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization Felis domesticus\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        Felis domesticus, Canis lupus familiaris, Equus caballus, Oryctolagus cuniculus, Sus scrofa domesticus, Bos taurus, Gallus gallus domesticus, Lama glama, Cavia porcellus, Mus musculus"}
{"cat":"animals","slot":"specialization","value":"brush wolf","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization brush wolf\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        \"dog, cat, horse, cow, pig, chicken, sheep, goat, rabbit, fish\""}
{"cat":"animals","slot":"specialization","value":"lapin","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization lapin\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        chat, chien, chaton, chienne, chatte, chiennerie, chiennette, chien-loup, chien-loup-blanc, chien-loup-gris"}
{"cat":"animals","slot":"specialization","value":"heteropterous insect","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization heteropterous insect\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, elephant, lion, tiger, giraffe, zebra, horse, cow, pig"}
{"cat":"animals","slot":"specialization","value":"coelenterate","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization coelenterate\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"10 words that belong to the category \"animals\": dog, cat, elephant, lion, giraffe, zebra, dolphin, whale, shark, octopus."}
{"cat":"animals","slot":"specialization","value":"dickey-bird","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization dickey-bird\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, horse, cow, pig, chicken, sheep, goat, rabbit, fish"}
{"cat":"animals","slot":"specialization","value":"copepod","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization copepod\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        cat, dog, horse, cow, sheep, pig, chicken, duck, goose, turkey"}
{"cat":"animals","slot":"specialization","value":"army ant","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization army ant\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        tiger, lion, elephant, giraffe, zebra, kangaroo, koala, panda, dolphin, whale"}
{"cat":"animals","slot":"specialization","value":"varment","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization varment\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, horse, cow, pig, sheep, chicken, duck, goose, turkey"}
{"cat":"animals","slot":"specialization","value":"dipterous insect","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization dipterous insect\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"10 words that belong to the category \"animals\" and satisfy the semantic relation \"are\":\n        1. cat\n        2. dog\n        3. rabbit\n        4. hamster\n        5. guinea pig\n        6. fish\n        7. bird\n        8. horse\n        9. cow\n        10. pig\n\n        Example: The specialization dipterous insect are flies and mosquitoes."}
{"cat":"animals","slot":"specialization","value":"poikilotherm","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization poikilotherm\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"10 animals: dog, cat, horse, cow, pig, sheep, chicken, duck, goose, fish"}
{"cat":"animals","slot":"specialization","value":"ostracod","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization ostracod\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"10 words that belong to the category \"animals\": dog, cat, rabbit, horse, cow, chicken, pig, sheep, goat, fish."}
{"cat":"animals","slot":"specialization","value":"pharaoh ant","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization pharaoh ant\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        ant, bee, butterfly, cat, dog, elephant, giraffe, horse, lion, monkey"}
{"cat":"animals","slot":"specialization","value":"maned wolf","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization maned wolf\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"10 words that belong to the category \"animals\" and satisfy the semantic relation \"are\" are: lion, tiger, bear, elephant, giraffe, zebra, kangaroo, dolphin, whale, and eagle."}
{"cat":"animals","slot":"specialization","value":"basenji","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization basenji\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        basenji, chihuahua, dachshund, greyhound, husky, labrador, pug, rottweiler, shih_tzu, yorkshire_terrier"}
{"cat":"animals","slot":"specialization","value":"dictyopterous insect","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization dictyopterous insect\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        cat, dog, lion, tiger, elephant, giraffe, monkey, snake, fish, bird"}
{"cat":"animals","slot":"specialization","value":"lady beetle","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization lady beetle\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        lady beetle, honey bee, bumblebee, carpenter bee, orchid bee, leafcutter bee, mason bee, cuckoo bee, miner bee, sweat bee"}
{"cat":"animals","slot":"specialization","value":"defoliator","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization defoliator\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        ant, bee, butterfly, caterpillar, cricket, grasshopper, ladybug, moth, spider, termite"}
{"cat":"animals","slot":"specialization","value":"hexapod","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization hexapod\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bee, ant, wasp, fly, butterfly, grasshopper, cricket, cockroach, termite, mantis"}
{"cat":"animals","slot":"specialization","value":"moulter","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization moulter\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        cat, dog, rabbit, hamster, horse, cow, pig, chicken, fish, turtle"}
{"cat":"animals","slot":"specialization","value":"wolf cub","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization wolf cub\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, rabbit, horse, cow, pig, chicken, sheep, goat, fish"}
{"cat":"animals","slot":"specialization","value":"potter bee","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization potter bee\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bee, ant, butterfly, ladybug, spider, beetle, cricket, grasshopper, dragonfly, praying mantis"}
{"cat":"animals","slot":"specialization","value":"rock crab","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization rock crab\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        cat, dog, horse, cow, chicken, pig, sheep, goat, rabbit, fish"}
{"cat":"animals","slot":"specialization","value":"fictional animal","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization fictional animal\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, horse, cow, pig, sheep, chicken, duck, goose, turkey"}
{"cat":"animals","slot":"specialization","value":"phoronid","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization phoronid\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        lion, tiger, elephant, giraffe, zebra, cheetah, rhino, hippo, leopard, hyena"}
{"cat":"animals","slot":"specialization","value":"neuropteron","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization neuropteron\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"10 words: lion, tiger, elephant, giraffe, zebra, kangaroo, koala, panda, dolphin, whale"}
{"cat":"animals","slot":"specialization","value":"worm","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization worm\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, lion, tiger, elephant, giraffe, zebra, snake, fish, bird"}
{"cat":"animals","slot":"specialization","value":"prairie fox","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization prairie fox\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        prairie fox, red fox, gray fox, arctic fox, fennec fox, swift fox, bat-eared fox, corsac fox, kit fox, sand fox"}
{"cat":"animals","slot":"specialization","value":"survivor","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization survivor\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, rabbit, hamster, turtle, fish, bird, snake, horse, cow"}
{"cat":"animals","slot":"specialization","value":"hemipteran","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization hemipteran\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        cat, dog, horse, cow, pig, sheep, chicken, rabbit, fish, turtle"}
{"cat":"animals","slot":"specialization","value":"earwig","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization earwig\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"10 words: dog, cat, horse, cow, sheep, pig, chicken, goat, elephant, lion"}
{"cat":"animals","slot":"specialization","value":"Xestobium rufovillosum","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization Xestobium rufovillosum\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, elephant, lion, tiger, giraffe, zebra, whale, dolphin, shark"}
{"cat":"animals","slot":"specialization","value":"grey fox","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization grey fox\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"10 words: lion, tiger, elephant, giraffe, zebra, hippopotamus, rhinoceros, crocodile, cheetah, leopard"}
{"cat":"animals","slot":"specialization","value":"sponge","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization sponge\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, horse, cow, pig, chicken, sheep, goat, rabbit, fish"}
{"cat":"animals","slot":"specialization","value":"piciform bird","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization piciform bird\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"10 words: lion, tiger, elephant, giraffe, zebra, rhino, hippo, crocodile, cheetah, leopard"}
{"cat":"animals","slot":"specialization","value":"red wolf","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization red wolf\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        red wolf, gray wolf, coyote, jackal, fox, dog, cat, lion, tiger, bear"}
{"cat":"animals","slot":"specialization","value":"scavenger","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization scavenger\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"10 words that belong to the category \"animals\" are: lion, tiger, elephant, giraffe, zebra, hippopotamus, rhinoceros, leopard, cheetah, hyena."}
{"cat":"animals","slot":"specialization","value":"entoproct","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization entoproct\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"10 words that belong to the category \"animals\" and satisfy the semantic relation \"are\":\n        cat, dog, bird, fish, horse, cow, pig, sheep, tiger, elephant"}
{"cat":"animals","slot":"specialization","value":"hemipterous insect","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization hemipterous insect\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        lion, tiger, elephant, giraffe, zebra, hippopotamus, rhinoceros, crocodile, cheetah, leopard"}
{"cat":"animals","slot":"specialization","value":"metazoan","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization metazoan\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, horse, cow, pig, chicken, rabbit, fish, snake, turtle"}
{"cat":"animals","slot":"specialization","value":"male","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization male\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, horse, cow, pig, sheep, chicken, fish, snake, elephant"}
{"cat":"animals","slot":"specialization","value":"sea mat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization sea mat\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, horse, cow, pig, sheep, goat, chicken, duck, fish"}
{"cat":"animals","slot":"specialization","value":"mecopteran","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization mecopteran\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        ant, bee, butterfly, cockroach, dragonfly, fly, grasshopper, mantis, mosquito, termite"}
{"cat":"animals","slot":"specialization","value":"mutant","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization mutant\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, bird, fish, horse, cow, pig, sheep, rabbit, turtle"}
{"cat":"animals","slot":"specialization","value":"soft-shelled crab","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization soft-shelled crab\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"10 animals: lion, tiger, elephant, giraffe, zebra, monkey, snake, crocodile, kangaroo, penguin"}
{"cat":"animals","slot":"specialization","value":"branchiopod crustacean","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization branchiopod crustacean\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        \"cat, dog, horse, cow, pig, chicken, goat, sheep, rabbit, turtle\""}
{"cat":"animals","slot":"specialization","value":"Asian longhorned beetle","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization Asian longhorned beetle\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"1. elephant, 2. lion, 3. tiger, 4. giraffe, 5. zebra, 6. rhino, 7. hippo, 8. crocodile, 9. cheetah, 10. leopard"}
{"cat":"animals","slot":"specialization","value":"andrenid","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization andrenid\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        cat, dog, elephant, lion, tiger, giraffe, dolphin, whale, snake, fish"}
{"cat":"animals","slot":"specialization","value":"Leonberg","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization Leonberg\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        lion, tiger, elephant, giraffe, zebra, leopard, cheetah, rhino, hippo, hyena"}
{"cat":"animals","slot":"specialization","value":"coyote","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization coyote\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, rabbit, horse, cow, chicken, snake, fish, turtle, bird"}
{"cat":"animals","slot":"specialization","value":"two-winged insects","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization two-winged insects\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        ant, bee, butterfly, dragonfly, fly, grasshopper, ladybug, mosquito, wasp, beetle"}
{"cat":"animals","slot":"specialization","value":"European rabbit","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization European rabbit\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, horse, cow, chicken, pig, sheep, goat, rabbit, fish"}
{"cat":"animals","slot":"specialization","value":"toy","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization toy\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"10 words that belong to the category \"animals\": dog, cat, bird, fish, horse, cow, lion, tiger, elephant, giraffe"}
{"cat":"animals","slot":"specialization","value":"Mexican hairless","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization Mexican hairless\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"iguana, llama, jaguar, quetzal, tapir, alpaca, vicuna, guanaco, coati, armadillo"}
{"cat":"animals","slot":"specialization","value":"carabid beetle","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization carabid beetle\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        tiger, lion, elephant, giraffe, zebra, hippopotamus, rhinoceros, leopard, cheetah, hyena"}
{"cat":"animals","slot":"specialization","value":"adult","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization adult\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        cat, dog, horse, cow, pig, sheep, goat, chicken, duck, fish"}
{"cat":"animals","slot":"specialization","value":"Newfoundland","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization Newfoundland\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, bird, fish, horse, cow, pig, rabbit, turtle, snake"}
{"cat":"animals","slot":"specialization","value":"trichopteran","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization trichopteran\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, horse, cow, pig, sheep, goat, chicken, duck, fish"}
{"cat":"animals","slot":"specialization","value":"kit fox","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization kit fox\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, horse, cow, pig, sheep, goat, rabbit, chicken, fish"}
{"cat":"animals","slot":"specialization","value":"homoiotherm","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization homoiotherm\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, rabbit, hamster, guinea pig, fish, bird, horse, cow, pig"}
{"cat":"animals","slot":"specialization","value":"homotherm","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization homotherm\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"10 words that belong to the category \"animals\" are: dog, cat, horse, cow, pig, sheep, chicken, fish, snake, lion."}
{"cat":"animals","slot":"specialization","value":"dipteran","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization dipteran\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"10 words: cat, dog, horse, cow, pig, chicken, sheep, goat, fish, whale"}
{"cat":"animals","slot":"specialization","value":"gray wolf","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization gray wolf\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, horse, cow, pig, sheep, goat, rabbit, chicken, fish"}
{"cat":"animals","slot":"specialization","value":"coach dog","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization coach dog\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, horse, cow, pig, sheep, chicken, duck, goose, fish"}
{"cat":"animals","slot":"specialization","value":"ectoproct","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization ectoproct\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"10 words that belong to the category \"animals\": dog, cat, horse, cow, pig, sheep, chicken, fish, snake, monkey."}
{"cat":"animals","slot":"specialization","value":"Welsh corgi","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization Welsh corgi\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"1. dog, 2. cat, 3. horse, 4. cow, 5. pig, 6. sheep, 7. chicken, 8. fish, 9. bird, 10. rabbit"}
{"cat":"animals","slot":"specialization","value":"cirriped","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization cirriped\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"10 words: cat, dog, horse, cow, pig, chicken, sheep, goat, rabbit, fish"}
{"cat":"animals","slot":"specialization","value":"ladybird","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization ladybird\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        ladybird, tiger, elephant, giraffe, lion, zebra, kangaroo, penguin, whale, dolphin"}
{"cat":"animals","slot":"specialization","value":"rotifer","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization rotifer\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        cat, dog, horse, cow, pig, chicken, goat, sheep, rabbit, fish"}
{"cat":"animals","slot":"specialization","value":"proturan","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization proturan\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"10 words that belong to the category \"animals\": dog, cat, horse, cow, pig, sheep, chicken, fish, snake, lion."}
{"cat":"animals","slot":"specialization","value":"web spinner","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization web spinner\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        tiger, lion, elephant, giraffe, zebra, hippopotamus, rhinoceros, cheetah, leopard, hyena"}
{"cat":"animals","slot":"specialization","value":"ladybeetle","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization ladybeetle\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        ladybeetle, bee, butterfly, dragonfly, lacewing, moth, fly, aphid, ant, spider"}
{"cat":"animals","slot":"specialization","value":"puppy","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization puppy\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, horse, cow, pig, sheep, chicken, duck, fish, turtle"}
{"cat":"animals","slot":"specialization","value":"Jonah crab","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization Jonah crab\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        cat, dog, rabbit, hamster, guinea pig, fish, bird, turtle, snake, lizard"}
{"cat":"animals","slot":"specialization","value":"Paralithodes camtschatica","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization Paralithodes camtschatica\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"10 words: dog, cat, bird, fish, horse, cow, pig, sheep, rabbit, turtle"}
{"cat":"animals","slot":"specialization","value":"flying bird","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization flying bird\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        \"eagle, falcon, hawk, osprey, vulture, condor, albatross, pelican, stork, flamingo\""}
{"cat":"animals","slot":"specialization","value":"Menippe mercenaria","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization Menippe mercenaria\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        elephant, lion, tiger, bear, giraffe, zebra, monkey, snake, crocodile, whale"}
{"cat":"animals","slot":"specialization","value":"branchiopod","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization branchiopod\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, horse, cow, chicken, pig, sheep, goat, rabbit, fish"}
{"cat":"animals","slot":"specialization","value":"slave ant","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization slave ant\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        ant, bee, bird, butterfly, cat, dog, fish, horse, lion, snake"}
{"cat":"animals","slot":"specialization","value":"termite","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization termite\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, horse, cow, pig, sheep, chicken, fish, snake, lion"}
{"cat":"animals","slot":"specialization","value":"creepy-crawly","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization creepy-crawly\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, horse, cow, pig, chicken, fish, snake, lizard, spider"}
{"cat":"animals","slot":"specialization","value":"Brussels griffon","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization Brussels griffon\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, horse, cow, pig, chicken, sheep, goat, rabbit, fish"}
{"cat":"animals","slot":"specialization","value":"Ibero-mesornis","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization Ibero-mesornis\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, horse, cow, pig, sheep, chicken, rabbit, turtle, fish"}
{"cat":"animals","slot":"specialization","value":"Angora rabbit","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization Angora rabbit\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        cat, dog, rabbit, hamster, guinea pig, turtle, fish, bird, horse, cow"}
{"cat":"animals","slot":"specialization","value":"bow-wow","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization bow-wow\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, horse, cow, pig, sheep, chicken, duck, goose, turkey"}
{"cat":"animals","slot":"specialization","value":"stone fly","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization stone fly\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"10 animals: tiger, elephant, lion, giraffe, zebra, cheetah, hippopotamus, rhinoceros, crocodile, leopard."}
{"cat":"animals","slot":"specialization","value":"dickybird","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization dickybird\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, bird, fish, rabbit, hamster, turtle, snake, horse, cow"}
{"cat":"animals","slot":"specialization","value":"ratite bird","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization ratite bird\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        elephant, lion, tiger, giraffe, zebra, kangaroo, dolphin, whale, shark, penguin"}
{"cat":"animals","slot":"specialization","value":"cirripede","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization cirripede\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, horse, cow, chicken, pig, sheep, goat, rabbit, fish"}
{"cat":"animals","slot":"specialization","value":"social insect","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization social insect\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bee, ant, termite, wasp, hornet, yellowjacket, beetle, weevil, cricket, grasshopper"}
{"cat":"animals","slot":"specialization","value":"driver ant","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization driver ant\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        ant, bear, cat, dog, elephant, fish, horse, lion, monkey, tiger"}
{"cat":"animals","slot":"specialization","value":"elaterid","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization elaterid\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, horse, cow, chicken, pig, sheep, goat, rabbit, turtle"}
{"cat":"animals","slot":"specialization","value":"scorpion shell","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization scorpion shell\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"10 words that belong to the category \"animals\" are: lion, elephant, giraffe, zebra, tiger, leopard, cheetah, rhino, hippo, and hyena."}
{"cat":"animals","slot":"specialization","value":"Alopex lagopus","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization Alopex lagopus\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        Arctic fox, polar bear, walrus, narwhal, beluga whale, caribou, musk ox, snowy owl, ptarmigan, lemmings"}
{"cat":"animals","slot":"specialization","value":"bird of prey","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization bird of prey\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        eagle, hawk, falcon, owl, vulture, condor, osprey, kite, harrier, secretarybird"}
{"cat":"animals","slot":"specialization","value":"wood ant","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization wood ant\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        ant, bee, butterfly, dragonfly, ladybug, spider, wasp, beetle, cricket, grasshopper"}
{"cat":"animals","slot":"specialization","value":"stomatopod","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization stomatopod\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"10 words that belong to the category \"animals\": dog, cat, elephant, lion, tiger, giraffe, monkey, snake, whale, dolphin"}
{"cat":"animals","slot":"specialization","value":"seed shrimp","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization seed shrimp\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        cat, dog, rabbit, hamster, fish, bird, horse, cow, pig, sheep"}
{"cat":"animals","slot":"specialization","value":"spider crab","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization spider crab\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        \"spider, crab, ant, bee, butterfly, fish, snake, lizard, turtle, frog\""}
{"cat":"animals","slot":"specialization","value":"carpet beetle","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization carpet beetle\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, elephant, lion, tiger, giraffe, zebra, monkey, dolphin, whale"}
{"cat":"animals","slot":"specialization","value":"leaf-cutter","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization leaf-cutter\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"10 words: dog, cat, horse, cow, pig, chicken, fish, lion, elephant, giraffe"}
{"cat":"animals","slot":"specialization","value":"bug","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization bug\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        cat, dog, lion, tiger, elephant, giraffe, snake, fish, bird, rabbit"}
{"cat":"animals","slot":"specialization","value":"varmint","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization varmint\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        deer, rabbit, squirrel, raccoon, skunk, opossum, fox, coyote, bobcat, cougar"}
{"cat":"animals","slot":"specialization","value":"deathwatch","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization deathwatch\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        lion, tiger, elephant, giraffe, zebra, kangaroo, monkey, dolphin, whale, shark"}
{"cat":"animals","slot":"specialization","value":"migrator","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization migrator\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        lion, tiger, elephant, giraffe, zebra, rhino, hippo, cheetah, leopard, hyena"}
{"cat":"animals","slot":"specialization","value":"cnidarian","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization cnidarian\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"10 words: dog, cat, horse, cow, pig, sheep, chicken, duck, fish, snake"}
{"cat":"animals","slot":"specialization","value":"purebred","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization purebred\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, horse, cow, pig, sheep, goat, chicken, duck, fish"}
{"cat":"animals","slot":"specialization","value":"carinate bird","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization carinate bird\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"10 words: bird, cat, dog, fish, horse, lion, monkey, rabbit, snake, turtle."}
{"cat":"animals","slot":"specialization","value":"Cancer borealis","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization Cancer borealis\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, elephant, lion, tiger, giraffe, zebra, monkey, panda, kangaroo"}
{"cat":"animals","slot":"specialization","value":"bunny rabbit","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization bunny rabbit\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        lion, tiger, elephant, giraffe, zebra, hippopotamus, rhinoceros, leopard, cheetah, crocodile"}
{"cat":"animals","slot":"specialization","value":"pharaoh's ant","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization pharaoh's ant\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        lion, tiger, elephant, giraffe, zebra, hippopotamus, rhinoceros, leopard, cheetah, hyena"}
{"cat":"animals","slot":"specialization","value":"carpet bug","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization carpet bug\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, bird, fish, horse, cow, tiger, lion, elephant, giraffe"}
{"cat":"animals","slot":"specialization","value":"pest","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization pest\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        ant, bee, cockroach, fly, mosquito, rat, spider, termite, tick, wasp"}
{"cat":"animals","slot":"specialization","value":"Oryctolagus cuniculus","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization Oryctolagus cuniculus\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, rabbit, horse, cow, pig, chicken, sheep, goat, fish"}
{"cat":"animals","slot":"specialization","value":"telsontail","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization telsontail\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        cat, dog, elephant, giraffe, horse, lion, monkey, panda, tiger, zebra"}
{"cat":"animals","slot":"specialization","value":"darter","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization darter\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        lion, tiger, bear, elephant, giraffe, zebra, monkey, snake, shark, whale"}
{"cat":"animals","slot":"specialization","value":"pea crab","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization pea crab\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, rabbit, hamster, goldfish, parrot, horse, cow, chicken, pig"}
{"cat":"animals","slot":"specialization","value":"beetle","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization beetle\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, horse, cow, pig, sheep, chicken, duck, goose, rabbit"}
{"cat":"animals","slot":"specialization","value":"springtail","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization springtail\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        cat, dog, horse, cow, sheep, chicken, pig, rabbit, lion, elephant"}
{"cat":"animals","slot":"specialization","value":"cottontail rabbit","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization cottontail rabbit\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        cat, dog, horse, cow, pig, sheep, chicken, duck, goat, fish"}
{"cat":"animals","slot":"specialization","value":"cuculiform bird","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization cuculiform bird\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        cat, dog, horse, cow, pig, sheep, chicken, duck, goose, turkey"}
{"cat":"animals","slot":"specialization","value":"rove beetle","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization rove beetle\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, elephant, giraffe, lion, tiger, monkey, snake, dolphin, whale"}
{"cat":"animals","slot":"specialization","value":"archaeornis","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization archaeornis\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        lion, tiger, elephant, giraffe, zebra, kangaroo, koala, panda, monkey, dolphin"}
{"cat":"animals","slot":"specialization","value":"mate","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization mate\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        cat, dog, horse, cow, pig, chicken, sheep, goat, rabbit, turtle"}
{"cat":"animals","slot":"specialization","value":"conceptus","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization conceptus\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, horse, cow, pig, chicken, sheep, goat, rabbit, fish"}
{"cat":"animals","slot":"specialization","value":"borer","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization borer\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, horse, cow, pig, chicken, sheep, goat, rabbit, fish"}
{"cat":"animals","slot":"specialization","value":"copepod crustacean","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization copepod crustacean\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        lion, tiger, elephant, giraffe, zebra, hippopotamus, rhinoceros, leopard, cheetah, hyena"}
{"cat":"animals","slot":"specialization","value":"Canis lupus tundrarum","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization Canis lupus tundrarum\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        Canis lupus tundrarum, Ursus maritimus, Panthera leo, Balaenoptera musculus, Elephas maximus, Loxodonta africana, Pan troglodytes, Equus ferus caballus, Felis catus, Canis familiaris"}
{"cat":"animals","slot":"specialization","value":"carpenter bee","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization carpenter bee\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        lion, tiger, elephant, giraffe, zebra, hippopotamus, rhinoceros, leopard, cheetah, hyena"}
{"cat":"animals","slot":"specialization","value":"corgi","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization corgi\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, rabbit, hamster, fish, bird, turtle, snake, horse, cow"}
{"cat":"animals","slot":"specialization","value":"woodborer","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization woodborer\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, bird, fish, horse, cow, pig, sheep, tiger, elephant"}
{"cat":"animals","slot":"specialization","value":"cur","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization cur\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        lion, tiger, elephant, giraffe, zebra, rhino, hippo, cheetah, leopard, hyena"}
{"cat":"animals","slot":"specialization","value":"ground beetle","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization ground beetle\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, rabbit, snake, bird, fish, horse, cow, elephant, lion"}
{"cat":"animals","slot":"specialization","value":"ringlet","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization ringlet\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        cat, dog, lion, elephant, giraffe, snake, fish, bird, horse, rabbit"}
{"cat":"animals","slot":"specialization","value":"cuckoo-bumblebee","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization cuckoo-bumblebee\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"10 words that belong to the category \"animals\" are: dog, cat, horse, cow, pig, chicken, sheep, goat, rabbit, and fish."}
{"cat":"animals","slot":"specialization","value":"sulphur butterfly","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization sulphur butterfly\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"1. dog, 2. cat, 3. elephant, 4. lion, 5. tiger, 6. giraffe, 7. zebra, 8. panda, 9. koala, 10. kangaroo"}
{"cat":"animals","slot":"specialization","value":"elaterid beetle","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization elaterid beetle\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, horse, cow, pig, sheep, chicken, duck, goose, turkey"}
{"cat":"animals","slot":"specialization","value":"phasmid","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization phasmid\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        lion, tiger, elephant, giraffe, zebra, rhinoceros, hippopotamus, crocodile, cheetah, leopard"}
{"cat":"animals","slot":"specialization","value":"vixen","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization vixen\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"10 words: dog, cat, horse, cow, sheep, pig, chicken, fish, turtle, rabbit"}
{"cat":"animals","slot":"specialization","value":"long-horned beetle","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization long-horned beetle\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"10 words: dog, cat, rabbit, horse, cow, chicken, snake, lion, elephant, dolphin"}
{"cat":"animals","slot":"specialization","value":"dickeybird","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization dickeybird\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        lion, tiger, elephant, giraffe, zebra, kangaroo, koala, panda, wolf, dolphin"}
{"cat":"animals","slot":"specialization","value":"Canis lupus","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization Canis lupus\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        Canis lupus, Felis catus, Equus caballus, Bubo scandiacus, Ursus arctos, Panthera leo, Elephas maximus, Loxodonta africana, Delphinus delphis, Tursiops truncatus"}
{"cat":"animals","slot":"specialization","value":"sipunculid","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization sipunculid\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, horse, cow, pig, chicken, sheep, goat, fish, bird"}
{"cat":"animals","slot":"specialization","value":"stunt","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization stunt\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"10 animals: dog, cat, elephant, lion, tiger, giraffe, snake, dolphin, whale, penguin"}
{"cat":"animals","slot":"specialization","value":"offspring","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization offspring\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, bird, fish, rabbit, horse, cow, elephant, lion, tiger"}
{"cat":"animals","slot":"specialization","value":"Monomorium minimum","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization Monomorium minimum\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        ant, bee, butterfly, cricket, dragonfly, grasshopper, ladybug, spider, termite, wasp"}
{"cat":"animals","slot":"specialization","value":"parrot","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization parrot\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, bird, fish, horse, cow, pig, sheep, monkey, lion"}
{"cat":"animals","slot":"specialization","value":"dicky-bird","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization dicky-bird\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, elephant, lion, giraffe, snake, fish, bird, rabbit, turtle"}
{"cat":"animals","slot":"specialization","value":"bird of passage","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization bird of passage\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        cat, dog, horse, cow, sheep, pig, chicken, duck, goose, turkey"}
{"cat":"animals","slot":"specialization","value":"louse","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization louse\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        cat, dog, lion, elephant, giraffe, snake, turtle, fish, bird, whale"}
{"cat":"animals","slot":"specialization","value":"pureblood","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization pureblood\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, rabbit, horse, cow, pig, sheep, chicken, fish, turtle"}
{"cat":"animals","slot":"specialization","value":"doggy","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization doggy\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"1. dog, 2. cat, 3. horse, 4. cow, 5. pig, 6. sheep, 7. goat, 8. chicken, 9. duck, 10. fish."}
{"cat":"animals","slot":"specialization","value":"embryo","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization embryo\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, elephant, lion, tiger, giraffe, monkey, snake, dolphin, whale"}
{"cat":"animals","slot":"specialization","value":"peeper","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization peeper\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"10 words: dog, cat, bird, fish, horse, cow, pig, rabbit, turtle, snake"}
{"cat":"animals","slot":"specialization","value":"timber wolf","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization timber wolf\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        lion, tiger, elephant, giraffe, zebra, kangaroo, koala, panda, dolphin, whale"}
{"cat":"animals","slot":"specialization","value":"coraciiform bird","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization coraciiform bird\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bird, dog, cat, horse, cow, chicken, pig, sheep, goat, rabbit"}
{"cat":"animals","slot":"specialization","value":"Sinornis","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization Sinornis\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        cat, dog, elephant, lion, tiger, whale, dolphin, snake, bird, fish"}
{"cat":"animals","slot":"specialization","value":"honeybee","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization honeybee\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        elephant, lion, tiger, giraffe, zebra, hippopotamus, rhinoceros, cheetah, leopard, hyena"}
{"cat":"animals","slot":"specialization","value":"branchiopodan","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization branchiopodan\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        ant, elephant, dog, cat, bird, fish, snake, lion, tiger, giraffe"}
{"cat":"animals","slot":"specialization","value":"king crab","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization king crab\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"10 words: lion, elephant, giraffe, kangaroo, penguin, dolphin, shark, snake, eagle, tiger"}
{"cat":"animals","slot":"specialization","value":"prairie wolf","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization prairie wolf\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, horse, cow, pig, chicken, sheep, goat, rabbit, fish"}
{"cat":"animals","slot":"specialization","value":"bryozoan","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization bryozoan\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        cat, dog, horse, cow, pig, chicken, fish, lion, tiger, elephant"}
{"cat":"animals","slot":"specialization","value":"psocopterous insect","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization psocopterous insect\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"10 words that belong to the category \"animals\": dog, cat, horse, cow, pig, sheep, chicken, elephant, lion, giraffe"}
{"cat":"animals","slot":"specialization","value":"nymphalid","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization nymphalid\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, horse, cow, pig, sheep, chicken, goat, rabbit, fish"}
{"cat":"animals","slot":"specialization","value":"dalmatian","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization dalmatian\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"10 words: dog, cat, rabbit, horse, cow, chicken, fish, snake, tiger, elephant"}
{"cat":"animals","slot":"specialization","value":"racer","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization racer\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, horse, cow, pig, chicken, sheep, goat, lion, elephant"}
{"cat":"animals","slot":"specialization","value":"Canis rufus","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization Canis rufus\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, horse, cow, pig, sheep, goat, chicken, duck, fish"}
{"cat":"animals","slot":"specialization","value":"Angora","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization Angora\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        Angora, Persian, Siamese, Bengal, Maine Coon, Ragdoll, Sphynx, Russian Blue, Abyssinian, Birman"}
{"cat":"animals","slot":"specialization","value":"imago","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization imago\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"1. dog, 2. cat, 3. lion, 4. tiger, 5. elephant, 6. giraffe, 7. zebra, 8. monkey, 9. dolphin, 10. whale"}
{"cat":"animals","slot":"specialization","value":"Arctic wolf","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization Arctic wolf\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        Arctic wolf, Bengal tiger, African elephant, Galapagos tortoise, Killer whale, Giant panda, Giraffe, Chimpanzee, Cheetah, Polar bear"}
{"cat":"animals","slot":"specialization","value":"deathwatch beetle","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization deathwatch beetle\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        cat, dog, elephant, lion, snake, tiger, whale, zebra, giraffe, monkey"}
{"cat":"animals","slot":"specialization","value":"ephemeropteran","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization ephemeropteran\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"1. dog, 2. cat, 3. elephant, 4. lion, 5. tiger, 6. giraffe, 7. zebra, 8. kangaroo, 9. dolphin, 10. whale"}
{"cat":"animals","slot":"specialization","value":"ratite","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization ratite\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        \"ratite, ostrich, emu, rhea, kiwi, cassowary, elephant, giraffe, hippopotamus, rhinoceros\""}
{"cat":"animals","slot":"specialization","value":"mutt","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization mutt\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, horse, cow, pig, chicken, fish, bird, rabbit, turtle"}
{"cat":"animals","slot":"specialization","value":"brachiopod","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization brachiopod\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, horse, cow, pig, sheep, chicken, fish, whale, elephant"}
{"cat":"animals","slot":"specialization","value":"clerid beetle","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization clerid beetle\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        \"dog, cat, horse, cow, chicken, pig, sheep, goat, rabbit, fish\""}
{"cat":"animals","slot":"specialization","value":"brachyuran","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization brachyuran\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"10 words: dog, cat, bird, fish, rabbit, snake, turtle, hamster, guinea pig, horse"}
{"cat":"animals","slot":"specialization","value":"nonpasserine bird","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization nonpasserine bird\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, horse, cow, pig, chicken, sheep, goat, rabbit, fish"}
{"cat":"animals","slot":"specialization","value":"house cat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization house cat\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"1. dog, 2. cat, 3. elephant, 4. lion, 5. tiger, 6. giraffe, 7. zebra, 8. monkey, 9. panda, 10. koala"}
{"cat":"animals","slot":"specialization","value":"raptor","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization raptor\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        lion, tiger, elephant, giraffe, zebra, hippopotamus, rhinoceros, leopard, cheetah, hyena"}
{"cat":"animals","slot":"specialization","value":"Apis mellifera","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization Apis mellifera\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        Apis mellifera, Canis lupus familiaris, Felis catus, Equus caballus, Sus scrofa domestica, Ovis aries, Bos taurus, Panthera leo, Bubo scandiacus, Cygnus olor"}
{"cat":"animals","slot":"specialization","value":"humblebee","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization humblebee\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, horse, cow, pig, chicken, sheep, goat, rabbit, fish"}
{"cat":"animals","slot":"specialization","value":"Helix pomatia","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization Helix pomatia\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        cat, dog, cow, pig, sheep, horse, chicken, fish, snake, lion"}
{"cat":"animals","slot":"specialization","value":"orthopteran","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization orthopteran\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"10 words: dog, cat, horse, cow, chicken, pig, sheep, goat, rabbit, fish"}
{"cat":"animals","slot":"specialization","value":"parazoan","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization parazoan\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"10 words that belong to the category \"animals\": dog, cat, horse, cow, pig, sheep, chicken, fish, snake, elephant"}
{"cat":"animals","slot":"specialization","value":"carinate","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization carinate\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, horse, cow, chicken, pig, sheep, goat, rabbit, fish"}
{"cat":"animals","slot":"specialization","value":"pleurodont","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization pleurodont\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        cat, dog, rabbit, hamster, turtle, fish, bird, horse, cow, pig"}
{"cat":"animals","slot":"specialization","value":"lamp shell","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization lamp shell\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        lion, tiger, elephant, giraffe, zebra, kangaroo, koala, panda, cheetah, hippopotamus"}
{"cat":"animals","slot":"specialization","value":"lycaenid butterfly","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization lycaenid butterfly\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"10 animals: lion, elephant, giraffe, zebra, tiger, bear, wolf, kangaroo, dolphin, eagle"}
{"cat":"animals","slot":"specialization","value":"shellfish","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization shellfish\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        cat, dog, lion, elephant, giraffe, snake, fish, bird, whale, tiger"}
{"cat":"animals","slot":"specialization","value":"Monomorium pharaonis","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization Monomorium pharaonis\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        Monomorium, pharaonis, ant, queen, worker, drone, larva, pupa, egg, colony"}
{"cat":"animals","slot":"specialization","value":"insectivore","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization insectivore\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, rabbit, hamster, fish, horse, cow, pig, chicken, sheep"}
{"cat":"animals","slot":"specialization","value":"water beetle","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization water beetle\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"1. dog, 2. cat, 3. horse, 4. cow, 5. pig, 6. sheep, 7. goat, 8. chicken, 9. duck, 10. fish"}
{"cat":"animals","slot":"specialization","value":"carriage dog","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization carriage dog\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, horse, cow, pig, chicken, sheep, goat, rabbit, fish"}
{"cat":"animals","slot":"specialization","value":"pupa","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization pupa\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"10 words: dog, cat, rabbit, hamster, snake, fish, horse, cow, pig, chicken"}
{"cat":"animals","slot":"specialization","value":"pierid","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization pierid\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        lion, tiger, bear, elephant, giraffe, zebra, kangaroo, koala, panda, wolf"}
{"cat":"animals","slot":"specialization","value":"orthopteron","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization orthopteron\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        ant, bee, butterfly, cricket, dragonfly, grasshopper, katydid, locust, mantis, termite"}
{"cat":"animals","slot":"specialization","value":"Reynard","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization Reynard\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, rabbit, hamster, goldfish, turtle, horse, cow, sheep, pig"}
{"cat":"animals","slot":"specialization","value":"raptorial bird","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization raptorial bird\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        tiger, lion, elephant, giraffe, zebra, hippopotamus, rhinoceros, cheetah, leopard, hyena"}
{"cat":"animals","slot":"specialization","value":"marine creature","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization marine creature\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dolphin, whale, seal, sea lion, walrus, manatee, sea otter, polar bear, penguin, sea turtle"}
{"cat":"animals","slot":"specialization","value":"hemipteron","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization hemipteron\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, horse, cow, pig, chicken, sheep, goat, rabbit, fish"}
{"cat":"animals","slot":"specialization","value":"blister beetle","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization blister beetle\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"10 words: lion, tiger, elephant, giraffe, zebra, monkey, snake, crocodile, kangaroo, panda"}
{"cat":"animals","slot":"specialization","value":"quarry","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization quarry\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"10 words: dog, cat, rabbit, hamster, goldfish, horse, cow, pig, chicken, turtle"}
{"cat":"animals","slot":"specialization","value":"domestic cat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization domestic cat\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, horse, cow, pig, sheep, chicken, fish, bird, rabbit"}
{"cat":"animals","slot":"specialization","value":"Urocyon cinereoargenteus","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization Urocyon cinereoargenteus\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, rabbit, hamster, goldfish, horse, cow, tiger, lion, elephant"}
{"cat":"animals","slot":"specialization","value":"polyzoan","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization polyzoan\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, horse, cow, pig, sheep, chicken, duck, goose, turkey"}
{"cat":"animals","slot":"specialization","value":"ephemerid","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization ephemerid\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"10 words that belong to the category \"animals\": dog, cat, bird, fish, horse, cow, lion, tiger, elephant, giraffe"}
{"cat":"animals","slot":"specialization","value":"Belgian hare","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization Belgian hare\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, horse, cow, pig, sheep, chicken, duck, goose, rabbit"}
{"cat":"animals","slot":"specialization","value":"sucking louse","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization sucking louse\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, lion, tiger, elephant, giraffe, zebra, dolphin, whale, shark"}
{"cat":"animals","slot":"specialization","value":"young","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization young\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        cat, dog, lion, tiger, elephant, giraffe, zebra, snake, crocodile, dolphin"}
{"cat":"animals","slot":"specialization","value":"hard-shell crab","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization hard-shell crab\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, horse, cow, pig, chicken, sheep, goat, rabbit, fish"}
{"cat":"animals","slot":"specialization","value":"pollinator","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization pollinator\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bee, butterfly, hummingbird, moth, bat, fly, beetle, bird, ant, wasp"}
{"cat":"animals","slot":"specialization","value":"apodiform bird","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization apodiform bird\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        lion, tiger, elephant, giraffe, zebra, kangaroo, dolphin, whale, eagle, snake"}
{"cat":"animals","slot":"specialization","value":"ephemeral","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization ephemeral\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, horse, cow, pig, sheep, chicken, fish, snake, bird"}
{"cat":"animals","slot":"specialization","value":"alkali bee","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization alkali bee\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"1. dog, 2. cat, 3. elephant, 4. lion, 5. tiger, 6. giraffe, 7. zebra, 8. monkey, 9. panda, 10. kangaroo"}
{"cat":"animals","slot":"specialization","value":"feeder","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization feeder\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        cat, dog, elephant, lion, giraffe, panda, dolphin, tiger, whale, horse"}
{"cat":"animals","slot":"specialization","value":"ladybird beetle","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization ladybird beetle\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        ladybird, beetle, ant, spider, butterfly, moth, fly, mosquito, dragonfly, damselfly"}
{"cat":"animals","slot":"specialization","value":"lampshell","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization lampshell\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, horse, cow, pig, chicken, sheep, goat, rabbit, fish"}
{"cat":"animals","slot":"specialization","value":"omnivore","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization omnivore\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, elephant, lion, tiger, giraffe, zebra, monkey, panda, dolphin"}
{"cat":"animals","slot":"specialization","value":"homeotherm","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization homeotherm\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"10 words that belong to the category \"animals\" are: dog, cat, horse, cow, pig, sheep, chicken, fish, lion, elephant."}
{"cat":"animals","slot":"specialization","value":"clerid","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization clerid\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        ant, bee, butterfly, cat, dog, elephant, fish, horse, lion, snake"}
{"cat":"animals","slot":"specialization","value":"barnacle","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization barnacle\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        cat, dog, horse, cow, pig, sheep, goat, chicken, duck, rabbit"}
{"cat":"animals","slot":"specialization","value":"birch leaf miner","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization birch leaf miner\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"10 words: dog, cat, horse, cow, chicken, pig, sheep, goat, rabbit, fish"}
{"cat":"animals","slot":"specialization","value":"brush-footed butterfly","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization brush-footed butterfly\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        cat, dog, lion, elephant, giraffe, snake, fish, bird, rabbit, tiger"}
{"cat":"animals","slot":"specialization","value":"mason bee","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization mason bee\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"10 words: ant, bee, butterfly, dragonfly, grasshopper, ladybug, spider, wasp, beetle, moth"}
{"cat":"animals","slot":"specialization","value":"acrodont","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization acrodont\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        cat, dog, rabbit, hamster, turtle, fish, snake, lizard, bird, horse"}
{"cat":"animals","slot":"specialization","value":"thysanuran insect","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization thysanuran insect\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        cat, dog, horse, cow, chicken, pig, sheep, goat, rabbit, fish"}
{"cat":"animals","slot":"specialization","value":"Canis niger","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization Canis niger\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"10 words that belong to the category \"animals\"\n        Example: \"dog, cat, rabbit, hamster, fish, turtle, snake, bird, horse, cow\""}
{"cat":"animals","slot":"specialization","value":"mining bee","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization mining bee\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        \"elephant, lion, tiger, giraffe, zebra, hippopotamus, rhino, cheetah, crocodile, leopard\""}
{"cat":"animals","slot":"specialization","value":"collembolan","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization collembolan\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        cat, dog, horse, cow, pig, sheep, chicken, duck, fish, whale"}
{"cat":"animals","slot":"specialization","value":"critter","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization critter\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, horse, cow, pig, chicken, sheep, goat, rabbit, fish"}
{"cat":"animals","slot":"specialization","value":"Alaska crab","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization Alaska crab\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"1. dog, 2. cat, 3. elephant, 4. lion, 5. tiger, 6. giraffe, 7. zebra, 8. monkey, 9. dolphin, 10. whale"}
{"cat":"animals","slot":"specialization","value":"trichopteron","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization trichopteron\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, rabbit, horse, cow, elephant, lion, tiger, giraffe, zebra"}
{"cat":"animals","slot":"specialization","value":"danaid butterfly","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization danaid butterfly\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        lion, tiger, elephant, giraffe, zebra, kangaroo, koala, penguin, dolphin, whale"}
{"cat":"animals","slot":"specialization","value":"zoophyte","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization zoophyte\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, horse, cow, pig, sheep, chicken, fish, rabbit, turtle"}
{"cat":"animals","slot":"specialization","value":"archeopteryx","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization archeopteryx\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        lion, tiger, elephant, giraffe, zebra, cheetah, rhino, hippo, crocodile, hyena"}
{"cat":"animals","slot":"specialization","value":"homopteran","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization homopteran\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        horse, dog, cat, rabbit, snake, lion, tiger, elephant, giraffe, zebra"}
{"cat":"animals","slot":"specialization","value":"white fox","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization white fox\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, rabbit, hamster, fish, horse, cow, chicken, pig, sheep"}
{"cat":"animals","slot":"specialization","value":"metabola","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization metabola\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, horse, cow, pig, chicken, sheep, goat, fish, bird"}
{"cat":"animals","slot":"specialization","value":"garden snail","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization garden snail\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        cat, dog, rabbit, horse, cow, pig, chicken, fish, turtle, snake"}
{"cat":"animals","slot":"specialization","value":"Alaskan king crab","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization Alaskan king crab\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        lion, tiger, elephant, giraffe, zebra, monkey, snake, crocodile, shark, whale"}
{"cat":"animals","slot":"specialization","value":"whirligig beetle","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization whirligig beetle\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, horse, cow, sheep, pig, chicken, duck, goose, turkey"}
{"cat":"animals","slot":"specialization","value":"elater","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization elater\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        cat, dog, horse, cow, lion, tiger, elephant, giraffe, zebra, panda"}
{"cat":"animals","slot":"specialization","value":"pug-dog","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization pug-dog\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, horse, cow, pig, chicken, sheep, goat, rabbit, fish"}
{"cat":"animals","slot":"specialization","value":"captive","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization captive\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, horse, cow, pig, chicken, sheep, goat, rabbit, fish"}
{"cat":"animals","slot":"specialization","value":"Cancer irroratus","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization Cancer irroratus\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        cat, dog, horse, cow, pig, chicken, sheep, goat, rabbit, fish"}
{"cat":"animals","slot":"specialization","value":"range animal","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization range animal\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, horse, cow, pig, sheep, chicken, fish, tiger, elephant"}
{"cat":"animals","slot":"specialization","value":"caprimulgiform bird","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization caprimulgiform bird\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, rabbit, hamster, horse, cow, pig, chicken, fish, turtle"}
{"cat":"animals","slot":"specialization","value":"firefly","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization firefly\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, elephant, lion, tiger, giraffe, snake, dolphin, whale, penguin"}
{"cat":"animals","slot":"specialization","value":"ctenophore","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization ctenophore\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        cat, dog, lion, elephant, giraffe, snake, fish, bird, horse, whale"}
{"cat":"animals","slot":"specialization","value":"Cancer magister","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization Cancer magister\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, horse, cow, pig, sheep, chicken, fish, whale, elephant"}
{"cat":"animals","slot":"specialization","value":"nester","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization nester\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"10 words: dog, cat, bird, fish, rabbit, horse, cow, elephant, lion, tiger"}
{"cat":"animals","slot":"specialization","value":"Belgian griffon","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization Belgian griffon\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, horse, cow, pig, sheep, chicken, duck, goose, turkey"}
{"cat":"animals","slot":"specialization","value":"thysanopterous insect","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization thysanopterous insect\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, horse, cow, pig, chicken, rabbit, fish, turtle, snake"}
{"cat":"animals","slot":"specialization","value":"slave-making ant","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization slave-making ant\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        ant, bee, dog, cat, horse, cow, pig, sheep, chicken, fish"}
{"cat":"animals","slot":"specialization","value":"fiddler crab","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization fiddler crab\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        ant, bee, butterfly, cat, dog, elephant, giraffe, horse, lion, tiger"}
{"cat":"animals","slot":"specialization","value":"grey wolf","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization grey wolf\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        lion, elephant, giraffe, zebra, tiger, leopard, cheetah, rhino, hippo, crocodile"}
{"cat":"animals","slot":"specialization","value":"wood rabbit","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization wood rabbit\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"10 words: cat, dog, horse, cow, pig, sheep, goat, chicken, duck, fish"}
{"cat":"animals","slot":"specialization","value":"trogon","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization trogon\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        cat, dog, horse, cow, pig, chicken, sheep, goat, rabbit, fish"}
{"cat":"animals","slot":"specialization","value":"andrena","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization andrena\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"10 animals: lion, tiger, elephant, giraffe, zebra, rhinoceros, hippopotamus, crocodile, cheetah, leopard"}
{"cat":"animals","slot":"specialization","value":"Canis latrans","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization Canis latrans\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, horse, cow, pig, sheep, chicken, duck, goose, turkey"}
{"cat":"animals","slot":"specialization","value":"game","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization game\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, horse, cow, pig, sheep, chicken, fish, snake, lion"}
{"cat":"animals","slot":"specialization","value":"biting louse","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization biting louse\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        lion, tiger, bear, elephant, giraffe, zebra, kangaroo, whale, dolphin, shark"}
{"cat":"animals","slot":"specialization","value":"Alaska king crab","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization Alaska king crab\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"10 words that belong to the category \"animals\" are: dog, cat, horse, elephant, lion, giraffe, snake, dolphin, whale, penguin."}
{"cat":"animals","slot":"specialization","value":"white wolf","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization white wolf\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"10 words: wolf, fox, bear, deer, rabbit, squirrel, raccoon, skunk, coyote, bobcat"}
{"cat":"animals","slot":"specialization","value":"hen","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization hen\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        cat, dog, horse, cow, pig, sheep, chicken, rabbit, fish, bird"}
{"cat":"animals","slot":"specialization","value":"doggie","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization doggie\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, horse, cow, pig, sheep, chicken, fish, bird, rabbit"}
{"cat":"animals","slot":"specialization","value":"Symbion pandora","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization Symbion pandora\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, elephant, lion, giraffe, zebra, monkey, snake, turtle, dolphin"}
{"cat":"animals","slot":"specialization","value":"thysanopter","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization thysanopter\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, rabbit, hamster, fish, bird, horse, cow, tiger, elephant"}
{"cat":"animals","slot":"specialization","value":"bulldog ant","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization bulldog ant\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"10 words: elephant, lion, tiger, giraffe, zebra, hippopotamus, rhinoceros, crocodile, cheetah, leopard."}
{"cat":"animals","slot":"specialization","value":"bumblebee","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization bumblebee\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        elephant, lion, tiger, giraffe, zebra, monkey, snake, dolphin, whale, shark"}
{"cat":"animals","slot":"specialization","value":"edible snail","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization edible snail\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"1. dog, 2. cat, 3. rabbit, 4. hamster, 5. guinea pig, 6. fish, 7. bird, 8. snake, 9. turtle, 10. horse"}
{"cat":"animals","slot":"specialization","value":"dipteron","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization dipteron\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"10 words: dog, cat, horse, cow, pig, sheep, chicken, fish, snake, lion."}
{"cat":"animals","slot":"specialization","value":"toy dog","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization toy dog\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, horse, cow, pig, sheep, chicken, duck, goose, rabbit"}
{"cat":"animals","slot":"specialization","value":"gallfly","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization gallfly\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        lion, tiger, elephant, giraffe, zebra, cheetah, hippopotamus, rhinoceros, crocodile, leopard"}
{"cat":"animals","slot":"specialization","value":"zooplankton","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization zooplankton\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bears, cats, dogs, elephants, giraffes, horses, lions, monkeys, pigs, tigers"}
{"cat":"animals","slot":"specialization","value":"gallinaceous bird","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization gallinaceous bird\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, rabbit, hamster, guinea pig, horse, cow, pig, sheep, chicken"}
{"cat":"animals","slot":"specialization","value":"bunny","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization bunny\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        lion, tiger, bear, elephant, giraffe, zebra, monkey, ape, snake, crocodile"}
{"cat":"animals","slot":"specialization","value":"lepidopterous insect","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization lepidopterous insect\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        butterfly, moth, ant, bee, beetle, dragonfly, fly, grasshopper, ladybug, mosquito"}
{"cat":"animals","slot":"specialization","value":"decapod","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization decapod\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        crab, lobster, shrimp, octopus, squid, cuttlefish, nautilus, snail, slug, clam"}
{"cat":"animals","slot":"specialization","value":"lepidopteron","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization lepidopteron\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        leopard, lion, tiger, elephant, giraffe, zebra, hippopotamus, rhinoceros, crocodile, snake"}
{"cat":"animals","slot":"specialization","value":"prey","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization prey\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        lion, tiger, cheetah, leopard, jaguar, panther, cougar, puma, ocelot, lynx"}
{"cat":"animals","slot":"specialization","value":"ectotherm","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization ectotherm\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"10 words: dog, cat, horse, cow, pig, chicken, sheep, goat, rabbit, fish"}
{"cat":"animals","slot":"specialization","value":"domesticated animal","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization domesticated animal\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"10 words: dog, cat, horse, cow, sheep, pig, chicken, goat, rabbit, fish"}
{"cat":"animals","slot":"specialization","value":"lepidopteran","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization lepidopteran\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        leopard, tiger, lion, elephant, giraffe, zebra, rhino, hippo, crocodile, cheetah"}
{"cat":"animals","slot":"specialization","value":"domestic animal","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization domestic animal\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, horse, cow, pig, sheep, chicken, goat, rabbit, fish"}
{"cat":"animals","slot":"specialization","value":"decapod crustacean","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization decapod crustacean\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"1. dog, 2. cat, 3. rabbit, 4. hamster, 5. snake, 6. turtle, 7. fish, 8. horse, 9. cow, 10. pig"}
{"cat":"animals","slot":"purpose","value":"animal","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are used for\";         A textual example of the semantic relation is \"purpose animal\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        horse, dog, cat, cow, pig, sheep, goat, chicken, duck, fish"}
{"cat":"animals","slot":"specialization","value":"mollusk","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization mollusk\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        mammal, reptile, bird, fish, insect, arachnid, amphibian, crustacean, mollusk, annelid"}
{"cat":"animals","slot":"specialization","value":"herbivore","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization herbivore\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"10 words: horse, cow, deer, rabbit, sheep, goat, elephant, giraffe, zebra, hippopotamus"}
{"cat":"animals","slot":"specialization","value":"larva","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization larva\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, horse, cow, pig, sheep, chicken, fish, lion, tiger"}
{"cat":"animals","slot":"specialization","value":"hymenopteron","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization hymenopteron\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, horse, cow, pig, sheep, goat, chicken, duck, rabbit"}
{"cat":"animals","slot":"specialization","value":"hymenopter","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization hymenopter\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"10 words: ant, bee, wasp, termite, cockroach, mantis, grasshopper, cricket, beetle, fly"}
{"cat":"animals","slot":"specialization","value":"chordate","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization chordate\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"10 words: dog, cat, elephant, lion, tiger, giraffe, monkey, panda, koala, whale"}
{"cat":"animals","slot":"specialization","value":"hymenopteran","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization hymenopteran\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bee, ant, wasp, hornet, yellowjacket, bumblebee, fire ant, carpenter ant, termite, sawfly"}
{"cat":"animals","slot":"specialization","value":"hymenopterous insect","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization hymenopterous insect\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, elephant, lion, tiger, giraffe, zebra, monkey, snake, fish"}
{"cat":"animals","slot":"specialization","value":"pet","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization pet\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dog, cat, hamster, rabbit, turtle, fish, bird, guinea pig, snake, horse"}
{"cat":"animals","slot":"specialization","value":"invertebrate","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization invertebrate\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"10 words that belong to the category \"animals\": dog, cat, horse, cow, chicken, pig, sheep, goat, rabbit, fish."}
{"cat":"animals","slot":"specialization","value":"arthropod","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization arthropod\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        ant, bee, butterfly, cricket, dragonfly, grasshopper, ladybug, spider, termite, wasp"}
{"cat":"food","slot":"purpose","value":"vision","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are used for\";         A textual example of the semantic relation is \"purpose vision\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, butter, cheese, eggs, flour, milk, oil, salt, sugar, yeast"}
{"cat":"food","slot":"size","value":"small","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"size small\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, pizza, chicken, bread, cheese, salad, soup, pasta, steak, sushi"}
{"cat":"food","slot":"material","value":"yeast","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can be made of\";         A textual example of the semantic relation is \"material yeast\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        flour, sugar, eggs, butter, milk, chocolate, nuts, fruit, cheese, meat"}
{"cat":"food","slot":"material","value":"sourdough","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can be made of\";         A textual example of the semantic relation is \"material sourdough\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, pizza, pasta, cake, cookies, muffins, pancakes, waffles, pretzels, crackers"}
{"cat":"food","slot":"material","value":"tasting","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can be made of\";         A textual example of the semantic relation is \"material tasting\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, cheese, chocolate, coffee, honey, jam, milk, sugar, tea, wine"}
{"cat":"food","slot":"material","value":"rye","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can be made of\";         A textual example of the semantic relation is \"material rye\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, cake, cookies, pasta, pizza, crackers, beer, whiskey, vodka, gin"}
{"cat":"food","slot":"material","value":"unleavened","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can be made of\";         A textual example of the semantic relation is \"material unleavened\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, pasta, pizza, cookies, cake, muffins, crackers, pretzels, bagels, tortillas"}
{"cat":"food","slot":"material","value":"salt","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can be made of\";         A textual example of the semantic relation is \"material salt\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        salt, sugar, flour, eggs, milk, butter, cheese, chocolate, vanilla, honey"}
{"cat":"food","slot":"time","value":"dinner","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can be consumed or used during\";         A textual example of the semantic relation is \"time dinner\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, cheese, wine, chocolate, strawberry, cake, pizza, pasta, salad, soup"}
{"cat":"food","slot":"time","value":"autumn","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can be consumed or used during\";         A textual example of the semantic relation is \"time autumn\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, pumpkin, cranberry, turkey, sweet potato, stuffing, pie, squash, corn, cider"}
{"cat":"food","slot":"time","value":"lunch","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can be consumed or used during\";         A textual example of the semantic relation is \"time lunch\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        sandwich, pizza, salad, soup, burger, pasta, sushi, tacos, fries, ice cream"}
{"cat":"food","slot":"time","value":"summer","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can be consumed or used during\";         A textual example of the semantic relation is \"time summer\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        tomato, watermelon, ice cream, lemonade, grilled chicken, corn on the cob, potato salad, pasta salad, fruit salad, barbecue"}
{"cat":"food","slot":"time","value":"April","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can be consumed or used during\";         A textual example of the semantic relation is \"time April\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, cheese, chocolate, eggs, honey, jam, milk, potatoes, salt, sugar"}
{"cat":"food","slot":"time","value":"meal","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can be consumed or used during\";         A textual example of the semantic relation is \"time meal\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, bread, cheese, chicken, coffee, egg, ice cream, pasta, pizza, steak"}
{"cat":"food","slot":"material","value":"water","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can be made of\";         A textual example of the semantic relation is \"material water\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, pasta, pizza, cake, cookies, muffins, doughnuts, pancakes, waffles, pie"}
{"cat":"food","slot":"taste","value":"acid","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"taste acid\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        tomato, lemon, orange, grapefruit, lime, pineapple, strawberry, kiwi, passion fruit, tangerine"}
{"cat":"food","slot":"taste","value":"sugary","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"taste sugary\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, cake, chocolate, cookie, donut, ice cream, muffin, pie, pudding, sweet"}
{"cat":"food","slot":"taste","value":"cold","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"taste cold\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, pizza, cheese, chocolate, ice cream, salad, soup, bread, hamburger, sushi"}
{"cat":"food","slot":"taste","value":"dessert","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"taste dessert\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, pizza, cake, pasta, salad, soup, steak, sushi, ice cream, fruit"}
{"cat":"food","slot":"taste","value":"iced","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"taste iced\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"iced, cream, cake, pie, cheese, bread, pizza, pasta, salad, soup"}
{"cat":"food","slot":"taste","value":"fizzy","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"taste fizzy\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, banana, pizza, chocolate, ice cream, hamburger, sushi, pasta, steak, salad"}
{"cat":"food","slot":"taste","value":"sparkling","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"taste sparkling\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, orange, banana, pizza, hamburger, ice cream, chocolate, sushi, salad, pasta"}
{"cat":"food","slot":"taste","value":"soft","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"taste soft\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, banana, chocolate, cake, ice cream, pizza, hamburger, french fries, pasta, sushi"}
{"cat":"food","slot":"taste","value":"herbal","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"taste herbal\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        \"herbs, spices, tea, soup, stew, curry, pesto, salsa, salad, dressing\""}
{"cat":"food","slot":"material","value":"wheat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can be made of\";         A textual example of the semantic relation is \"material wheat\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, pasta, cake, cookies, pancakes, crackers, noodles, pretzels, beer, whiskey"}
{"cat":"food","slot":"material","value":"milk","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can be made of\";         A textual example of the semantic relation is \"material milk\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, cheese, pasta, pizza, cake, cookies, ice cream, yogurt, butter, cream"}
{"cat":"food","slot":"smell","value":"fruity","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can smell\";         A textual example of the semantic relation is \"smell fruity\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, banana, cinnamon, coffee, garlic, lemon, onion, oregano, pepper, strawberry"}
{"cat":"food","slot":"smell","value":"floral","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can smell\";         A textual example of the semantic relation is \"smell floral\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, cheese, wine, coffee, chocolate, cinnamon, vanilla, basil, garlic, onion"}
{"cat":"food","slot":"smell","value":"spicy","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can smell\";         A textual example of the semantic relation is \"smell spicy\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        curry, spice, cinnamon, garlic, onion, ginger, rosemary, thyme, basil, oregano"}
{"cat":"food","slot":"smell","value":"balsamic","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can smell\";         A textual example of the semantic relation is \"smell balsamic\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        balsamic, basil, garlic, ginger, mint, nutmeg, onion, rosemary, thyme, vanilla"}
{"cat":"food","slot":"smell","value":"bitter","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can smell\";         A textual example of the semantic relation is \"smell bitter\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        coffee, cheese, onion, garlic, bread, cake, chocolate, fish, meat, spices"}
{"cat":"food","slot":"smell","value":"cheap","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can smell\";         A textual example of the semantic relation is \"smell cheap\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        food, smell, can, cheap, example, textual, relation, semantic, satisfy, belong"}
{"cat":"food","slot":"smell","value":"aromatic","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can smell\";         A textual example of the semantic relation is \"smell aromatic\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        coffee, cake, bread, pizza, steak, curry, onion, garlic, cheese, chocolate"}
{"cat":"food","slot":"smell","value":"tasty","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can smell\";         A textual example of the semantic relation is \"smell tasty\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        steak, pizza, cookies, bread, chocolate, coffee, bacon, cheese, cake, pasta"}
{"cat":"food","slot":"smell","value":"organic","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can smell\";         A textual example of the semantic relation is \"smell organic\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, coffee, cinnamon, bread, chocolate, cheese, garlic, bacon, pizza, curry"}
{"cat":"food","slot":"smell","value":"acidic","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can smell\";         A textual example of the semantic relation is \"smell acidic\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        cheese, vinegar, garlic, onion, fish, coffee, bread, chocolate, curry, wine"}
{"cat":"food","slot":"smell","value":"elegant","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can smell\";         A textual example of the semantic relation is \"smell elegant\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, cheese, chocolate, coffee, curry, fish, garlic, onion, popcorn, steak"}
{"cat":"food","slot":"smell","value":"varietal","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can smell\";         A textual example of the semantic relation is \"smell varietal\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        cheese, coffee, bread, chocolate, fish, garlic, onion, meat, wine, honey"}
{"cat":"food","slot":"smell","value":"fresh","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can smell\";         A textual example of the semantic relation is \"smell fresh\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, coffee, cake, pizza, steak, fish, cheese, fruit, chocolate, popcorn"}
{"cat":"food","slot":"consistency","value":"firm","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"consistency firm\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, orange, banana, bread, cheese, chicken, beef, rice, pasta, vegetables"}
{"cat":"food","slot":"consistency","value":"liquid","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"consistency liquid\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, banana, bread, cheese, chicken, egg, fish, milk, pizza, steak"}
{"cat":"food","slot":"consistency","value":"crispy","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"consistency crispy\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pizza, burger, fries, sushi, salad, pasta, sandwich, soup, steak, tacos"}
{"cat":"food","slot":"consistency","value":"spongy","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"consistency spongy\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        sponge cake, angel food cake, souffl\u00e9, pudding, mousse, jelly, marshmallow, meringue, whipped cream, custard"}
{"cat":"food","slot":"consistency","value":"tart","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"consistency tart\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, banana, cake, chocolate, cookie, ice cream, pizza, sandwich, steak, sushi"}
{"cat":"food","slot":"consistency","value":"ripe","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"consistency ripe\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, banana, bread, cheese, chicken, egg, fish, milk, rice, tomato"}
{"cat":"food","slot":"consistency","value":"sour","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"consistency sour\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, banana, cheese, chocolate, egg, fish, milk, pizza, steak, yogurt"}
{"cat":"food","slot":"consistency","value":"rich","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"consistency rich\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        chocolate, ice cream, cake, cheese, butter, cream, honey, syrup, milk, oil"}
{"cat":"food","slot":"consistency","value":"edible","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"consistency edible\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pizza, hamburger, sushi, pasta, tacos, burrito, salad, sandwich, steak, curry"}
{"cat":"food","slot":"consistency","value":"juicy","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"consistency juicy\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, banana, carrot, cheese, chicken, egg, fish, hamburger, ice cream, pizza"}
{"cat":"food","slot":"consistency","value":"sparkling","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"consistency sparkling\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pizza, pasta, bread, cheese, meat, vegetables, fruit, chocolate, ice cream, cake"}
{"cat":"food","slot":"consistency","value":"crisp","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"consistency crisp\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, pear, potato, carrot, lettuce, cucumber, celery, onion, pepper, tomato"}
{"cat":"food","slot":"consistency","value":"crunchy","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"consistency crunchy\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pizza, burger, fries, salad, sushi, tacos, pasta, sandwich, soup, steak"}
{"cat":"food","slot":"shape","value":"elongated","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"shape elongated\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, cheese, pasta, sausage, pizza, salad, fruit, vegetables, chocolate, cake"}
{"cat":"food","slot":"shape","value":"long","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"shape long\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        noodles, spaghetti, pasta, linguine, fettuccine, penne, rigatoni, lasagna, tortellini, cannelloni"}
{"cat":"food","slot":"shape","value":"circular","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"shape circular\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, pizza, cake, burger, sandwich, salad, soup, pasta, sushi, taco"}
{"cat":"food","slot":"shape","value":"round","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"shape round\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, pear, orange, banana, watermelon, tomato, grape, strawberry, blueberry, cherry"}
{"cat":"food","slot":"shape","value":"thin","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"shape thin\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        \"apple, banana, chicken, egg, fish, lettuce, pizza, rice, steak, tomato\""}
{"cat":"food","slot":"shape","value":"conical","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"shape conical\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, banana, bread, cheese, chicken, egg, fish, pizza, salad, steak"}
{"cat":"food","slot":"shape","value":"oval","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"shape oval\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, banana, orange, grape, strawberry, pear, kiwi, peach, plum, cherry"}
{"cat":"food","slot":"shape","value":"pointed","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"shape pointed\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, pear, banana, avocado, grapes, strawberry, watermelon, pineapple, mango, kiwi"}
{"cat":"food","slot":"taste","value":"sweet","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"taste sweet\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, pineapple, honey, chocolate, strawberry, cake, candy, ice cream, sweet potato, carrot"}
{"cat":"food","slot":"material","value":"grape","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can be made of\";         A textual example of the semantic relation is \"material grape\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, cheese, chocolate, honey, jam, pasta, pizza, rice, sugar, wine"}
{"cat":"food","slot":"user","value":"farmer","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are used by\";         A textual example of the semantic relation is \"user farmers\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, banana, bread, cheese, chicken, egg, fish, milk, pizza, steak"}
{"cat":"food","slot":"user","value":"cook","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are used by\";         A textual example of the semantic relation is \"user cooks\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, cheese, meat, vegetables, fruits, eggs, milk, pasta, rice, beans"}
{"cat":"food","slot":"user","value":"adult","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are used by\";         A textual example of the semantic relation is \"user adults\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pizza, hamburger, french fries, hot dog, chicken nuggets, ice cream, cake, candy, soda, juice"}
{"cat":"food","slot":"user","value":"somellier","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are used by\";         A textual example of the semantic relation is \"user somelliers\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        chefs, sommeliers, waiters, bartenders, cooks, bakers, baristas, food critics, nutritionists, dietitians"}
{"cat":"food","slot":"user","value":"wine grower","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are used by\";         A textual example of the semantic relation is \"user wine growers\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        \"chefs, cooks, bakers, waiters, sommeliers, farmers, butchers, fishermen, grocers, food critics\""}
{"cat":"food","slot":"accessory","value":"cup","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are related with\";         A textual example of the semantic relation is \"accessory cup\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, cheese, meat, vegetables, fruit, pasta, rice, chocolate, cake, ice cream"}
{"cat":"food","slot":"accessory","value":"barrel","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are related with\";         A textual example of the semantic relation is \"accessory barrel\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, pizza, chocolate, bread, hamburger, cake, pasta, cheese, ice cream, salad"}
{"cat":"food","slot":"accessory","value":"sausage","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are related with\";         A textual example of the semantic relation is \"accessory sausage\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, cheese, meat, vegetables, fruit, pasta, rice, eggs, milk, chocolate"}
{"cat":"food","slot":"accessory","value":"barbecue","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are related with\";         A textual example of the semantic relation is \"accessory barbecue\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        hamburger, pizza, taco, sushi, burrito, hotdog, fries, salad, soup, sandwich"}
{"cat":"food","slot":"accessory","value":"meat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are related with\";         A textual example of the semantic relation is \"accessory meat\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bacon, sausage, ham, steak, chicken, pizza, burger, salad, pasta, sushi"}
{"cat":"food","slot":"accessory","value":"oven","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are related with\";         A textual example of the semantic relation is \"accessory oven\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, cake, pizza, pasta, cheese, meat, vegetables, fruit, chocolate, ice cream"}
{"cat":"food","slot":"accessory","value":"marmalade","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are related with\";         A textual example of the semantic relation is \"accessory marmalade\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, cheese, chocolate, cake, pizza, pasta, steak, sushi, tacos, ice cream"}
{"cat":"food","slot":"accessory","value":"cheese","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are related with\";         A textual example of the semantic relation is \"accessory cheese\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pizza, burger, sandwich, pasta, salad, soup, sushi, tacos, fries, ice cream"}
{"cat":"food","slot":"accessory","value":"macaroni","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are related with\";         A textual example of the semantic relation is \"accessory macaroni\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, cheese, chocolate, egg, fish, meat, pasta, rice, vegetable, water"}
{"cat":"food","slot":"accessory","value":"bean","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are related with\";         A textual example of the semantic relation is \"accessory bean\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, cheese, meat, vegetables, fruit, pasta, rice, chocolate, cake, ice cream"}
{"cat":"food","slot":"accessory","value":"cooler","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are related with\";         A textual example of the semantic relation is \"accessory cooler\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, cheese, milk, butter, eggs, yogurt, honey, jam, peanut butter, cereal"}
{"cat":"food","slot":"accessory","value":"glass","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are related with\";         A textual example of the semantic relation is \"accessory glass\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        burger, pizza, sushi, taco, pasta, salad, sandwich, steak, ice cream, chocolate"}
{"cat":"food","slot":"accessory","value":"extractor","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are related with\";         A textual example of the semantic relation is \"accessory extractor\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, pizza, pasta, cheese, meat, vegetables, fruit, chocolate, ice cream, cake"}
{"cat":"food","slot":"accessory","value":"cellar","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are related with\";         A textual example of the semantic relation is \"accessory cellar\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, cheese, meat, vegetables, fruits, pasta, rice, eggs, milk, chocolate"}
{"cat":"food","slot":"accessory","value":"pizza","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are related with\";         A textual example of the semantic relation is \"accessory pizza\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pizza, hamburger, pasta, sushi, tacos, burrito, fries, salad, ice cream, chocolate"}
{"cat":"food","slot":"taste","value":"hot","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"taste hot\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pizza, hamburger, french fries, ice cream, sushi, tacos, pasta, salad, soup, sandwich"}
{"cat":"food","slot":"smell","value":"hot","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can smell\";         A textual example of the semantic relation is \"smell hot\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, coffee, bacon, pizza, cake, popcorn, steak, soup, chocolate, cookies"}
{"cat":"food","slot":"accessory","value":"bottle","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are related with\";         A textual example of the semantic relation is \"accessory bottle\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, pizza, chocolate, hamburger, sushi, cake, pasta, ice cream, taco, steak"}
{"cat":"food","slot":"accessory","value":"butter","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are related with\";         A textual example of the semantic relation is \"accessory butter\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, cheese, meat, vegetables, fruits, pasta, rice, eggs, milk, chocolate"}
{"cat":"food","slot":"part","value":"pip","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part pip\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, pizza, burger, sandwich, salad, soup, steak, sushi, taco, pasta"}
{"cat":"food","slot":"part","value":"seed","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part seed\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, banana, carrot, chocolate, egg, hamburger, ice cream, pizza, potato, tomato"}
{"cat":"food","slot":"part","value":"stem","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part stem\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        tomato, pizza, burger, sandwich, salad, soup, steak, sushi, taco, pasta"}
{"cat":"food","slot":"part","value":"leaf","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part leaf\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, pizza, salad, cake, sandwich, soup, pasta, sushi, burger, taco"}
{"cat":"food","slot":"part","value":"pulp","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part pulp\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, banana, orange, grape, tomato, peach, pineapple, strawberry, watermelon, kiwi"}
{"cat":"food","slot":"part","value":"flesh","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part flesh\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        meat, fish, chicken, beef, pork, lamb, turkey, duck, goose, venison"}
{"cat":"food","slot":"part","value":"stalk","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part stalk\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        tomato, lettuce, cheese, bread, ham, egg, potato, pasta, rice, chicken"}
{"cat":"food","slot":"part","value":"core","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part core\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, orange, pineapple, banana, watermelon, strawberry, cherry, kiwi, mango, peach"}
{"cat":"food","slot":"part","value":"husk","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part husk\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"10 words that belong to the category \"food\" and satisfy the semantic relation \"can have\": corn, peanut, wheat, rice, barley, oat, rye, sorghum, millet, buckwheat"}
{"cat":"food","slot":"part","value":"glucose","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part glucose\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, cheese, meat, vegetables, fruit, pasta, rice, nuts, chocolate, cake"}
{"cat":"food","slot":"part","value":"fructose","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part fructose\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        fructose, sucrose, glucose, lactose, maltose, dextrose, galactose, mannose, xylose, ribose"}
{"cat":"food","slot":"part","value":"skin","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part skin\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, banana, bread, cheese, chicken, cucumber, egg, fish, orange, potato"}
{"cat":"food","slot":"part","value":"jacket","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part jacket\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, cheese, butter, jam, eggs, bacon, sausage, milk, coffee, juice"}
{"cat":"food","slot":"part","value":"breadstuff","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part breadstuff\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, pizza, pasta, cake, cookies, bagel, bun, roll, croissant, pretzel"}
{"cat":"food","slot":"part","value":"sweet corn","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part sweet corn\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        sweet corn, chocolate cake, fried chicken, pizza, spaghetti, sushi, tacos, ice cream, burger, salad"}
{"cat":"food","slot":"part","value":"curd","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part curd\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        cheese, yogurt, milk, butter, cream, cottage cheese, sour cream, ricotta, paneer, quark"}
{"cat":"food","slot":"part","value":"tannin","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part tannin\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        cheese, wine, tea, chocolate, coffee, fruit, nuts, meat, fish, vegetables"}
{"cat":"food","slot":"part","value":"Zea mays rugosa","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part Zea mays rugosa\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        Zea mays rugosa, corn, maize, sweet corn, popcorn, flour, tortillas, polenta, grits, cornmeal"}
{"cat":"food","slot":"part","value":"orange peel","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part orange peel\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, chocolate, cheese, pizza, hamburger, sushi, pasta, salad, steak, ice cream"}
{"cat":"food","slot":"part","value":"orange rind","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part orange rind\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, pineapple, orange, lemon, lime, grapefruit, banana, mango, kiwi, strawberry"}
{"cat":"food","slot":"part","value":"isothiocyanate","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part isothiocyanate\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, orange, banana, strawberry, tomato, potato, carrot, onion, garlic, broccoli"}
{"cat":"food","slot":"part","value":"cabbage","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part cabbage\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        cabbage, lettuce, tomato, cucumber, onion, carrot, pepper, eggplant, zucchini, mushroom"}
{"cat":"food","slot":"part","value":"cuke","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part cuke\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        cuke, tomato, onion, lettuce, cucumber, carrot, radish, bell pepper, zucchini, eggplant"}
{"cat":"food","slot":"part","value":"chou","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part chou\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        chou, pizza, burger, hotdog, taco, sushi, pancakes, waffles, crepe, croissant"}
{"cat":"food","slot":"part","value":"sugar corn","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part sugar corn\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        sugar, corn, wheat, rice, potatoes, beans, peas, lentils, chickpeas, soybeans"}
{"cat":"food","slot":"part","value":"tomato","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part tomato\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":" tomato, pizza, pasta, spaghetti, lasagna, meatball, mozzarella, garlic, basil, olive oil"}
{"cat":"food","slot":"part","value":"shell","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part shell\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        \"lobster, crab, shrimp, oyster, mussel, clam, scallop, crayfish, octopus, squid\""}
{"cat":"food","slot":"part","value":"spinach","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part spinach\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        spinach, lettuce, tomato, cheese, bacon, ham, egg, avocado, onion, mushroom"}
{"cat":"food","slot":"part","value":"onion","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part onion\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        tomato, lettuce, cheese, bacon, egg, onion, pepper, mushroom, ham, sausage"}
{"cat":"food","slot":"part","value":"staff of life","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part staff of life\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, rice, pasta, cereal, oatmeal, tortillas, naan, pita, baguette"}
{"cat":"food","slot":"part","value":"cucumber","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part cucumber\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        cucumber, tomato, lettuce, cheese, meat, bread, onion, pepper, egg, milk"}
{"cat":"food","slot":"part","value":"cheese rind","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part cheese rind\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        cheese, bread, pizza, pasta, salad, burger, steak, fish, chocolate, cake"}
{"cat":"food","slot":"part","value":"sweet corn plant","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part sweet corn plant\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":" sweet corn, cob, kernel, silk, husk, stalk, leaves, tassel, pollen, root"}
{"cat":"food","slot":"part","value":"Zea saccharata","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part Zea saccharata\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        Zea saccharata, tomato, lettuce, cheese, ham, bacon, egg, sausage, onion, mushroom"}
{"cat":"food","slot":"part","value":"green corn","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part green corn\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        \"green corn, green beans, peas, broccoli, asparagus, spinach, lettuce, cucumber, tomato, avocado\""}
{"cat":"food","slot":"part","value":"dough","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part dough\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dough, flour, sugar, eggs, butter, yeast, salt, milk, water, oil"}
{"cat":"food","slot":"product","value":"cake","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can produce\";         A textual example of the semantic relation is \"product cake\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        cake, bread, pizza, pasta, cookies, candy, ice cream, cheese, butter, jam"}
{"cat":"food","slot":"product","value":"sauce","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can produce\";         A textual example of the semantic relation is \"product sauce\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        tomato, onion, garlic, vinegar, sugar, salt, pepper, olive oil, flour, milk"}
{"cat":"food","slot":"product","value":"syrup","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can produce\";         A textual example of the semantic relation is \"product syrup\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":" maple, sugar, corn, rice, barley, wheat, potato, tapioca, honey, sorghum"}
{"cat":"food","slot":"product","value":"compote","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can produce\";         A textual example of the semantic relation is \"product compote\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        fruit, apple, pear, peach, plum, apricot, strawberry, raspberry, blackberry, blueberry"}
{"cat":"food","slot":"product","value":"puree","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can produce\";         A textual example of the semantic relation is \"product puree\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        carrot, apple, tomato, peach, banana, avocado, spinach, mango, strawberry, pumpkin"}
{"cat":"food","slot":"product","value":"bioethanol","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can produce\";         A textual example of the semantic relation is \"product bioethanol\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        sugarcane, corn, wheat, potatoes, sugar beets, cassava, sorghum, barley, millet, rice"}
{"cat":"food","slot":"product","value":"whiskey","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can produce\";         A textual example of the semantic relation is \"product whiskey\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        whiskey, wine, beer, cheese, yogurt, bread, butter, vinegar, pickles, soy sauce"}
{"cat":"food","slot":"product","value":"cornflake","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can produce\";         A textual example of the semantic relation is \"product cornflake\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        egg, bread, cheese, chicken, beef, pork, fish, vegetable, fruit, milk"}
{"cat":"food","slot":"product","value":"biodiesel","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can produce\";         A textual example of the semantic relation is \"product biodiesel\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        soybean, rapeseed, sunflower, palm, coconut, corn, canola, peanut, algae, jatropha"}
{"cat":"food","slot":"product","value":"juice","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can produce\";         A textual example of the semantic relation is \"product juice\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":" apple, orange, lemon, grape, pineapple, watermelon, strawberry, banana, peach, mango"}
{"cat":"food","slot":"product","value":"biofuel","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can produce\";         A textual example of the semantic relation is \"product biofuel\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        corn, sugarcane, soybeans, rapeseed, sunflower, palm oil, algae, waste vegetable oil, animal fat, used cooking oil"}
{"cat":"food","slot":"product","value":"popcorn","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can produce\";         A textual example of the semantic relation is \"product popcorn\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        potato, corn, rice, wheat, sugar, milk, egg, meat, cheese, bread"}
{"cat":"food","slot":"product","value":"pastry","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can produce\";         A textual example of the semantic relation is \"product pastry\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, cake, pie, pasta, pizza, cookies, donuts, muffins, croissants, tarts"}
{"cat":"food","slot":"product","value":"wine","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can produce\";         A textual example of the semantic relation is \"product wine\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        wine, cheese, bread, beer, chocolate, honey, jam, vinegar, yogurt, butter"}
{"cat":"food","slot":"product","value":"cob","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can produce\";         A textual example of the semantic relation is \"product cob\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        \"apple, orange, banana, strawberry, tomato, carrot, potato, onion, garlic, ginger\""}
{"cat":"food","slot":"product","value":"pie","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can produce\";         A textual example of the semantic relation is \"product pie\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, cherry, blueberry, peach, strawberry, pumpkin, lemon, chocolate, banana, cream"}
{"cat":"food","slot":"product","value":"gluten","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can produce\";         A textual example of the semantic relation is \"product gluten\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        wheat, barley, rye, oats, spelt, kamut, triticale, durum, semolina, couscous"}
{"cat":"food","slot":"product","value":"yield","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can produce\";         A textual example of the semantic relation is \"product yield\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        tomato, apple, wheat, rice, corn, potato, beef, chicken, fish, milk"}
{"cat":"food","slot":"product","value":"chowder","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can produce\";         A textual example of the semantic relation is \"product chowder\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        chowder, soup, stew, broth, bisque, consomm\u00e9, gumbo, bouillabaisse, cioppino, chili"}
{"cat":"food","slot":"product","value":"crumb","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can produce\";         A textual example of the semantic relation is \"product crumb\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, cake, cookie, pizza, pie, pasta, muffin, scone, doughnut, croissant"}
{"cat":"food","slot":"product","value":"pancake","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can produce\";         A textual example of the semantic relation is \"product pancake\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pancake, waffle, crepe, omelette, frittata, quiche, souffle, croissant, brioche, pain au chocolat"}
{"cat":"food","slot":"product","value":"tortilla","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can produce\";         A textual example of the semantic relation is \"product tortilla\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        tomato, apple, wheat, corn, chicken, beef, pork, potato, rice, soybean"}
{"cat":"food","slot":"colorPattern","value":"yellow","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"colorPattern yellow\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, banana, chocolate, cheese, pizza, pasta, hamburger, sushi, ice cream, cake"}
{"cat":"food","slot":"colorPattern","value":"red","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"colorPattern red\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pizza, burger, fries, taco, sushi, pasta, salad, sandwich, steak, ice cream"}
{"cat":"food","slot":"colorPattern","value":"yellowish","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"colorPattern yellowish\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, banana, bread, cheese, chicken, egg, fish, meat, milk, potato"}
{"cat":"food","slot":"colorPattern","value":"orange","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"colorPattern orange\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, banana, pizza, hamburger, sushi, pasta, chocolate, ice cream, steak, salad"}
{"cat":"food","slot":"colorPattern","value":"green","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"colorPattern green\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, banana, bread, cheese, chicken, cucumber, egg, lettuce, milk, potato"}
{"cat":"food","slot":"colorPattern","value":"brown","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"colorPattern brown\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pizza, burger, sushi, taco, sandwich, salad, pasta, steak, curry, pancakes"}
{"cat":"food","slot":"colorPattern","value":"white","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"colorPattern white\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, cheese, pasta, pizza, salad, steak, sushi, tacos, vegetables, yogurt"}
{"cat":"food","slot":"colorPattern","value":"rose","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"colorPattern rose\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, pizza, hamburger, chocolate, cake, ice cream, pasta, sushi, tacos, pancakes"}
{"cat":"food","slot":"colorPattern","value":"shiny","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"colorPattern shiny\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, pizza, chocolate, bread, pasta, salad, steak, sushi, ice cream, cheese"}
{"cat":"food","slot":"colorPattern","value":"glossy","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"colorPattern glossy\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pizza, burger, sushi, tacos, pasta, salad, sandwich, soup, ice cream, cake"}
{"cat":"food","slot":"colorPattern","value":"pink","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"colorPattern pink\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, cheese, chocolate, cake, pizza, pasta, salad, soup, steak, sushi"}
{"cat":"food","slot":"place","value":"supermarket","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can be found or used in\";         A textual example of the semantic relation is \"place supermarkets\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, milk, eggs, cheese, meat, fruits, vegetables, cereal, pasta, chocolate"}
{"cat":"food","slot":"place","value":"USA","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can be found or used in\";         A textual example of the semantic relation is \"place USAs\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pizza, hamburger, hotdog, fries, tacos, burrito, sushi, steak, pasta, salad"}
{"cat":"food","slot":"place","value":"Britain","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can be found or used in\";         A textual example of the semantic relation is \"place Britains\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pizza, pasta, fish, chips, curry, roast beef, Yorkshire pudding, tea, scones, biscuits"}
{"cat":"food","slot":"place","value":"restaurant","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can be found or used in\";         A textual example of the semantic relation is \"place restaurants\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pizza, burger, fries, salad, sushi, pasta, steak, tacos, sandwich, ice cream"}
{"cat":"food","slot":"place","value":"underground","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can be found or used in\";         A textual example of the semantic relation is \"place undergrounds\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        potatoes, carrots, onions, garlic, ginger, radishes, beets, turnips, parsnips, rutabagas"}
{"cat":"food","slot":"place","value":"garden","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can be found or used in\";         A textual example of the semantic relation is \"place gardens\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        carrots, potatoes, lettuce, tomatoes, onions, peppers, cucumbers, herbs, berries, fruits"}
{"cat":"food","slot":"place","value":"field","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can be found or used in\";         A textual example of the semantic relation is \"place fields\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pizza, hamburger, salad, sushi, pasta, sandwich, taco, curry, steak, cake"}
{"cat":"food","slot":"place","value":"France","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can be found or used in\";         A textual example of the semantic relation is \"place Frances\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        \"bread, cheese, wine, croissant, baguette, escargot, ratatouille, crepes, macarons, foie gras\""}
{"cat":"food","slot":"place","value":"grocery","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can be found or used in\";         A textual example of the semantic relation is \"place groceries\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, milk, eggs, cheese, fruits, vegetables, meat, pasta, rice, cereal"}
{"cat":"food","slot":"place","value":"bar","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can be found or used in\";         A textual example of the semantic relation is \"place bars\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, cheese, meat, vegetables, fruit, milk, eggs, pasta, rice, chocolate"}
{"cat":"food","slot":"place","value":"tree","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can be found or used in\";         A textual example of the semantic relation is \"place trees\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, banana, bread, cheese, chicken, egg, fish, milk, potato, rice"}
{"cat":"food","slot":"place","value":"plantation","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can be found or used in\";         A textual example of the semantic relation is \"place plantations\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        rice, wheat, corn, potatoes, beans, tomatoes, onions, garlic, peppers, cucumbers"}
{"cat":"food","slot":"place","value":"vineyard","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can be found or used in\";         A textual example of the semantic relation is \"place vineyards\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, cheese, wine, meat, vegetables, fruit, pasta, rice, nuts, chocolate"}
{"cat":"food","slot":"place","value":"cellar","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can be found or used in\";         A textual example of the semantic relation is \"place cellars\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        carrots, potatoes, onions, garlic, apples, pears, grapes, wine, honey, cheese"}
{"cat":"food","slot":"place","value":"bakery","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can be found or used in\";         A textual example of the semantic relation is \"place bakeries\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, cake, pastry, cookies, donuts, pies, muffins, croissants, cupcakes, tarts"}
{"cat":"food","slot":"place","value":"glass","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can be found or used in\";         A textual example of the semantic relation is \"place glasses\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, banana, bread, cheese, chicken, egg, milk, potato, rice, steak"}
{"cat":"food","slot":"place","value":"shop","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can be found or used in\";         A textual example of the semantic relation is \"place shops\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, cheese, meat, vegetables, fruits, pastries, spices, oils, condiments, beverages"}
{"cat":"food","slot":"place","value":"store","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can be found or used in\";         A textual example of the semantic relation is \"place stores\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, cheese, meat, vegetables, fruits, nuts, grains, spices, condiments, sweets"}
{"cat":"food","slot":"user","value":"greengrocer","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are used by\";         A textual example of the semantic relation is \"user greengrocers\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, banana, bread, cheese, chicken, egg, milk, orange, pizza, steak"}
{"cat":"food","slot":"user","value":"fruiterer","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are used by\";         A textual example of the semantic relation is \"user fruiterers\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, banana, cheese, chocolate, coffee, hamburger, pizza, salad, sushi, taco"}
{"cat":"food","slot":"part","value":"root","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part root\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        potato, carrot, beetroot, turnip, radish, parsnip, sweet potato, cassava, yam, ginger"}
{"cat":"food","slot":"product","value":"cider","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can produce\";         A textual example of the semantic relation is \"product cider\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":" apple, pear, grape, barley, wheat, corn, potato, tomato, onion, garlic"}
{"cat":"food","slot":"material","value":"flour","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can be made of\";         A textual example of the semantic relation is \"material flour\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, pasta, cake, cookies, pizza, dough, pie crust, tortillas, noodles, baked goods"}
{"cat":"food","slot":"material","value":"fruit","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can be made of\";         A textual example of the semantic relation is \"material fruit\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, banana, chocolate, cheese, bread, meat, fish, pasta, rice, vegetables"}
{"cat":"food","slot":"place","value":"orchard","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can be found or used in\";         A textual example of the semantic relation is \"place orchards\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, orange, cherry, pear, grape, peach, apricot, plum, nectarine, fig"}
{"cat":"food","slot":"accessory","value":"burger","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are related with\";         A textual example of the semantic relation is \"accessory burger\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        burger, pizza, pasta, sushi, tacos, fries, salad, sandwich, steak, ice cream"}
{"cat":"food","slot":"accessory","value":"corn","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are related with\";         A textual example of the semantic relation is \"accessory corn\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        tomato, pizza, cheese, bread, apple, cake, chocolate, ice cream, pasta, hamburger"}
{"cat":"food","slot":"product","value":"sandwich","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can produce\";         A textual example of the semantic relation is \"product sandwich\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, cheese, ham, lettuce, tomato, mayonnaise, mustard, pickles, onion"}
{"cat":"food","slot":"consistency","value":"dry","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"consistency dry\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, banana, bread, cake, cheese, chicken, egg, fish, milk, pizza"}
{"cat":"food","slot":"product","value":"salad","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can produce\";         A textual example of the semantic relation is \"product salad\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        tomato, lettuce, cucumber, onion, carrot, cheese, egg, meat, bread, pasta"}
{"cat":"food","slot":"product","value":"flour","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can produce\";         A textual example of the semantic relation is \"product flour\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        wheat, corn, rice, soybeans, potatoes, tomatoes, onions, garlic, apples, grapes"}
{"cat":"food","slot":"product","value":"soup","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can produce\";         A textual example of the semantic relation is \"product soup\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        tomato, onion, garlic, carrot, celery, broth, chicken, beef, vegetables, noodles"}
{"cat":"food","slot":"product","value":"vinegar","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can produce\";         A textual example of the semantic relation is \"product vinegar\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, grape, rice, wheat, potato, corn, soybean, sugarcane, milk, meat"}
{"cat":"food","slot":"accessory","value":"soup","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are related with\";         A textual example of the semantic relation is \"accessory soup\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, pizza, chocolate, pasta, hamburger, sushi, cake, ice cream, bread, salad"}
{"cat":"food","slot":"accessory","value":"vinegar","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are related with\";         A textual example of the semantic relation is \"accessory vinegar\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, cheese, chocolate, fruit, meat, milk, pasta, rice, vegetables, wine"}
{"cat":"food","slot":"accessory","value":"dish","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are related with\";         A textual example of the semantic relation is \"accessory dish\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pizza, burger, sushi, taco, pasta, salad, sandwich, soup, steak, ice cream"}
{"cat":"food","slot":"accessory","value":"rice","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are related with\";         A textual example of the semantic relation is \"accessory rice\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        rice, bread, pasta, potatoes, noodles, vegetables, fruits, meat, fish, cheese"}
{"cat":"food","slot":"accessory","value":"bread","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are related with\";         A textual example of the semantic relation is \"accessory bread\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, pizza, pasta, cheese, chocolate, ice cream, hamburger, steak, sushi, salad"}
{"cat":"food","slot":"accessory","value":"pasta","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are related with\";         A textual example of the semantic relation is \"accessory pasta\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pizza, spaghetti, lasagna, burger, fries, taco, sushi, salad, sandwich, ice cream"}
{"cat":"food","slot":"accessory","value":"maize","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are related with\";         A textual example of the semantic relation is \"accessory maize\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, banana, bread, cheese, chicken, fish, pizza, rice, salad, steak"}
{"cat":"food","slot":"accessory","value":"grape","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are related with\";         A textual example of the semantic relation is \"accessory grape\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, pizza, chocolate, hamburger, sushi, pasta, ice cream, salad, bread, cheese"}
{"cat":"food","slot":"howToUse","value":"cut","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can be used for\";         A textual example of the semantic relation is \"howToUse cut\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, banana, bread, cheese, chicken, egg, fish, milk, potato, tomato"}
{"cat":"food","slot":"howToUse","value":"cook","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can be used for\";         A textual example of the semantic relation is \"howToUse cook\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        tomato, onion, garlic, pepper, salt, oil, flour, sugar, milk, eggs"}
{"cat":"food","slot":"howToUse","value":"stew","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can be used for\";         A textual example of the semantic relation is \"howToUse stew\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        stew, soup, salad, sandwich, pasta, pizza, burger, taco, sushi, curry"}
{"cat":"food","slot":"howToUse","value":"boil","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can be used for\";         A textual example of the semantic relation is \"howToUse boil\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        potato, carrot, egg, pasta, rice, chicken, beef, fish, broccoli, spinach"}
{"cat":"food","slot":"howToUse","value":"harvest","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can be used for\";         A textual example of the semantic relation is \"howToUse harvest\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, banana, carrot, chicken, egg, fish, potato, rice, tomato, wheat"}
{"cat":"food","slot":"howToUse","value":"dry","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can be used for\";         A textual example of the semantic relation is \"howToUse dry\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, butter, milk, cheese, eggs, flour, sugar, salt, yeast, water"}
{"cat":"food","slot":"howToUse","value":"pick","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can be used for\";         A textual example of the semantic relation is \"howToUse pick\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, cheese, tomato, lettuce, mayonnaise, ham, turkey, bacon, avocado, onion"}
{"cat":"food","slot":"howToUse","value":"bake","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can be used for\";         A textual example of the semantic relation is \"howToUse bake\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, cake, pizza, cookies, pie, pastries, muffins, rolls, biscuits, crackers"}
{"cat":"food","slot":"howToUse","value":"eat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can be used for\";         A textual example of the semantic relation is \"howToUse eat\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, banana, bread, cheese, chicken, eggs, fish, milk, potato, tomato"}
{"cat":"food","slot":"howToUse","value":"wash","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can be used for\";         A textual example of the semantic relation is \"howToUse wash\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, banana, carrot, cucumber, eggplant, garlic, onion, potato, tomato"}
{"cat":"food","slot":"howToUse","value":"slice","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can be used for\";         A textual example of the semantic relation is \"howToUse slice\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread,cheese,ham,lettuce,tomato,mayonnaise,mustard,pickles,onion,olive"}
{"cat":"food","slot":"howToUse","value":"press","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can be used for\";         A textual example of the semantic relation is \"howToUse press\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        food, ingredient, cooking, recipe, meal, dish, cuisine, flavor, taste, nutrition"}
{"cat":"food","slot":"howToUse","value":"roast","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can be used for\";         A textual example of the semantic relation is \"howToUse roast\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        roast, bake, grill, saut\u00e9, fry, boil, steam, simmer, braise, poach"}
{"cat":"food","slot":"howToUse","value":"grow","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can be used for\";         A textual example of the semantic relation is \"howToUse grow\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        tomato, lettuce, cucumber, onion, garlic, pepper, potato, carrot, eggplant, zucchini"}
{"cat":"food","slot":"howToUse","value":"spiced","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can be used for\";         A textual example of the semantic relation is \"howToUse spiced\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        cumin, paprika, chili powder, turmeric, ginger, garlic, onion, coriander, cinnamon, cloves"}
{"cat":"food","slot":"howToUse","value":"peel","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can be used for\";         A textual example of the semantic relation is \"howToUse peel\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, banana, orange, pineapple, watermelon, mango, grapefruit, kiwi, lemon, lime"}
{"cat":"food","slot":"howToUse","value":"steam","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can be used for\";         A textual example of the semantic relation is \"howToUse steam\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        potatoes, carrots, broccoli, cauliflower, asparagus, green beans, artichokes, spinach, kale, collard greens"}
{"cat":"food","slot":"howToUse","value":"fry","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can be used for\";         A textual example of the semantic relation is \"howToUse fry\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        potato, egg, bacon, onion, tomato, cheese, sausage, chicken, beef, fish"}
{"cat":"food","slot":"howToUse","value":"braise","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can be used for\";         A textual example of the semantic relation is \"howToUse braise\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        braise, grill, roast, saut\u00e9, simmer, steam, stir-fry, bake, boil, poach"}
{"cat":"food","slot":"howToUse","value":"knead","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can be used for\";         A textual example of the semantic relation is \"howToUse knead\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, dough, flour, water, salt, yeast, sugar, oil, butter, milk"}
{"cat":"food","slot":"howToUse","value":"caramelize","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can be used for\";         A textual example of the semantic relation is \"howToUse caramelize\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        caramelize, saut\u00e9, bake, roast, grill, marinate, simmer, blend, whisk, chop"}
{"cat":"food","slot":"howToUse","value":"grind","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can be used for\";         A textual example of the semantic relation is \"howToUse grind\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        beef, chicken, potatoes, tomatoes, onions, rice, pasta, bread, cheese"}
{"cat":"food","slot":"howToUse","value":"chop","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can be used for\";         A textual example of the semantic relation is \"howToUse chop\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        tomato, onion, garlic, carrot, potato, pepper, mushroom, eggplant, zucchini, broccoli"}
{"cat":"food","slot":"howToUse","value":"glaze","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can be used for\";         A textual example of the semantic relation is \"howToUse glaze\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        glaze, honey, sugar, lemon, butter, salt, pepper, chocolate, vanilla, cream"}
{"cat":"food","slot":"howToUse","value":"sprout","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can be used for\";         A textual example of the semantic relation is \"howToUse sprout\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        sprout, soybean, lentil, chickpea, mung bean, alfalfa, broccoli, radish, clover, watercress"}
{"cat":"food","slot":"howToUse","value":"dip","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can be used for\";         A textual example of the semantic relation is \"howToUse dip\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dip, hummus, guacamole, salsa, yogurt, tzatziki, ranch, blue cheese, aioli, gravy"}
{"cat":"food","slot":"howToUse","value":"cream","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can be used for\";         A textual example of the semantic relation is \"howToUse cream\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        cream, milk, cheese, butter, yogurt, ice cream, whipped cream, sour cream, heavy cream, half-and-half"}
{"cat":"food","slot":"howToUse","value":"break","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can be used for\";         A textual example of the semantic relation is \"howToUse break\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, cheese, ham, lettuce, tomato, mayonnaise, mustard, ketchup, pickles, onions"}
{"cat":"food","slot":"howToUse","value":"melt","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can be used for\";         A textual example of the semantic relation is \"howToUse melt\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        butter, chocolate, cheese, honey, sugar, oil, salt, peanut butter, jam, syrup"}
{"cat":"food","slot":"howToUse","value":"cultivate","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can be used for\";         A textual example of the semantic relation is \"howToUse cultivate\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, orange, potato, carrot, tomato, onion, garlic, rice, wheat, corn"}
{"cat":"food","slot":"howToUse","value":"pickle","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can be used for\";         A textual example of the semantic relation is \"howToUse pickle\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pickle, jam, honey, mustard, ketchup, mayonnaise, olive oil, vinegar, soy sauce, hot sauce"}
{"cat":"food","slot":"howToUse","value":"toast","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can be used for\";         A textual example of the semantic relation is \"howToUse toast\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, butter, jam, cheese, eggs, bacon, sausage, milk, cereal, fruit"}
{"cat":"food","slot":"howToUse","value":"dice","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can be used for\";         A textual example of the semantic relation is \"howToUse dice\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        potato, onion, garlic, tomato, carrot, celery, pepper, mushroom, egg, cheese"}
{"cat":"food","slot":"howToUse","value":"taste","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can be used for\";         A textual example of the semantic relation is \"howToUse taste\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, banana, chocolate, honey, lemon, milk, peanut, sugar, vanilla, yogurt"}
{"cat":"food","slot":"howToUse","value":"wilt","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can be used for\";         A textual example of the semantic relation is \"howToUse wilt\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        spinach, lettuce, kale, collard greens, chard, arugula, cabbage, broccoli, cauliflower, bok choy"}
{"cat":"food","slot":"howToUse","value":"grate","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can be used for\";         A textual example of the semantic relation is \"howToUse grate\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        cheese, chocolate, nutmeg, ginger, garlic, lemon, orange, coconut, carrot, cinnamon"}
{"cat":"food","slot":"howToUse","value":"leaven","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can be used for\";         A textual example of the semantic relation is \"howToUse leaven\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        yeast, baking powder, baking soda, eggs, buttermilk, sourdough starter, potato starch, cornstarch, beer, yogurt"}
{"cat":"food","slot":"howToUse","value":"crumble","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can be used for\";         A textual example of the semantic relation is \"howToUse crumble\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        butter, sugar, flour, eggs, milk, vanilla extract, baking powder, salt, chocolate chips"}
{"cat":"food","slot":"howToUse","value":"soak","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can be used for\";         A textual example of the semantic relation is \"howToUse soak\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        rice, beans, pasta, oats, lentils, chickpeas, quinoa, barley, farro, bulgur"}
{"cat":"food","slot":"howToUse","value":"yield","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can be used for\";         A textual example of the semantic relation is \"howToUse yield\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        tomato, lettuce, cheese, bread, ham, bacon, egg, milk, butter, chocolate"}
{"cat":"food","slot":"part","value":"shuck","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part shuck\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        corn, oyster, pea, shrimp, crab, lobster, pork, beef, chicken, turkey"}
{"cat":"food","slot":"part","value":"wheat berry","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part wheat berry\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        wheat berry, grain, flour, bread, pasta, cereal, crackers, cookies, cake, pizza"}
{"cat":"food","slot":"product","value":"loaf","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can produce\";         A textual example of the semantic relation is \"product loaf\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, cake, cookie, cracker, doughnut, muffin, pie, pizza, pretzel, roll"}
{"cat":"food","slot":"place","value":"greengrocer","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can be found or used in\";         A textual example of the semantic relation is \"place greengrocers\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        lettuce, tomato, onion, carrot, potato, apple, banana, orange, strawberry, grapes"}
{"cat":"food","slot":"place","value":"fruiterer","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can be found or used in\";         A textual example of the semantic relation is \"place fruiterers\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, banana, orange, pear, strawberry, cherry, plum, peach, grape, mango"}
{"cat":"food","slot":"place","value":"bottle","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can be found or used in\";         A textual example of the semantic relation is \"place bottles\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, cheese, meat, vegetables, fruit, pasta, rice, nuts, chocolate, cake"}
{"cat":"food","slot":"generalization","value":"nutrient","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization nutrient\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, bread, cheese, chicken, egg, fish, milk, pasta, pizza, steak"}
{"cat":"food","slot":"generalization","value":"drink","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization drink\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, banana, bread, cheese, chicken, egg, fish, hamburger, pizza, steak"}
{"cat":"food","slot":"generalization","value":"food","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization food\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, pizza, chocolate, steak, sushi, pasta, cheese, bread, salad, ice cream"}
{"cat":"food","slot":"generalization","value":"vegetable","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization vegetable\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, banana, chocolate, cheese, bread, pizza, pasta, hamburger, sushi, ice cream"}
{"cat":"food","slot":"generalization","value":"food product","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization food product\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, bread, cheese, chicken, egg, fish, milk, pizza, salad, steak"}
{"cat":"food","slot":"generalization","value":"foodstuff","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization foodstuff\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, cheese, meat, vegetables, fruit, pasta, rice, nuts, chocolate, cereal"}
{"cat":"food","slot":"generalization","value":"green groceries","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization green groceries\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, cheese, meat, vegetables, fruits, milk, eggs, pasta, rice, chocolate"}
{"cat":"food","slot":"generalization","value":"staple food","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization staple food\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, rice, pasta, meat, vegetables, fruit, cheese, eggs, milk, chocolate"}
{"cat":"food","slot":"generalization","value":"garden truck","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization garden truck\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, pizza, chicken, bread, pasta, cheese, steak, salad, sushi, hamburger"}
{"cat":"food","slot":"generalization","value":"substance","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization substance\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, bread, cheese, chicken, cucumber, egg, milk, pizza, rice, tomato"}
{"cat":"food","slot":"generalization","value":"green goods","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization green goods\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        food, fruit, vegetable, meat, dairy, grain, seafood, spice, herb, condiment"}
{"cat":"food","slot":"generalization","value":"produce","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization produce\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, pizza, chocolate, bread, cheese, pasta, steak, salad, ice cream, sushi"}
{"cat":"food","slot":"generalization","value":"reproductive structure","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization reproductive structure\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, banana, bread, cheese, chicken, fish, pizza, rice, salad, steak"}
{"cat":"food","slot":"generalization","value":"vascular plant","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization vascular plant\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pizza, burger, sushi, pasta, tacos, salad, sandwich, ice cream, chocolate, cake"}
{"cat":"food","slot":"generalization","value":"tuber","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization tuber\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, banana, pizza, chicken, bread, cheese, pasta, rice, salad, cake"}
{"cat":"food","slot":"generalization","value":"liquid","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization liquid\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, cheese, chocolate, honey, milk, oil, salt, sugar, vinegar, wine"}
{"cat":"food","slot":"generalization","value":"tracheophyte","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization tracheophyte\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, banana, bread, cake, cheese, chicken, egg, hamburger, pizza, salad"}
{"cat":"food","slot":"generalization","value":"herbaceous plant","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization herbaceous plant\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, banana, bread, cheese, chicken, egg, fish, milk, pizza, steak"}
{"cat":"food","slot":"generalization","value":"herb","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization herb\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, cheese, chocolate, egg, fish, meat, pasta, pizza, rice, vegetables"}
{"cat":"food","slot":"generalization","value":"fluid","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization fluid\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, cheese, chicken, pasta, rice, salad, soup, steak, vegetables, yogurt"}
{"cat":"food","slot":"generalization","value":"starches","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization starches\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pizza, burger, pasta, salad, sushi, tacos, sandwich, soup, steak, curry"}
{"cat":"food","slot":"generalization","value":"grain","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization grain\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, rice, pasta, cereal, oatmeal, quinoa, barley, wheat, corn, rye"}
{"cat":"food","slot":"generalization","value":"plant life","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization plant life\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, banana, bread, cheese, chicken, egg, fish, milk, rice, tomato"}
{"cat":"food","slot":"generalization","value":"alimentation","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization alimentation\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, pizza, chicken, cheese, bread, rice, pasta, salad, hamburger, sushi"}
{"cat":"food","slot":"generalization","value":"plant","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization plant\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, banana, bread, cheese, chicken, egg, fish, milk, pizza, steak"}
{"cat":"food","slot":"generalization","value":"street drug","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization street drug\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pizza, hamburger, sushi, pasta, tacos, burrito, sandwich, salad, steak, ice cream"}
{"cat":"food","slot":"generalization","value":"sustenance","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization sustenance\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pizza, pasta, burger, sushi, tacos, sandwich, salad, soup, steak, curry"}
{"cat":"food","slot":"generalization","value":"plant part","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization plant part\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, cheese, pizza, pasta, chocolate, cake, ice cream, hamburger, sushi, tacos"}
{"cat":"food","slot":"generalization","value":"aliment","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization aliment\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, cheese, meat, vegetables, fruit, pasta, rice, chocolate, nuts, honey"}
{"cat":"food","slot":"generalization","value":"nutrition","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization nutrition\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, bread, cheese, chicken, cucumber, egg, milk, potato, rice, tomato"}
{"cat":"food","slot":"generalization","value":"solid","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization solid\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, pizza, cheese, chicken, pasta, rice, salad, soup, steak, vegetables"}
{"cat":"food","slot":"generalization","value":"drug of abuse","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization drug of abuse\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pizza, burger, sushi, pasta, salad, sandwich, tacos, curry, steak, ice cream"}
{"cat":"food","slot":"generalization","value":"nourishment","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization nourishment\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, cheese, chicken, eggs, fish, fruits, meat, pasta, vegetables"}
{"cat":"food","slot":"generalization","value":"nutriment","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization nutriment\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, bread, cheese, chicken, cookie, egg, hamburger, ice cream, pizza, steak"}
{"cat":"food","slot":"generalization","value":"food grain","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization food grain\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, banana, bread, cheese, chicken, egg, fish, milk, pizza, steak"}
{"cat":"food","slot":"generalization","value":"flora","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization flora\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, cheese, meat, vegetables, fruit, pasta, rice, chocolate, ice cream, cake"}
{"cat":"food","slot":"generalization","value":"matter","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization matter\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, pizza, chocolate, ice cream, bread, hamburger, pasta, cake, cheese, salad"}
{"cat":"food","slot":"generalization","value":"plant structure","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization plant structure\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, banana, bread, cheese, chicken, cucumber, egg, milk, pizza, salad"}
{"cat":"food","slot":"generalization","value":"plant organ","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization plant organ\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, banana, bread, cheese, chicken, egg, fish, milk, pizza, steak"}
{"cat":"food","slot":"generalization","value":"victuals","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization victuals\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pizza, burger, pasta, sushi, tacos, salad, sandwich, steak, curry, ice cream"}
{"cat":"food","slot":"generalization","value":"dairy product","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization dairy product\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pizza, pasta, steak, salad, burger, fries, sushi, tacos, ice cream, chocolate"}
{"cat":"food","slot":"generalization","value":"drug","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization drug\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, cheese, chicken, pasta, pizza, salad, steak, sushi, tacos, vegetables"}
{"cat":"food","slot":"generalization","value":"citrus","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization citrus\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, banana, bread, cheese, chicken, egg, fish, milk, pizza, steak"}
{"cat":"food","slot":"generalization","value":"vine","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization vine\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, pizza, chocolate, bread, salad, pasta, cheese, soup, sushi, hamburger"}
{"cat":"food","slot":"generalization","value":"legume","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization legume\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, bread, cheese, chicken, fish, hamburger, pizza, salad, steak, sushi"}
{"cat":"food","slot":"generalization","value":"snack food","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization snack food\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, pizza, chocolate, bread, cheese, ice cream, hamburger, pasta, salad, sushi"}
{"cat":"food","slot":"generalization","value":"brew","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization brew\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, pizza, pasta, rice, chicken, beef, potato, salad, cheese, cake"}
{"cat":"food","slot":"generalization","value":"crucifer","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization crucifer\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, banana, chicken, pizza, pasta, sushi, steak, salad, tacos, ice cream"}
{"cat":"food","slot":"generalization","value":"citrous fruit","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization citrous fruit\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, banana, orange, pineapple, strawberry, tomato, potato, carrot, onion, garlic"}
{"cat":"food","slot":"generalization","value":"liliaceous plant","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization liliaceous plant\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, pizza, chocolate, bread, pasta, steak, salad, sushi, ice cream, burger"}
{"cat":"food","slot":"generalization","value":"cruciferous plant","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization cruciferous plant\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, pizza, pasta, rice, potatoes, vegetables, meat, cheese, fish, fruits"}
{"cat":"food","slot":"generalization","value":"gourd vine","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization gourd vine\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, banana, bread, cheese, chicken, egg, fish, milk, rice, tomato"}
{"cat":"food","slot":"generalization","value":"gourd","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization gourd\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, orange, banana, grape, strawberry, watermelon, pineapple, kiwi, mango, papaya"}
{"cat":"food","slot":"generalization","value":"gramineous plant","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization gramineous plant\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, banana, bread, cheese, chicken, egg, fish, milk, pizza, steak"}
{"cat":"food","slot":"generalization","value":"melon","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization melon\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, banana, bread, cheese, chicken, egg, fish, milk, pizza, rice"}
{"cat":"food","slot":"generalization","value":"grass","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization grass\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, bread, cheese, chicken, hamburger, ice cream, pizza, salad, steak, sushi"}
{"cat":"food","slot":"generalization","value":"root vegetable","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization root vegetable\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, pizza, chicken, salad, pasta, steak, sushi, tacos, ice cream, cheese"}
{"cat":"food","slot":"generalization","value":"graminaceous plant","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization graminaceous plant\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, cheese, chocolate, fruit, meat, pasta, pizza, rice, salad, vegetables"}
{"cat":"food","slot":"generalization","value":"baked goods","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization baked goods\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, cake, cookie, pie, pastry, doughnut, muffin, scone, croissant, bagel"}
{"cat":"food","slot":"generalization","value":"citrus fruit","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization citrus fruit\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, banana, bread, cheese, chicken, coffee, egg, fish, milk, pizza"}
{"cat":"food","slot":"generalization","value":"solanaceous vegetable","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization solanaceous vegetable\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        tomato, potato, eggplant, bell pepper, chili pepper, paprika, okra, cape gooseberry, ground cherry, tomatillo"}
{"cat":"food","slot":"generalization","value":"melon vine","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization melon vine\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, banana, bread, cheese, chicken, egg, fish, milk, pizza, steak"}
{"cat":"food","slot":"generalization","value":"bulbous plant","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization bulbous plant\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"1. apple, 2. banana, 3. pizza, 4. pasta, 5. hamburger, 6. sushi, 7. taco, 8. ice cream, 9. cake, 10. chocolate"}
{"cat":"food","slot":"generalization","value":"brewage","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization brewage\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, cheese, meat, vegetables, fruits, pasta, rice, nuts, chocolate, eggs"}
{"cat":"food","slot":"generalization","value":"alliaceous plant","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization alliaceous plant\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, banana, bread, cheese, chicken, egg, fish, milk, pizza, steak"}
{"cat":"food","slot":"consistency","value":"sweet","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"consistency sweet\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        cake, pie, ice cream, candy, chocolate, cookies, pastries, fruit, honey, syrup"}
{"cat":"food","slot":"accessory","value":"milk","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are related with\";         A textual example of the semantic relation is \"accessory milk\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, cheese, chicken, eggs, fish, fruits, meat, pasta, pizza, vegetables"}
{"cat":"food","slot":"accessory","value":"sandwich","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are related with\";         A textual example of the semantic relation is \"accessory sandwich\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        sandwich, pizza, burger, sushi, taco, pasta, salad, soup, steak, curry"}
{"cat":"food","slot":"generalization","value":"fruit","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization fruit\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, banana, orange, strawberry, watermelon, pineapple, grapes, mango, papaya, kiwi"}
{"cat":"food","slot":"generalization","value":"pome","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization pome\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, banana, orange, grape, pear, strawberry, cherry, plum, apricot, peach"}
{"cat":"food","slot":"smell","value":"sweet","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can smell\";         A textual example of the semantic relation is \"smell sweet\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, cake, chocolate, coffee, cookies, donuts, honey, pie, strawberries, vanilla"}
{"cat":"food","slot":"generalization","value":"edible fruit","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization edible fruit\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, banana, orange, pineapple, strawberry, watermelon, grape, cherry, mango, kiwi"}
{"cat":"food","slot":"part","value":"peel","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part peel\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, banana, orange, grape, strawberry, peach, pineapple, lemon, lime, kiwi"}
{"cat":"food","slot":"part","value":"pastry","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part pastry\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pastry, cake, pie, bread, pizza, cookie, muffin, croissant, doughnut, cupcake"}
{"cat":"food","slot":"part","value":"bread","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part bread\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, cheese, butter, jam, eggs, bacon, sausage, tomato, mushroom, spinach"}
{"cat":"food","slot":"part","value":"pasta","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part pasta\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":" pasta, sauce, cheese, meat, vegetables, herbs, spices, oil, bread, wine"}
{"cat":"food","slot":"product","value":"pasta","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can produce\";         A textual example of the semantic relation is \"product pasta\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pasta, bread, cheese, yogurt, butter, jam, honey, wine, beer, whiskey"}
{"cat":"food","slot":"product","value":"crop","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can produce\";         A textual example of the semantic relation is \"product crop\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        wheat, corn, rice, potato, tomato, apple, banana, orange, grape, pineapple"}
{"cat":"food","slot":"product","value":"bread","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can produce\";         A textual example of the semantic relation is \"product bread\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, cake, pasta, pizza, cookies, muffins, bagels, croissants, doughnuts, pretzels"}
{"cat":"food","slot":"accessory","value":"cereal","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are related with\";         A textual example of the semantic relation is \"accessory cereal\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, cheese, chocolate, fruit, honey, meat, milk, pasta, rice, vegetables"}
{"cat":"food","slot":"place","value":"grape","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can be found or used in\";         A textual example of the semantic relation is \"place grapes\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        grapes, tomatoes, onions, garlic, chicken, beef, fish, potatoes, carrots, lettuce"}
{"cat":"food","slot":"generalization","value":"intoxicant","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization intoxicant\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pizza, pasta, burger, sushi, tacos, curry, pancakes, salad, sandwich, steak"}
{"cat":"food","slot":"generalization","value":"crop","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization crop\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        Apple, banana, bread, cheese, chicken, egg, fish, milk, rice, tomato"}
{"cat":"food","slot":"generalization","value":"maize","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization maize\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, pasta, rice, cheese, meat, vegetables, fruit, chocolate, nuts, fish"}
{"cat":"food","slot":"generalization","value":"alcohol","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization alcohol\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, pizza, cheese, bread, chocolate, steak, salad, sushi, pasta, ice cream"}
{"cat":"food","slot":"generalization","value":"alcoholic beverage","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization alcoholic beverage\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"10 words that belong to the category \"food\": apple, bread, cheese, chicken, cucumber, egg, fish, lettuce, milk, potato"}
{"cat":"food","slot":"generalization","value":"inebriant","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization inebriant\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, bread, cheese, chocolate, hamburger, ice cream, pizza, salad, steak, sushi"}
{"cat":"food","slot":"generalization","value":"alcoholic drink","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization alcoholic drink\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, pizza, chocolate, sushi, steak, pasta, salad, burger, ice cream, taco"}
{"cat":"food","slot":"generalization","value":"dish","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization dish\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, pasta, rice, chicken, beef, pork, fish, vegetables, fruits, cheese"}
{"cat":"food","slot":"accessory","value":"salad","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are related with\";         A textual example of the semantic relation is \"accessory salad\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, pizza, chocolate, burger, sushi, pasta, salad, steak, ice cream, cake"}
{"cat":"food","slot":"specialization","value":"millet","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization millet\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, cake, cheese, chicken, egg, fish, hamburger, pizza, salad, steak"}
{"cat":"food","slot":"specialization","value":"edible corn","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization edible corn\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pizza, burger, pasta, sushi, tacos, salad, steak, chicken, ice cream, chocolate"}
{"cat":"food","slot":"specialization","value":"buckwheat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization buckwheat\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, banana, bread, cheese, chicken, egg, milk, pizza, rice, steak"}
{"cat":"food","slot":"specialization","value":"Indian rice","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization Indian rice\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        rice, curry, naan, samosas, chutney, raita, tandoori, biryani, dosa, idli"}
{"cat":"food","slot":"specialization","value":"malt","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization malt\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, cheese, pizza, pasta, chocolate, coffee, tea, wine, beer, ice cream"}
{"cat":"food","slot":"specialization","value":"grist","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization grist\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, cheese, meat, vegetables, fruit, pasta, rice, chocolate, cake, pizza"}
{"cat":"food","slot":"specialization","value":"breadstick","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization breadstick\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        breadstick, pizza, pasta, lasagna, ravioli, cannoli, tiramisu, gelato, espresso, cappuccino"}
{"cat":"food","slot":"specialization","value":"barleycorn","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization barleycorn\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, banana, bread, cheese, chicken, egg, fish, milk, pizza, steak"}
{"cat":"food","slot":"specialization","value":"wild rice","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization wild rice\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, banana, bread, cheese, chicken, coffee, egg, milk, pizza, steak"}
{"cat":"food","slot":"specialization","value":"corn","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization corn\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"10 words that belong to the category \"food\": apple, bread, cheese, chicken, egg, fish, milk, potato, rice, tomato"}
{"cat":"food","slot":"specialization","value":"groats","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization groats\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, cheese, meat, vegetables, fruit, pasta, rice, fish, eggs, chocolate"}
{"cat":"food","slot":"specialization","value":"ciabatta","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization ciabatta\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pizza, pasta, bread, cheese, salad, meat, fish, vegetables, fruit, dessert"}
{"cat":"food","slot":"specialization","value":"baguette","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization baguette\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, cheese, pizza, pasta, chocolate, ice cream, steak, salad, sushi, tacos"}
{"cat":"food","slot":"specialization","value":"oat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization oat\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, bread, cake, cheese, chicken, ice cream, pizza, rice, salad, steak"}
{"cat":"food","slot":"specialization","value":"barley","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization barley\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, pasta, cereal, beer, whiskey, animal feed, malt, barley tea, barley water, barley flour"}
{"cat":"food","slot":"specialization","value":"wheat berry","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization wheat berry\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, pasta, cereal, crackers, cookies, cakes, pies, muffins, pancakes, waffles"}
{"cat":"food","slot":"specialization","value":"salt-rising bread","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization salt-rising bread\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, pizza, pasta, rice, noodles, potatoes, vegetables, fruits, meat, fish"}
{"cat":"food","slot":"specialization","value":"draft beer","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization draft beer\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pizza, hamburger, sushi, pasta, curry, tacos, steak, salad, soup, sandwich"}
{"cat":"food","slot":"specialization","value":"Limburger","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization Limburger\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        cheese, bread, meat, vegetables, fruit, pasta, rice, chocolate, cake"}
{"cat":"food","slot":"specialization","value":"plonk","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization plonk\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, cheese, meat, vegetables, fruit, nuts, pasta, rice, chocolate, cake"}
{"cat":"food","slot":"specialization","value":"wish-wash","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization wish-wash\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pizza, hamburger, sushi, taco, pasta, salad, steak, curry, ice cream, cake"}
{"cat":"food","slot":"specialization","value":"cyder","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization cyder\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, pear, cheese, bread, chocolate, pasta, rice, meat, fish, vegetable"}
{"cat":"food","slot":"specialization","value":"matzah","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization matzah\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, cheese, pizza, pasta, salad, chicken, beef, fish, vegetables, fruit"}
{"cat":"food","slot":"specialization","value":"brick cheese","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization brick cheese\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pizza, burger, sushi, tacos, pasta, salad, sandwich, steak, curry, ice cream"}
{"cat":"food","slot":"specialization","value":"loaf of bread","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization loaf of bread\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, cheese, meat, vegetables, fruit, pasta, rice, chocolate, cake, ice cream"}
{"cat":"food","slot":"specialization","value":"sacramental wine","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization sacramental wine\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pizza, hamburger, sushi, pasta, tacos, burrito, salad, sandwich, ice cream, cake"}
{"cat":"food","slot":"specialization","value":"Reuben","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization Reuben\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, cheese, meat, lettuce, tomato, pickle, sauce, onion, potato, chocolate"}
{"cat":"food","slot":"specialization","value":"American cheese","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization American cheese\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        cheese, pizza, hamburger, fries, chocolate, ice cream, cake, bread, pasta, salad"}
{"cat":"food","slot":"specialization","value":"hot dog","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization hot dog\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, cheese, meat, vegetables, fruits, pasta, rice, chocolate, nuts, sauces"}
{"cat":"food","slot":"specialization","value":"western sandwich","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization western sandwich\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        burger, pizza, sandwich, salad, sushi, pasta, curry, tacos, soup, steak"}
{"cat":"food","slot":"specialization","value":"Triticum aestivum spelta","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization Triticum aestivum spelta\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, pasta, rice, noodles, cereal, oatmeal, barley, wheat, corn, millet"}
{"cat":"food","slot":"specialization","value":"sourdough bread","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization sourdough bread\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        \"pizza, hamburger, sushi, tacos, pasta, salad, sandwich, soup, steak, curry\""}
{"cat":"food","slot":"specialization","value":"altar wine","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization altar wine\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, cheese, chicken, pasta, pizza, salad, steak, sushi, tacos, vegetables"}
{"cat":"food","slot":"specialization","value":"caraway seed bread","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization caraway seed bread\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, cheese, meat, vegetables, fruit, pasta, rice, chocolate, cake, pizza"}
{"cat":"food","slot":"specialization","value":"goa bean","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization goa bean\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, banana, pizza, burger, chocolate, ice cream, pasta, sushi, steak, salad"}
{"cat":"food","slot":"specialization","value":"nan","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization nan\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, bread, cheese, chicken, coffee, egg, fish, milk, pizza, steak"}
{"cat":"food","slot":"specialization","value":"maconnais","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization maconnais\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pizza, burger, sushi, pasta, tacos, sandwich, salad, soup, steak, curry"}
{"cat":"food","slot":"specialization","value":"schizocarp","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization schizocarp\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, cheese, chocolate, fruit, meat, pasta, pizza, salad, soup, vegetables"}
{"cat":"food","slot":"specialization","value":"pyxis","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization pyxis\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, banana, bread, cheese, chicken, egg, fish, pizza, steak, vegetables"}
{"cat":"food","slot":"specialization","value":"common bean","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization common bean\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, pizza, chocolate, sushi, pasta, ice cream, steak, burrito, salad, cake"}
{"cat":"food","slot":"specialization","value":"rosehip","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization rosehip\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, banana, bread, cheese, chocolate, egg, fish, hamburger, ice cream, pizza"}
{"cat":"food","slot":"specialization","value":"process cheese","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization process cheese\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, cheese, meat, vegetables, fruit, pasta, rice, nuts, chocolate, honey"}
{"cat":"food","slot":"specialization","value":"baked potato","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization baked potato\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, cheese, chocolate, fish, fries, hamburger, ice cream, pizza, steak, sushi"}
{"cat":"food","slot":"specialization","value":"Burgundy wine","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization Burgundy wine\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, cheese, chocolate, coffee, hamburger, ice cream, pasta, pizza, salad, sushi"}
{"cat":"food","slot":"specialization","value":"oenomel","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization oenomel\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, cheese, meat, fruit, vegetables, pasta, rice, chocolate, cake, ice cream"}
{"cat":"food","slot":"specialization","value":"fruit drink","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization fruit drink\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, banana, orange, grapes, strawberry, cherry, watermelon, pineapple, lemon, mango"}
{"cat":"food","slot":"specialization","value":"drupe","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization drupe\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":" apple, banana, cherry, grape, mango, orange, peach, pineapple, plum, strawberry"}
{"cat":"food","slot":"specialization","value":"bitter orange","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization bitter orange\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pizza, hamburger, sushi, tacos, pasta, salad, sandwich, steak, ice cream, chocolate"}
{"cat":"food","slot":"specialization","value":"Triticum dicoccum","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization Triticum dicoccum\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, pasta, cereal, crackers, cookies, cakes, muffins, pizza, bagels, pretzels"}
{"cat":"food","slot":"specialization","value":"mashed potato","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization mashed potato\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pizza, burger, pasta, sushi, tacos, sandwich, salad, steak, ice cream, chocolate"}
{"cat":"food","slot":"specialization","value":"sour bread","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization sour bread\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, cheese, pizza, pasta, salad, soup, steak, sushi, tacos, ice cream"}
{"cat":"food","slot":"specialization","value":"bartlett","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization bartlett\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pizza, pasta, burger, sushi, tacos, sandwich, salad, soup, ice cream, chocolate"}
{"cat":"food","slot":"specialization","value":"cupper","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization cupper\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pizza, hamburger, sushi, pasta, tacos, sandwich, salad, soup, steak, dessert"}
{"cat":"food","slot":"specialization","value":"hominy","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization hominy\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, cheese, meat, vegetables, fruits, pasta, rice, chocolate, ice cream, pizza"}
{"cat":"food","slot":"specialization","value":"hero sandwich","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization hero sandwich\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pizza, burger, pasta, sushi, tacos, salad, steak, ice cream, chocolate, cake"}
{"cat":"food","slot":"specialization","value":"ale","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization ale\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        \"pizza, hamburger, sushi, pasta, tacos, curry, salad, steak, ice cream, chocolate\""}
{"cat":"food","slot":"specialization","value":"sweet corn","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization sweet corn\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, pizza, chocolate, bread, hamburger, ice cream, pasta, sushi, taco, steak"}
{"cat":"food","slot":"specialization","value":"gluten bread","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization gluten bread\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, pasta, cake, cookies, pizza, flour, dough, bakery, pastry, baking"}
{"cat":"food","slot":"specialization","value":"Riesling","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization Riesling\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pizza, burger, sushi, pasta, tacos, salad, sandwich, ice cream, cake, chocolate"}
{"cat":"food","slot":"specialization","value":"hoagie","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization hoagie\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        hoagie, pizza, burger, fries, salad, sandwich, sushi, taco, pasta, steak"}
{"cat":"food","slot":"specialization","value":"rye bread","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization rye bread\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, cheese, chocolate, fruit, meat, pasta, pizza, rice, salad, vegetables"}
{"cat":"food","slot":"specialization","value":"prairie gourd","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization prairie gourd\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pizza, pasta, hamburger, sushi, tacos, burrito, sandwich, salad, soup, steak"}
{"cat":"food","slot":"specialization","value":"soy","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization soy\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, pizza, cheese, chocolate, bread, rice, pasta, salad, steak, sushi"}
{"cat":"food","slot":"specialization","value":"Bordeaux","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization Bordeaux\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, cheese, pasta, chocolate, pizza, sushi, steak, salad, ice cream, fries"}
{"cat":"food","slot":"specialization","value":"marasca","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization marasca\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, pizza, chocolate, bread, steak, pasta, salad, sushi, cheese, ice cream"}
{"cat":"food","slot":"specialization","value":"Armerican cheddar","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization Armerican cheddar\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pizza, burger, tacos, sushi, pasta, steak, salad, sandwich, ice cream, cake"}
{"cat":"food","slot":"specialization","value":"white rice","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization white rice\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        rice, bread, pasta, chicken, beef, fish, vegetables, fruit, cheese, eggs"}
{"cat":"food","slot":"specialization","value":"cafe royale","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization cafe royale\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pizza, burger, sandwich, pasta, salad, soup, sushi, tacos, ice cream, chocolate"}
{"cat":"food","slot":"specialization","value":"matzo","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization matzo\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, cheese, chocolate, coffee, hamburger, ice cream, pizza, salad, sushi, taco"}
{"cat":"food","slot":"specialization","value":"stone fruit","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization stone fruit\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, banana, bread, cake, cheese, chicken, coffee, egg, fish, ice cream"}
{"cat":"food","slot":"specialization","value":"Swiss cheese","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization Swiss cheese\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pizza, burger, pasta, sushi, tacos, ice cream, chocolate, steak, salad, sandwich"}
{"cat":"food","slot":"specialization","value":"hagberry","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization hagberry\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, banana, pizza, burger, steak, salad, sushi, pasta, tacos, ice cream"}
{"cat":"food","slot":"specialization","value":"triple creme","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization triple creme\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        cheese, bread, butter, milk, yogurt, cream, ice cream, chocolate, honey, jam"}
{"cat":"food","slot":"specialization","value":"quandong","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization quandong\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, banana, bread, cheese, chicken, cucumber, egg, fish, ice cream, orange"}
{"cat":"food","slot":"specialization","value":"beefburger","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization beefburger\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, banana, chicken, pizza, rice, sushi, taco, tomato, watermelon, yogurt"}
{"cat":"food","slot":"specialization","value":"coffee","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization coffee\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, banana, bread, cheese, chocolate, egg, hamburger, pasta, pizza, steak"}
{"cat":"food","slot":"specialization","value":"brown bread","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization brown bread\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, pizza, chicken, rice, pasta, salad, cheese, hamburger, sushi, ice cream"}
{"cat":"food","slot":"specialization","value":"hotdog","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization hotdog\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, cheese, meat, tomato, lettuce, onion, pickle, ketchup, mustard, relish"}
{"cat":"food","slot":"specialization","value":"triple-decker","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization triple-decker\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, cheese, meat, salad, pasta, pizza, soup, sushi, tacos, vegetables"}
{"cat":"food","slot":"specialization","value":"anjou","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization anjou\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, pear, cherry, grape, strawberry, banana, orange, lemon, lime, mango"}
{"cat":"food","slot":"specialization","value":"demitasse","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization demitasse\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, banana, bread, cheese, chicken, egg, milk, potato, rice, steak"}
{"cat":"food","slot":"specialization","value":"Fuji","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization Fuji\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, banana, pizza, chicken, sushi, cheese, bread, pasta, ice cream, chocolate"}
{"cat":"food","slot":"specialization","value":"french-fried potatoes","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization french-fried potatoes\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, bread, cheese, chicken, egg, milk, pizza, rice, steak, tomato"}
{"cat":"food","slot":"specialization","value":"tuna fish salad","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization tuna fish salad\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pizza, hamburger, pasta, sushi, tacos, burrito, salad, sandwich, soup, steak"}
{"cat":"food","slot":"specialization","value":"red wine","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization red wine\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, banana, bread, cheese, chicken, coffee, ice cream, pizza, rice, salad"}
{"cat":"food","slot":"specialization","value":"durum","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization durum\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, banana, cheese, chicken, ice cream, pizza, salad, steak, sushi, taco"}
{"cat":"food","slot":"specialization","value":"unleavened bread","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization unleavened bread\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, pizza, pasta, cake, cookies, candy, ice cream, cheese, chocolate, yogurt"}
{"cat":"food","slot":"specialization","value":"Virginia strawberry","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization Virginia strawberry\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        strawberry, apple, pizza, cheese, chocolate, ice cream, hamburger, pasta, salad, sushi"}
{"cat":"food","slot":"specialization","value":"cocoa","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization cocoa\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        chocolate, cake, bread, cheese, pizza, pasta, steak, salad, fruit, vegetables"}
{"cat":"food","slot":"specialization","value":"salad nicoise","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization salad nicoise\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, pizza, sushi, hamburger, chocolate, pasta, salad, steak, ice cream, tacos"}
{"cat":"food","slot":"specialization","value":"temple orange","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization temple orange\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pizza, hamburger, sushi, taco, pasta, curry, salad, steak, burrito, ice cream"}
{"cat":"food","slot":"specialization","value":"green corn","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization green corn\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, banana, bread, cheese, chicken, coffee, ice cream, pizza, salad, steak"}
{"cat":"food","slot":"specialization","value":"pink wine","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization pink wine\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, cheese, meat, vegetables, fruit, pasta, rice, chocolate, cake, pizza"}
{"cat":"food","slot":"specialization","value":"herb tea","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization herb tea\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, cheese, chocolate, coffee, eggs, milk, pasta, rice, sugar, tea"}
{"cat":"food","slot":"specialization","value":"wild cherry","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization wild cherry\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, banana, bread, cheese, chicken, egg, fish, milk, pizza, rice"}
{"cat":"food","slot":"specialization","value":"tomato juice","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization tomato juice\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pizza, burger, fries, salad, pasta, sushi, tacos, sandwich, soup, ice cream"}
{"cat":"food","slot":"specialization","value":"Cheshire cheese","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization Cheshire cheese\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, cheese, chocolate, honey, jam, milk, rice, sugar, tea, wine"}
{"cat":"food","slot":"specialization","value":"Cuban sandwich","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization Cuban sandwich\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pizza, burger, sushi, tacos, pasta, salad, steak, ice cream, chocolate, bread."}
{"cat":"food","slot":"specialization","value":"cuppa","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization cuppa\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, pizza, cake, chocolate, bread, pasta, cheese, salad, steak, ice cream"}
{"cat":"food","slot":"specialization","value":"Triticum dicoccum dicoccoides","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization Triticum dicoccum dicoccoides\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, pasta, cake, cookies, pizza, noodles, crackers, cereal, pretzels, bagels"}
{"cat":"food","slot":"specialization","value":"challah","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization challah\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, cake, pastry, cookie, challah, bagel, babka, brioche, croissant, pretzel"}
{"cat":"food","slot":"specialization","value":"Gouda cheese","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization Gouda cheese\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        Gouda, cheese, bread, butter, milk, yogurt, chocolate, honey, eggs, meat"}
{"cat":"food","slot":"specialization","value":"pot cheese","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization pot cheese\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        cheese, pizza, hamburger, sushi, pasta, steak, salad, tacos, ice cream, chocolate"}
{"cat":"food","slot":"specialization","value":"smoothie","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization smoothie\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pizza, burger, taco, sushi, pasta, salad, steak, curry, ice cream, cake"}
{"cat":"food","slot":"specialization","value":"crab Louis","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization crab Louis\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        crab, lobster, salmon, steak, chicken, pizza, pasta, sushi, tacos, burger"}
{"cat":"food","slot":"specialization","value":"starch wheat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization starch wheat\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, pasta, cake, cookies, pizza, crackers, flour, dough, couscous, bulgur"}
{"cat":"food","slot":"specialization","value":"Triticum aestivum","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization Triticum aestivum\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, pasta, cereal, crackers, cookies, cakes, pancakes, waffles, noodles, pretzels"}
{"cat":"food","slot":"specialization","value":"Gala","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization Gala\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, cheese, chocolate, egg, fish, meat, milk, pasta, rice, vegetable"}
{"cat":"food","slot":"specialization","value":"barmbrack","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization barmbrack\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, cake, fruit, nuts, tea, whiskey, sugar, raisins, flour, yeast"}
{"cat":"food","slot":"specialization","value":"slaw","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization slaw\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, pizza, chocolate, burger, pasta, salad, sushi, steak, ice cream, tacos"}
{"cat":"food","slot":"specialization","value":"Uruguay potato","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization Uruguay potato\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        potato, rice, bread, cheese, chocolate, meat, vegetables, fruit, fish, pasta"}
{"cat":"food","slot":"specialization","value":"Boston brown bread","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization Boston brown bread\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, pizza, chocolate, ice cream, cheese, pasta, hamburger, salad, sushi, cake"}
{"cat":"food","slot":"specialization","value":"cafe au lait","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization cafe au lait\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, cheese, chocolate, honey, milk, olive oil, salt, sugar, tea, wine"}
{"cat":"food","slot":"specialization","value":"whole wheat bread","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization whole wheat bread\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, bread, cheese, chocolate, eggs, fish, milk, pasta, pizza, steak"}
{"cat":"food","slot":"specialization","value":"Tokay","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization Tokay\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, pizza, chocolate, sushi, steak, pasta, salad, burger, tacos, ice cream"}
{"cat":"food","slot":"specialization","value":"molded salad","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization molded salad\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pizza, pasta, burger, salad, sushi, tacos, sandwich, ice cream, cake, chocolate"}
{"cat":"food","slot":"specialization","value":"oil nut","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization oil nut\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, banana, bread, chicken, cheese, egg, fish, milk, rice, tomato"}
{"cat":"food","slot":"specialization","value":"open-face sandwich","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization open-face sandwich\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, pizza, hamburger, chocolate, sushi, steak, pasta, salad, ice cream, cake"}
{"cat":"food","slot":"specialization","value":"fruit crush","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization fruit crush\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, banana, orange, pineapple, strawberry, watermelon, grapes, mango, papaya, kiwi"}
{"cat":"food","slot":"specialization","value":"ice tea","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization ice tea\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, cheese, pizza, pasta, sushi, curry, tacos, burger, salad, chocolate"}
{"cat":"food","slot":"specialization","value":"hot chocolate","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization hot chocolate\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, cheese, chocolate, hamburger, ice cream, pasta, pizza, salad, sushi, taco"}
{"cat":"food","slot":"specialization","value":"cooking apple","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization cooking apple\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, cheese, chocolate, cake, pasta, pizza, steak, salad, soup, sushi"}
{"cat":"food","slot":"specialization","value":"wild wheat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization wild wheat\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, banana, bread, cheese, chicken, egg, fish, milk, pizza, steak"}
{"cat":"food","slot":"specialization","value":"cinnamon bread","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization cinnamon bread\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, cake, cookie, donut, muffin, pastry, pie, roll, scone, strudel"}
{"cat":"food","slot":"specialization","value":"iced coffee","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization iced coffee\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, pizza, chicken, salad, burger, sushi, pasta, steak, tacos, ice cream"}
{"cat":"food","slot":"specialization","value":"jug wine","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization jug wine\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pizza, hamburger, sushi, pasta, taco, burrito, sandwich, salad, soup, dessert"}
{"cat":"food","slot":"specialization","value":"Irish coffee","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization Irish coffee\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, cheese, meat, vegetables, fruits, milk, eggs, chocolate, nuts, cereals"}
{"cat":"food","slot":"specialization","value":"Cotes de Provence","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization Cotes de Provence\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"10 words that belong to the category \"food\"\n        Example: \"pizza, burger, sushi, tacos, pasta, salad, sandwich, steak, curry, cake\""}
{"cat":"food","slot":"specialization","value":"Cabernet Sauvignon","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization Cabernet Sauvignon\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, banana, bread, cheese, chicken, coffee, ice cream, pasta, pizza, steak"}
{"cat":"food","slot":"specialization","value":"decaffeinated coffee","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization decaffeinated coffee\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        \"steak, pizza, sushi, tacos, burger, pasta, salad, soup, sandwich, dessert\""}
{"cat":"food","slot":"specialization","value":"Brie","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization Brie\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, pizza, chocolate, ice cream, cheese, bread, hamburger, pasta, salad, cake"}
{"cat":"food","slot":"specialization","value":"red hot","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization red hot\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, pizza, hamburger, chicken, cake, pasta, ice cream, sushi, taco, chocolate"}
{"cat":"food","slot":"specialization","value":"buffalo nut","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization buffalo nut\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pizza, burger, sushi, pasta, salad, steak, tacos, ice cream, chocolate, cake"}
{"cat":"food","slot":"specialization","value":"cambric tea","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization cambric tea\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pizza, hamburger, sushi, pasta, curry, salad, sandwich, soup, steak, ice cream"}
{"cat":"food","slot":"specialization","value":"seckel","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization seckel\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, banana, pizza, hamburger, sushi, pasta, steak, salad, ice cream, chocolate"}
{"cat":"food","slot":"specialization","value":"multiple fruit","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization multiple fruit\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, banana, orange, pineapple, strawberry, watermelon, grapes, kiwi, mango, papaya"}
{"cat":"food","slot":"specialization","value":"Fragaria virginiana","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization Fragaria virginiana\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, pizza, chicken, rice, pasta, burger, salad, sushi, tacos, ice cream"}
{"cat":"food","slot":"specialization","value":"soft wheat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization soft wheat\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, pasta, cake, cookies, pizza, crackers, flour, baking, dough, buns"}
{"cat":"food","slot":"specialization","value":"gyro","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization gyro\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pizza, burger, sushi, tacos, pasta, salad, sandwich, ice cream, chocolate, steak"}
{"cat":"food","slot":"specialization","value":"herbal","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization herbal\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, banana, bread, cheese, chicken, egg, fish, hamburger, pizza, steak"}
{"cat":"food","slot":"specialization","value":"polished rice","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization polished rice\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, bread, cheese, chicken, cucumber, egg, milk, pasta, pizza, steak"}
{"cat":"food","slot":"specialization","value":"potion","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization potion\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pizza, pasta, hamburger, sushi, tacos, burrito, curry, pho, salad, sandwich"}
{"cat":"food","slot":"specialization","value":"papaya juice","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization papaya juice\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pizza, sushi, hamburger, tacos, pasta, salad, soup, sandwich, ice cream, chocolate"}
{"cat":"food","slot":"specialization","value":"cappuccino","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization cappuccino\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, cheese, pizza, pasta, steak, salad, sushi, burger, fries, ice cream"}
{"cat":"food","slot":"specialization","value":"soya bean","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization soya bean\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, banana, bread, cheese, chicken, egg, fish, milk, pizza, steak"}
{"cat":"food","slot":"specialization","value":"roll","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization roll\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pizza, hamburger, sushi, tacos, pasta, salad, soup, sandwich, ice cream, chocolate"}
{"cat":"food","slot":"specialization","value":"sun tea","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization sun tea\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, cheese, chicken, eggs, fish, fruit, meat, milk, pasta, vegetables"}
{"cat":"food","slot":"specialization","value":"tabooli","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization tabooli\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pizza, hamburger, sushi, pasta, salad, steak, tacos, burrito, sandwich, soup"}
{"cat":"food","slot":"specialization","value":"berry","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization berry\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, banana, bread, cheese, chicken, egg, fish, milk, pizza, steak"}
{"cat":"food","slot":"specialization","value":"poor boy","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization poor boy\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, cheese, meat, tomato, lettuce, onion, pickle, mustard, ketchup, oil"}
{"cat":"food","slot":"specialization","value":"bun","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization bun\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, pizza, pasta, burger, sandwich, sushi, steak, salad, soup, dessert"}
{"cat":"food","slot":"specialization","value":"table wine","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization table wine\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, cheese, chocolate, fish, fruit, meat, pasta, pizza, salad, vegetables"}
{"cat":"food","slot":"specialization","value":"chips","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization chips\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        cheese, chips, pizza, burger, fries, soda, chocolate, ice cream, cake, cookies"}
{"cat":"food","slot":"specialization","value":"macon","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization macon\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, cheese, meat, vegetables, fruit, pasta, rice, chocolate, cake, pizza"}
{"cat":"food","slot":"specialization","value":"Chilean strawberry","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization Chilean strawberry\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        strawberry, chocolate, pizza, hamburger, sushi, taco, ice cream, spaghetti, salad, steak"}
{"cat":"food","slot":"specialization","value":"BLT","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization BLT\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, lettuce, tomato, bacon, mayonnaise, cheese, avocado, cucumber, onion, pickle"}
{"cat":"food","slot":"specialization","value":"tea-like drink","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization tea-like drink\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, banana, bread, cheese, chicken, cucumber, egg, milk, potato, tomato"}
{"cat":"food","slot":"specialization","value":"zep","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization zep\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pizza, burger, pasta, sushi, tacos, ice cream, chocolate, fries, salad, steak"}
{"cat":"food","slot":"specialization","value":"hoagy","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization hoagy\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        cheese, bread, meat, vegetables, fruit, nuts, pasta, rice, chocolate, milk"}
{"cat":"food","slot":"specialization","value":"club sandwich","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization club sandwich\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, cheese, meat, vegetables, fruit, chocolate, pasta, rice, soup, salad"}
{"cat":"food","slot":"specialization","value":"coffee cappuccino","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization coffee cappuccino\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, cheese, chocolate, hamburger, pizza, salad, sushi, taco, wine, yogurt"}
{"cat":"food","slot":"specialization","value":"fizz","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization fizz\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, cheese, meat, vegetables, fruit, pasta, rice, nuts, chocolate, sweets"}
{"cat":"food","slot":"specialization","value":"lemon juice","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization lemon juice\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, banana, bread, cheese, chocolate, egg, honey, milk, potato, rice"}
{"cat":"food","slot":"specialization","value":"home-fried potatoes","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization home-fried potatoes\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, pizza, cheese, chocolate, bread, pasta, salad, steak, sushi, ice cream"}
{"cat":"food","slot":"specialization","value":"pyxidium","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization pyxidium\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, bread, cake, cheese, chicken, ice cream, pizza, salad, steak, sushi"}
{"cat":"food","slot":"specialization","value":"blue fig","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization blue fig\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, banana, bread, cake, cheese, chicken, coffee, hamburger, ice cream, pizza"}
{"cat":"food","slot":"specialization","value":"capitulum","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization capitulum\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, bread, cheese, chicken, egg, fish, milk, pizza, salad, steak"}
{"cat":"food","slot":"specialization","value":"blue cheese","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization blue cheese\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, banana, bread, cheese, chicken, coffee, egg, pizza, rice, tomato"}
{"cat":"food","slot":"specialization","value":"Red Delicious","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization Red Delicious\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        Apple, Banana, Pizza, Hamburger, Sushi, Pasta, Salad, Steak, Ice cream, Chocolate"}
{"cat":"food","slot":"specialization","value":"wild emmer","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization wild emmer\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pizza, hamburger, sushi, tacos, pasta, salad, sandwich, soup, ice cream, cake"}
{"cat":"food","slot":"specialization","value":"matzoh","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization matzoh\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, cheese, chocolate, cake, pizza, pasta, ice cream, hamburger, sushi, tacos"}
{"cat":"food","slot":"specialization","value":"hard wheat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization hard wheat\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, pasta, cereal, crackers, cookies, cakes, pies, pretzels, bagels, doughnuts"}
{"cat":"food","slot":"specialization","value":"macaroni wheat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization macaroni wheat\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pizza, hamburger, sushi, taco, spaghetti, lasagna, curry, salad, cake, ice cream"}
{"cat":"food","slot":"specialization","value":"mulled wine","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization mulled wine\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, pizza, chocolate, bread, cheese, hamburger, pasta, sushi, ice cream, cake"}
{"cat":"food","slot":"specialization","value":"salmagundi","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization salmagundi\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, cheese, meat, vegetables, fruit, nuts, chocolate, pasta, rice, fish"}
{"cat":"food","slot":"specialization","value":"herring salad","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization herring salad\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, pizza, sushi, steak, burger, pasta, salad, soup, sandwich, ice cream"}
{"cat":"food","slot":"specialization","value":"submarine","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization submarine\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, banana, pizza, chocolate, burger, pasta, sushi, steak, salad, ice cream"}
{"cat":"food","slot":"specialization","value":"dessert wine","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization dessert wine\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, pizza, chocolate, bread, cheese, pasta, salad, steak, sushi, ice cream"}
{"cat":"food","slot":"specialization","value":"Merlot","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization Merlot\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, pizza, chocolate, sushi, hamburger, pasta, ice cream, steak, salad, taco"}
{"cat":"food","slot":"specialization","value":"lager beer","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization lager beer\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pizza, hamburger, chocolate, ice cream, pasta, salad, sushi, tacos, fries, cake"}
{"cat":"food","slot":"specialization","value":"cheddar cheese","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization cheddar cheese\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pizza, burger, pasta, sushi, tacos, ice cream, chocolate, salad, steak, sandwich"}
{"cat":"food","slot":"specialization","value":"chicken salad","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization chicken salad\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        chicken, pizza, burger, pasta, sushi, tacos, sandwich, salad, soup, dessert"}
{"cat":"food","slot":"specialization","value":"Muenster","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization Muenster\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, pizza, chocolate, steak, sushi, tacos, pasta, salad, ice cream, cheese"}
{"cat":"food","slot":"specialization","value":"mozzarella","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization mozzarella\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        mozzarella, pizza, cheese, pasta, tomato, basil, garlic, olive oil, parmesan, bread"}
{"cat":"food","slot":"specialization","value":"California wine","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization California wine\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pizza, pasta, hamburger, sushi, tacos, curry, steak, salad, sandwich, cake"}
{"cat":"food","slot":"specialization","value":"Burgundy","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization Burgundy\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, cheese, meat, vegetables, fruit, pasta, rice, chocolate, cake, ice cream"}
{"cat":"food","slot":"specialization","value":"grated cheese","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization grated cheese\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pizza, burger, pasta, sushi, tacos, salad, ice cream, chocolate, steak, fries"}
{"cat":"food","slot":"specialization","value":"Triticum durum","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization Triticum durum\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, pasta, cereal, crackers, cookies, cakes, pies, muffins, pizza, pastries"}
{"cat":"food","slot":"specialization","value":"seedpod","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization seedpod\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, cheese, chocolate, fruit, hamburger, ice cream, pasta, pizza, salad, steak"}
{"cat":"food","slot":"specialization","value":"rowanberry","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization rowanberry\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, cheese, apple, pizza, chocolate, pasta, steak, salad, hamburger, ice cream"}
{"cat":"food","slot":"specialization","value":"sour orange","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization sour orange\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, banana, bread, cheese, chicken, egg, milk, pizza, rice, steak"}
{"cat":"food","slot":"specialization","value":"tossed salad","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization tossed salad\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, banana, bread, cheese, chicken, egg, fish, milk, pizza, steak"}
{"cat":"food","slot":"specialization","value":"potato salad","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization potato salad\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, cheese, chocolate, hamburger, ice cream, noodles, pizza, salad, sushi, taco"}
{"cat":"food","slot":"specialization","value":"mocha","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization mocha\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pizza, pasta, burger, sushi, tacos, ice cream, chocolate, steak, salad, fries"}
{"cat":"food","slot":"specialization","value":"Parmesan","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization Parmesan\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        cheese, bread, pasta, pizza, salad, soup, steak, chicken, fish, vegetables"}
{"cat":"food","slot":"specialization","value":"drip coffee","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization drip coffee\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pizza, burger, sushi, pasta, tacos, salad, steak, ice cream, cake, bread."}
{"cat":"food","slot":"specialization","value":"hero","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization hero\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, cheese, meat, vegetables, fruit, pasta, rice, nuts, chocolate, cake"}
{"cat":"food","slot":"specialization","value":"Fragaria vesca","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization Fragaria vesca\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, cheese, chocolate, honey, jam, milk, oil, salt, sugar, tea"}
{"cat":"food","slot":"specialization","value":"triple cream","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization triple cream\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, cheese, butter, milk, yogurt, cream, ice cream, chocolate, cake, pastry"}
{"cat":"food","slot":"specialization","value":"wedge","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization wedge\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, pizza, chocolate, pasta, hamburger, sushi, taco, ice cream, steak, salad"}
{"cat":"food","slot":"specialization","value":"Triticum spelta","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization Triticum spelta\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, banana, bread, cheese, chicken, egg, fish, milk, pizza, steak"}
{"cat":"food","slot":"specialization","value":"chokecherry","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization chokecherry\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pizza, burger, sushi, tacos, pasta, salad, sandwich, ice cream, chocolate, fruit"}
{"cat":"food","slot":"specialization","value":"drinking water","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization drinking water\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, pizza, chocolate, hamburger, ice cream, pasta, sushi, steak, tacos, pancakes"}
{"cat":"food","slot":"specialization","value":"chocolate","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization chocolate\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, cheese, chocolate, eggs, flour, honey, milk, sugar, vanilla, yeast"}
{"cat":"food","slot":"specialization","value":"Triticum turgidum","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization Triticum turgidum\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, pasta, cereal, crackers, cookies, cakes, muffins, pizza, bagels, pretzels"}
{"cat":"food","slot":"specialization","value":"hallah","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization hallah\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, pasta, cheese, meat, vegetables, fruit, cake, chocolate, ice cream, candy"}
{"cat":"food","slot":"specialization","value":"beach strawberry","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization beach strawberry\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, banana, bread, cake, cheese, chicken, egg, fish, ice cream, pizza"}
{"cat":"food","slot":"specialization","value":"cracked-wheat bread","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization cracked-wheat bread\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        cracked-wheat bread, chocolate cake, pizza, sushi, tacos, pasta, hamburger, salad, soup, sandwich"}
{"cat":"food","slot":"specialization","value":"butty","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization butty\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pizza, burger, sushi, tacos, pasta, salad, sandwich, soup, steak, curry"}
{"cat":"food","slot":"specialization","value":"spelt","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization spelt\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, cheese, meat, vegetables, fruit, pasta, rice, chocolate, nuts, herbs"}
{"cat":"food","slot":"specialization","value":"accessory fruit","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization accessory fruit\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, banana, orange, strawberry, watermelon, pineapple, mango, peach, grape, cherry"}
{"cat":"food","slot":"specialization","value":"pan gravy","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization pan gravy\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, cheese, pasta, meat, vegetables, fruit, chocolate, cake, ice cream, candy"}
{"cat":"food","slot":"specialization","value":"acorn","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization acorn\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pizza, burger, sushi, pasta, tacos, salad, sandwich, soup, steak, ice cream"}
{"cat":"food","slot":"specialization","value":"wild strawberry","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization wild strawberry\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, pizza, chocolate, hamburger, cheese, salad, pasta, sushi, steak, ice cream"}
{"cat":"food","slot":"specialization","value":"cappuccino coffee","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization cappuccino coffee\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, cheese, chocolate, hamburger, ice cream, pizza, salad, sushi, taco, yogurt"}
{"cat":"food","slot":"specialization","value":"submarine sandwich","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization submarine sandwich\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, pizza, chocolate, hamburger, sushi, taco, pasta, steak, salad, ice cream"}
{"cat":"food","slot":"specialization","value":"Gouda","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization Gouda\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        cheese, bread, meat, vegetables, fruits, nuts, chocolate, pasta, rice"}
{"cat":"food","slot":"specialization","value":"scarlet strawberry","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization scarlet strawberry\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, banana, bread, cheese, chicken, egg, milk, pizza, rice, steak"}
{"cat":"food","slot":"specialization","value":"home fries","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization home fries\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, bread, cheese, chicken, hamburger, ice cream, pasta, pizza, salad, sushi"}
{"cat":"food","slot":"specialization","value":"fruit salad","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization fruit salad\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, banana, pizza, chicken, cheese, bread, pasta, salad, steak, ice cream"}
{"cat":"food","slot":"specialization","value":"Rhone wine","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization Rhone wine\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        cheese, bread, fruit, vegetables, meat, fish, pasta, rice, nuts, chocolate"}
{"cat":"food","slot":"specialization","value":"bleu","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization bleu\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, pizza, chocolate, ice cream, hamburger, pasta, sushi, tacos, steak, salad"}
{"cat":"food","slot":"specialization","value":"whole meal bread","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization whole meal bread\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, pasta, rice, pizza, burger, salad, soup, steak, sushi, tacos"}
{"cat":"food","slot":"specialization","value":"grinder","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization grinder\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, bread, cheese, chicken, hamburger, ice cream, pasta, pizza, salad, sushi"}
{"cat":"food","slot":"specialization","value":"Granny Smith","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization Granny Smith\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        Apple, Banana, Pizza, Burger, Sushi, Tacos, Pasta, Salad, Steak, Ice cream"}
{"cat":"food","slot":"specialization","value":"Honeycrisp","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization Honeycrisp\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, banana, bread, cheese, chicken, coffee, egg, fish, milk, pizza"}
{"cat":"food","slot":"specialization","value":"Camembert","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization Camembert\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, bread, cheese, chocolate, cucumber, egg, meat, milk, potato, tomato"}
{"cat":"food","slot":"specialization","value":"fortified wine","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization fortified wine\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        cheese, bread, meat, vegetables, fruits, pasta, rice, chocolate, cake"}
{"cat":"food","slot":"specialization","value":"tabbouleh","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization tabbouleh\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        tomato, onion, garlic, cucumber, parsley, bulgur, lemon, olive oil, salt, pepper"}
{"cat":"food","slot":"specialization","value":"cooler","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization cooler\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, cheese, chocolate, eggs, fish, meat, milk, pasta, rice, vegetables"}
{"cat":"food","slot":"specialization","value":"coffee substitute","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization coffee substitute\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, cheese, chocolate, fruit, meat, pasta, rice, salad, vegetables, yogurt"}
{"cat":"food","slot":"specialization","value":"chicken sandwich","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization chicken sandwich\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        chicken, pizza, burger, taco, salad, sushi, pasta, steak, ice cream, cake"}
{"cat":"food","slot":"specialization","value":"bap","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization bap\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, cheese, meat, vegetables, fruit, nuts, pasta, rice, chocolate, cake"}
{"cat":"food","slot":"specialization","value":"seckel pear","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization seckel pear\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, banana, cheese, chicken, fish, hamburger, ice cream, pizza, steak, sushi"}
{"cat":"food","slot":"specialization","value":"wrap","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization wrap\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pizza, burger, fries, salad, sandwich, soup, sushi, tacos, pasta, curry"}
{"cat":"food","slot":"specialization","value":"cottage cheese","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization cottage cheese\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, bread, cheese, chocolate, hamburger, ice cream, pasta, pizza, steak, sushi"}
{"cat":"food","slot":"specialization","value":"garden strawberry","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization garden strawberry\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, banana, pizza, hamburger, sushi, pasta, curry, taco, cake, ice cream"}
{"cat":"food","slot":"specialization","value":"mate","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization mate\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, banana, pizza, hamburger, sushi, pasta, salad, chocolate, ice cream, cheese"}
{"cat":"food","slot":"specialization","value":"carrot juice","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization carrot juice\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pizza, hamburger, sushi, pasta, salad, sandwich, soup, taco, ice cream, cake"}
{"cat":"food","slot":"specialization","value":"pseudocarp","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization pseudocarp\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, banana, bread, cheese, chicken, egg, fish, milk, pizza, steak"}
{"cat":"food","slot":"specialization","value":"flatbread","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization flatbread\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, pizza, pasta, rice, noodles, sushi, tacos, burritos, sandwiches, wraps"}
{"cat":"food","slot":"specialization","value":"gravy","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization gravy\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, pizza, chocolate, hamburger, cake, ice cream, pasta, salad, soup, sushi"}
{"cat":"food","slot":"specialization","value":"crab apple","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization crab apple\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, cheese, chocolate, eggs, fish, fruit, meat, pasta, vegetables, yogurt"}
{"cat":"food","slot":"specialization","value":"rose hip","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization rose hip\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, pizza, chocolate, bread, pasta, sushi, hamburger, cake, ice cream, salad"}
{"cat":"food","slot":"specialization","value":"two-grain spelt","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization two-grain spelt\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, bread, cheese, chicken, egg, fish, milk, rice, steak, tomato"}
{"cat":"food","slot":"specialization","value":"goat cheese","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization goat cheese\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, pizza, pasta, cheese, chocolate, honey, wine, coffee, tea, fruit"}
{"cat":"food","slot":"specialization","value":"sub","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization sub\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, cheese, chicken, pizza, pasta, salad, steak, sushi, tacos, vegetables"}
{"cat":"food","slot":"specialization","value":"quick bread","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization quick bread\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, cake, cookie, pastry, pie, pizza, sandwich, scone, muffin, biscuit"}
{"cat":"food","slot":"specialization","value":"buckthorn berry","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization buckthorn berry\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        tomato, cheese, chocolate, strawberry, pizza, hamburger, cake, ice cream, apple, bread"}
{"cat":"food","slot":"specialization","value":"tunaburger","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization tunaburger\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pizza, burger, pasta, sushi, tacos, sandwich, salad, curry, steak, cake"}
{"cat":"food","slot":"specialization","value":"Dubonnet","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization Dubonnet\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, cheese, chocolate, hamburger, pasta, pizza, salad, sushi, tacos, yogurt"}
{"cat":"food","slot":"specialization","value":"achene","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization achene\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, banana, bread, cheese, chicken, egg, fish, pizza, rice, steak"}
{"cat":"food","slot":"specialization","value":"bomber","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization bomber\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, banana, bread, cheese, chicken, egg, fish, hamburger, pizza, steak"}
{"cat":"food","slot":"specialization","value":"May apple","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization May apple\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, banana, orange, strawberry, watermelon, avocado, pineapple, mango, grapefruit, papaya"}
{"cat":"food","slot":"specialization","value":"suds","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization suds\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, cheese, meat, vegetables, fruit, pasta, rice, chocolate, cake, ice cream"}
{"cat":"food","slot":"specialization","value":"java","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization java\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, pizza, bread, cheese, chocolate, hamburger, pasta, salad, steak, sushi"}
{"cat":"food","slot":"specialization","value":"near beer","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization near beer\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pizza, burger, sushi, tacos, pasta, salad, steak, sandwich, soup, ice cream"}
{"cat":"food","slot":"specialization","value":"Bordeaux wine","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization Bordeaux wine\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, cheese, pizza, pasta, steak, sushi, salad, burger, tacos, ice cream"}
{"cat":"food","slot":"specialization","value":"french fries","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization french fries\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, cheese, meat, vegetables, fruit, pasta, rice, nuts, chocolate, honey"}
{"cat":"food","slot":"specialization","value":"Velveeta","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization Velveeta\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pizza, burger, sushi, pasta, tacos, salad, steak, ice cream, cake, sandwich"}
{"cat":"food","slot":"specialization","value":"rose wine","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization rose wine\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, cheese, chocolate, ice cream, pizza, pasta, sushi, steak, hamburger, fries"}
{"cat":"food","slot":"specialization","value":"Liederkranz","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization Liederkranz\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pizza, hamburger, sushi, pasta, salad, soup, sandwich, tacos, burrito, curry"}
{"cat":"food","slot":"specialization","value":"retsina","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization retsina\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pizza, burger, sushi, tacos, pasta, salad, sandwich, steak, curry, ice cream"}
{"cat":"food","slot":"specialization","value":"Chardonnay","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization Chardonnay\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, banana, bread, cheese, chicken, coffee, ice cream, pizza, steak, sushi"}
{"cat":"food","slot":"specialization","value":"olive","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization olive\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, pizza, pasta, cheese, olives, tomatoes, wine, gelato, chocolate, coffee"}
{"cat":"food","slot":"specialization","value":"Edam","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization Edam\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        cheese, bread, meat, vegetables, fruit, pasta, rice, nuts, chocolate"}
{"cat":"food","slot":"specialization","value":"lager","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization lager\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pizza, burger, sushi, tacos, pasta, salad, steak, sandwich, curry, ice cream"}
{"cat":"food","slot":"specialization","value":"wafer","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization wafer\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        \"wafer, pizza, sandwich, burger, salad, soup, sushi, steak, pasta, curry\""}
{"cat":"food","slot":"specialization","value":"Golden Delicious","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization Golden Delicious\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, banana, pizza, pasta, sushi, steak, tacos, salad, ice cream, chocolate"}
{"cat":"food","slot":"specialization","value":"Turkish coffee","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization Turkish coffee\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, cheese, meat, vegetables, fruit, pasta, rice, chocolate, ice cream, cake"}
{"cat":"food","slot":"specialization","value":"brioche","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization brioche\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, bread, cheese, chocolate, hamburger, ice cream, pizza, steak, sushi, taco"}
{"cat":"food","slot":"specialization","value":"hip","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization hip\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pizza, burger, sushi, pasta, tacos, salad, ice cream, sandwich, soup, steak"}
{"cat":"food","slot":"specialization","value":"ade","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization ade\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, pizza, chocolate, pasta, sushi, burger, taco, ice cream, steak, salad"}
{"cat":"food","slot":"specialization","value":"crabapple","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization crabapple\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, banana, bread, cheese, chicken, cucumber, eggplant, fish, grape, lettuce"}
{"cat":"food","slot":"specialization","value":"dark bread","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization dark bread\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, cheese, chocolate, honey, jam, meat, milk, oil, sugar, wine"}
{"cat":"food","slot":"specialization","value":"lime juice","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization lime juice\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, banana, bread, cheese, chicken, coffee, ice cream, pizza, rice, sushi"}
{"cat":"food","slot":"specialization","value":"pod","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization pod\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, cheese, chocolate, eggs, fish, meat, milk, pasta, pizza, vegetables"}
{"cat":"food","slot":"specialization","value":"bosc","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization bosc\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, banana, bread, cheese, chicken, egg, fish, hamburger, ice cream, pizza"}
{"cat":"food","slot":"specialization","value":"instant coffee","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization instant coffee\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, cheese, chocolate, eggs, fish, meat, milk, pasta, rice, vegetables"}
{"cat":"food","slot":"specialization","value":"cheddar","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization cheddar\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        cheddar, pizza, pasta, sushi, tacos, burgers, salad, ice cream, cake, chocolate"}
{"cat":"food","slot":"specialization","value":"raisin bread","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization raisin bread\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pizza, pasta, hamburger, sushi, tacos, ice cream, chocolate, cheese, bread, salad"}
{"cat":"food","slot":"specialization","value":"common wheat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization common wheat\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, pasta, cereal, cookies, crackers, cakes, muffins, pancakes, pretzels, pizza"}
{"cat":"food","slot":"specialization","value":"false fruit","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization false fruit\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, banana, orange, pineapple, strawberry, watermelon, cherry, grape, lemon, mango"}
{"cat":"food","slot":"specialization","value":"sparkling wine","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization sparkling wine\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, pizza, chocolate, cheese, steak, sushi, pasta, bread, ice cream, hamburger"}
{"cat":"food","slot":"specialization","value":"pasta salad","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization pasta salad\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pasta, pizza, salad, sandwich, burger, sushi, tacos, steak, chicken, fish"}
{"cat":"food","slot":"specialization","value":"torpedo","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization torpedo\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pizza, pasta, bread, cheese, meat, vegetables, fruit, chocolate, ice cream, cake"}
{"cat":"food","slot":"specialization","value":"iced tea","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization iced tea\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pizza, hamburger, sushi, pasta, tacos, salad, soup, sandwich, cake, ice cream"}
{"cat":"food","slot":"specialization","value":"vermouth","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization vermouth\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pizza, burger, sushi, pasta, tacos, salad, ice cream, chocolate, cake, bread"}
{"cat":"food","slot":"specialization","value":"double Gloucester","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization double Gloucester\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, banana, cheese, chocolate, hamburger, ice cream, pizza, salad, steak, sushi"}
{"cat":"food","slot":"specialization","value":"emmer","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization emmer\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, cheese, pasta, rice, meat, vegetables, fruit, chocolate, nuts, tea"}
{"cat":"food","slot":"specialization","value":"open sandwich","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization open sandwich\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, cheese, meat, vegetables, fruit, pasta, rice, chocolate, nuts, herbs"}
{"cat":"food","slot":"specialization","value":"ginger beer","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization ginger beer\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pizza, pasta, burger, sushi, tacos, sandwich, salad, soup, steak, ice cream"}
{"cat":"food","slot":"specialization","value":"eating apple","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization eating apple\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, pizza, hamburger, sushi, pasta, salad, taco, burrito, ice cream, cake"}
{"cat":"food","slot":"specialization","value":"coffee royal","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization coffee royal\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        chicken, pizza, pasta, salad, soup, sandwich, burger, steak, sushi, tacos"}
{"cat":"food","slot":"specialization","value":"espresso","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization espresso\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, banana, bread, cheese, chicken, egg, fish, milk, pizza, steak"}
{"cat":"food","slot":"specialization","value":"juniper berry","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization juniper berry\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, banana, pizza, hamburger, sushi, chocolate, ice cream, pasta, steak, salad"}
{"cat":"food","slot":"specialization","value":"paddy","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization paddy\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pizza, hamburger, sushi, pasta, curry, tacos, burrito, pancakes, ice cream, cake"}
{"cat":"food","slot":"specialization","value":"three-decker","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization three-decker\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pizza, pasta, burger, fries, salad, sandwich, sushi, tacos, steak, ice cream"}
{"cat":"food","slot":"specialization","value":"quark","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization quark\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, bread, cheese, chicken, egg, milk, pizza, rice, salad, steak"}
{"cat":"food","slot":"specialization","value":"cafe noir","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization cafe noir\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, cheese, meat, vegetables, fruit, pasta, rice, nuts, chocolate, cake"}
{"cat":"food","slot":"specialization","value":"generic wine","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization generic wine\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        cheese, pizza, chocolate, bread, hamburger, pasta, ice cream, sushi, tacos, salad"}
{"cat":"food","slot":"specialization","value":"vintage","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization vintage\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, cheese, meat, vegetables, fruit, pasta, rice, chocolate, cake, ice cream"}
{"cat":"food","slot":"specialization","value":"ricotta","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization ricotta\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, cheese, pasta, pizza, meat, fish, vegetables, fruit, chocolate, ice cream"}
{"cat":"food","slot":"specialization","value":"fries","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization fries\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pizza, burger, sushi, pasta, salad, steak, tacos, ice cream, cake, chocolate"}
{"cat":"food","slot":"specialization","value":"farmer's cheese","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization farmer's cheese\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, cheese, milk, butter, eggs, honey, jam, yogurt, cream, ice cream"}
{"cat":"food","slot":"specialization","value":"tea","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization tea\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pizza, hamburger, sushi, pasta, salad, curry, steak, tacos, burrito, ice cream"}
{"cat":"food","slot":"specialization","value":"farm cheese","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization farm cheese\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        cheese, bread, butter, milk, yogurt, cream, eggs, honey, jam, chocolate"}
{"cat":"food","slot":"specialization","value":"hand cheese","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization hand cheese\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, cheese, pizza, pasta, salad, fruit, vegetables, meat, fish, dessert"}
{"cat":"food","slot":"specialization","value":"spike","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization spike\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, banana, pizza, steak, sushi, burger, pasta, salad, chocolate, ice cream"}
{"cat":"food","slot":"specialization","value":"bacon-lettuce-tomato sandwich","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization bacon-lettuce-tomato sandwich\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pizza, burger, sushi, pasta, salad, soup, tacos, ice cream, cake, pancakes"}
{"cat":"food","slot":"specialization","value":"durum wheat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization durum wheat\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, pasta, couscous, bulgur, pizza, cake, cookies, crackers, noodles, pita"}
{"cat":"food","slot":"specialization","value":"cultivated strawberry","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization cultivated strawberry\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pizza, burger, sushi, pasta, salad, tacos, ice cream, cake, chocolate, cheese"}
{"cat":"food","slot":"specialization","value":"Fragaria chiloensis","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization Fragaria chiloensis\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pizza, pasta, burger, steak, sushi, tacos, sandwich, salad, soup, ice cream"}
{"cat":"food","slot":"specialization","value":"refresher","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization refresher\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pizza, burger, pasta, salad, sushi, tacos, ice cream, cake, chocolate, steak"}
{"cat":"food","slot":"specialization","value":"garlic bread","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization garlic bread\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pizza, burger, fries, salad, sushi, pasta, ice cream, chocolate, cheese, bread"}
{"cat":"food","slot":"specialization","value":"crouton","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization crouton\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, banana, pizza, hamburger, chocolate, ice cream, sushi, steak, pasta, tacos"}
{"cat":"food","slot":"specialization","value":"white wine","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization white wine\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, pizza, pasta, sushi, burger, tacos, curry, salad, steak, ice cream"}
{"cat":"food","slot":"specialization","value":"dessert apple","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization dessert apple\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, cheese, chocolate, egg, fish, fruit, meat, milk, vegetable, water"}
{"cat":"food","slot":"specialization","value":"aggregate fruit","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization aggregate fruit\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, banana, orange, strawberry, pineapple, grape, watermelon, peach, cherry, mango"}
{"cat":"food","slot":"specialization","value":"ham sandwich","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization ham sandwich\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pizza, burger, pasta, salad, sushi, tacos, ice cream, cake, chocolate, cheese"}
{"cat":"food","slot":"specialization","value":"brown rice","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization brown rice\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pizza, pasta, sushi, hamburger, tacos, burrito, salad, sandwich, steak, curry"}
{"cat":"food","slot":"specialization","value":"hamburger","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization hamburger\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":" pizza, burger, pasta, sushi, tacos, salad, steak, fries, ice cream, cake"}
{"cat":"food","slot":"specialization","value":"Italian sandwich","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization Italian sandwich\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pizza, pasta, lasagna, risotto, tiramisu, gelato, cannoli, bruschetta, panini, focaccia"}
{"cat":"food","slot":"specialization","value":"soft drink","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization soft drink\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, pizza, hamburger, chocolate, cake, ice cream, pasta, salad, soup, steak"}
{"cat":"food","slot":"specialization","value":"light bread","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization light bread\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, cheese, chocolate, cake, pizza, pasta, salad, steak, sushi, ice cream"}
{"cat":"food","slot":"specialization","value":"wood strawberry","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization wood strawberry\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pizza, hamburger, sushi, pasta, curry, tacos, burrito, salad, sandwich, ice cream"}
{"cat":"food","slot":"specialization","value":"draught beer","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization draught beer\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pizza, hamburger, sushi, pasta, salad, tacos, ice cream, chocolate, fries, burrito"}
{"cat":"food","slot":"specialization","value":"mixer","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization mixer\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, cheese, chicken, eggplant, garlic, honey, mushroom, olive, pasta, tomato"}
{"cat":"food","slot":"specialization","value":"Cripps Pink","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization Cripps Pink\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, banana, pizza, hamburger, sushi, taco, pasta, curry, steak, salad"}
{"cat":"food","slot":"specialization","value":"western","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization western\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pizza, hamburger, french fries, hot dog, pasta, sandwich, salad, steak, soup, dessert"}
{"cat":"food","slot":"specialization","value":"fruitlet","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization fruitlet\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, banana, orange, pineapple, strawberry, grapes, watermelon, mango, avocado, kiwi"}
{"cat":"food","slot":"specialization","value":"Sloppy Joe","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization Sloppy Joe\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pizza, burger, fries, tacos, sushi, pasta, salad, sandwich, steak, ice cream"}
{"cat":"food","slot":"specialization","value":"soybean","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization soybean\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"1. apple, 2. pizza, 3. chicken, 4. rice, 5. cheese, 6. tomato, 7. salmon, 8. potato, 9. carrot, 10. cake"}
{"cat":"food","slot":"specialization","value":"drinking chocolate","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization drinking chocolate\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, pizza, chocolate, cheese, bread, salad, steak, sushi, pasta, ice cream"}
{"cat":"food","slot":"specialization","value":"decaf","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization decaf\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, banana, cheese, chocolate, hamburger, ice cream, pizza, rice, steak, sushi"}
{"cat":"food","slot":"specialization","value":"naan","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization naan\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        naan, pizza, burger, sushi, tacos, pasta, salad, sandwich, curry, stir-fry"}
{"cat":"food","slot":"specialization","value":"Host","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization Host\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pizza, burger, pasta, sushi, tacos, salad, sandwich, steak, curry, ice cream"}
{"cat":"food","slot":"specialization","value":"herbal tea","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization herbal tea\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, cheese, chocolate, coffee, honey, jam, milk, sugar, tea, wine"}
{"cat":"food","slot":"specialization","value":"cracker","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization cracker\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, cheese, meat, vegetables, fruit, pasta, rice, cake, candy, chocolate"}
{"cat":"food","slot":"specialization","value":"blush wine","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization blush wine\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, cheese, chocolate, honey, rice, pasta, meat, fruit, vegetables, nuts"}
{"cat":"food","slot":"specialization","value":"generic","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization generic\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, pizza, chocolate, burger, ice cream, sushi, tacos, pasta, salad, steak"}
{"cat":"food","slot":"specialization","value":"Sauvignon Blanc","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization Sauvignon Blanc\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pizza, burger, fries, salad, sushi, pasta, steak, tacos, sandwich, ice cream"}
{"cat":"food","slot":"specialization","value":"sweet orange","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization sweet orange\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, banana, bread, cheese, chicken, egg, fish, hamburger, pizza, steak"}
{"cat":"food","slot":"specialization","value":"coleslaw","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization coleslaw\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, cheese, pizza, pasta, hamburger, fries, salad, sushi, steak, ice cream"}
{"cat":"food","slot":"specialization","value":"yellow berry","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization yellow berry\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, banana, pizza, hamburger, chocolate, ice cream, pasta, sushi, steak, salad"}
{"cat":"food","slot":"specialization","value":"ice coffee","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization ice coffee\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pizza, pasta, sandwich, burger, salad, sushi, tacos, curry, pancakes, cake"}
{"cat":"food","slot":"specialization","value":"syncarp","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization syncarp\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, pizza, chicken, sushi, pasta, salad, burger, cake, ice cream, cheese"}
{"cat":"food","slot":"specialization","value":"mocha coffee","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization mocha coffee\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pizza, pasta, sushi, tacos, burgers, sandwiches, salad, soup, steak, curry"}
{"cat":"food","slot":"specialization","value":"V-8 juice","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization V-8 juice\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, pizza, chocolate, hamburger, sushi, pasta, ice cream, taco, salad, steak"}
{"cat":"food","slot":"specialization","value":"simnel","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization simnel\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, cake, chocolate, cookie, dessert, fruit, meat, pasta, pie, pizza"}
{"cat":"food","slot":"specialization","value":"bartlett pear","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization bartlett pear\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pizza, burger, pasta, sushi, tacos, fries, salad, steak, chocolate, ice cream"}
{"cat":"food","slot":"specialization","value":"elk nut","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization elk nut\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pizza, hamburger, sushi, tacos, pasta, curry, steak, salad, ice cream, chocolate"}
{"cat":"food","slot":"specialization","value":"processed cheese","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization processed cheese\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        cheese, bread, pasta, pizza, hamburger, steak, salad, sushi, ice cream, chocolate"}
{"cat":"food","slot":"specialization","value":"English muffin","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization English muffin\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, pizza, chicken, bread, cheese, pasta, rice, salad, ice cream, cake"}
{"cat":"food","slot":"specialization","value":"Fragaria ananassa","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization Fragaria ananassa\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, pizza, hamburger, sushi, pasta, taco, burrito, ice cream, cake, chocolate"}
{"cat":"food","slot":"specialization","value":"string cheese","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization string cheese\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pizza, cheeseburger, ice cream, sushi, tacos, pasta, salad, sandwich, soup, steak"}
{"cat":"food","slot":"specialization","value":"cubeb","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization cubeb\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, banana, bread, cheese, chicken, egg, fish, milk, pizza, steak"}
{"cat":"food","slot":"specialization","value":"gourd","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization gourd\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, banana, bread, cheese, chicken, egg, fish, milk, rice, tomato"}
{"cat":"food","slot":"specialization","value":"white bread","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization white bread\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pizza, burger, sushi, tacos, pasta, salad, sandwich, soup, steak, dessert"}
{"cat":"food","slot":"specialization","value":"anadama bread","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization anadama bread\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, cheese, pasta, pizza, salad, soup, steak, sushi, tacos, tiramisu"}
{"cat":"food","slot":"specialization","value":"varietal wine","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization varietal wine\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, pizza, cheese, chocolate, bread, steak, salad, sushi, pasta, ice cream"}
{"cat":"food","slot":"specialization","value":"tuna salad","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization tuna salad\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pizza, burger, sandwich, salad, pasta, sushi, tacos, fries, ice cream, cake"}
{"cat":"food","slot":"specialization","value":"ear","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization ear\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, banana, bread, cheese, chicken, egg, fish, milk, rice, tomato"}
{"cat":"food","slot":"specialization","value":"Seville orange","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization Seville orange\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pizza, burger, sushi, tacos, pasta, salad, sandwich, steak, ice cream, chocolate"}
{"cat":"food","slot":"specialization","value":"chevre","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization chevre\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, cheese, pasta, pizza, sushi, tacos, salad, steak, ice cream, chocolate"}
{"cat":"food","slot":"specialization","value":"fruit juice","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization fruit juice\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, banana, orange, grape, strawberry, watermelon, pineapple, mango, kiwi, papaya"}
{"cat":"food","slot":"specialization","value":"Pinot Noir","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization Pinot Noir\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pizza, burger, pasta, sushi, tacos, sandwich, salad, soup, steak, dessert"}
{"cat":"food","slot":"specialization","value":"quark cheese","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization quark cheese\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        \"cheese, bread, butter, honey, jam, eggs, milk, yogurt, quark, cream\""}
{"cat":"food","slot":"specialization","value":"cream cheese","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization cream cheese\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pizza, burger, pasta, sushi, tacos, salad, sandwich, steak, curry, ice cream"}
{"cat":"food","slot":"specialization","value":"onion bread","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization onion bread\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, pizza, cheese, pasta, steak, chicken, salad, soup, sushi, burger"}
{"cat":"food","slot":"specialization","value":"hydromel","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization hydromel\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, cheese, chocolate, honey, meat, milk, oil, salt, sugar, wine"}
{"cat":"food","slot":"specialization","value":"soya","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization soya\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, banana, pizza, sushi, burger, steak, pasta, salad, chocolate, ice cream"}
{"cat":"food","slot":"specialization","value":"pretzel","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization pretzel\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, cheese, meat, pizza, pasta, salad, soup, vegetables, fruit, chocolate"}
{"cat":"food","slot":"generalization","value":"cereal","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization cereal\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":" apple, pizza, chicken, bread, cake, cheese, milk, salad, pasta, ice cream"}
{"cat":"food","slot":"howToUse","value":"shuck","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can be used for\";         A textual example of the semantic relation is \"howToUse shuck\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        corn, oyster, peas, artichoke, asparagus, beans, clams, garlic, mushrooms, spinach"}
{"cat":"food","slot":"part","value":"water","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part water\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pizza, burger, sandwich, salad, pasta, sushi, curry, tacos, steak, ice cream"}
{"cat":"food","slot":"product","value":"wheat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can produce\";         A textual example of the semantic relation is \"product wheat\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":" wheat, corn, rice, soybeans, barley, oats, rye, millet, sorghum, potatoes"}
{"cat":"food","slot":"product","value":"cereal","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can produce\";         A textual example of the semantic relation is \"product cereal\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, cheese, chocolate, cereal, cookies, honey, jam, pasta, yogurt, wine"}
{"cat":"food","slot":"specialization","value":"rice","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization rice\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        rice, bread, pasta, cheese, meat, vegetables, fruit, chocolate, cake, ice cream"}
{"cat":"food","slot":"product","value":"peel","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can produce\";         A textual example of the semantic relation is \"product peel\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        peel, rind, skin, pulp, juice, seeds, pits, flesh, core, stem"}
{"cat":"food","slot":"part","value":"flour","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part flour\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        flour, sugar, eggs, milk, butter, yeast, salt, chocolate, vanilla, cinnamon"}
{"cat":"food","slot":"product","value":"orchard","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can produce\";         A textual example of the semantic relation is \"product orchard\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":" apple, pear, peach, cherry, plum, apricot, grape, fig, orange, lemon"}
{"cat":"food","slot":"specialization","value":"wheat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization wheat\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, pasta, cake, pizza, cookies, flour, noodles, crackers, muffins, cereal"}
{"cat":"food","slot":"specialization","value":"loaf","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization loaf\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, pizza, pasta, salad, soup, steak, sushi, burger, tacos, curry"}
{"cat":"food","slot":"specialization","value":"burger","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization burger\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        burger, pizza, sushi, taco, sandwich, salad, pasta, steak, curry, soup"}
{"cat":"food","slot":"specialization","value":"varietal","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization varietal\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pizza, hamburger, sushi, pasta, salad, soup, steak, chicken, fish, dessert"}
{"cat":"food","slot":"specialization","value":"toast","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization toast\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, cheese, butter, jam, eggs, bacon, sausage, avocado, tomato, mushrooms"}
{"cat":"food","slot":"howToUse","value":"butter","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can be used for\";         A textual example of the semantic relation is \"howToUse butter\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        butter, sugar, flour, eggs, milk, chocolate, vanilla, salt, pepper, oil"}
{"cat":"food","slot":"specialization","value":"intoxicant","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization intoxicant\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, banana, pizza, hamburger, chocolate, ice cream, pasta, sushi, tacos, curry"}
{"cat":"food","slot":"specialization","value":"inebriant","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization inebriant\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, pizza, chicken, cake, cheese, pasta, bread, salad, hamburger, sushi"}
{"cat":"food","slot":"specialization","value":"alcoholic drink","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization alcoholic drink\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pizza, burger, sushi, tacos, pasta, salad, ice cream, chocolate, steak, curry"}
{"cat":"food","slot":"specialization","value":"alcoholic beverage","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization alcoholic beverage\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, bread, chocolate, cucumber, egg, honey, milk, potato, rice, tomato"}
{"cat":"food","slot":"specialization","value":"alcohol","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization alcohol\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, banana, bread, cheese, chicken, egg, fish, hamburger, pizza, steak"}
{"cat":"food","slot":"place","value":"salad","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"can be found or used in\";         A textual example of the semantic relation is \"place salads\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        tomatoes, lettuce, cucumbers, onions, peppers, olives, cheese, dressing, croutons, eggs"}
{"cat":"food","slot":"specialization","value":"rose","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization rose\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pizza, burger, sandwich, pasta, salad, sushi, tacos, curry, steak, ice cream"}
{"cat":"food","slot":"specialization","value":"popcorn","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization popcorn\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, pizza, chocolate, sushi, hamburger, pasta, taco, ice cream, salad, cake"}
{"cat":"food","slot":"specialization","value":"milk","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization milk\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        cheese, butter, yogurt, cream, ice cream, ghee, whey, kefir, curd, paneer"}
{"cat":"food","slot":"generalization","value":"root","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization root\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, bread, cheese, chicken, egg, fish, ice cream, pizza, steak, vegetables"}
{"cat":"food","slot":"specialization","value":"edible fruit","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization edible fruit\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, banana, bread, cheese, chicken, egg, milk, pasta, pizza, steak"}
{"cat":"food","slot":"specialization","value":"pome","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization pome\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        apple, pear, quince, peach, plum, cherry, apricot, nectarine, grape, berry"}
{"cat":"food","slot":"specialization","value":"cider","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization cider\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pizza, burger, sushi, pasta, tacos, sandwich, salad, curry, steak, ice cream"}
{"cat":"food","slot":"specialization","value":"seed","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization seed\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bread, cheese, pizza, pasta, sushi, steak, salad, chocolate, ice cream, cake"}
{"cat":"vehicles","slot":"time","value":"holiday","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can be consumed or used during\";         A textual example of the semantic relation is \"time holiday\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, bus, train, plane, bicycle, motorcycle, boat, yacht, taxi, subway"}
{"cat":"vehicles","slot":"accessory","value":"cargo trailer","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are related with\";         A textual example of the semantic relation is \"accessory cargo trailer\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, bus, train, plane, bicycle, motorcycle, boat, submarine, rocket, spacecraft"}
{"cat":"vehicles","slot":"accessory","value":"seeder","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are related with\";         A textual example of the semantic relation is \"accessory seeder\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, bus, train, airplane, bicycle, motorcycle, boat, truck, taxi, subway"}
{"cat":"vehicles","slot":"accessory","value":"mower","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are related with\";         A textual example of the semantic relation is \"accessory mower\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, airplane, boat, motorcycle, bicycle, taxi, limousine"}
{"cat":"vehicles","slot":"accessory","value":"trailer","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are related with\";         A textual example of the semantic relation is \"accessory trailer\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, motorcycle, bicycle, boat, airplane, helicopter, submarine"}
{"cat":"vehicles","slot":"accessory","value":"scraper","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are related with\";         A textual example of the semantic relation is \"accessory scraper\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, plane, boat, motorcycle, bicycle, skateboard, scooter"}
{"cat":"vehicles","slot":"accessory","value":"plough","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are related with\";         A textual example of the semantic relation is \"accessory plough\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, airplane, boat, motorcycle, bicycle, skateboard, unicycle"}
{"cat":"vehicles","slot":"content","value":"luggage","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"contain\";         A textual example of the semantic relation is \"content luggage\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":" car, bus, train, airplane, ship, motorcycle, bicycle, taxi, truck, van"}
{"cat":"vehicles","slot":"content","value":"goods","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"contain\";         A textual example of the semantic relation is \"content goodss\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        truck, van, car, bus, train, ship, plane, submarine, bicycle, motorcycle"}
{"cat":"vehicles","slot":"shape","value":"long","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"shape long\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, bus, truck, train, boat, plane, motorcycle, bicycle, scooter, taxi"}
{"cat":"vehicles","slot":"shape","value":"elongated","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"shape elongated\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":" car, bus, train, airplane, bicycle, motorcycle, boat, truck, van, taxi"}
{"cat":"vehicles","slot":"efficiency","value":"streamlined","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"efficiency streamlined\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, bus, train, airplane, boat, motorcycle, bicycle, truck, taxi, subway"}
{"cat":"vehicles","slot":"efficiency","value":"sinkable","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"efficiency sinkable\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, plane, boat, motorcycle, bicycle, skateboard, scooter"}
{"cat":"vehicles","slot":"efficiency","value":"polluting","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"efficiency polluting\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, airplane, boat, motorcycle, bicycle, skateboard, scooter"}
{"cat":"vehicles","slot":"efficiency","value":"aerodynamic","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"efficiency aerodynamic\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, airplane, boat, motorcycle, bicycle, skateboard, scooter"}
{"cat":"vehicles","slot":"size","value":"large","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"size large\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, airplane, boat, motorcycle, bicycle, taxi, subway"}
{"cat":"vehicles","slot":"size","value":"big","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"size big\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, motorcycle, bicycle, train, plane, boat, submarine, rocket"}
{"cat":"vehicles","slot":"supply","value":"diesel","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"use\";         A textual example of the semantic relation is \"supply diesel\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, plane, boat, bicycle, motorcycle, taxi, subway"}
{"cat":"vehicles","slot":"supply","value":"kerosene","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"use\";         A textual example of the semantic relation is \"supply kerosene\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, plane, ship, motorcycle, bicycle, skateboard, scooter"}
{"cat":"vehicles","slot":"supply","value":"electricity","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"use\";         A textual example of the semantic relation is \"supply electricity\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, bus, train, airplane, bicycle, motorcycle, boat, truck, taxi, subway"}
{"cat":"vehicles","slot":"supply","value":"fuel","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"use\";         A textual example of the semantic relation is \"supply fuel\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":" car, truck, bus, motorcycle, bicycle, boat, train, airplane, helicopter, submarine"}
{"cat":"vehicles","slot":"supply","value":"gas","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"use\";         A textual example of the semantic relation is \"supply gas\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"10 words that belong to the category \"vehicles\" and satisfy the semantic relation \"use\": car, truck, bus, motorcycle, bicycle, train, plane, boat, submarine, rocket."}
{"cat":"vehicles","slot":"supply","value":"power","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"use\";         A textual example of the semantic relation is \"supply power\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, airplane, boat, motorcycle, bicycle, skateboard, unicycle"}
{"cat":"vehicles","slot":"supply","value":"gasoline","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"use\";         A textual example of the semantic relation is \"supply gasoline\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, bus, train, plane, boat, bicycle, motorcycle, truck, taxi, subway"}
{"cat":"vehicles","slot":"shape","value":"aerodynamic","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"shape aerodynamic\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, plane, boat, motorcycle, bicycle, skateboard, scooter"}
{"cat":"vehicles","slot":"sound","value":"loud","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"sound\";         A textual example of the semantic relation is \"sound loud\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, motorcycle, train, airplane, helicopter, boat, submarine, bicycle"}
{"cat":"vehicles","slot":"sound","value":"noisy","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"sound\";         A textual example of the semantic relation is \"sound noisy\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bus, truck, motorcycle, train, airplane, helicopter, boat, submarine, car, bicycle"}
{"cat":"vehicles","slot":"sound","value":"rumbling","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"sound\";         A textual example of the semantic relation is \"sound rumbling\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, motorcycle, bus, train, airplane, helicopter, boat, submarine, bicycle"}
{"cat":"vehicles","slot":"sound","value":"silent","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"sound\";         A textual example of the semantic relation is \"sound silent\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, motorcycle, bicycle, airplane, boat, submarine, helicopter"}
{"cat":"vehicles","slot":"sound","value":"throbbing","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can\";         A textual example of the semantic relation is \"sound throbbing\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, airplane, boat, motorcycle, bicycle, skateboard, unicycle"}
{"cat":"vehicles","slot":"sound","value":"heavy","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"sound\";         A textual example of the semantic relation is \"sound heavy\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        truck, bus, train, airplane, helicopter, motorcycle, boat, submarine, spaceship, tank"}
{"cat":"vehicles","slot":"movement","value":"fast","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"movement fast\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":" car, truck, bus, train, plane, boat, motorcycle, bicycle, skateboard, scooter"}
{"cat":"vehicles","slot":"movement","value":"take-off","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can\";         A textual example of the semantic relation is \"movement take-off\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, plane, boat, bicycle, motorcycle, taxi, subway"}
{"cat":"vehicles","slot":"movement","value":"landing","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can\";         A textual example of the semantic relation is \"movement landing\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, bus, train, plane, boat, bicycle, motorcycle, truck, taxi, subway"}
{"cat":"vehicles","slot":"movement","value":"sail","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can\";         A textual example of the semantic relation is \"movement sail\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, plane, ship, bicycle, motorcycle, taxi, subway"}
{"cat":"vehicles","slot":"movement","value":"float","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can\";         A textual example of the semantic relation is \"movement float\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, plane, boat, ship, motorcycle, bicycle, skateboard"}
{"cat":"vehicles","slot":"movement","value":"slow","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"movement slow\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, airplane, ship, motorcycle, bicycle, subway, taxi"}
{"cat":"vehicles","slot":"movement","value":"crash","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can\";         A textual example of the semantic relation is \"movement crash\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, motorcycle, bicycle, train, boat, airplane, helicopter, submarine"}
{"cat":"vehicles","slot":"movement","value":"fly","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can\";         A textual example of the semantic relation is \"movement fly\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, bus, train, plane, boat, bicycle, motorcycle, taxi, truck, subway"}
{"cat":"vehicles","slot":"movement","value":"westbound","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"movement westbound\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, motorcycle, bicycle, boat, airplane, helicopter, submarine"}
{"cat":"vehicles","slot":"movement","value":"southbound","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"movement southbound\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":" car, bus, train, plane, bicycle, motorcycle, boat, submarine, helicopter, rocket"}
{"cat":"vehicles","slot":"movement","value":"hover","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can\";         A textual example of the semantic relation is \"movement hover\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, bus, train, airplane, boat, bicycle, motorcycle, taxi, truck, subway"}
{"cat":"vehicles","slot":"movement","value":"trip","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can\";         A textual example of the semantic relation is \"movement trip\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, bus, train, plane, boat, motorcycle, bicycle, taxi, truck, van"}
{"cat":"vehicles","slot":"movement","value":"sailing","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can\";         A textual example of the semantic relation is \"movement sailing\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        boat, ship, yacht, sailboat, ferry, cruise ship, speedboat, catamaran, canoe, kayak"}
{"cat":"vehicles","slot":"purpose","value":"travelling","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are used for\";         A textual example of the semantic relation is \"purpose travelling\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, bus, train, airplane, bicycle, motorcycle, boat, submarine, spaceship, hot air balloon"}
{"cat":"vehicles","slot":"purpose","value":"move","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are used for\";         A textual example of the semantic relation is \"purpose move\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, bus, train, airplane, boat, bicycle, motorcycle, truck, taxi, subway"}
{"cat":"vehicles","slot":"purpose","value":"fishing","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are used for\";         A textual example of the semantic relation is \"purpose fishing\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        boat, ship, yacht, canoe, kayak, paddleboard, sailboat, catamaran, jet ski, cruise liner"}
{"cat":"vehicles","slot":"purpose","value":"sport","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are used for\";         A textual example of the semantic relation is \"purpose sport\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, motorcycle, bicycle, boat, train, plane, bus, truck, van, taxi"}
{"cat":"vehicles","slot":"purpose","value":"mission","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are used for\";         A textual example of the semantic relation is \"purpose mission\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, bus, train, plane, bicycle, motorcycle, boat, ship, submarine, spacecraft"}
{"cat":"vehicles","slot":"purpose","value":"fitness","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are used for\";         A textual example of the semantic relation is \"purpose fitness\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, bus, train, plane, boat, bicycle, motorcycle, truck, taxi, subway"}
{"cat":"vehicles","slot":"purpose","value":"drag","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are used to\";         A textual example of the semantic relation is \"purpose drag\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        cars, motorcycles, trucks, buses, trains, airplanes, helicopters, boats, yachts, bicycles"}
{"cat":"vehicles","slot":"purpose","value":"transit","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are used for\";         A textual example of the semantic relation is \"purpose transit\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        Car, Bus, Train, Plane, Bicycle, Motorcycle, Boat, Ship, Taxi, Tram"}
{"cat":"vehicles","slot":"purpose","value":"transport","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are used to\";         A textual example of the semantic relation is \"purpose transport\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, plane, boat, bicycle, motorcycle, taxi, subway"}
{"cat":"vehicles","slot":"purpose","value":"commuter","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are used for\";         A textual example of the semantic relation is \"purpose commuter\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, bus, train, bicycle, motorcycle, truck, boat, plane, taxi, subway"}
{"cat":"vehicles","slot":"purpose","value":"travel","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are used for\";         A textual example of the semantic relation is \"purpose travel\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":" car, bus, train, plane, bicycle, motorcycle, boat, ship, submarine, spacecraft"}
{"cat":"vehicles","slot":"purpose","value":"parking","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are used to\";         A textual example of the semantic relation is \"purpose parking\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        cars, trucks, buses, motorcycles, bicycles, trains, airplanes, ships, submarines, spaceships"}
{"cat":"vehicles","slot":"purpose","value":"ride","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are used for\";         A textual example of the semantic relation is \"purpose ride\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, bicycle, motorcycle, boat, airplane, helicopter, submarine"}
{"cat":"vehicles","slot":"purpose","value":"luxury","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are used for\";         A textual example of the semantic relation is \"purpose luxury\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, plane, boat, bicycle, motorcycle, taxi, limousine"}
{"cat":"vehicles","slot":"purpose","value":"race","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are used for\";         A textual example of the semantic relation is \"purpose race\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        racecar, formula1, dragster, rallycar, stockcar, motorcycle, superbike, bicycle, skateboard, rollerblades"}
{"cat":"vehicles","slot":"purpose","value":"agriculture","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are used for\";         A textual example of the semantic relation is \"purpose agriculture\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        tractor, combine harvester, plow, cultivator, seed drill, harrow, baler, sprayer, irrigation system, harvester"}
{"cat":"vehicles","slot":"place","value":"road","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can be found or used in\";         A textual example of the semantic relation is \"place roads\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, motorcycle, bicycle, train, airplane, boat, submarine, rocket"}
{"cat":"vehicles","slot":"place","value":"airport","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can be found or used in\";         A textual example of the semantic relation is \"place airports\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, bus, train, plane, boat, bicycle, motorcycle, taxi, truck, subway"}
{"cat":"vehicles","slot":"place","value":"sky","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can be found or used in\";         A textual example of the semantic relation is \"place skies\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, bus, train, airplane, boat, bicycle, motorcycle, truck, taxi, subway"}
{"cat":"vehicles","slot":"place","value":"rural area","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can be found or used in\";         A textual example of the semantic relation is \"place rural areas\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, bus, train, bicycle, motorcycle, truck, boat, airplane, helicopter, submarine"}
{"cat":"vehicles","slot":"place","value":"country","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can be found or used in\";         A textual example of the semantic relation is \"place countries\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, plane, ship, motorcycle, bicycle, taxi, subway"}
{"cat":"vehicles","slot":"place","value":"air","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can be found or used in\";         A textual example of the semantic relation is \"place airs\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, airplane, boat, motorcycle, bicycle, taxi, subway"}
{"cat":"vehicles","slot":"place","value":"cycle path","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can be found or used in\";         A textual example of the semantic relation is \"place cycle paths\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        cars, trucks, buses, trains, motorcycles, bicycles, airplanes, ships, helicopters, submarines"}
{"cat":"vehicles","slot":"place","value":"sea","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can be found or used in\";         A textual example of the semantic relation is \"place seas\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, bus, train, boat, ship, plane, bicycle, motorcycle, taxi, truck"}
{"cat":"vehicles","slot":"place","value":"garage","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can be found or used in\";         A textual example of the semantic relation is \"place garages\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        cars, trucks, motorcycles, buses, trains, airplanes, helicopters, boats, yachts, bicycles"}
{"cat":"vehicles","slot":"place","value":"waterway","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can be found or used in\";         A textual example of the semantic relation is \"place waterways\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        boat, ship, ferry, yacht, cruise liner, canoe, kayak, sailboat, motorboat, jet ski"}
{"cat":"vehicles","slot":"place","value":"motorway","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can be found or used in\";         A textual example of the semantic relation is \"place motorways\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, bicycle, motorcycle, airplane, boat, submarine, helicopter"}
{"cat":"vehicles","slot":"place","value":"traffic","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can be found or used in\";         A textual example of the semantic relation is \"place traffics\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, bus, train, plane, boat, bicycle, motorcycle, taxi, truck, subway"}
{"cat":"vehicles","slot":"place","value":"depot","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can be found or used in\";         A textual example of the semantic relation is \"place depots\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        cars, trucks, buses, trains, planes, ships, motorcycles, bicycles, taxis, trolleys"}
{"cat":"vehicles","slot":"place","value":"shipyard","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can be found or used in\";         A textual example of the semantic relation is \"place shipyards\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        ship, boat, yacht, cruise, ferry, submarine, aircraft, helicopter, train, car"}
{"cat":"vehicles","slot":"place","value":"park","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can be found or used in\";         A textual example of the semantic relation is \"place parks\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, bus, truck, train, motorcycle, bicycle, boat, airplane, helicopter, submarine"}
{"cat":"vehicles","slot":"place","value":"terminal","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can be found or used in\";         A textual example of the semantic relation is \"place terminals\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, bus, train, airplane, motorcycle, bicycle, boat, truck, taxi, subway"}
{"cat":"vehicles","slot":"place","value":"route","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can be found or used in\";         A textual example of the semantic relation is \"place routes\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, bus, train, airplane, bicycle, motorcycle, boat, truck, taxi, subway"}
{"cat":"vehicles","slot":"place","value":"dry dock","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can be found or used in\";         A textual example of the semantic relation is \"place dry docks\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        cars, trucks, buses, motorcycles, bicycles, boats, trains, planes, helicopters, submarines"}
{"cat":"vehicles","slot":"place","value":"parking","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can be found or used in\";         A textual example of the semantic relation is \"place parkings\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        cars, trucks, buses, motorcycles, bicycles, trains, planes, boats, helicopters, submarines"}
{"cat":"vehicles","slot":"place","value":"station","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can be found or used in\";         A textual example of the semantic relation is \"place stations\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, bus, train, bike, plane, boat, motorcycle, taxi, subway, truck"}
{"cat":"vehicles","slot":"place","value":"rental","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can be found or used in\";         A textual example of the semantic relation is \"place rentals\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, bus, train, plane, boat, bicycle, motorcycle, taxi, truck, van"}
{"cat":"vehicles","slot":"material","value":"metal","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can be made of\";         A textual example of the semantic relation is \"material metal\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, motorcycle, bicycle, boat, airplane, train, helicopter, submarine"}
{"cat":"vehicles","slot":"material","value":"plastic","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can be made of\";         A textual example of the semantic relation is \"material plastic\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, bus, train, plane, boat, motorcycle, bicycle, truck, van, taxi"}
{"cat":"vehicles","slot":"material","value":"rubber","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can be made of\";         A textual example of the semantic relation is \"material rubber\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, plane, boat, bicycle, motorcycle, skateboard, scooter"}
{"cat":"vehicles","slot":"material","value":"glass","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can be made of\";         A textual example of the semantic relation is \"material glass\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, plane, boat, motorcycle, bicycle, skateboard, unicycle"}
{"cat":"vehicles","slot":"material","value":"aluminium","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can be made of\";         A textual example of the semantic relation is \"material aluminium\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, bus, train, boat, plane, motorcycle, bicycle, truck, van, taxi"}
{"cat":"vehicles","slot":"purpose","value":"rental","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are used for\";         A textual example of the semantic relation is \"purpose rental\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        cars, trucks, vans, motorcycles, bicycles, buses, trains, airplanes, boats, submarines"}
{"cat":"vehicles","slot":"material","value":"steel","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can be made of\";         A textual example of the semantic relation is \"material steel\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, motorcycle, bicycle, airplane, boat, helicopter, submarine"}
{"cat":"vehicles","slot":"material","value":"wood","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can be made of\";         A textual example of the semantic relation is \"material wood\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, bus, train, plane, ship, bicycle, motorcycle, truck, boat, submarine"}
{"cat":"vehicles","slot":"user","value":"people","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are used by\";         A textual example of the semantic relation is \"user peoples\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, plane, bicycle, motorcycle, boat, submarine, rocket"}
{"cat":"vehicles","slot":"user","value":"army","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are used by\";         A textual example of the semantic relation is \"user armies\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        cars, trucks, buses, motorcycles, bicycles, airplanes, helicopters, boats, trains, submarines"}
{"cat":"vehicles","slot":"user","value":"driver","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are used by\";         A textual example of the semantic relation is \"user drivers\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        cars, trucks, buses, motorcycles, bicycles, airplanes, helicopters, boats, trains, submarines"}
{"cat":"vehicles","slot":"user","value":"person","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are used by\";         A textual example of the semantic relation is \"user people\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, airplane, bicycle, motorcycle, boat, submarine, rocket"}
{"cat":"vehicles","slot":"user","value":"cyclist","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are used by\";         A textual example of the semantic relation is \"user cyclists\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        cars, bicycles, motorcycles, trucks, buses, trains, airplanes, boats, submarines, spaceships"}
{"cat":"vehicles","slot":"user","value":"co-pilot","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are used by\";         A textual example of the semantic relation is \"user co-pilots\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, bus, train, plane, bicycle, motorcycle, boat, submarine, spaceship, hot air balloon"}
{"cat":"vehicles","slot":"user","value":"farmer","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are used by\";         A textual example of the semantic relation is \"user farmers\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        Tractor, Combine, Harvester, Plow, Cultivator, Sprayer, Seeder, Baler, Truck, Trailer"}
{"cat":"vehicles","slot":"user","value":"sailor","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are used by\";         A textual example of the semantic relation is \"user sailors\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        ship, boat, yacht, cruise, sailboat, ferry, submarine, aircraft, airplane, helicopter"}
{"cat":"vehicles","slot":"user","value":"officer","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are used by\";         A textual example of the semantic relation is \"user officers\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        cars, trucks, buses, trains, airplanes, boats, bicycles, motorcycles, skateboards, segways"}
{"cat":"vehicles","slot":"user","value":"businessman","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are used by\";         A textual example of the semantic relation is \"user businessmen\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        cars, buses, trains, airplanes, bicycles, motorcycles, trucks, taxis, boats, submarines"}
{"cat":"vehicles","slot":"user","value":"holidaymaker","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are used by\";         A textual example of the semantic relation is \"user holidaymakers\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, bus, train, airplane, cruise ship, motorcycle, bicycle, taxi, subway, tram"}
{"cat":"vehicles","slot":"user","value":"helmsman","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are used by\";         A textual example of the semantic relation is \"user helmsmen\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        \"cars, trucks, buses, trains, airplanes, helicopters, motorcycles, bicycles, boats, submarines\""}
{"cat":"vehicles","slot":"user","value":"taxi driver","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are used by\";         A textual example of the semantic relation is \"user taxi drivers\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        taxi, bus, train, car, truck, motorcycle, bicycle, airplane, boat, subway"}
{"cat":"vehicles","slot":"user","value":"hostess","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are used by\";         A textual example of the semantic relation is \"user hostesses\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        cars, trucks, buses, trains, planes, boats, motorcycles, bicycles, skateboards, segways"}
{"cat":"vehicles","slot":"user","value":"steward","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are used by\";         A textual example of the semantic relation is \"user stewards\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bus, train, car, bicycle, motorcycle, boat, plane, taxi, tram, subway"}
{"cat":"vehicles","slot":"user","value":"cruise","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are used by\";         A textual example of the semantic relation is \"user cruises\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, bus, train, plane, boat, bicycle, motorcycle, truck, taxi, subway"}
{"cat":"vehicles","slot":"user","value":"navy","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are used by\";         A textual example of the semantic relation is \"user navies\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        ship, boat, aircraft, train, car, bus, truck, motorcycle, bicycle, submarine"}
{"cat":"vehicles","slot":"user","value":"captain","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are used by\";         A textual example of the semantic relation is \"user captains\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bus, car, ship, train, plane, motorcycle, bicycle, truck, taxi, subway"}
{"cat":"vehicles","slot":"user","value":"pedestrian","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are used by\";         A textual example of the semantic relation is \"user pedestrians\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        cars, buses, trucks, motorcycles, bicycles, trains, airplanes, boats, submarines, spaceships"}
{"cat":"vehicles","slot":"user","value":"corps","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are used by\";         A textual example of the semantic relation is \"user corps\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, bus, train, airplane, ship, bicycle, motorcycle, truck, taxi, subway"}
{"cat":"vehicles","slot":"user","value":"squadron","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are used by\";         A textual example of the semantic relation is \"user squadrons\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        cars, trucks, buses, trains, airplanes, helicopters, motorcycles, bicycles, boats, submarines"}
{"cat":"vehicles","slot":"place","value":"farm","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can be found or used in\";         A textual example of the semantic relation is \"place farms\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, airplane, boat, motorcycle, bicycle, taxi, subway"}
{"cat":"vehicles","slot":"user","value":"passenger","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are used by\";         A textual example of the semantic relation is \"user passengers\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, bus, train, airplane, bicycle, motorcycle, boat, subway, taxi, truck"}
{"cat":"vehicles","slot":"user","value":"pilot","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are used by\";         A textual example of the semantic relation is \"user pilots\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, airplane, ship, motorcycle, bicycle, taxi, subway"}
{"cat":"vehicles","slot":"movement","value":"dock","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can\";         A textual example of the semantic relation is \"movement dock\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, boat, plane, bicycle, motorcycle, submarine, spaceship"}
{"cat":"vehicles","slot":"purpose","value":"dock","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are used for\";         A textual example of the semantic relation is \"purpose dock\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        boat, ship, ferry, cruise, yacht, sailboat, canoe, kayak, rowboat, dinghy"}
{"cat":"vehicles","slot":"generalization","value":"vehicle","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization vehicle\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, motorcycle, bicycle, train, airplane, boat, submarine, rocket"}
{"cat":"vehicles","slot":"generalization","value":"transportation","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization transportation\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, bus, train, plane, boat, motorcycle, bicycle, truck, taxi, subway"}
{"cat":"vehicles","slot":"generalization","value":"container","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization container\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, motorcycle, bicycle, train, airplane, boat, submarine, rocket"}
{"cat":"vehicles","slot":"generalization","value":"conveyance","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization conveyance\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, bus, train, airplane, boat, bicycle, motorcycle, truck, taxi, subway"}
{"cat":"vehicles","slot":"generalization","value":"instrumentation","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization instrumentation\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, airplane, motorcycle, bicycle, boat, submarine, helicopter"}
{"cat":"vehicles","slot":"generalization","value":"instrumentality","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization instrumentality\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":" car, truck, bus, train, boat, plane, motorcycle, bicycle, submarine, rocket"}
{"cat":"vehicles","slot":"generalization","value":"self-propelled vehicle","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization self-propelled vehicle\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, plane, boat, motorcycle, bicycle, submarine, rocket"}
{"cat":"vehicles","slot":"generalization","value":"motor vehicle","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization motor vehicle\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, airplane, boat, bicycle, motorcycle, subway, taxi"}
{"cat":"vehicles","slot":"generalization","value":"automotive vehicle","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization automotive vehicle\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, motorcycle, bicycle, train, boat, airplane, helicopter, submarine"}
{"cat":"vehicles","slot":"generalization","value":"cycle","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization cycle\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, bus, train, plane, bicycle, motorcycle, truck, boat, submarine, rocket"}
{"cat":"vehicles","slot":"generalization","value":"lawn tool","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization lawn tool\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":" car, truck, bus, train, airplane, boat, motorcycle, bicycle, taxi, subway"}
{"cat":"vehicles","slot":"generalization","value":"implement","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization implement\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, motorcycle, bicycle, train, airplane, boat, ship, submarine"}
{"cat":"vehicles","slot":"generalization","value":"machine","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization machine\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, bus, train, plane, boat, motorcycle, bicycle, truck, taxi, subway"}
{"cat":"vehicles","slot":"generalization","value":"airplane","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization airplane\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, motorcycle, bicycle, airplane, train, boat, submarine, spacecraft"}
{"cat":"vehicles","slot":"generalization","value":"tractor","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization tractor\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, bus, truck, train, airplane, bicycle, motorcycle, boat, submarine, spaceship"}
{"cat":"vehicles","slot":"generalization","value":"plane","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization plane\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, motorcycle, bicycle, train, airplane, boat, ship, submarine"}
{"cat":"vehicles","slot":"generalization","value":"bike","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization bike\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, plane, ship, motorcycle, bicycle, submarine, helicopter"}
{"cat":"vehicles","slot":"generalization","value":"automobile","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization automobile\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, airplane, boat, bicycle, motorcycle, taxi, subway"}
{"cat":"vehicles","slot":"generalization","value":"artifact","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization artifact\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, plane, boat, motorcycle, bicycle, unicycle, skateboard"}
{"cat":"vehicles","slot":"generalization","value":"tool","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization tool\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, bus, train, truck, motorcycle, bicycle, boat, airplane, submarine, rocket"}
{"cat":"vehicles","slot":"generalization","value":"car","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization car\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":" car, bus, truck, train, boat, ship, plane, motorcycle, bicycle, taxi"}
{"cat":"vehicles","slot":"generalization","value":"public transport","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization public transport\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, bus, train, airplane, boat, bicycle, motorcycle, truck, taxi, subway"}
{"cat":"vehicles","slot":"generalization","value":"artefact","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization artefact\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, airplane, bicycle, motorcycle, boat, submarine, helicopter"}
{"cat":"vehicles","slot":"generalization","value":"auto","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization auto\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, plane, boat, motorcycle, bicycle, taxi, subway"}
{"cat":"vehicles","slot":"generalization","value":"aeroplane","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization aeroplane\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, motorcycle, bicycle, train, airplane, boat, submarine, rocket"}
{"cat":"vehicles","slot":"generalization","value":"motorcar","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization motorcar\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, bus, train, truck, motorcycle, bicycle, airplane, boat, submarine, spaceship"}
{"cat":"vehicles","slot":"generalization","value":"bicycle","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization bicycle\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, bus, train, plane, boat, motorcycle, bicycle, truck, van, taxi"}
{"cat":"vehicles","slot":"generalization","value":"garden tool","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization garden tool\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, bus, train, plane, boat, bicycle, motorcycle, truck, taxi, subway"}
{"cat":"vehicles","slot":"generalization","value":"wheeled vehicle","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization wheeled vehicle\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, motorcycle, bicycle, train, airplane, boat, ship, submarine"}
{"cat":"vehicles","slot":"generalization","value":"craft","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization craft\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, plane, boat, motorcycle, bicycle, skateboard, unicycle"}
{"cat":"vehicles","slot":"colorPattern","value":"grey","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"colorPattern grey\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, plane, boat, bicycle, motorcycle, taxi, subway"}
{"cat":"vehicles","slot":"colorPattern","value":"black","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"colorPattern black\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, bus, train, airplane, ship, motorcycle, bicycle, truck, van, taxi"}
{"cat":"vehicles","slot":"colorPattern","value":"red","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"colorPattern red\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, boat, plane, motorcycle, bicycle, skateboard, unicycle"}
{"cat":"vehicles","slot":"colorPattern","value":"white","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"colorPattern white\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, boat, plane, motorcycle, bicycle, submarine, spaceship"}
{"cat":"vehicles","slot":"colorPattern","value":"blue","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"colorPattern blue\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":" car, truck, bus, train, plane, boat, motorcycle, bicycle, unicycle, skateboard"}
{"cat":"vehicles","slot":"colorPattern","value":"green","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"colorPattern green\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, plane, boat, bicycle, motorcycle, taxi, subway"}
{"cat":"vehicles","slot":"colorPattern","value":"silver","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"colorPattern silver\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, airplane, boat, motorcycle, bicycle, skateboard, unicycle"}
{"cat":"vehicles","slot":"colorPattern","value":"shiny","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"colorPattern shiny\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, airplane, motorcycle, bicycle, boat, submarine, spaceship"}
{"cat":"vehicles","slot":"colorPattern","value":"glossy","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"colorPattern glossy\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"10 words: car, truck, bus, motorcycle, bicycle, airplane, boat, train, subway, taxi"}
{"cat":"vehicles","slot":"generalization","value":"vessel","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization vessel\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, bus, truck, train, boat, ship, plane, bicycle, motorcycle, submarine"}
{"cat":"vehicles","slot":"part","value":"wheel","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part wheel\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, bus, train, airplane, boat, motorcycle, bicycle, truck, taxi, subway"}
{"cat":"vehicles","slot":"part","value":"light","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part light\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":" car, truck, bus, motorcycle, bicycle, boat, airplane, train, helicopter, submarine"}
{"cat":"vehicles","slot":"part","value":"engine","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part engine\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, boat, airplane, motorcycle, bicycle, skateboard, unicycle"}
{"cat":"vehicles","slot":"part","value":"brake","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part brake\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, plane, boat, motorcycle, bicycle, skateboard, unicycle"}
{"cat":"vehicles","slot":"part","value":"seat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part seat\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, plane, boat, motorcycle, bicycle, skateboard, scooter"}
{"cat":"vehicles","slot":"part","value":"window","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part window\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, bus, truck, motorcycle, bicycle, train, boat, airplane, helicopter, spaceship"}
{"cat":"vehicles","slot":"part","value":"door","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part door\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, bus, train, airplane, ship, motorcycle, bicycle, taxi, truck, subway"}
{"cat":"vehicles","slot":"part","value":"hood","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part hood\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, plane, boat, motorcycle, bicycle, unicycle, skateboard"}
{"cat":"vehicles","slot":"part","value":"tire","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part tire\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, motorcycle, truck, bus, train, boat, plane, bicycle, unicycle, segway"}
{"cat":"vehicles","slot":"part","value":"cowling","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part cowling\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, motorcycle, bicycle, boat, airplane, train, submarine, spacecraft"}
{"cat":"vehicles","slot":"part","value":"bumper","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part bumper\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, motorcycle, bus, train, boat, plane, helicopter, bicycle, skateboard"}
{"cat":"vehicles","slot":"part","value":"windshield","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part windshield\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, motorcycle, bicycle, boat, train, plane, helicopter, submarine"}
{"cat":"vehicles","slot":"part","value":"bonnet","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part bonnet\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, plane, boat, motorcycle, bicycle, skateboard, scooter"}
{"cat":"vehicles","slot":"part","value":"gear","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part gear\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, motorcycle, bicycle, airplane, helicopter, boat, train, submarine"}
{"cat":"vehicles","slot":"part","value":"cowl","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part cowl\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, boat, ship, plane, helicopter, motorcycle, bicycle"}
{"cat":"vehicles","slot":"part","value":"accelerator","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part accelerator\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, plane, ship, motorcycle, bicycle, skateboard, scooter"}
{"cat":"vehicles","slot":"part","value":"propeller","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part propeller\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, bus, train, plane, boat, bicycle, motorcycle, truck, taxi, subway"}
{"cat":"vehicles","slot":"part","value":"frame","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part frame\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, airplane, boat, motorcycle, bicycle, scooter, skateboard"}
{"cat":"vehicles","slot":"part","value":"porthole","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part porthole\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, bus, train, airplane, ship, bicycle, motorcycle, truck, taxi, subway"}
{"cat":"vehicles","slot":"part","value":"bicycle wheel","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part bicycle wheel\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bicycle, car, truck, bus, train, airplane, ship, boat, motorcycle, submarine"}
{"cat":"vehicles","slot":"part","value":"cargo hold","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part cargo hold\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        truck, ship, train, airplane, bus, car, motorcycle, bicycle, boat, van"}
{"cat":"vehicles","slot":"part","value":"coachwork","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part coachwork\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, bus, train, airplane, ship, motorcycle, bicycle, truck, taxi, subway"}
{"cat":"vehicles","slot":"part","value":"glove compartment","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part glove compartment\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, motorcycle, bus, train, airplane, boat, bicycle, helicopter, submarine"}
{"cat":"vehicles","slot":"part","value":"caboose","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part caboose\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"1. car, 2. bus, 3. train, 4. truck, 5. bike, 6. motorcycle, 7. boat, 8. plane, 9. helicopter, 10. submarine"}
{"cat":"vehicles","slot":"part","value":"throttle","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part throttle\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, motorcycle, bicycle, train, boat, airplane, helicopter, submarine"}
{"cat":"vehicles","slot":"part","value":"wing","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part wing\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, bus, train, boat, plane, bicycle, motorcycle, truck, taxi, subway"}
{"cat":"vehicles","slot":"part","value":"fender","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part fender\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, motorcycle, bus, train, plane, boat, bicycle, skateboard, scooter"}
{"cat":"vehicles","slot":"part","value":"crew","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part crew\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, bus, train, plane, boat, ship, motorcycle, bicycle, truck, taxi"}
{"cat":"vehicles","slot":"part","value":"forecastle","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part forecastle\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, plane, ship, boat, motorcycle, bicycle, unicycle"}
{"cat":"vehicles","slot":"part","value":"pod","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part pod\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, plane, boat, motorcycle, bicycle, skateboard, scooter"}
{"cat":"vehicles","slot":"part","value":"escape hatch","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part escape hatch\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, boat, airplane, helicopter, motorcycle, bicycle, skateboard"}
{"cat":"vehicles","slot":"part","value":"funnel","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part funnel\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, plane, boat, motorcycle, bicycle, skateboard, unicycle"}
{"cat":"vehicles","slot":"part","value":"shroud","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part shroud\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, plane, boat, motorcycle, bicycle, skateboard, scooter"}
{"cat":"vehicles","slot":"part","value":"basket","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part basket\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, bus, train, plane, ship, motorcycle, bicycle, truck, taxi, subway"}
{"cat":"vehicles","slot":"part","value":"quarter","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part quarter\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, motorcycle, bicycle, boat, plane, train, subway, taxi"}
{"cat":"vehicles","slot":"part","value":"cargo area","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part cargo area\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, van, bus, train, airplane, boat, motorcycle, bicycle, skateboard"}
{"cat":"vehicles","slot":"part","value":"gyrostabiliser","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part gyrostabiliser\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, motorcycle, truck, bus, train, airplane, helicopter, boat, submarine, spacecraft"}
{"cat":"vehicles","slot":"part","value":"gas pedal","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part gas pedal\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, motorcycle, bicycle, airplane, boat, train, subway, taxi"}
{"cat":"vehicles","slot":"part","value":"car window","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part car window\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, bus, train, plane, boat, motorcycle, bicycle, truck, van, taxi"}
{"cat":"vehicles","slot":"part","value":"gyrostabilizer","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part gyrostabilizer\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, motorcycle, bus, train, airplane, helicopter, boat, submarine, bicycle, skateboard"}
{"cat":"vehicles","slot":"part","value":"taillight","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part taillight\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, airplane, motorcycle, bicycle, boat, submarine, helicopter"}
{"cat":"vehicles","slot":"part","value":"stabilizer bar","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part stabilizer bar\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, motorcycle, bicycle, train, plane, boat, submarine, rocket"}
{"cat":"vehicles","slot":"part","value":"roof","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part roof\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, bus, truck, train, plane, boat, motorcycle, bicycle, skateboard, scooter"}
{"cat":"vehicles","slot":"part","value":"radiator grille","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part radiator grille\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, motorcycle, bicycle, train, airplane, boat, submarine, rocket"}
{"cat":"vehicles","slot":"part","value":"riding bitt","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part riding bitt\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, boat, ship, plane, motorcycle, bicycle, skateboard"}
{"cat":"vehicles","slot":"part","value":"anchor","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part anchor\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, bus, truck, train, plane, boat, motorcycle, bicycle, taxi, subway"}
{"cat":"vehicles","slot":"part","value":"storage area","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part storage area\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, plane, boat, motorcycle, bicycle, scooter, skateboard"}
{"cat":"vehicles","slot":"part","value":"car mirror","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part car mirror\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, motorcycle, bicycle, train, boat, airplane, helicopter, submarine"}
{"cat":"vehicles","slot":"part","value":"lifeboat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part lifeboat\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        boat, ship, submarine, airplane, helicopter, train, bus, car, motorcycle, bicycle"}
{"cat":"vehicles","slot":"part","value":"fuel pod","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part fuel pod\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, airplane, boat, motorcycle, bicycle, skateboard, unicycle"}
{"cat":"vehicles","slot":"part","value":"after part","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part after part\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, boat, plane, motorcycle, bicycle, scooter, skateboard"}
{"cat":"vehicles","slot":"part","value":"bulkhead","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part bulkhead\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, plane, boat, motorcycle, bicycle, skateboard, unicycle"}
{"cat":"vehicles","slot":"part","value":"interior","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part interior\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, plane, boat, motorcycle, bicycle, submarine, spaceship"}
{"cat":"vehicles","slot":"part","value":"davit","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part davit\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        boat, ship, yacht, cruise, ferry, barge, sailboat, canoe, kayak, raft"}
{"cat":"vehicles","slot":"part","value":"water","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part water\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, bus, train, plane, boat, bicycle, motorcycle, truck, taxi, van"}
{"cat":"vehicles","slot":"part","value":"engine room","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part engine room\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, boat, ship, plane, helicopter, motorcycle, bicycle"}
{"cat":"vehicles","slot":"part","value":"trunk","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part trunk\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, boat, plane, motorcycle, bicycle, skateboard, unicycle"}
{"cat":"vehicles","slot":"part","value":"handlebar","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part handlebar\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, bike, motorcycle, bus, train, airplane, boat, ship, truck, van"}
{"cat":"vehicles","slot":"part","value":"sprocket wheel","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part sprocket wheel\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, plane, boat, motorcycle, bicycle, skateboard, unicycle"}
{"cat":"vehicles","slot":"part","value":"helm","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part helm\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, bus, train, plane, boat, bicycle, motorcycle, truck, taxi, subway"}
{"cat":"vehicles","slot":"part","value":"topside","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part topside\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, bus, train, plane, boat, motorcycle, bicycle, truck, taxi, subway"}
{"cat":"vehicles","slot":"part","value":"saddle","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part saddle\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, motorcycle, bicycle, bus, train, airplane, boat, truck, subway, taxi"}
{"cat":"vehicles","slot":"part","value":"antenna","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part antenna\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, bus, truck, train, boat, airplane, motorcycle, bicycle, taxi, subway"}
{"cat":"vehicles","slot":"part","value":"rudder","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part rudder\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, plane, boat, motorcycle, bicycle, skateboard, unicycle"}
{"cat":"vehicles","slot":"part","value":"tube","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part tube\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, bus, train, airplane, boat, motorcycle, bicycle, truck, van, taxi"}
{"cat":"vehicles","slot":"part","value":"lubber's hole","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part lubber's hole\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, boat, plane, bicycle, motorcycle, scooter, skateboard"}
{"cat":"vehicles","slot":"part","value":"bilge well","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part bilge well\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        ship, boat, yacht, cruise ship, aircraft, plane, train, car, truck, bus"}
{"cat":"vehicles","slot":"part","value":"third gear","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part third gear\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, plane, boat, bicycle, motorcycle, scooter, skateboard"}
{"cat":"vehicles","slot":"part","value":"tail","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part tail\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, motorcycle, bicycle, train, airplane, boat, submarine, spaceship"}
{"cat":"vehicles","slot":"part","value":"stern","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part stern\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, plane, boat, motorcycle, bicycle, scooter, skateboard"}
{"cat":"vehicles","slot":"part","value":"skeleton","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part skeleton\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, airplane, motorcycle, bicycle, boat, submarine, spaceship"}
{"cat":"vehicles","slot":"part","value":"mast","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part mast\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, plane, ship, motorcycle, bicycle, skateboard, unicycle"}
{"cat":"vehicles","slot":"part","value":"high","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part high\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, plane, boat, bicycle, motorcycle, scooter, skateboard"}
{"cat":"vehicles","slot":"part","value":"keel","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part keel\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        boat, ship, yacht, cruise liner, sailboat, submarine, aircraft carrier, ferry, canoe, kayak"}
{"cat":"vehicles","slot":"part","value":"bilge pump","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part bilge pump\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        boat, ship, yacht, cruiser, sailboat, submarine, airplane, helicopter, car, bus"}
{"cat":"vehicles","slot":"part","value":"railing","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part railing\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, bus, train, plane, boat, motorcycle, bicycle, truck, van, taxi"}
{"cat":"vehicles","slot":"part","value":"underframe","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part underframe\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, airplane, boat, motorcycle, bicycle, unicycle, skateboard"}
{"cat":"vehicles","slot":"part","value":"seat belt","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part seat belt\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":" car, bus, train, airplane, boat, motorcycle, truck, bicycle, skateboard, helicopter"}
{"cat":"vehicles","slot":"part","value":"screw propeller","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part screw propeller\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, bus, train, boat, airplane, motorcycle, bicycle, truck, taxi, subway"}
{"cat":"vehicles","slot":"part","value":"axle","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part axle\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, motorcycle, bicycle, train, plane, boat, submarine, helicopter"}
{"cat":"vehicles","slot":"part","value":"nose","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part nose\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":" car, bus, train, airplane, ship, bicycle, motorcycle, truck, taxi, subway"}
{"cat":"vehicles","slot":"part","value":"radio","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part radio\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, bus, train, plane, boat, motorcycle, bicycle, truck, taxi, subway"}
{"cat":"vehicles","slot":"part","value":"high gear","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part high gear\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"10 words that belong to the category \"vehicles\" and satisfy the semantic relation \"can have\" are: car, truck, motorcycle, bus, train, airplane, boat, bicycle, skateboard, and scooter."}
{"cat":"vehicles","slot":"part","value":"poop","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part poop\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, bus, train, airplane, boat, motorcycle, bicycle, skateboard, scooter, unicycle"}
{"cat":"vehicles","slot":"part","value":"cabin","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part cabin\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, airplane, motorcycle, bicycle, boat, helicopter, submarine"}
{"cat":"vehicles","slot":"part","value":"sprocket","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part sprocket\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, motorcycle, bicycle, boat, airplane, helicopter, submarine"}
{"cat":"vehicles","slot":"part","value":"windlass","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part windlass\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, boat, plane, motorcycle, bicycle, skateboard, scooter"}
{"cat":"vehicles","slot":"part","value":"deck","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part deck\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, bus, truck, train, boat, plane, motorcycle, bicycle, skateboard, scooter"}
{"cat":"vehicles","slot":"part","value":"bulwark","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part bulwark\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, motorcycle, bicycle, boat, train, airplane, helicopter, spaceship"}
{"cat":"vehicles","slot":"part","value":"fuselage","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part fuselage\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, plane, boat, motorcycle, bicycle, skateboard, scooter"}
{"cat":"vehicles","slot":"part","value":"horn","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part horn\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, plane, boat, motorcycle, bicycle, skateboard, unicycle"}
{"cat":"vehicles","slot":"part","value":"hold","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part hold\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, bus, train, airplane, ship, motorcycle, bicycle, truck, taxi, subway"}
{"cat":"vehicles","slot":"part","value":"spoke","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part spoke\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, plane, boat, motorcycle, bicycle, unicycle, skateboard"}
{"cat":"vehicles","slot":"part","value":"ratline","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part ratline\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, boat, plane, bicycle, motorcycle, scooter, skateboard"}
{"cat":"vehicles","slot":"part","value":"ridge rope","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part ridge rope\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, plane, boat, motorcycle, bicycle, skateboard, unicycle"}
{"cat":"vehicles","slot":"part","value":"winch","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part winch\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, boat, plane, motorcycle, bicycle, scooter, van"}
{"cat":"vehicles","slot":"part","value":"sheet","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part sheet\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, bus, train, plane, boat, bicycle, motorcycle, truck, taxi, subway"}
{"cat":"vehicles","slot":"part","value":"sunroof","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part sunroof\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, motorcycle, bicycle, boat, train, airplane, helicopter, submarine"}
{"cat":"vehicles","slot":"part","value":"reverse","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part reverse\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, bus, truck, motorcycle, bicycle, train, boat, airplane, helicopter, submarine"}
{"cat":"vehicles","slot":"part","value":"cockpit","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part cockpit\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, motorcycle, bicycle, bus, train, boat, plane, helicopter, submarine, rocket"}
{"cat":"vehicles","slot":"part","value":"log","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part log\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, bus, train, airplane, ship, motorcycle, bicycle, truck, taxi, subway"}
{"cat":"vehicles","slot":"part","value":"first","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part first\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, motorcycle, bicycle, train, airplane, boat, helicopter, submarine"}
{"cat":"vehicles","slot":"part","value":"black box","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part black box\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, boat, plane, motorcycle, bicycle, skateboard, unicycle"}
{"cat":"vehicles","slot":"part","value":"tailfin","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part tailfin\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, bus, train, plane, boat, motorcycle, bicycle, truck, taxi, subway"}
{"cat":"vehicles","slot":"part","value":"bay","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part bay\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"10 words: car, truck, bus, train, boat, airplane, motorcycle, bicycle, skateboard, scooter"}
{"cat":"vehicles","slot":"part","value":"wiper","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part wiper\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, bus, train, bicycle, motorcycle, truck, boat, airplane, helicopter, submarine"}
{"cat":"vehicles","slot":"part","value":"number plate","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part number plate\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, motorcycle, bicycle, train, airplane, boat, helicopter, submarine"}
{"cat":"vehicles","slot":"part","value":"air bag","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part air bag\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, motorcycle, bicycle, boat, airplane, train, subway, taxi"}
{"cat":"vehicles","slot":"part","value":"fin","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part fin\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, bus, truck, train, boat, plane, motorcycle, bicycle, skateboard, scooter"}
{"cat":"vehicles","slot":"part","value":"weather sheet","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part weather sheet\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, plane, boat, motorcycle, bicycle, scooter, skateboard"}
{"cat":"vehicles","slot":"part","value":"pedal","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part pedal\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, plane, boat, motorcycle, bicycle, skateboard, scooter"}
{"cat":"vehicles","slot":"part","value":"hull","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part hull\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, bus, train, plane, boat, motorcycle, bicycle, truck, taxi, subway"}
{"cat":"vehicles","slot":"part","value":"navigation light","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part navigation light\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, airplane, helicopter, boat, ship, motorcycle, bicycle"}
{"cat":"vehicles","slot":"part","value":"sunshine-roof","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part sunshine-roof\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"10 words: car, bus, train, airplane, ship, bicycle, motorcycle, truck, boat, submarine"}
{"cat":"vehicles","slot":"part","value":"landing gear","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part landing gear\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        airplane, landing gear, tire, engine, propeller, wing, tail, cockpit, cabin, fuel tank"}
{"cat":"vehicles","slot":"part","value":"box","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part box\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, plane, boat, motorcycle, bicycle, unicycle, skateboard"}
{"cat":"vehicles","slot":"part","value":"headlight","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part headlight\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, motorcycle, bus, train, airplane, boat, bicycle, helicopter, submarine"}
{"cat":"vehicles","slot":"part","value":"spar","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part spar\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, bus, train, airplane, boat, bicycle, motorcycle, truck, taxi, subway"}
{"cat":"vehicles","slot":"part","value":"galley","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part galley\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, plane, boat, motorcycle, bicycle, submarine, rocket"}
{"cat":"vehicles","slot":"part","value":"mudguard","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part mudguard\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, bus, truck, motorcycle, bicycle, boat, airplane, train, subway, helicopter"}
{"cat":"vehicles","slot":"part","value":"third","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part third\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, boat, plane, motorcycle, bicycle, skateboard, unicycle"}
{"cat":"vehicles","slot":"part","value":"gun","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part gun\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, bus, train, plane, boat, motorcycle, bicycle, truck, taxi, subway"}
{"cat":"vehicles","slot":"part","value":"steering wheel","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part steering wheel\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, motorcycle, bus, train, plane, boat, bicycle, skateboard, unicycle"}
{"cat":"vehicles","slot":"part","value":"auto accessory","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part auto accessory\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, motorcycle, bicycle, boat, plane, train, helicopter, submarine"}
{"cat":"vehicles","slot":"part","value":"skeletal frame","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part skeletal frame\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, airplane, boat, bicycle, motorcycle, skateboard, unicycle"}
{"cat":"vehicles","slot":"part","value":"gearbox","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part gearbox\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, motorcycle, bicycle, boat, plane, helicopter, submarine"}
{"cat":"vehicles","slot":"part","value":"tack","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part tack\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, bus, train, airplane, bicycle, motorcycle, boat, truck, taxi, subway"}
{"cat":"vehicles","slot":"part","value":"fo'c'sle","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part fo'c'sle\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, plane, ship, motorcycle, bicycle, scooter, boat"}
{"cat":"vehicles","slot":"part","value":"screw","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part screw\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, airplane, boat, motorcycle, bicycle, taxi, subway"}
{"cat":"vehicles","slot":"part","value":"superstructure","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part superstructure\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, boat, plane, motorcycle, bicycle, submarine, spacecraft"}
{"cat":"vehicles","slot":"part","value":"ship's galley","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part ship's galley\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        ship, car, truck, bus, train, airplane, motorcycle, bicycle, boat, submarine"}
{"cat":"vehicles","slot":"part","value":"sea anchor","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part sea anchor\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        boat, ship, yacht, sailboat, submarine, aircraft, car, truck, bus, train"}
{"cat":"vehicles","slot":"part","value":"cookhouse","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part cookhouse\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, plane, boat, motorcycle, bicycle, skateboard, scooter"}
{"cat":"vehicles","slot":"part","value":"handle","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part handle\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, bus, truck, train, boat, plane, bicycle, motorcycle, scooter, skateboard"}
{"cat":"vehicles","slot":"part","value":"radome","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part radome\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        airplane, car, truck, motorcycle, bicycle, boat, train, bus, subway, helicopter"}
{"cat":"vehicles","slot":"part","value":"radar dome","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part radar dome\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        cars, trucks, buses, motorcycles, bicycles, boats, trains, planes, helicopters, submarines"}
{"cat":"vehicles","slot":"part","value":"first gear","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part first gear\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, motorcycle, bicycle, boat, airplane, helicopter, submarine"}
{"cat":"vehicles","slot":"part","value":"ratlin","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part ratlin\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, plane, boat, motorcycle, bicycle, skateboard, scooter"}
{"cat":"vehicles","slot":"part","value":"chain","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part chain\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, motorcycle, bicycle, train, airplane, boat, bus, truck, van, taxi"}
{"cat":"vehicles","slot":"part","value":"dashboard","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part dashboard\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, plane, boat, motorcycle, bicycle, skateboard, scooter"}
{"cat":"vehicles","slot":"part","value":"rope","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part rope\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"1. car, 2. truck, 3. bus, 4. train, 5. airplane, 6. bicycle, 7. motorcycle, 8. boat, 9. submarine, 10. spacecraft"}
{"cat":"vehicles","slot":"part","value":"petrol engine","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part petrol engine\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, bus, truck, motorcycle, bicycle, train, airplane, boat, submarine, helicopter"}
{"cat":"vehicles","slot":"part","value":"turbine","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part turbine\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, bus, train, airplane, boat, truck, motorcycle, bicycle, skateboard, unicycle"}
{"cat":"vehicles","slot":"part","value":"car door","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part car door\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, plane, ship, motorcycle, bicycle, unicycle, skateboard"}
{"cat":"vehicles","slot":"part","value":"grille","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part grille\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, motorcycle, bicycle, airplane, train, boat, submarine, spaceship"}
{"cat":"vehicles","slot":"part","value":"tail fin","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part tail fin\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, airplane, boat, motorcycle, bicycle, skateboard, unicycle"}
{"cat":"vehicles","slot":"part","value":"rear window","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part rear window\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, motorcycle, bicycle, airplane, boat, train, subway, taxi"}
{"cat":"vehicles","slot":"part","value":"cargo deck","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part cargo deck\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        airplane, boat, car, motorcycle, train, truck, bus, helicopter, submarine, bicycle"}
{"cat":"vehicles","slot":"part","value":"anti-sway bar","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part anti-sway bar\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":" car, truck, motorcycle, bus, train, airplane, boat, bicycle, skateboard, unicycle"}
{"cat":"vehicles","slot":"part","value":"crow's nest","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part crow's nest\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, bus, train, airplane, boat, motorcycle, bicycle, truck, taxi, subway"}
{"cat":"vehicles","slot":"part","value":"top","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part top\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, motorcycle, bicycle, boat, airplane, train, subway, taxi"}
{"cat":"vehicles","slot":"part","value":"accelerator pedal","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part accelerator pedal\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"10 words: car, truck, bus, train, plane, boat, bicycle, motorcycle, skateboard, scooter"}
{"cat":"vehicles","slot":"part","value":"windshield wiper","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part windshield wiper\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":" car, truck, bus, motorcycle, bicycle, airplane, train, boat, submarine, helicopter"}
{"cat":"vehicles","slot":"part","value":"dynamo","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part dynamo\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, plane, boat, motorcycle, bicycle, skateboard, unicycle"}
{"cat":"vehicles","slot":"part","value":"coaster brake","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part coaster brake\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bicycle, motorcycle, car, truck, bus, train, plane, boat, submarine, rocket"}
{"cat":"vehicles","slot":"part","value":"gasoline engine","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part gasoline engine\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, motorcycle, bus, train, airplane, helicopter, boat, submarine, bicycle, unicycle"}
{"cat":"vehicles","slot":"part","value":"floorboard","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part floorboard\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, bus, train, airplane, bicycle, motorcycle, boat, truck, taxi, subway"}
{"cat":"vehicles","slot":"part","value":"low gear","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part low gear\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, motorcycle, bicycle, bus, train, airplane, boat, truck, helicopter, submarine"}
{"cat":"vehicles","slot":"part","value":"low","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part low\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, airplane, boat, motorcycle, bicycle, skateboard, unicycle"}
{"cat":"vehicles","slot":"part","value":"bunk","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part bunk\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, airplane, boat, motorcycle, bicycle, skateboard, scooter"}
{"cat":"vehicles","slot":"part","value":"reverse gear","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part reverse gear\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, airplane, boat, bicycle, motorcycle, scooter, unicycle"}
{"cat":"vehicles","slot":"part","value":"kickstand","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part kickstand\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bicycle, motorcycle, car, truck, bus, train, airplane, boat, helicopter, submarine"}
{"cat":"vehicles","slot":"part","value":"drogue","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part drogue\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, plane, boat, motorcycle, bicycle, skateboard, scooter"}
{"cat":"vehicles","slot":"part","value":"buffer","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part buffer\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, bus, truck, motorcycle, bicycle, train, boat, airplane, helicopter, submarine"}
{"cat":"vehicles","slot":"part","value":"oil","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part oil\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, airplane, boat, motorcycle, bicycle, skateboard, scooter"}
{"cat":"vehicles","slot":"part","value":"car seat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part car seat\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, bus, train, plane, ship, bicycle, motorcycle, truck, taxi, subway"}
{"cat":"vehicles","slot":"part","value":"chain guard","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part chain guard\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, airplane, bicycle, motorcycle, boat, helicopter, submarine"}
{"cat":"vehicles","slot":"part","value":"running board","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part running board\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, motorcycle, bicycle, train, boat, airplane, helicopter, spaceship"}
{"cat":"vehicles","slot":"part","value":"battery","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part battery\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, plane, boat, motorcycle, bicycle, skateboard, scooter"}
{"cat":"vehicles","slot":"part","value":"mirror","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part mirror\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, boat, airplane, motorcycle, bicycle, helicopter, submarine"}
{"cat":"vehicles","slot":"part","value":"automobile engine","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part automobile engine\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, motorcycle, bicycle, airplane, train, boat, submarine, helicopter"}
{"cat":"vehicles","slot":"part","value":"mainsheet","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part mainsheet\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, plane, boat, motorcycle, bicycle, skateboard, unicycle"}
{"cat":"vehicles","slot":"generalization","value":"aircraft","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization aircraft\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, bus, train, plane, boat, motorcycle, bicycle, truck, van, taxi"}
{"cat":"vehicles","slot":"generalization","value":"heavier-than-air craft","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization heavier-than-air craft\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, airplane, motorcycle, bicycle, boat, ship, submarine"}
{"cat":"vehicles","slot":"movement","value":"pilot","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can\";         A textual example of the semantic relation is \"movement pilot\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, airplane, boat, motorcycle, bicycle, taxi, subway"}
{"cat":"vehicles","slot":"specialization","value":"jet","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization jet\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, airplane, ship, motorcycle, bicycle, unicycle, skateboard"}
{"cat":"vehicles","slot":"specialization","value":"Boeing","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization Boeing\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, plane, boat, ship, motorcycle, bicycle, skateboard"}
{"cat":"vehicles","slot":"specialization","value":"Antonov","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization Antonov\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, plane, ship, motorcycle, bicycle, skateboard, scooter"}
{"cat":"vehicles","slot":"specialization","value":"city car","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization city car\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, airplane, ship, motorcycle, bicycle, taxi, subway"}
{"cat":"vehicles","slot":"specialization","value":"pickup","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization pickup\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, motorcycle, bicycle, train, airplane, boat, submarine, rocket"}
{"cat":"vehicles","slot":"specialization","value":"racing bike","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization racing bike\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, bus, train, plane, boat, motorcycle, bicycle, taxi, truck, subway"}
{"cat":"vehicles","slot":"specialization","value":"propeller plane","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization propeller plane\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, boat, ship, airplane, helicopter, motorcycle, bicycle"}
{"cat":"vehicles","slot":"specialization","value":"cabriolet","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization cabriolet\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"1. car, 2. truck, 3. bus, 4. train, 5. airplane, 6. helicopter, 7. boat, 8. motorcycle, 9. bicycle, 10. skateboard"}
{"cat":"vehicles","slot":"specialization","value":"seaplane","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization seaplane\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, airplane, helicopter, motorcycle, bicycle, boat, submarine"}
{"cat":"vehicles","slot":"specialization","value":"multiengine airplane","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization multiengine airplane\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, airplane, boat, motorcycle, bicycle, unicycle, skateboard"}
{"cat":"vehicles","slot":"specialization","value":"fighter aircraft","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization fighter aircraft\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, bus, train, airplane, boat, ship, bicycle, motorcycle, truck, taxi"}
{"cat":"vehicles","slot":"specialization","value":"multiengine plane","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization multiengine plane\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, bus, train, plane, ship, motorcycle, bicycle, truck, taxi, subway"}
{"cat":"vehicles","slot":"specialization","value":"vintage car","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization vintage car\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, airplane, boat, motorcycle, bicycle, scooter, taxi"}
{"cat":"vehicles","slot":"specialization","value":"hydroplane","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization hydroplane\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, plane, boat, bicycle, motorcycle, submarine, helicopter"}
{"cat":"vehicles","slot":"specialization","value":"amphibian","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization amphibian\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, plane, boat, motorcycle, bicycle, submarine, rocket"}
{"cat":"vehicles","slot":"specialization","value":"racing car","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization racing car\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, plane, boat, motorcycle, bicycle, scooter, skateboard"}
{"cat":"vehicles","slot":"specialization","value":"amphibious aircraft","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization amphibious aircraft\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, plane, boat, motorcycle, bicycle, skateboard, unicycle"}
{"cat":"vehicles","slot":"specialization","value":"bomber","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization bomber\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, airplane, helicopter, boat, submarine, motorcycle, bicycle"}
{"cat":"vehicles","slot":"specialization","value":"delta wing","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization delta wing\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, airplane, helicopter, motorcycle, bicycle, boat, submarine"}
{"cat":"vehicles","slot":"specialization","value":"sedan","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization sedan\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, airplane, ship, boat, motorcycle, bicycle, skateboard"}
{"cat":"vehicles","slot":"specialization","value":"attack aircraft","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization attack aircraft\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, airplane, helicopter, boat, ship, motorcycle, bicycle"}
{"cat":"vehicles","slot":"specialization","value":"hangar queen","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization hangar queen\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"10 words: car, truck, bus, train, plane, boat, motorcycle, bicycle, skateboard, segway"}
{"cat":"vehicles","slot":"specialization","value":"monoplane","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization monoplane\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, bus, train, plane, bicycle, motorcycle, boat, submarine, truck, taxi"}
{"cat":"vehicles","slot":"specialization","value":"reconnaissance plane","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization reconnaissance plane\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, airplane, helicopter, motorcycle, bicycle, boat, submarine"}
{"cat":"vehicles","slot":"specialization","value":"SUV","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization SUV\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, motorcycle, bicycle, airplane, helicopter, boat, submarine"}
{"cat":"vehicles","slot":"specialization","value":"fighter","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization fighter\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, bus, train, airplane, bicycle, motorcycle, boat, truck, taxi, subway"}
{"cat":"vehicles","slot":"specialization","value":"wagon","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization wagon\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, plane, boat, bicycle, motorcycle, taxi, subway"}
{"cat":"vehicles","slot":"specialization","value":"airbus","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization airbus\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, airplane, boat, motorcycle, bicycle, taxi, subway"}
{"cat":"vehicles","slot":"specialization","value":"micro car","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization micro car\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, bus, train, plane, boat, bicycle, motorcycle, truck, van, taxi"}
{"cat":"vehicles","slot":"specialization","value":"airliner","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization airliner\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, motorcycle, bicycle, train, airplane, boat, yacht, submarine"}
{"cat":"vehicles","slot":"specialization","value":"biplane","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization biplane\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, bus, train, plane, bicycle, motorcycle, boat, submarine, helicopter, rocket"}
{"cat":"vehicles","slot":"specialization","value":"ski-plane","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization ski-plane\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, plane, boat, motorcycle, bicycle, skateboard, segway"}
{"cat":"vehicles","slot":"specialization","value":"tanker plane","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization tanker plane\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, bus, train, ship, plane, motorcycle, bicycle, truck, taxi, subway"}
{"cat":"vehicles","slot":"specialization","value":"bandwagon","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization bandwagon\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, airplane, motorcycle, bicycle, boat, submarine, rocket."}
{"cat":"vehicles","slot":"specialization","value":"subcompact","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization subcompact\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, motorcycle, bicycle, train, plane, boat, submarine, rocket"}
{"cat":"vehicles","slot":"specialization","value":"single-rotor helicopter","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization single-rotor helicopter\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, plane, ship, motorcycle, bicycle, skateboard, scooter"}
{"cat":"vehicles","slot":"specialization","value":"sound truck","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization sound truck\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, plane, boat, motorcycle, bicycle, submarine, rocket"}
{"cat":"vehicles","slot":"specialization","value":"taxicab","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization taxicab\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, plane, boat, bicycle, motorcycle, taxi, limousine"}
{"cat":"vehicles","slot":"specialization","value":"galley","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization galley\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, airplane, ship, bicycle, motorcycle, taxi, subway"}
{"cat":"vehicles","slot":"specialization","value":"spacecraft","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization spacecraft\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, plane, ship, bicycle, motorcycle, submarine, rocket"}
{"cat":"vehicles","slot":"specialization","value":"hatchback","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization hatchback\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, airplane, boat, motorcycle, bicycle, taxi, limousine"}
{"cat":"vehicles","slot":"specialization","value":"steamer","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization steamer\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"10 words: car, bus, truck, train, plane, boat, bicycle, motorcycle, taxi, subway"}
{"cat":"vehicles","slot":"specialization","value":"bumper car","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization bumper car\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, plane, boat, motorcycle, bicycle, skateboard, scooter"}
{"cat":"vehicles","slot":"specialization","value":"junk","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization junk\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":" car, bus, truck, motorcycle, bicycle, train, airplane, boat, submarine, rocket"}
{"cat":"vehicles","slot":"specialization","value":"motor mower","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization motor mower\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, bus, train, bicycle, motorcycle, airplane, boat, truck, van, taxi"}
{"cat":"vehicles","slot":"specialization","value":"steamboat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization steamboat\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, airplane, ship, bicycle, motorcycle, boat, submarine"}
{"cat":"vehicles","slot":"specialization","value":"surfboat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization surfboat\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, bus, train, plane, ship, motorcycle, bicycle, truck, taxi, subway"}
{"cat":"vehicles","slot":"specialization","value":"ground-effect machine","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization ground-effect machine\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, airplane, boat, motorcycle, bicycle, submarine, helicopter"}
{"cat":"vehicles","slot":"specialization","value":"limo","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization limo\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, airplane, boat, motorcycle, bicycle, limousine, taxi"}
{"cat":"vehicles","slot":"specialization","value":"dirt bike","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization dirt bike\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, bus, train, airplane, motorcycle, bicycle, boat, submarine, spaceship, hot air balloon"}
{"cat":"vehicles","slot":"specialization","value":"pedicab","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization pedicab\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, airplane, boat, motorcycle, bicycle, pedicab, taxi"}
{"cat":"vehicles","slot":"specialization","value":"minesweeper","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization minesweeper\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, airplane, boat, motorcycle, bicycle, taxi, subway"}
{"cat":"vehicles","slot":"specialization","value":"lighter","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization lighter\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, airplane, motorcycle, bicycle, boat, submarine, helicopter"}
{"cat":"vehicles","slot":"specialization","value":"stealth aircraft","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization stealth aircraft\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, plane, ship, motorcycle, bicycle, skateboard, scooter"}
{"cat":"vehicles","slot":"specialization","value":"ice yacht","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization ice yacht\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, airplane, boat, motorcycle, bicycle, skateboard, scooter"}
{"cat":"vehicles","slot":"specialization","value":"ordinary bicycle","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization ordinary bicycle\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, motorcycle, bicycle, truck, bus, train, airplane, boat, submarine, rocket"}
{"cat":"vehicles","slot":"specialization","value":"electric","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization electric\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, bus, truck, motorcycle, bicycle, train, boat, airplane, helicopter, submarine"}
{"cat":"vehicles","slot":"specialization","value":"police cruiser","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization police cruiser\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, plane, boat, motorcycle, bicycle, skateboard, unicycle"}
{"cat":"vehicles","slot":"specialization","value":"tipper lorry","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization tipper lorry\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, plane, boat, bicycle, motorcycle, taxi, subway"}
{"cat":"vehicles","slot":"specialization","value":"sailing vessel","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization sailing vessel\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, airplane, boat, motorcycle, bicycle, helicopter, submarine"}
{"cat":"vehicles","slot":"specialization","value":"compact car","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization compact car\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, plane, boat, motorcycle, bicycle, unicycle, skateboard"}
{"cat":"vehicles","slot":"specialization","value":"prairie schooner","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization prairie schooner\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, airplane, boat, bicycle, motorcycle, taxi, subway"}
{"cat":"vehicles","slot":"specialization","value":"abandoned ship","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization abandoned ship\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, airplane, boat, motorcycle, bicycle, helicopter, submarine"}
{"cat":"vehicles","slot":"specialization","value":"pace car","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization pace car\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, plane, boat, bicycle, motorcycle, scooter, taxi"}
{"cat":"vehicles","slot":"specialization","value":"trolley coach","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization trolley coach\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, motorcycle, bicycle, boat, airplane, helicopter, submarine"}
{"cat":"vehicles","slot":"specialization","value":"horsecar","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization horsecar\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, airplane, boat, bicycle, motorcycle, subway, taxi"}
{"cat":"vehicles","slot":"specialization","value":"hulk","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization hulk\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, plane, boat, motorcycle, bicycle, submarine, helicopter"}
{"cat":"vehicles","slot":"specialization","value":"taxi","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization taxi\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, plane, boat, motorcycle, bicycle, taxi, subway"}
{"cat":"vehicles","slot":"specialization","value":"hot-rod","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization hot-rod\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, motorcycle, bus, train, airplane, helicopter, boat, submarine, spacecraft"}
{"cat":"vehicles","slot":"specialization","value":"cycle rickshaw","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization cycle rickshaw\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, airplane, boat, motorcycle, bicycle, scooter, rickshaw"}
{"cat":"vehicles","slot":"specialization","value":"bogie","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization bogie\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, bus, truck, train, boat, ship, airplane, helicopter, motorcycle, bicycle"}
{"cat":"vehicles","slot":"specialization","value":"powerboat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization powerboat\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":" car, truck, bus, motorcycle, bicycle, train, plane, boat, submarine, spacecraft"}
{"cat":"vehicles","slot":"specialization","value":"hardtop","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization hardtop\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, plane, boat, motorcycle, bicycle, skateboard, unicycle"}
{"cat":"vehicles","slot":"specialization","value":"cruiser","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization cruiser\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, airplane, ship, boat, motorcycle, bicycle, skateboard"}
{"cat":"vehicles","slot":"specialization","value":"tender","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization tender\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, plane, boat, motorcycle, bicycle, unicycle, skateboard"}
{"cat":"vehicles","slot":"specialization","value":"packet boat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization packet boat\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, plane, boat, bicycle, motorcycle, taxi, subway"}
{"cat":"vehicles","slot":"specialization","value":"cruise missile","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization cruise missile\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, airplane, ship, motorcycle, bicycle, submarine, helicopter"}
{"cat":"vehicles","slot":"specialization","value":"towboat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization towboat\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, airplane, ship, boat, motorcycle, bicycle, skateboard"}
{"cat":"vehicles","slot":"specialization","value":"minelayer","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization minelayer\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, plane, ship, motorcycle, bicycle, taxi, subway"}
{"cat":"vehicles","slot":"specialization","value":"projectile","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization projectile\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, airplane, boat, motorcycle, bicycle, skateboard, unicycle"}
{"cat":"vehicles","slot":"specialization","value":"garbage truck","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization garbage truck\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, motorcycle, bicycle, airplane, boat, submarine, rocket"}
{"cat":"vehicles","slot":"specialization","value":"Conestoga wagon","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization Conestoga wagon\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, plane, boat, bicycle, motorcycle, scooter, skateboard"}
{"cat":"vehicles","slot":"specialization","value":"racing yacht","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization racing yacht\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, motorcycle, bicycle, airplane, train, boat, yacht, submarine"}
{"cat":"vehicles","slot":"specialization","value":"loaner","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization loaner\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, airplane, boat, bicycle, motorcycle, submarine, rocket"}
{"cat":"vehicles","slot":"specialization","value":"pilot boat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization pilot boat\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, plane, ship, motorcycle, bicycle, taxi, subway"}
{"cat":"vehicles","slot":"specialization","value":"tug","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization tug\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, airplane, ship, motorcycle, bicycle, subway, taxi"}
{"cat":"vehicles","slot":"specialization","value":"fanjet","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization fanjet\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, plane, boat, ship, motorcycle, bicycle, unicycle"}
{"cat":"vehicles","slot":"specialization","value":"milkwagon","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization milkwagon\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"10 words that belong to the category \"vehicles\": car, truck, bus, train, airplane, boat, motorcycle, bicycle, taxi, subway."}
{"cat":"vehicles","slot":"specialization","value":"car transporter","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization car transporter\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":" car, truck, bus, train, plane, boat, ship, motorcycle, bicycle, skateboard"}
{"cat":"vehicles","slot":"specialization","value":"pinnace","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization pinnace\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, bus, truck, train, plane, boat, motorcycle, bicycle, taxi, subway"}
{"cat":"vehicles","slot":"specialization","value":"school bus","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization school bus\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, airplane, ship, motorcycle, bicycle, subway, taxi"}
{"cat":"vehicles","slot":"specialization","value":"narrow boat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization narrow boat\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, bus, train, airplane, bicycle, motorcycle, boat, truck, taxi, subway"}
{"cat":"vehicles","slot":"specialization","value":"road roller","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization road roller\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, motorcycle, bicycle, train, airplane, boat, submarine, helicopter"}
{"cat":"vehicles","slot":"specialization","value":"tow car","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization tow car\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"10 words: car, truck, bus, train, airplane, boat, motorcycle, bicycle, unicycle, skateboard"}
{"cat":"vehicles","slot":"specialization","value":"canal boat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization canal boat\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, plane, boat, motorcycle, bicycle, skateboard, unicycle"}
{"cat":"vehicles","slot":"specialization","value":"turbojet","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization turbojet\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, boat, airplane, motorcycle, bicycle, skateboard, scooter"}
{"cat":"vehicles","slot":"specialization","value":"turbofan","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization turbofan\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, motorcycle, bicycle, train, plane, boat, submarine, spacecraft"}
{"cat":"vehicles","slot":"specialization","value":"slave ship","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization slave ship\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, airplane, motorcycle, bicycle, boat, yacht, submarine"}
{"cat":"vehicles","slot":"specialization","value":"sausage balloon","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization sausage balloon\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, airplane, boat, motorcycle, bicycle, unicycle, skateboard"}
{"cat":"vehicles","slot":"specialization","value":"Mackinaw boat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization Mackinaw boat\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, plane, boat, motorcycle, bicycle, skateboard, scooter"}
{"cat":"vehicles","slot":"specialization","value":"scrambler","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization scrambler\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        motorcycle, scooter, bicycle, car, truck, bus, train, airplane, helicopter, boat"}
{"cat":"vehicles","slot":"specialization","value":"motorboat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization motorboat\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, motorcycle, bicycle, boat, airplane, helicopter, submarine"}
{"cat":"vehicles","slot":"specialization","value":"cutter","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization cutter\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, bus, train, airplane, bicycle, motorcycle, boat, truck, taxi, subway"}
{"cat":"vehicles","slot":"specialization","value":"treasure ship","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization treasure ship\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, airplane, motorcycle, bicycle, boat, submarine, spacecraft"}
{"cat":"vehicles","slot":"specialization","value":"hospital ship","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization hospital ship\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, airplane, helicopter, motorcycle, bicycle, boat, ship"}
{"cat":"vehicles","slot":"specialization","value":"hovercraft","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization hovercraft\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, plane, boat, motorcycle, bicycle, taxi, helicopter"}
{"cat":"vehicles","slot":"specialization","value":"hot rod","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization hot rod\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, motorcycle, bicycle, airplane, helicopter, boat, submarine"}
{"cat":"vehicles","slot":"specialization","value":"van","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization van\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, plane, boat, motorcycle, bicycle, taxi, limousine"}
{"cat":"vehicles","slot":"specialization","value":"fishing smack","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization fishing smack\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, plane, ship, motorcycle, bicycle, boat, submarine"}
{"cat":"vehicles","slot":"specialization","value":"fishing boat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization fishing boat\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, airplane, boat, bicycle, motorcycle, submarine, helicopter"}
{"cat":"vehicles","slot":"specialization","value":"gas guzzler","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization gas guzzler\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"10 words: car, truck, bus, motorcycle, bicycle, train, plane, boat, submarine, rocket"}
{"cat":"vehicles","slot":"specialization","value":"lorry","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization lorry\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, bus, train, airplane, ship, bicycle, motorcycle, taxi, truck, van"}
{"cat":"vehicles","slot":"specialization","value":"used-car","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization used-car\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, airplane, boat, motorcycle, bicycle, skateboard, unicycle"}
{"cat":"vehicles","slot":"specialization","value":"trackless trolley","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization trackless trolley\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, bus, train, airplane, boat, bicycle, motorcycle, truck, taxi, subway"}
{"cat":"vehicles","slot":"specialization","value":"fishing vessel","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization fishing vessel\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, airplane, boat, motorcycle, bicycle, scooter, van"}
{"cat":"vehicles","slot":"specialization","value":"tandem","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization tandem\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, motorcycle, bicycle, train, airplane, boat, submarine, helicopter"}
{"cat":"vehicles","slot":"specialization","value":"bus","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization bus\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, bus, truck, train, motorcycle, bicycle, boat, airplane, helicopter, submarine"}
{"cat":"vehicles","slot":"specialization","value":"troopship","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization troopship\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, plane, boat, motorcycle, bicycle, taxi, trolley"}
{"cat":"vehicles","slot":"specialization","value":"dumper","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization dumper\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, bus, truck, motorcycle, bicycle, train, airplane, boat, submarine, rocket"}
{"cat":"vehicles","slot":"specialization","value":"flatboat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization flatboat\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, airplane, boat, motorcycle, bicycle, taxi, limousine"}
{"cat":"vehicles","slot":"specialization","value":"hoy","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization hoy\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, airplane, helicopter, motorcycle, bicycle, boat, submarine"}
{"cat":"vehicles","slot":"specialization","value":"ice-wagon","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization ice-wagon\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, airplane, boat, bicycle, motorcycle, scooter, skateboard"}
{"cat":"vehicles","slot":"specialization","value":"icebreaker","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization icebreaker\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, plane, boat, bicycle, motorcycle, taxi, subway"}
{"cat":"vehicles","slot":"specialization","value":"gunboat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization gunboat\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, plane, ship, motorcycle, bicycle, skateboard, segway"}
{"cat":"vehicles","slot":"specialization","value":"jeep","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization jeep\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, motorcycle, bicycle, boat, airplane, helicopter, spaceship"}
{"cat":"vehicles","slot":"specialization","value":"wreck","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization wreck\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, plane, boat, motorcycle, bicycle, submarine, rocket"}
{"cat":"vehicles","slot":"specialization","value":"whaler","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization whaler\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, airplane, boat, motorcycle, bicycle, helicopter, submarine"}
{"cat":"vehicles","slot":"specialization","value":"bogy","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization bogy\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, airplane, boat, motorcycle, bicycle, skateboard, scooter"}
{"cat":"vehicles","slot":"specialization","value":"river boat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization river boat\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, bus, train, airplane, bicycle, motorcycle, boat, submarine, spaceship, helicopter"}
{"cat":"vehicles","slot":"specialization","value":"tramcar","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization tramcar\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, subway, motorcycle, bicycle, boat, airplane, helicopter"}
{"cat":"vehicles","slot":"specialization","value":"sleigh","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization sleigh\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, boat, plane, motorcycle, bicycle, skateboard, sleigh"}
{"cat":"vehicles","slot":"specialization","value":"trailer truck","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization trailer truck\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, bus, train, bicycle, motorcycle, airplane, boat, submarine, helicopter, rocket."}
{"cat":"vehicles","slot":"specialization","value":"sailing ship","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization sailing ship\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, airplane, boat, motorcycle, bicycle, submarine, spacecraft"}
{"cat":"vehicles","slot":"specialization","value":"space vehicle","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization space vehicle\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, plane, ship, motorcycle, bicycle, scooter, skateboard"}
{"cat":"vehicles","slot":"specialization","value":"skibob","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization skibob\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, bus, train, plane, ship, bicycle, motorcycle, skateboard, snowmobile, skibob"}
{"cat":"vehicles","slot":"specialization","value":"three-decker","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization three-decker\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, boat, ship, plane, helicopter, motorcycle, bicycle"}
{"cat":"vehicles","slot":"specialization","value":"jetliner","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization jetliner\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, boat, plane, bicycle, motorcycle, scooter, skateboard"}
{"cat":"vehicles","slot":"specialization","value":"mackinaw","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization mackinaw\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, airplane, boat, motorcycle, bicycle, taxi, subway"}
{"cat":"vehicles","slot":"specialization","value":"jet-propelled plane","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization jet-propelled plane\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, plane, boat, motorcycle, bicycle, skateboard, unicycle"}
{"cat":"vehicles","slot":"specialization","value":"trail bike","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization trail bike\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, motorcycle, bicycle, train, airplane, boat, submarine, rocket"}
{"cat":"vehicles","slot":"specialization","value":"fan-jet","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization fan-jet\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, airplane, motorcycle, bicycle, boat, submarine, helicopter"}
{"cat":"vehicles","slot":"specialization","value":"pickup truck","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization pickup truck\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":" sedan, minivan, pickup truck, SUV, sports car, motorcycle, bicycle, bus, train, airplane"}
{"cat":"vehicles","slot":"specialization","value":"longboat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization longboat\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, motorcycle, bicycle, train, airplane, boat, submarine, rocket"}
{"cat":"vehicles","slot":"specialization","value":"training ship","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization training ship\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, plane, ship, motorcycle, bicycle, taxi, subway"}
{"cat":"vehicles","slot":"specialization","value":"Dodgem","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization Dodgem\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, plane, boat, bicycle, motorcycle, taxi, trolley"}
{"cat":"vehicles","slot":"specialization","value":"electric automobile","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization electric automobile\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, airplane, boat, motorcycle, bicycle, submarine, rocket."}
{"cat":"vehicles","slot":"specialization","value":"jumbo jet","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization jumbo jet\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, plane, boat, motorcycle, bicycle, skateboard, unicycle"}
{"cat":"vehicles","slot":"specialization","value":"mountain bike","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization mountain bike\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, motorcycle, bicycle, airplane, boat, helicopter, submarine"}
{"cat":"vehicles","slot":"specialization","value":"skyhook","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization skyhook\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, airplane, ship, motorcycle, bicycle, submarine, rocket"}
{"cat":"vehicles","slot":"specialization","value":"trucking rig","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization trucking rig\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"10 words that belong to the category \"vehicles\" are: car, truck, bus, train, airplane, bicycle, motorcycle, boat, submarine, and spaceship."}
{"cat":"vehicles","slot":"specialization","value":"rig","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization rig\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, motorcycle, bicycle, train, airplane, boat, submarine, rocket"}
{"cat":"vehicles","slot":"specialization","value":"ballistic capsule","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization ballistic capsule\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"1. car, 2. truck, 3. bus, 4. train, 5. airplane, 6. helicopter, 7. boat, 8. submarine, 9. motorcycle, 10. bicycle"}
{"cat":"vehicles","slot":"specialization","value":"bareboat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization bareboat\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, boat, airplane, motorcycle, bicycle, scooter, taxi"}
{"cat":"vehicles","slot":"specialization","value":"patrol ship","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization patrol ship\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, airplane, helicopter, boat, ship, submarine, motorcycle"}
{"cat":"vehicles","slot":"specialization","value":"milk wagon","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization milk wagon\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, airplane, ship, motorcycle, bicycle, subway, taxi"}
{"cat":"vehicles","slot":"specialization","value":"sledge","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization sledge\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, bus, train, plane, ship, bicycle, motorcycle, truck, taxi, subway"}
{"cat":"vehicles","slot":"specialization","value":"push-bike","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization push-bike\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, plane, boat, motorcycle, bicycle, unicycle, skateboard"}
{"cat":"vehicles","slot":"specialization","value":"hack","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization hack\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, airplane, bicycle, motorcycle, boat, submarine, helicopter"}
{"cat":"vehicles","slot":"specialization","value":"iceboat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization iceboat\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, plane, boat, bicycle, motorcycle, scooter, skateboard"}
{"cat":"vehicles","slot":"specialization","value":"chuck wagon","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization chuck wagon\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, airplane, boat, motorcycle, bicycle, taxi, subway"}
{"cat":"vehicles","slot":"specialization","value":"shrimper","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization shrimper\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, bus, truck, train, plane, boat, motorcycle, bicycle, taxi, subway"}
{"cat":"vehicles","slot":"specialization","value":"cargo helicopter","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization cargo helicopter\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, bus, train, plane, ship, motorcycle, bicycle, truck, taxi, subway"}
{"cat":"vehicles","slot":"specialization","value":"runabout","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization runabout\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, plane, boat, motorcycle, bicycle, skateboard, unicycle"}
{"cat":"vehicles","slot":"specialization","value":"yacht","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization yacht\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, plane, boat, bicycle, motorcycle, yacht, submarine"}
{"cat":"vehicles","slot":"specialization","value":"horseless carriage","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization horseless carriage\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, plane, boat, motorcycle, bicycle, subway, taxi"}
{"cat":"vehicles","slot":"specialization","value":"sausage","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization sausage\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, plane, boat, motorcycle, bicycle, unicycle, skateboard"}
{"cat":"vehicles","slot":"specialization","value":"gondola","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization gondola\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, boat, plane, bicycle, motorcycle, submarine, helicopter"}
{"cat":"vehicles","slot":"specialization","value":"narrowboat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization narrowboat\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, boat, plane, motorcycle, bicycle, taxi, subway"}
{"cat":"vehicles","slot":"specialization","value":"phaeton","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization phaeton\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, boat, plane, motorcycle, bicycle, taxi, subway"}
{"cat":"vehicles","slot":"specialization","value":"minibus","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization minibus\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, airplane, ship, motorcycle, bicycle, taxi, van"}
{"cat":"vehicles","slot":"specialization","value":"ambulance","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization ambulance\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, plane, boat, motorcycle, bicycle, ambulance, taxi"}
{"cat":"vehicles","slot":"specialization","value":"fire truck","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization fire truck\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, motorcycle, bicycle, airplane, boat, submarine, helicopter"}
{"cat":"vehicles","slot":"specialization","value":"ship's boat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization ship's boat\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, bus, train, plane, ship, motorcycle, bicycle, truck, taxi, subway"}
{"cat":"vehicles","slot":"specialization","value":"barrage balloon","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization barrage balloon\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, bus, truck, motorcycle, bicycle, train, airplane, boat, submarine, spacecraft"}
{"cat":"vehicles","slot":"specialization","value":"police boat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization police boat\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, airplane, boat, motorcycle, bicycle, skateboard, scooter"}
{"cat":"vehicles","slot":"specialization","value":"dustcart","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization dustcart\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, plane, boat, bicycle, motorcycle, taxi, subway"}
{"cat":"vehicles","slot":"specialization","value":"velocipede","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization velocipede\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, airplane, bicycle, motorcycle, boat, submarine, spacecraft"}
{"cat":"vehicles","slot":"specialization","value":"ferry","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization ferry\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, boat, airplane, motorcycle, bicycle, taxi, subway"}
{"cat":"vehicles","slot":"specialization","value":"stock car","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization stock car\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, airplane, boat, bicycle, motorcycle, taxi, subway"}
{"cat":"vehicles","slot":"specialization","value":"sister ship","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization sister ship\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, plane, boat, motorcycle, bicycle, unicycle, skateboard"}
{"cat":"vehicles","slot":"specialization","value":"tandem bicycle","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization tandem bicycle\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, plane, boat, motorcycle, bicycle, taxi, subway"}
{"cat":"vehicles","slot":"specialization","value":"power mower","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization power mower\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, airplane, boat, motorcycle, bicycle, taxi, subway"}
{"cat":"vehicles","slot":"specialization","value":"touring car","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization touring car\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        sedan, truck, motorcycle, bus, train, bicycle, airplane, boat, helicopter, submarine"}
{"cat":"vehicles","slot":"specialization","value":"supply ship","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization supply ship\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, motorcycle, bicycle, train, plane, boat, submarine, spacecraft"}
{"cat":"vehicles","slot":"specialization","value":"camion","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization camion\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, plane, boat, bicycle, motorcycle, taxi, subway"}
{"cat":"vehicles","slot":"specialization","value":"nuclear-powered ship","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization nuclear-powered ship\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"10 words: car, bus, train, plane, ship, truck, motorcycle, bicycle, submarine, helicopter"}
{"cat":"vehicles","slot":"specialization","value":"minicab","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization minicab\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, motorcycle, bicycle, train, airplane, boat, submarine, rocket"}
{"cat":"vehicles","slot":"specialization","value":"prowl car","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization prowl car\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, bus, truck, train, boat, plane, motorcycle, bicycle, skateboard, hoverboard"}
{"cat":"vehicles","slot":"specialization","value":"sled","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization sled\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, plane, boat, motorcycle, bicycle, skateboard, sled"}
{"cat":"vehicles","slot":"specialization","value":"bumboat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization bumboat\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, plane, ship, boat, motorcycle, bicycle, scooter"}
{"cat":"vehicles","slot":"specialization","value":"gypsy cab","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization gypsy cab\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, bus, train, plane, boat, bicycle, motorcycle, truck, taxi, trolley"}
{"cat":"vehicles","slot":"specialization","value":"hand mower","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization hand mower\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, airplane, boat, motorcycle, bicycle, taxi, subway"}
{"cat":"vehicles","slot":"specialization","value":"guard boat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization guard boat\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, airplane, boat, bicycle, motorcycle, taxi, subway"}
{"cat":"vehicles","slot":"specialization","value":"transporter","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization transporter\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, airplane, boat, bicycle, motorcycle, taxi, subway"}
{"cat":"vehicles","slot":"specialization","value":"Model T","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization Model T\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, motorcycle, bicycle, train, airplane, ship, submarine, spacecraft"}
{"cat":"vehicles","slot":"specialization","value":"cargo ship","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization cargo ship\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"1. car, 2. truck, 3. bus, 4. train, 5. plane, 6. ship, 7. motorcycle, 8. bicycle, 9. taxi, 10. subway"}
{"cat":"vehicles","slot":"specialization","value":"jumbojet","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization jumbojet\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, plane, bicycle, motorcycle, boat, ship, submarine"}
{"cat":"vehicles","slot":"specialization","value":"fire engine","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization fire engine\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, bus, truck, train, plane, boat, motorcycle, bicycle, taxi, subway"}
{"cat":"vehicles","slot":"specialization","value":"roadster","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization roadster\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, airplane, ship, motorcycle, bicycle, subway, taxi"}
{"cat":"vehicles","slot":"specialization","value":"pirate","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization pirate\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, bus, train, airplane, boat, motorcycle, bicycle, truck, taxi, subway"}
{"cat":"vehicles","slot":"specialization","value":"ice wagon","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization ice wagon\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, airplane, boat, motorcycle, bicycle, taxi, subway"}
{"cat":"vehicles","slot":"specialization","value":"ark","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization ark\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, airplane, ship, motorcycle, bicycle, taxi, subway"}
{"cat":"vehicles","slot":"specialization","value":"articulated lorry","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization articulated lorry\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bus, car, train, bicycle, motorcycle, boat, plane, truck, taxi, subway"}
{"cat":"vehicles","slot":"specialization","value":"minivan","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization minivan\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, plane, boat, motorcycle, bicycle, taxi, subway"}
{"cat":"vehicles","slot":"specialization","value":"cargo vessel","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization cargo vessel\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"10 words that belong to the category \"vehicles\": car, truck, bus, train, plane, ship, motorcycle, bicycle, taxi, subway."}
{"cat":"vehicles","slot":"specialization","value":"covered wagon","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization covered wagon\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, plane, boat, motorcycle, bicycle, skateboard, scooter"}
{"cat":"vehicles","slot":"specialization","value":"jet plane","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization jet plane\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, bus, train, airplane, ship, motorcycle, bicycle, truck, van, taxi"}
{"cat":"vehicles","slot":"specialization","value":"fireboat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization fireboat\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, airplane, boat, bicycle, motorcycle, submarine, helicopter"}
{"cat":"vehicles","slot":"specialization","value":"tow truck","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization tow truck\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, motorcycle, bicycle, train, airplane, boat, submarine, spaceship"}
{"cat":"vehicles","slot":"specialization","value":"wrecker","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization wrecker\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, plane, boat, motorcycle, bicycle, unicycle, skateboard"}
{"cat":"vehicles","slot":"specialization","value":"bogey","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization bogey\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, airplane, ship, motorcycle, bicycle, taxi, subway"}
{"cat":"vehicles","slot":"specialization","value":"wain","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization wain\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, boat, ship, plane, bicycle, motorcycle, submarine"}
{"cat":"vehicles","slot":"specialization","value":"subcompact car","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization subcompact car\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, motorcycle, bicycle, train, airplane, boat, submarine, spaceship"}
{"cat":"vehicles","slot":"specialization","value":"landing craft","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization landing craft\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        airplane, car, train, bus, bicycle, motorcycle, boat, submarine, helicopter, rocket"}
{"cat":"vehicles","slot":"specialization","value":"twinjet","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization twinjet\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, motorcycle, bicycle, boat, plane, helicopter, submarine"}
{"cat":"vehicles","slot":"specialization","value":"coupe","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization coupe\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, motorcycle, bicycle, train, plane, boat, submarine, rocket"}
{"cat":"vehicles","slot":"specialization","value":"safety bike","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization safety bike\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, plane, boat, motorcycle, bicycle, taxi, subway"}
{"cat":"vehicles","slot":"specialization","value":"tram","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization tram\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, bus, train, bicycle, motorcycle, airplane, boat, submarine, helicopter, truck"}
{"cat":"vehicles","slot":"specialization","value":"small ship","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization small ship\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, plane, boat, ship, motorcycle, bicycle, skateboard"}
{"cat":"vehicles","slot":"specialization","value":"ordinary","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization ordinary\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, motorcycle, bicycle, train, airplane, boat, submarine, spacecraft"}
{"cat":"vehicles","slot":"specialization","value":"barge","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization barge\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, plane, boat, ship, motorcycle, bicycle, submarine"}
{"cat":"vehicles","slot":"specialization","value":"steamroller","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization steamroller\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":" car, truck, bus, train, airplane, ship, motorcycle, bicycle, skateboard, unicycle"}
{"cat":"vehicles","slot":"specialization","value":"shuttle helicopter","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization shuttle helicopter\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, plane, boat, motorcycle, bicycle, skateboard, unicycle"}
{"cat":"vehicles","slot":"specialization","value":"punt","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization punt\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, airplane, bicycle, motorcycle, boat, ship, submarine"}
{"cat":"vehicles","slot":"specialization","value":"motorbike","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization motorbike\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, plane, boat, ship, motorcycle, bicycle, unicycle"}
{"cat":"vehicles","slot":"specialization","value":"lightship","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization lightship\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, plane, boat, motorcycle, bicycle, skateboard, unicycle"}
{"cat":"vehicles","slot":"specialization","value":"cruise ship","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization cruise ship\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, plane, boat, bicycle, motorcycle, taxi, subway"}
{"cat":"vehicles","slot":"specialization","value":"bulldozer","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization bulldozer\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, boat, plane, bicycle, motorcycle, submarine, spaceship"}
{"cat":"vehicles","slot":"specialization","value":"tipper truck","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization tipper truck\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, bus, train, bicycle, motorcycle, airplane, boat, submarine, spacecraft, helicopter"}
{"cat":"vehicles","slot":"specialization","value":"tractor","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization tractor\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, plane, boat, motorcycle, bicycle, taxi, subway"}
{"cat":"vehicles","slot":"specialization","value":"tower","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization tower\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, bus, train, airplane, bicycle, motorcycle, boat, truck, van, taxi"}
{"cat":"vehicles","slot":"specialization","value":"ferryboat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization ferryboat\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, airplane, ship, motorcycle, bicycle, boat, submarine"}
{"cat":"vehicles","slot":"specialization","value":"safety bicycle","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization safety bicycle\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, motorcycle, bicycle, boat, plane, helicopter, submarine"}
{"cat":"vehicles","slot":"specialization","value":"sports car","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization sports car\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, airplane, ship, motorcycle, bicycle, skateboard, scooter"}
{"cat":"vehicles","slot":"specialization","value":"steamship","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization steamship\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, bus, train, airplane, ship, motorcycle, bicycle, truck, taxi, subway"}
{"cat":"vehicles","slot":"specialization","value":"mail boat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization mail boat\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, plane, boat, motorcycle, bicycle, taxi, trolley"}
{"cat":"vehicles","slot":"specialization","value":"landrover","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization landrover\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":" car, truck, bus, train, airplane, helicopter, motorcycle, bicycle, boat, submarine"}
{"cat":"vehicles","slot":"specialization","value":"cab","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization cab\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, plane, boat, motorcycle, bicycle, taxi, limousine"}
{"cat":"vehicles","slot":"specialization","value":"patrol car","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization patrol car\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, airplane, helicopter, motorcycle, bicycle, boat, submarine"}
{"cat":"vehicles","slot":"specialization","value":"flagship","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization flagship\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, airplane, helicopter, boat, submarine, motorcycle, bicycle"}
{"cat":"vehicles","slot":"specialization","value":"patrol boat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization patrol boat\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, plane, boat, motorcycle, bicycle, submarine, rocket"}
{"cat":"vehicles","slot":"specialization","value":"shipwreck","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization shipwreck\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, bus, train, airplane, bicycle, motorcycle, boat, truck, taxi, subway"}
{"cat":"vehicles","slot":"specialization","value":"school ship","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization school ship\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, airplane, boat, motorcycle, bicycle, subway, taxi"}
{"cat":"vehicles","slot":"specialization","value":"blimp","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization blimp\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, plane, boat, motorcycle, bicycle, unicycle, skateboard"}
{"cat":"vehicles","slot":"specialization","value":"water wagon","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization water wagon\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, motorcycle, bicycle, boat, airplane, train, subway, helicopter"}
{"cat":"vehicles","slot":"specialization","value":"Stanley Steamer","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization Stanley Steamer\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, plane, boat, motorcycle, bicycle, submarine, spacecraft"}
{"cat":"vehicles","slot":"specialization","value":"dozer","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization dozer\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, airplane, boat, motorcycle, bicycle, taxi, subway"}
{"cat":"vehicles","slot":"specialization","value":"jalopy","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization jalopy\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, boat, plane, bicycle, motorcycle, submarine, rocket"}
{"cat":"vehicles","slot":"specialization","value":"tugboat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization tugboat\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, airplane, ship, motorcycle, bicycle, trolley, subway"}
{"cat":"vehicles","slot":"specialization","value":"tipper","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization tipper\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, motorcycle, bicycle, train, airplane, boat, ship, submarine"}
{"cat":"vehicles","slot":"specialization","value":"packet","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization packet\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, bus, train, airplane, boat, bicycle, motorcycle, truck, taxi, subway"}
{"cat":"vehicles","slot":"specialization","value":"tip truck","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization tip truck\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, bus, truck, motorcycle, bicycle, train, airplane, boat, submarine, spacecraft"}
{"cat":"vehicles","slot":"specialization","value":"convertible","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization convertible\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, airplane, boat, motorcycle, bicycle, taxi, limousine"}
{"cat":"vehicles","slot":"specialization","value":"mailboat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization mailboat\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, plane, ship, bicycle, motorcycle, boat, submarine"}
{"cat":"vehicles","slot":"specialization","value":"minibike","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization minibike\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, plane, boat, motorcycle, bicycle, minibike, unicycle"}
{"cat":"vehicles","slot":"specialization","value":"pirate ship","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization pirate ship\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, plane, boat, motorcycle, bicycle, taxi, subway"}
{"cat":"vehicles","slot":"specialization","value":"water waggon","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization water waggon\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, airplane, boat, motorcycle, bicycle, skateboard, unicycle"}
{"cat":"vehicles","slot":"specialization","value":"gas-turbine ship","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization gas-turbine ship\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, airplane, helicopter, boat, motorcycle, bicycle, skateboard"}
{"cat":"vehicles","slot":"specialization","value":"electric car","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization electric car\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, airplane, boat, motorcycle, bicycle, scooter, skateboard"}
{"cat":"vehicles","slot":"specialization","value":"bicycle-built-for-two","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization bicycle-built-for-two\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, bus, train, airplane, boat, bicycle, motorcycle, truck, van, taxi"}
{"cat":"vehicles","slot":"specialization","value":"two-seater","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization two-seater\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, motorcycle, bicycle, train, airplane, boat, submarine, spaceship"}
{"cat":"vehicles","slot":"specialization","value":"passenger ship","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization passenger ship\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, bus, train, airplane, boat, ship, motorcycle, bicycle, truck, taxi"}
{"cat":"vehicles","slot":"specialization","value":"squad car","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization squad car\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, bus, train, plane, boat, motorcycle, bicycle, truck, taxi, subway"}
{"cat":"vehicles","slot":"specialization","value":"Conestoga","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization Conestoga\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, bus, train, bicycle, motorcycle, airplane, boat, truck, taxi, subway"}
{"cat":"vehicles","slot":"specialization","value":"scow","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization scow\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, plane, boat, motorcycle, bicycle, skateboard, unicycle"}
{"cat":"vehicles","slot":"specialization","value":"sport car","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization sport car\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, plane, boat, bicycle, motorcycle, submarine, rocket"}
{"cat":"vehicles","slot":"specialization","value":"minicar","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization minicar\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, plane, ship, bicycle, motorcycle, scooter, taxi"}
{"cat":"vehicles","slot":"specialization","value":"blockade-runner","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization blockade-runner\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, airplane, ship, motorcycle, bicycle, skateboard, unicycle"}
{"cat":"vehicles","slot":"specialization","value":"lugger","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization lugger\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, bus, train, plane, ship, bicycle, motorcycle, truck, taxi, subway"}
{"cat":"vehicles","slot":"specialization","value":"tourer","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization tourer\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, motorcycle, bicycle, train, airplane, boat, yacht, helicopter"}
{"cat":"vehicles","slot":"specialization","value":"weather ship","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization weather ship\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, airplane, boat, motorcycle, bicycle, taxi, subway"}
{"cat":"vehicles","slot":"specialization","value":"limousine","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization limousine\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, bus, truck, motorcycle, bicycle, train, airplane, boat, helicopter, submarine"}
{"cat":"vehicles","slot":"specialization","value":"derelict","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization derelict\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, bus, truck, motorcycle, bicycle, train, plane, boat, submarine, spaceship"}
{"cat":"vehicles","slot":"specialization","value":"secondhand car","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization secondhand car\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, motorcycle, bicycle, train, airplane, boat, submarine, rocket"}
{"cat":"vehicles","slot":"specialization","value":"small boat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization small boat\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, airplane, bicycle, motorcycle, boat, ship, submarine"}
{"cat":"vehicles","slot":"specialization","value":"sea boat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization sea boat\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        boat, ship, yacht, sailboat, ferry, cruise ship, submarine, aircraft carrier, speedboat, catamaran"}
{"cat":"vehicles","slot":"specialization","value":"compact","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization compact\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, bus, train, plane, boat, bicycle, motorcycle, truck, taxi, van"}
{"cat":"vehicles","slot":"specialization","value":"transport ship","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization transport ship\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, bus, train, plane, boat, ship, motorcycle, bicycle, truck, van"}
{"cat":"vehicles","slot":"specialization","value":"tractor trailer","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization tractor trailer\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, airplane, ship, motorcycle, bicycle, taxi, subway"}
{"cat":"vehicles","slot":"specialization","value":"semi","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization semi\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, plane, boat, bicycle, motorcycle, taxi, subway"}
{"cat":"vehicles","slot":"specialization","value":"merchant ship","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization merchant ship\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"10 words that belong to the category \"vehicles\" are: car, truck, bus, train, airplane, boat, ship, bicycle, motorcycle, and submarine."}
{"cat":"vehicles","slot":"specialization","value":"whaling ship","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization whaling ship\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, bus, train, airplane, ship, motorcycle, bicycle, truck, taxi, subway"}
{"cat":"vehicles","slot":"specialization","value":"skidder","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization skidder\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        truck, car, bus, train, boat, airplane, motorcycle, bicycle, skateboard, unicycle"}
{"cat":"vehicles","slot":"specialization","value":"cart","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization cart\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, airplane, boat, motorcycle, bicycle, subway, taxi"}
{"cat":"vehicles","slot":"specialization","value":"heap","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization heap\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, motorcycle, bicycle, boat, airplane, helicopter, submarine"}
{"cat":"vehicles","slot":"specialization","value":"prairie wagon","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization prairie wagon\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, plane, boat, bicycle, motorcycle, scooter, taxi"}
{"cat":"vehicles","slot":"specialization","value":"scooter","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization scooter\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, plane, ship, bicycle, motorcycle, scooter, skateboard"}
{"cat":"vehicles","slot":"specialization","value":"trolleybus","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization trolleybus\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, plane, boat, ship, motorcycle, bicycle, trolleybus"}
{"cat":"vehicles","slot":"specialization","value":"police car","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization police car\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, airplane, helicopter, boat, ship, motorcycle, bicycle"}
{"cat":"vehicles","slot":"specialization","value":"rocket","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization rocket\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, plane, boat, motorcycle, bicycle, submarine, rocket"}
{"cat":"vehicles","slot":"specialization","value":"dump truck","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization dump truck\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, plane, boat, bicycle, motorcycle, submarine, spacecraft"}
{"cat":"vehicles","slot":"specialization","value":"angledozer","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization angledozer\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, bus, train, airplane, motorcycle, bicycle, boat, truck, taxi, subway"}
{"cat":"vehicles","slot":"generalization","value":"military vehicle","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization military vehicle\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        tank, truck, jeep, helicopter, submarine, battleship, aircraft carrier, missile, drone, armored personnel carrier"}
{"cat":"vehicles","slot":"generalization","value":"ship","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization ship\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, airplane, boat, motorcycle, bicycle, submarine, rocket"}
{"cat":"vehicles","slot":"generalization","value":"lighter-than-air craft","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization lighter-than-air craft\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, boat, airplane, helicopter, motorcycle, bicycle, skateboard"}
{"cat":"vehicles","slot":"generalization","value":"watercraft","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization watercraft\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, plane, boat, ship, motorcycle, bicycle, skateboard"}
{"cat":"vehicles","slot":"generalization","value":"combat ship","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization combat ship\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, airplane, boat, ship, motorcycle, bicycle, unicycle"}
{"cat":"vehicles","slot":"generalization","value":"war vessel","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization war vessel\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, plane, ship, boat, motorcycle, bicycle, submarine"}
{"cat":"vehicles","slot":"generalization","value":"warship","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization warship\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, airplane, ship, boat, motorcycle, bicycle, submarine"}
{"cat":"vehicles","slot":"purpose","value":"passenger","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are used for\";         A textual example of the semantic relation is \"purpose passenger\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, bus, train, plane, ship, motorcycle, bicycle, taxi, truck, subway"}
{"cat":"vehicles","slot":"part","value":"boat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part boat\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        boat, ship, yacht, canoe, kayak, sailboat, motorboat, rowboat, submarine, ferry"}
{"cat":"vehicles","slot":"part","value":"gas","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part gas\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, motorcycle, bicycle, boat, train, airplane, helicopter, submarine"}
{"cat":"vehicles","slot":"generalization","value":"transport","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization transport\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, plane, boat, motorcycle, bicycle, taxi, subway"}
{"cat":"vehicles","slot":"user","value":"farm","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are used by\";         A textual example of the semantic relation is \"user farms\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, bus, train, plane, boat, bicycle, motorcycle, truck, taxi, subway"}
{"cat":"vehicles","slot":"specialization","value":"warship","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization warship\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, plane, boat, bicycle, motorcycle, submarine, rocket"}
{"cat":"vehicles","slot":"specialization","value":"military vehicle","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization military vehicle\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        tank, jeep, truck, aircraft, submarine, ship, train, bus, motorcycle, bicycle"}
{"cat":"vehicles","slot":"specialization","value":"ship","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization ship\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, airplane, ship, bicycle, motorcycle, taxi, subway"}
{"cat":"vehicles","slot":"specialization","value":"lighter-than-air craft","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization lighter-than-air craft\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, airplane, helicopter, motorcycle, bicycle, boat, submarine"}
{"cat":"vehicles","slot":"specialization","value":"combat ship","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization combat ship\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        ship, boat, car, train, plane, bus, motorcycle, bicycle, submarine, spacecraft"}
{"cat":"vehicles","slot":"specialization","value":"war vessel","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization war vessel\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        battleship, aircraft, train, submarine, motorcycle, automobile, bicycle, truck, bus, boat"}
{"cat":"vehicles","slot":"specialization","value":"boat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization boat\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, plane, boat, bicycle, motorcycle, taxi, subway"}
{"cat":"vehicles","slot":"specialization","value":"watercraft","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization watercraft\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        boat, ship, submarine, yacht, canoe, kayak, sailboat, catamaran, jetski, ferry"}
{"cat":"vehicles","slot":"generalization","value":"wheel","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization wheel\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, plane, boat, motorcycle, bicycle, skateboard, unicycle"}
{"cat":"vehicles","slot":"specialization","value":"heavier-than-air craft","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization heavier-than-air craft\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, airplane, helicopter, motorcycle, bicycle, boat, submarine"}
{"cat":"vehicles","slot":"specialization","value":"aircraft","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization aircraft\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, bus, truck, train, plane, boat, bicycle, motorcycle, taxi, subway"}
{"cat":"vehicles","slot":"specialization","value":"vessel","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization vessel\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, airplane, ship, boat, bicycle, motorcycle, submarine"}
{"cat":"vehicles","slot":"specialization","value":"craft","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization craft\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, train, airplane, helicopter, motorcycle, bicycle, boat, submarine"}
{"cat":"vehicles","slot":"specialization","value":"wheeled vehicle","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization wheeled vehicle\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        car, truck, bus, motorcycle, bicycle, train, boat, airplane, helicopter, submarine"}
{"cat":"clothes","slot":"size","value":"tall","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"size tall\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, jacket, skirt, hat, gloves, scarf, belt, socks"}
{"cat":"clothes","slot":"size","value":"short","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"size short\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, jacket, skirt, shoes, socks, hat, gloves, belt"}
{"cat":"clothes","slot":"time","value":"winter","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"can be consumed or used during\";         A textual example of the semantic relation is \"time winter\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        coat, gloves, scarf, hat, boots, sweater, jacket, earmuffs, thermal underwear, snow pants"}
{"cat":"clothes","slot":"time","value":"summer","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"can be consumed or used during\";         A textual example of the semantic relation is \"time summer\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        t-shirt, shorts, dress, sandals, sunglasses, swimsuit, hat, sunscreen, towel, flip-flops"}
{"cat":"clothes","slot":"place","value":"outdoors","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"can be found or used in\";         A textual example of the semantic relation is \"place outdoorss\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, jacket, shoes, hat, gloves, scarf, socks, belt"}
{"cat":"clothes","slot":"place","value":"hospital","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"can be found or used in\";         A textual example of the semantic relation is \"place hospitals\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, jacket, skirt, shoes, hat, socks, belt, scarf"}
{"cat":"clothes","slot":"place","value":"surgery","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"can be found or used in\";         A textual example of the semantic relation is \"place surgeries\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, shoes, socks, jacket, hat, scarf, gloves, belt"}
{"cat":"clothes","slot":"bodyPart","value":"waist","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"can have or be used with\";         A textual example of the semantic relation is \"bodyPart waist\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, jacket, dress, skirt, shorts, socks, shoes, belt, hat"}
{"cat":"clothes","slot":"bodyPart","value":"neck","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"can have or be used with\";         A textual example of the semantic relation is \"bodyPart neck\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, jacket, shoes, dress, skirt, hat, scarf, belt, gloves"}
{"cat":"clothes","slot":"bodyPart","value":"throat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"can have or be used with\";         A textual example of the semantic relation is \"bodyPart throat\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, jacket, pants, skirt, dress, shoes, socks, belt, hat, scarf"}
{"cat":"clothes","slot":"bodyPart","value":"leg","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"can have or be used with\";         A textual example of the semantic relation is \"bodyPart leg\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pants, shorts, skirt, dress, shirt, blouse, jacket, coat, sweater, t-shirt"}
{"cat":"clothes","slot":"bodyPart","value":"head","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"can have or be used with\";         A textual example of the semantic relation is \"bodyPart head\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, socks, shoes, jacket, hat, gloves, belt, scarf, dress"}
{"cat":"clothes","slot":"bodyPart","value":"knee","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"can have or be used with\";         A textual example of the semantic relation is \"bodyPart knee\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, jacket, shoes, socks, belt, hat, gloves, scarf, dress"}
{"cat":"clothes","slot":"bodyPart","value":"calf","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"can have or be used with\";         A textual example of the semantic relation is \"bodyPart calf\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pants, shirt, jacket, shoes, socks, belt, scarf, hat, gloves, dress"}
{"cat":"clothes","slot":"bodyPart","value":"foot","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"can have or be used with\";         A textual example of the semantic relation is \"bodyPart foot\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pants, shirt, jacket, dress, skirt, socks, shoes, hat, gloves, scarf"}
{"cat":"clothes","slot":"bodyPart","value":"ankle","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"can have or be used with\";         A textual example of the semantic relation is \"bodyPart ankle\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        socks, shoes, boots, pants, shirt, jacket, belt, watch, ring, necklace"}
{"cat":"clothes","slot":"shape","value":"long","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"shape long\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, jacket, skirt, hat, shoes, gloves, scarf, belt"}
{"cat":"clothes","slot":"shape","value":"elongated","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"shape elongated\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, jacket, skirt, shoes, hat, socks, gloves, scarf"}
{"cat":"clothes","slot":"shape","value":"circular","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"shape circular\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, jacket, dress, skirt, shorts, shoes, socks, hat, scarf"}
{"cat":"clothes","slot":"shape","value":"rectangular","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"shape rectangular\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, skirt, jacket, coat, sweater, shorts, socks, shoes"}
{"cat":"clothes","slot":"shape","value":"round","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"shape round\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, jacket, shoes, socks, hat, belt, scarf, gloves"}
{"cat":"clothes","slot":"bodyPart","value":"hand","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"can have or be used with\";         A textual example of the semantic relation is \"bodyPart hand\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, jacket, dress, skirt, shorts, socks, shoes, hat, gloves"}
{"cat":"clothes","slot":"purpose","value":"protect","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are used to\";         A textual example of the semantic relation is \"purpose protect\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, jacket, dress, skirt, socks, shoes, hat, gloves, scarf"}
{"cat":"clothes","slot":"purpose","value":"warmth","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are used for\";         A textual example of the semantic relation is \"purpose warmth\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        coat, sweater, scarf, gloves, hat, boots, socks, jacket, pants, shirt"}
{"cat":"clothes","slot":"purpose","value":"pair","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are used for\";         A textual example of the semantic relation is \"purpose pair\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, skirt, jacket, sweater, shoes, socks, hat, gloves"}
{"cat":"clothes","slot":"purpose","value":"riding","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are used for\";         A textual example of the semantic relation is \"purpose riding\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        jeans, shirt, jacket, sweater, dress, skirt, pants, shorts, socks, shoes"}
{"cat":"clothes","slot":"purpose","value":"work","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are used for\";         A textual example of the semantic relation is \"purpose work\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, jacket, skirt, shorts, sweater, socks, shoes, hat"}
{"cat":"clothes","slot":"purpose","value":"hygiene","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are used for\";         A textual example of the semantic relation is \"purpose hygiene\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, skirt, jacket, shoes, socks, hat, gloves, scarf"}
{"cat":"clothes","slot":"purpose","value":"gardening","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are used for\";         A textual example of the semantic relation is \"purpose gardening\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, skirt, jacket, shoes, socks, hat, gloves, scarf"}
{"cat":"clothes","slot":"purpose","value":"tie","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are used to\";         A textual example of the semantic relation is \"purpose tie\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, jacket, dress, skirt, shoes, socks, hat, gloves, scarf"}
{"cat":"clothes","slot":"purpose","value":"walk","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are used to\";         A textual example of the semantic relation is \"purpose walk\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pants, shirt, jacket, dress, skirt, shorts, socks, shoes, hat, gloves"}
{"cat":"clothes","slot":"purpose","value":"ride","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are used for\";         A textual example of the semantic relation is \"purpose ride\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, skirt, jacket, shoes, socks, hat, scarf, gloves"}
{"cat":"clothes","slot":"purpose","value":"run","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are used to\";         A textual example of the semantic relation is \"purpose run\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pants, shirt, jacket, dress, skirt, shorts, shoes, socks, hat, gloves"}
{"cat":"clothes","slot":"user","value":"woman","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are used by\";         A textual example of the semantic relation is \"user women\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dress, shirt, pants, skirt, jacket, sweater, socks, shoes, hat, gloves"}
{"cat":"clothes","slot":"user","value":"man","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are used by\";         A textual example of the semantic relation is \"user men\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, jacket, dress, skirt, shorts, shoes, socks, hat, scarf"}
{"cat":"clothes","slot":"user","value":"horseman","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are used by\";         A textual example of the semantic relation is \"user horsemen\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pants, shirts, skirts, jackets, dresses, shorts, jeans, sweaters, hats, socks"}
{"cat":"clothes","slot":"user","value":"gardener","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are used by\";         A textual example of the semantic relation is \"user gardeners\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, shoes, socks, jacket, hat, gloves, scarf, belt"}
{"cat":"clothes","slot":"user","value":"doctor","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are used by\";         A textual example of the semantic relation is \"user doctors\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        jeans, t-shirt, jacket, dress, shirt, pants, skirt, shorts, sweater, coat"}
{"cat":"clothes","slot":"user","value":"surgeon","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are used by\";         A textual example of the semantic relation is \"user surgeons\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"10 words: shirt, pants, shoes, socks, jacket, dress, skirt, hat, gloves, scarf"}
{"cat":"clothes","slot":"user","value":"workman","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are used by\";         A textual example of the semantic relation is \"user workmen\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"1. Shirt, 2. Pants, 3. Dress, 4. Skirt, 5. Jacket, 6. Coat, 7. Hat, 8. Gloves, 9. Socks, 10. Shoes"}
{"cat":"clothes","slot":"user","value":"men","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are used by\";         A textual example of the semantic relation is \"user mens\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, jacket, shoes, socks, hat, gloves, scarf, belt, tie"}
{"cat":"clothes","slot":"user","value":"goalkeeper","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are used by\";         A textual example of the semantic relation is \"user goalkeepers\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, shorts, socks, cleats, gloves, jersey, pants, sweater, jacket, hat"}
{"cat":"clothes","slot":"user","value":"lady","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are used by\";         A textual example of the semantic relation is \"user ladies\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pants, shirt, dress, skirt, jacket, shoes, socks, hat, gloves, scarf"}
{"cat":"clothes","slot":"user","value":"soldier","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are used by\";         A textual example of the semantic relation is \"user soldiers\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, socks, shoes, jacket, hat, gloves, scarf, belt, tie"}
{"cat":"clothes","slot":"user","value":"cowboy","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are used by\";         A textual example of the semantic relation is \"user cowboys\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"10 words that belong to the category \"clothes\" and satisfy the semantic relation \"are used by\".\n        clothes: shirt, pants, shoes, jacket, dress, skirt, hat, gloves, scarf, belt"}
{"cat":"clothes","slot":"user","value":"catcher","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are used by\";         A textual example of the semantic relation is \"user catchers\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pants, shirt, jacket, shoes, socks, hat, gloves, scarf, belt, tie"}
{"cat":"clothes","slot":"user","value":"baseman","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are used by\";         A textual example of the semantic relation is \"user basemen\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, shoes, socks, dress, skirt, jacket, hat, gloves, scarf"}
{"cat":"clothes","slot":"user","value":"falconer","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are used by\";         A textual example of the semantic relation is \"user falconers\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, socks, shoes, jacket, hat, gloves, scarf, dress, skirt"}
{"cat":"clothes","slot":"user","value":"fielder","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are used by\";         A textual example of the semantic relation is \"user fielders\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, skirt, jacket, shoes, socks, hat, gloves, scarf"}
{"cat":"clothes","slot":"user","value":"women","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are used by\";         A textual example of the semantic relation is \"user womens\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, skirt, jacket, shoes, socks, hat, gloves, scarf"}
{"cat":"clothes","slot":"purpose","value":"disposable","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are used for\";         A textual example of the semantic relation is \"purpose disposable\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, jacket, dress, skirt, shoes, socks, hat, gloves, scarf"}
{"cat":"clothes","slot":"shape","value":"hand","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"shape hand\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pants, shirt, dress, skirt, jacket, shoes, socks, hat, gloves, belt"}
{"cat":"clothes","slot":"material","value":"cotton","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"can be made of\";         A textual example of the semantic relation is \"material cotton\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        cotton, silk, polyester, wool, denim, leather, linen, velvet, chiffon, lace"}
{"cat":"clothes","slot":"material","value":"wool","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"can be made of\";         A textual example of the semantic relation is \"material wool\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dress, shirt, pants, jacket, skirt, sweater, socks, scarf, hat, gloves"}
{"cat":"clothes","slot":"material","value":"leather","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"can be made of\";         A textual example of the semantic relation is \"material leather\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        leather, cotton, wool, silk, denim, linen, polyester, rayon, nylon, spandex"}
{"cat":"clothes","slot":"material","value":"linen","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"can be made of\";         A textual example of the semantic relation is \"material linen\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, skirt, jacket, coat, hat, gloves, scarf, socks"}
{"cat":"clothes","slot":"material","value":"silk","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"can be made of\";         A textual example of the semantic relation is \"material silk\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dress, shirt, pants, skirt, jacket, sweater, socks, shoes, hat, gloves"}
{"cat":"clothes","slot":"material","value":"polyester","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"can be made of\";         A textual example of the semantic relation is \"material polyester\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dress, shirt, pants, skirt, jacket, sweater, socks, underwear, scarf, hat"}
{"cat":"clothes","slot":"material","value":"plastic","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"can be made of\";         A textual example of the semantic relation is \"material plastic\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        cotton, silk, wool, linen, polyester, denim, leather, lace, velvet, chiffon"}
{"cat":"clothes","slot":"material","value":"nylon","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"can be made of\";         A textual example of the semantic relation is \"material nylon\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, skirt, jacket, sweater, socks, shoes, hat, gloves"}
{"cat":"clothes","slot":"material","value":"viscose","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"can be made of\";         A textual example of the semantic relation is \"material viscose\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dress, shirt, pants, jacket, skirt, blouse, sweater, scarf, socks, gloves"}
{"cat":"clothes","slot":"material","value":"suede","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"can be made of\";         A textual example of the semantic relation is \"material suede\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        silk, wool, cotton, leather, linen, denim, polyester, lace, velvet, suede"}
{"cat":"clothes","slot":"material","value":"fabric","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"can be made of\";         A textual example of the semantic relation is \"material fabric\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        cotton, silk, wool, linen, denim, leather, polyester, rayon, velvet, lace"}
{"cat":"clothes","slot":"material","value":"felt","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"can be made of\";         A textual example of the semantic relation is \"material felt\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, skirt, jacket, sweater, socks, shoes, hat, scarf"}
{"cat":"clothes","slot":"material","value":"cloth","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"can be made of\";         A textual example of the semantic relation is \"material cloth\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        cotton, denim, silk, wool, linen, leather, polyester, velvet, chiffon, lace"}
{"cat":"clothes","slot":"material","value":"velvet","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"can be made of\";         A textual example of the semantic relation is \"material velvet\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        velvet, silk, cotton, leather, wool, linen, denim, polyester, satin, lace"}
{"cat":"clothes","slot":"material","value":"rubber","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"can be made of\";         A textual example of the semantic relation is \"material rubber\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, jacket, skirt, shorts, socks, shoes, hat, gloves"}
{"cat":"clothes","slot":"material","value":"fleece","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"can be made of\";         A textual example of the semantic relation is \"material fleece\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        jeans, shirt, dress, jacket, pants, skirt, sweater, socks, shoes, hat"}
{"cat":"clothes","slot":"material","value":"chiffon","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"can be made of\";         A textual example of the semantic relation is \"material chiffon\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        silk, cotton, wool, polyester, denim, leather, linen, lace, satin, velvet"}
{"cat":"clothes","slot":"material","value":"straw","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"can be made of\";         A textual example of the semantic relation is \"material straw\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dress, shirt, pants, skirt, jacket, shoes, hat, scarf, gloves, socks"}
{"cat":"clothes","slot":"material","value":"latex","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"can be made of\";         A textual example of the semantic relation is \"material latex\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, skirt, jacket, socks, shoes, hat, gloves, scarf"}
{"cat":"clothes","slot":"material","value":"cashmere","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"can be made of\";         A textual example of the semantic relation is \"material cashmere\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        cotton, silk, polyester, wool, linen, leather, denim, lace, velvet, chiffon"}
{"cat":"clothes","slot":"material","value":"sheepskin","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"can be made of\";         A textual example of the semantic relation is \"material sheepskin\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        \"shirt, pants, dress, coat, jacket, skirt, shorts, blouse, sweater, scarf\""}
{"cat":"clothes","slot":"part","value":"heel","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part heel\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, jacket, skirt, shoes, socks, hat, gloves, belt"}
{"cat":"clothes","slot":"part","value":"tongue","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part tongue\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, jacket, skirt, socks, shoes, hat, gloves, scarf"}
{"cat":"clothes","slot":"part","value":"hem","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part hem\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dress, shirt, pants, skirt, shorts, jacket, sweater, socks, shoes, hat"}
{"cat":"clothes","slot":"part","value":"seam","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part seam\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, jacket, skirt, shorts, sweater, socks, shoes, hat"}
{"cat":"clothes","slot":"part","value":"button","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part button\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, jacket, dress, skirt, blouse, sweater, coat, suit, shorts"}
{"cat":"clothes","slot":"part","value":"sole","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part sole\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, jacket, dress, skirt, shorts, sweater, socks, shoes, hat"}
{"cat":"clothes","slot":"part","value":"pocket","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part pocket\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, jacket, dress, skirt, sweater, shorts, jeans, socks, shoes"}
{"cat":"clothes","slot":"part","value":"fur","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part fur\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        fur coat, fur collar, fur hat, fur scarf, fur vest, fur trim, fur lining, fur gloves, fur boots, fur muff"}
{"cat":"clothes","slot":"part","value":"zip","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part zip\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dress, shirt, pants, jacket, skirt, sweater, coat, shorts, blouse, sweatshirt"}
{"cat":"clothes","slot":"part","value":"upper","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part upper\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, jacket, pants, dress, skirt, hat, scarf, gloves, belt, shoes"}
{"cat":"clothes","slot":"part","value":"waistband","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part waistband\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pants, shirt, dress, skirt, jacket, sweater, socks, shoes, belt, hat"}
{"cat":"clothes","slot":"part","value":"strap","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part strap\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, jacket, skirt, shoes, hat, belt, gloves, socks"}
{"cat":"clothes","slot":"part","value":"neckline","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part neckline\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        collar, cuffs, buttons, zipper, laces, pockets, belt, straps, buckle, loops"}
{"cat":"clothes","slot":"part","value":"visor","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part visor\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, jacket, skirt, dress, hat, gloves, scarf, belt, shoes"}
{"cat":"clothes","slot":"part","value":"belt loop","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part belt loop\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        jeans, pants, shorts, skirt, dress, shirt, jacket, coat, belt, scarf"}
{"cat":"clothes","slot":"part","value":"pant leg","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part pant leg\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pants, shirt, dress, coat, jacket, skirt, shorts, socks, shoes, hat"}
{"cat":"clothes","slot":"part","value":"collar","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part collar\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        collar, cuffs, buttons, zipper, pockets, belt, laces, straps, buckles, loops"}
{"cat":"clothes","slot":"part","value":"lap","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part lap\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, skirt, jacket, hat, shoes, socks, gloves, scarf"}
{"cat":"clothes","slot":"part","value":"lap covering","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part lap covering\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, skirt, jacket, sweater, hat, scarf, gloves, socks"}
{"cat":"clothes","slot":"part","value":"hemline","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part hemline\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dress, shirt, pants, skirt, jacket, sweater, blouse, shorts, jeans, coat"}
{"cat":"clothes","slot":"part","value":"trouser","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part trouser\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pants, shirt, jacket, dress, skirt, shorts, socks, shoes, hat, gloves"}
{"cat":"clothes","slot":"part","value":"toecap","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part toecap\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, skirt, jacket, sweater, socks, shoes, hat, gloves"}
{"cat":"clothes","slot":"part","value":"trouser cuff","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part trouser cuff\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        trouser cuff, shirt collar, dress hem, coat pocket, pant leg, skirt waistband, jacket button, sweater sleeve, hat brim, scarf edge"}
{"cat":"clothes","slot":"part","value":"trouser leg","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part trouser leg\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, jacket, skirt, dress, socks, shoes, hat, gloves, belt"}
{"cat":"clothes","slot":"part","value":"outsole","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part outsole\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pants, shirt, jacket, dress, skirt, shorts, sweater, shoes, socks, hat"}
{"cat":"clothes","slot":"part","value":"heel counter","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part heel counter\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, jacket, dress, skirt, shorts, sweater, socks, shoes, hat"}
{"cat":"clothes","slot":"part","value":"innersole","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part innersole\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, jacket, dress, skirt, shoes, socks, hat, gloves, scarf"}
{"cat":"clothes","slot":"part","value":"hip pocket","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part hip pocket\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pants, jeans, shorts, skirt, dress, shirt, jacket, coat, sweater, hat"}
{"cat":"clothes","slot":"part","value":"toe box","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part toe box\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, jacket, skirt, dress, shorts, socks, shoes, hat, scarf"}
{"cat":"clothes","slot":"part","value":"shoe collar","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part shoe collar\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, jacket, dress, skirt, shorts, socks, shoes, hat, gloves"}
{"cat":"clothes","slot":"part","value":"seat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part seat\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, skirt, jacket, sweater, socks, shoes, hat, gloves"}
{"cat":"clothes","slot":"part","value":"insole","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part insole\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, skirt, jacket, coat, hat, gloves, socks, shoes"}
{"cat":"clothes","slot":"part","value":"instep","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part instep\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, skirt, dress, jacket, coat, hat, scarf, gloves, socks"}
{"cat":"clothes","slot":"part","value":"counter","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part counter\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, skirt, jacket, coat, hat, scarf, gloves, socks"}
{"cat":"clothes","slot":"part","value":"earflap","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part earflap\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        hat, coat, sweater, scarf, gloves, boots, pants, shirt, jacket, socks"}
{"cat":"clothes","slot":"part","value":"dickey","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part dickey\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":" dickey, collar, cuffs, buttons, pockets, laces, belts, zippers, straps, buckles"}
{"cat":"clothes","slot":"part","value":"box pleat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part box pleat\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dress, shirt, pants, skirt, jacket, coat, blouse, sweater, shorts, socks"}
{"cat":"clothes","slot":"part","value":"sleeve","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part sleeve\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dress, shirt, jacket, pants, skirt, sweater, coat, hat, gloves, scarf"}
{"cat":"clothes","slot":"part","value":"eyehole","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part eyehole\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, skirt, jacket, sweater, socks, shoes, hat, gloves"}
{"cat":"clothes","slot":"part","value":"finger","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part finger\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, skirt, jacket, socks, shoes, hat, gloves, belt"}
{"cat":"clothes","slot":"part","value":"dickie","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part dickie\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, jacket, pants, dress, skirt, shoes, socks, hat, gloves, belt"}
{"cat":"clothes","slot":"part","value":"saddle","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part saddle\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, skirt, jacket, coat, hat, gloves, scarf, shoes"}
{"cat":"clothes","slot":"part","value":"shirtfront","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part shirtfront\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirtfront, collar, sleeve, button, cuff, pocket, seam, hem, lapel, pleat"}
{"cat":"clothes","slot":"part","value":"gad","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part gad\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, jacket, dress, skirt, shorts, sweater, hat, scarf, gloves"}
{"cat":"clothes","slot":"part","value":"earlap","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part earlap\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, jacket, dress, skirt, hat, gloves, scarf, belt, socks"}
{"cat":"clothes","slot":"part","value":"dicky","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part dicky\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, jacket, pants, skirt, dress, sweater, hat, scarf, gloves, socks"}
{"cat":"clothes","slot":"part","value":"shirtsleeve","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part shirtsleeve\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, jacket, skirt, shoes, hat, gloves, scarf, belt"}
{"cat":"clothes","slot":"part","value":"spike","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part spike\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, jacket, skirt, shoes, socks, hat, gloves, scarf"}
{"cat":"clothes","slot":"part","value":"shirttail","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part shirttail\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":" shirttail, cuff, collar, button, zipper, pocket, belt, strap, lace, ribbon"}
{"cat":"clothes","slot":"part","value":"shirt button","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part shirt button\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, jacket, dress, skirt, shorts, hat, gloves, scarf, belt"}
{"cat":"clothes","slot":"part","value":"shoestring","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part shoestring\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, coat, hat, gloves, scarf, socks, belt, shoes"}
{"cat":"clothes","slot":"part","value":"ruffle","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part ruffle\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dress, shirt, skirt, pants, jacket, blouse, sweater, socks, shoes, hat"}
{"cat":"clothes","slot":"part","value":"toe","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part toe\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"10 words that belong to the category \"clothes\" and satisfy the semantic relation \"can have\":\n        socks, shoes, pants, shirt, dress, coat, hat, gloves, scarf, belt"}
{"cat":"clothes","slot":"part","value":"thumb","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part thumb\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, jacket, skirt, dress, shorts, socks, shoes, hat, gloves"}
{"cat":"clothes","slot":"part","value":"shoe string","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part shoe string\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, socks, shoes, jacket, tie, hat, gloves, belt"}
{"cat":"clothes","slot":"part","value":"eyelet","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part eyelet\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, skirt, jacket, coat, hat, gloves, scarf, shoes"}
{"cat":"clothes","slot":"part","value":"hatband","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part hatband\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dress, shirt, pants, skirt, jacket, coat, hat, scarf, gloves, belt"}
{"cat":"clothes","slot":"part","value":"bootleg","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part bootleg\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":" pants, shirt, jacket, dress, skirt, shorts, socks, shoes, hat, gloves"}
{"cat":"clothes","slot":"part","value":"half sole","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part half sole\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, skirt, jacket, shoes, socks, hat, gloves, scarf"}
{"cat":"clothes","slot":"part","value":"shirting","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part shirting\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, jacket, skirt, shorts, socks, shoes, hat, gloves"}
{"cat":"clothes","slot":"part","value":"spur","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part spur\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, jacket, dress, skirt, shoes, socks, hat, gloves, scarf"}
{"cat":"clothes","slot":"part","value":"brim","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part brim\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dress, shirt, pants, jacket, skirt, hat, gloves, belt, scarf, socks"}
{"cat":"clothes","slot":"part","value":"shoe lace","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part shoe lace\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, jacket, skirt, dress, shorts, socks, shoes, hat, scarf"}
{"cat":"clothes","slot":"part","value":"placket","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part placket\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pants, shirt, dress, jacket, skirt, shorts, blouse, sweater, coat, scarf"}
{"cat":"clothes","slot":"part","value":"lacing","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part lacing\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, skirt, dress, jacket, shoes, hat, gloves, belt, scarf"}
{"cat":"clothes","slot":"part","value":"sunray pleat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part sunray pleat\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, skirt, jacket, coat, sweater, socks, shoes, hat"}
{"cat":"clothes","slot":"part","value":"shoelace","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part shoelace\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, skirt, jacket, sweater, socks, shoes, belt, hat"}
{"cat":"clothes","slot":"part","value":"sunburst pleat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part sunburst pleat\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, jacket, dress, skirt, shorts, sweater, blouse, coat, suit"}
{"cat":"clothes","slot":"part","value":"crown","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part crown\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, jacket, dress, skirt, shorts, sweater, socks, shoes, hat"}
{"cat":"clothes","slot":"part","value":"neckband","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part neckband\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, blouse, jacket, sweater, dress, skirt, pants, shorts, socks, shoes"}
{"cat":"clothes","slot":"part","value":"bootlace","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part bootlace\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, socks, shoes, jacket, tie, belt, hat, gloves"}
{"cat":"clothes","slot":"part","value":"bodice","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part bodice\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bodice, blouse, shirt, skirt, pants, dress, jacket, coat, hat, scarf"}
{"cat":"clothes","slot":"part","value":"buckle","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part buckle\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pants, shoes, shirt, jacket, dress, skirt, hat, belt, gloves, scarf"}
{"cat":"clothes","slot":"part","value":"pleat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part pleat\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dress, shirt, pants, skirt, jacket, coat, shorts, blouse, sweater, jeans"}
{"cat":"clothes","slot":"part","value":"kick pleat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part kick pleat\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, jacket, dress, skirt, coat, sweater, shorts, blouse, jeans"}
{"cat":"clothes","slot":"material","value":"lace","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"can be made of\";         A textual example of the semantic relation is \"material lace\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, skirt, jacket, sweater, socks, hat, gloves, scarf"}
{"cat":"clothes","slot":"generalization","value":"clothing","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization clothing\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, jacket, skirt, shorts, socks, shoes, hat, scarf"}
{"cat":"clothes","slot":"generalization","value":"garment","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization garment\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, jacket, skirt, shorts, jeans, sweater, socks, hat"}
{"cat":"clothes","slot":"generalization","value":"covering","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization covering\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, jacket, skirt, shorts, sweater, socks, shoes, hat"}
{"cat":"clothes","slot":"generalization","value":"consumer goods","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization consumer goods\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pants, shirt, dress, jacket, skirt, jeans, sweater, shoes, socks, hat"}
{"cat":"clothes","slot":"generalization","value":"habiliment","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization habiliment\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, skirt, jacket, shoes, hat, socks, gloves, scarf"}
{"cat":"clothes","slot":"generalization","value":"article of clothing","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization article of clothing\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, skirt, jacket, coat, hat, gloves, scarf, socks"}
{"cat":"clothes","slot":"generalization","value":"wearable","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization wearable\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, skirt, jacket, shoes, hat, socks, gloves, scarf"}
{"cat":"clothes","slot":"generalization","value":"vesture","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization vesture\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, shoes, jacket, skirt, hat, socks, belt, scarf"}
{"cat":"clothes","slot":"generalization","value":"wear","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization wear\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, jacket, skirt, socks, shoes, hat, gloves, scarf"}
{"cat":"clothes","slot":"generalization","value":"artifact","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization artifact\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, skirt, jacket, shoes, socks, hat, gloves, scarf"}
{"cat":"clothes","slot":"generalization","value":"artefact","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization artefact\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, jacket, skirt, shoes, hat, gloves, scarf, socks"}
{"cat":"clothes","slot":"generalization","value":"footwear","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization footwear\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, jacket, shoes, socks, hat, gloves, scarf, belt"}
{"cat":"clothes","slot":"generalization","value":"shoe","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization shoe\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, jacket, dress, skirt, hat, gloves, scarf, socks, shoes"}
{"cat":"clothes","slot":"generalization","value":"headdress","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization headdress\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, jacket, shoes, socks, hat, gloves, scarf, belt"}
{"cat":"clothes","slot":"generalization","value":"headgear","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization headgear\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, skirt, jacket, shoes, socks, hat, gloves, scarf"}
{"cat":"clothes","slot":"generalization","value":"headwear","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization headwear\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, jacket, dress, skirt, hat, shoes, socks, gloves, scarf"}
{"cat":"clothes","slot":"generalization","value":"footgear","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization footgear\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, skirt, jacket, coat, hat, gloves, shoes, socks"}
{"cat":"clothes","slot":"generalization","value":"hand wear","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization hand wear\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, jacket, skirt, shorts, socks, shoes, hat, gloves"}
{"cat":"clothes","slot":"generalization","value":"handwear","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization handwear\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, jacket, socks, shoes, hat, gloves, skirt, shorts"}
{"cat":"clothes","slot":"generalization","value":"outer garment","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization outer garment\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, jacket, skirt, shorts, sweater, coat, hat, gloves"}
{"cat":"clothes","slot":"generalization","value":"unit","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization unit\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, skirt, jacket, socks, shoes, hat, gloves, scarf"}
{"cat":"clothes","slot":"generalization","value":"overgarment","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization overgarment\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, jacket, sweater, skirt, shorts, blouse, jeans, coat"}
{"cat":"clothes","slot":"generalization","value":"trade good","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization trade good\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, shoes, jacket, skirt, hat, gloves, scarf, socks"}
{"cat":"clothes","slot":"generalization","value":"commodity","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization commodity\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, jacket, skirt, shorts, sweater, hat, socks, shoes"}
{"cat":"clothes","slot":"generalization","value":"whole","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization whole\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, skirt, jacket, coat, sweater, hat, shoes, socks"}
{"cat":"clothes","slot":"generalization","value":"woman's clothing","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization woman's clothing\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dress, shirt, pants, skirt, jacket, blouse, sweater, shorts, jeans, t-shirt"}
{"cat":"clothes","slot":"generalization","value":"good","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization good\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, skirt, jacket, shoes, socks, hat, gloves, scarf"}
{"cat":"clothes","slot":"generalization","value":"garb","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization garb\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, skirt, jacket, shoes, hat, socks, gloves, scarf"}
{"cat":"clothes","slot":"generalization","value":"top","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization top\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, jacket, skirt, socks, shoes, hat, gloves, belt"}
{"cat":"clothes","slot":"generalization","value":"hosiery","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization hosiery\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, jacket, dress, skirt, shorts, shoes, socks, hat, gloves"}
{"cat":"clothes","slot":"generalization","value":"cloak","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization cloak\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, jacket, dress, skirt, sweater, hat, shoes, socks, underwear"}
{"cat":"clothes","slot":"generalization","value":"attire","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization attire\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, shoes, jacket, hat, gloves, belt, socks, underwear"}
{"cat":"clothes","slot":"generalization","value":"disguise","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization disguise\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, jacket, skirt, shorts, socks, shoes, hat, gloves"}
{"cat":"clothes","slot":"generalization","value":"neckwear","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization neckwear\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, jacket, shoes, socks, hat, gloves, scarf, belt"}
{"cat":"clothes","slot":"generalization","value":"hose","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization hose\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, jacket, dress, skirt, shorts, shoes, socks, hat, scarf"}
{"cat":"clothes","slot":"generalization","value":"dress","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization dress\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":" dress, shirt, pants, skirt, jacket, sweater, socks, shoes, hat, gloves"}
{"cat":"clothes","slot":"colorPattern","value":"patterned","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"colorPattern patterned\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, jacket, skirt, shorts, sweater, socks, shoes, hat"}
{"cat":"clothes","slot":"colorPattern","value":"black","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"colorPattern black\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, jacket, dress, skirt, shoes, socks, hat, scarf, gloves"}
{"cat":"clothes","slot":"colorPattern","value":"blue","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"colorPattern blue\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, jacket, skirt, shoes, hat, scarf, gloves, belt"}
{"cat":"clothes","slot":"colorPattern","value":"pink","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"colorPattern pink\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, jacket, skirt, shoes, socks, hat, scarf, gloves"}
{"cat":"clothes","slot":"colorPattern","value":"green","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"colorPattern green\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, skirt, jacket, sweater, socks, shoes, hat, scarf"}
{"cat":"clothes","slot":"colorPattern","value":"red","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"colorPattern red\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, jacket, dress, skirt, shorts, shoes, socks, hat, gloves"}
{"cat":"clothes","slot":"colorPattern","value":"brown","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"colorPattern brown\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, jacket, dress, skirt, shorts, sweater, socks, shoes, hat"}
{"cat":"clothes","slot":"colorPattern","value":"white","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"colorPattern white\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, jacket, dress, skirt, shorts, socks, shoes, hat, gloves"}
{"cat":"clothes","slot":"colorPattern","value":"striped","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"colorPattern striped\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, shoes, socks, jacket, skirt, hat, gloves, belt"}
{"cat":"clothes","slot":"colorPattern","value":"grey","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"colorPattern grey\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, jacket, skirt, shorts, shoes, socks, hat, belt"}
{"cat":"clothes","slot":"colorPattern","value":"shiny","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"colorPattern shiny\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dress, shirt, pants, jacket, skirt, shoes, hat, gloves, scarf, belt"}
{"cat":"clothes","slot":"colorPattern","value":"glossy","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"colorPattern glossy\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, skirt, jacket, shoes, socks, hat, gloves, scarf"}
{"cat":"clothes","slot":"material","value":"coat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"can be made of\";         A textual example of the semantic relation is \"material coat\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        cotton, wool, denim, silk, linen, leather, polyester, rayon, lace, satin"}
{"cat":"clothes","slot":"material","value":"denim","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"can be made of\";         A textual example of the semantic relation is \"material denim\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        denim, leather, cotton, silk, wool, polyester, linen, rayon, lace, velvet"}
{"cat":"clothes","slot":"material","value":"disposable","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"can be made of\";         A textual example of the semantic relation is \"material disposable\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, skirt, jacket, socks, shoes, hat, gloves, scarf"}
{"cat":"clothes","slot":"specialization","value":"long pants","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization long pants\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, jacket, dress, skirt, shorts, sweater, socks, shoes, hat"}
{"cat":"clothes","slot":"specialization","value":"knickers","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization knickers\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, skirt, jacket, socks, shoes, hat, gloves, scarf"}
{"cat":"clothes","slot":"specialization","value":"riding breeches","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization riding breeches\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        jeans, shirt, dress, pants, shorts, skirt, jacket, shoes, socks, hat"}
{"cat":"clothes","slot":"specialization","value":"shalwar","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization shalwar\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, skirt, coat, jacket, shoes, socks, hat, scarf"}
{"cat":"clothes","slot":"specialization","value":"salwar","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization salwar\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, skirt, jacket, shoes, socks, hat, gloves, scarf"}
{"cat":"clothes","slot":"specialization","value":"breeches","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization breeches\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, jacket, dress, skirt, shorts, blouse, sweater, coat, hat"}
{"cat":"clothes","slot":"specialization","value":"pajama","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization pajama\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":" pajama, dress, shirt, pants, skirt, shorts, jacket, sweater, socks, shoes"}
{"cat":"clothes","slot":"specialization","value":"stretch pants","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization stretch pants\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, skirt, jacket, shoes, socks, hat, gloves, scarf"}
{"cat":"clothes","slot":"specialization","value":"sweat pants","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization sweat pants\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, jacket, socks, shoes, hat, gloves, scarf, belt"}
{"cat":"clothes","slot":"specialization","value":"trews","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization trews\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, jacket, dress, skirt, shorts, sweater, socks, shoes, hat"}
{"cat":"clothes","slot":"specialization","value":"long trousers","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization long trousers\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"1. shirt, 2. pants, 3. dress, 4. skirt, 5. jacket, 6. sweater, 7. shorts, 8. blouse, 9. jeans, 10. coat"}
{"cat":"clothes","slot":"specialization","value":"jodhpur breeches","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization jodhpur breeches\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pants, shirt, jacket, dress, skirt, shorts, socks, shoes, hat, gloves"}
{"cat":"clothes","slot":"specialization","value":"jean","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization jean\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        jeans, shirt, jacket, dress, skirt, pants, shorts, sweater, coat, hat"}
{"cat":"clothes","slot":"specialization","value":"shorts","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization shorts\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        t-shirt, jeans, jacket, sweater, dress, skirt, shorts, pants, socks, shoes"}
{"cat":"clothes","slot":"specialization","value":"chino","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization chino\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, jacket, skirt, shorts, socks, shoes, hat, gloves"}
{"cat":"clothes","slot":"specialization","value":"jodhpurs","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization jodhpurs\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, jacket, skirt, shorts, sweater, shoes, socks, hat"}
{"cat":"clothes","slot":"specialization","value":"knee breeches","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization knee breeches\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, skirt, jacket, shoes, socks, hat, gloves, belt"}
{"cat":"clothes","slot":"specialization","value":"short pants","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization short pants\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, jacket, dress, skirt, shorts, socks, shoes, hat, scarf"}
{"cat":"clothes","slot":"specialization","value":"bellbottom trousers","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization bellbottom trousers\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, jacket, dress, skirt, shoes, socks, hat, gloves, scarf"}
{"cat":"clothes","slot":"specialization","value":"corduroys","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization corduroys\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, jacket, dress, skirt, shorts, sweater, shoes, socks, hat"}
{"cat":"clothes","slot":"specialization","value":"mitten","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization mitten\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, skirt, jacket, dress, hat, shoes, gloves, socks, underwear"}
{"cat":"clothes","slot":"specialization","value":"bell-bottoms","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization bell-bottoms\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        jeans, shirt, dress, skirt, shorts, jacket, sweater, socks, shoes, hat"}
{"cat":"clothes","slot":"specialization","value":"flannel","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization flannel\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, jacket, skirt, dress, shorts, sweater, socks, shoes, hat"}
{"cat":"clothes","slot":"specialization","value":"pantaloon","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization pantaloon\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pants, shirt, dress, jacket, skirt, socks, shoes, hat, gloves, scarf"}
{"cat":"clothes","slot":"specialization","value":"toreador pants","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization toreador pants\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, jacket, shoes, socks, hat, gloves, scarf, belt"}
{"cat":"clothes","slot":"specialization","value":"bellbottom pants","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization bellbottom pants\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, skirt, jacket, shorts, socks, shoes, hat, gloves"}
{"cat":"clothes","slot":"specialization","value":"slacks","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization slacks\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, skirt, jacket, socks, shoes, hat, gloves, scarf"}
{"cat":"clothes","slot":"specialization","value":"trunks","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization trunks\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, jacket, dress, skirt, shorts, socks, shoes, hat, gloves"}
{"cat":"clothes","slot":"specialization","value":"tweed","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization tweed\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"1. shirt, 2. pants, 3. dress, 4. skirt, 5. jacket, 6. coat, 7. hat, 8. gloves, 9. scarf, 10. socks"}
{"cat":"clothes","slot":"specialization","value":"pyjama","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization pyjama\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        jeans,shirt,dress,shorts,skirt,trousers,jacket,coat,hat,gloves"}
{"cat":"clothes","slot":"specialization","value":"blue jean","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization blue jean\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, jacket, shoes, socks, hat, belt, scarf, gloves"}
{"cat":"clothes","slot":"specialization","value":"gabardine","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization gabardine\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, skirt, jacket, sweater, socks, shoes, hat, scarf"}
{"cat":"clothes","slot":"specialization","value":"knee pants","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization knee pants\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pants, shirt, dress, jacket, skirt, shorts, sweater, shoes, socks, hat"}
{"cat":"clothes","slot":"specialization","value":"knickerbockers","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization knickerbockers\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pants, shirt, dress, skirt, jacket, shoes, socks, hat, gloves, scarf"}
{"cat":"clothes","slot":"specialization","value":"sweatpants","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization sweatpants\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pants, shirt, dress, jacket, shoes, socks, hat, gloves, scarf, belt"}
{"cat":"clothes","slot":"specialization","value":"churidars","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization churidars\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, skirt, jacket, shoes, socks, hat, gloves, scarf"}
{"cat":"clothes","slot":"specialization","value":"cords","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization cords\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pants, shirt, jacket, dress, skirt, shorts, sweater, socks, shoes, hat"}
{"cat":"clothes","slot":"specialization","value":"pedal pusher","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization pedal pusher\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, skirt, jacket, sweater, socks, shoes, hat, scarf"}
{"cat":"clothes","slot":"specialization","value":"denim","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization denim\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        jeans, t-shirt, dress, shirt, jacket, pants, skirt, shorts, sweater, coat"}
{"cat":"clothes","slot":"specialization","value":"lumber jacket","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization lumber jacket\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, skirt, jacket, shoes, socks, hat, gloves, scarf"}
{"cat":"clothes","slot":"specialization","value":"dressing sacque","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization dressing sacque\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, skirt, jacket, coat, hat, gloves, scarf, shoes"}
{"cat":"clothes","slot":"specialization","value":"tirolean","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization tirolean\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, jacket, dress, skirt, shorts, socks, shoes, hat, gloves"}
{"cat":"clothes","slot":"specialization","value":"mini","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization mini\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, jacket, skirt, hat, gloves, scarf, socks, shoes"}
{"cat":"clothes","slot":"specialization","value":"donkey jacket","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization donkey jacket\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pants, shirt, dress, jacket, skirt, shorts, blouse, sweater, socks, shoes"}
{"cat":"clothes","slot":"specialization","value":"anklet","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization anklet\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, jacket, dress, skirt, shorts, shoes, socks, hat, gloves"}
{"cat":"clothes","slot":"specialization","value":"mess jacket","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization mess jacket\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, skirt, jacket, coat, hat, gloves, scarf, socks"}
{"cat":"clothes","slot":"specialization","value":"sacque","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization sacque\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, skirt, jacket, shoes, socks, hat, gloves, scarf"}
{"cat":"clothes","slot":"specialization","value":"shower cap","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization shower cap\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, skirt, jacket, shoes, socks, hat, gloves, scarf"}
{"cat":"clothes","slot":"specialization","value":"tabis","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization tabis\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, skirt, dress, jacket, shoes, socks, hat, gloves, scarf"}
{"cat":"clothes","slot":"specialization","value":"Balmoral","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization Balmoral\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, skirt, jacket, shoes, socks, hat, gloves, scarf"}
{"cat":"clothes","slot":"specialization","value":"tam-o'-shanter","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization tam-o'-shanter\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, jacket, skirt, hat, shoes, socks, gloves, scarf"}
{"cat":"clothes","slot":"specialization","value":"sports jacket","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization sports jacket\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, skirt, jacket, coat, hat, gloves, scarf, shoes"}
{"cat":"clothes","slot":"specialization","value":"dolman","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization dolman\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        blouse, shirt, pants, skirt, dress, coat, jacket, sweater, shorts, socks"}
{"cat":"clothes","slot":"specialization","value":"morning dress","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization morning dress\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, skirt, jacket, sweater, socks, shoes, hat, scarf"}
{"cat":"clothes","slot":"specialization","value":"sport jacket","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization sport jacket\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, shoes, socks, jacket, hat, gloves, scarf, belt"}
{"cat":"clothes","slot":"specialization","value":"trilby","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization trilby\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, jacket, skirt, shoes, hat, gloves, socks, belt"}
{"cat":"clothes","slot":"specialization","value":"stovepipe","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization stovepipe\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, jacket, skirt, shorts, sweater, socks, shoes, hat"}
{"cat":"clothes","slot":"specialization","value":"pinafore","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization pinafore\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":" pants, shirt, dress, skirt, jacket, sweater, socks, shoes, hat, scarf"}
{"cat":"clothes","slot":"specialization","value":"kalansuwa","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization kalansuwa\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, skirt, jacket, shoes, socks, hat, gloves, scarf"}
{"cat":"clothes","slot":"specialization","value":"campaign hat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization campaign hat\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pants, shirt, jacket, dress, skirt, shorts, socks, shoes, hat, gloves"}
{"cat":"clothes","slot":"specialization","value":"bobbysock","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization bobbysock\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, skirt, jacket, shoes, socks, hat, gloves, scarf"}
{"cat":"clothes","slot":"specialization","value":"hoopskirt","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization hoopskirt\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"10 words that belong to the category \"clothes\" are: shirt, pants, dress, skirt, jacket, shoes, hat, gloves, socks, underwear."}
{"cat":"clothes","slot":"specialization","value":"golf glove","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization golf glove\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, jacket, dress, skirt, socks, shoes, hat, gloves, scarf"}
{"cat":"clothes","slot":"specialization","value":"kirtle","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization kirtle\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, jacket, skirt, socks, shoes, hat, gloves, belt"}
{"cat":"clothes","slot":"specialization","value":"ten-gallon hat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization ten-gallon hat\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        T-shirt, jeans, jacket, dress, skirt, shorts, pants, socks, shoes, hat"}
{"cat":"clothes","slot":"specialization","value":"jumper","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization jumper\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, skirt, jacket, hat, gloves, socks, shoes, belt"}
{"cat":"clothes","slot":"specialization","value":"peaked cap","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization peaked cap\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        peaked cap, t-shirt, jeans, sneakers, jacket, sweater, skirt, dress, shorts, pants"}
{"cat":"clothes","slot":"specialization","value":"toque","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization toque\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, coat, hat, gloves, scarf, socks, shoes"}
{"cat":"clothes","slot":"specialization","value":"sack","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization sack\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, jacket, skirt, shorts, socks, shoes, hat, scarf"}
{"cat":"clothes","slot":"specialization","value":"cockscomb","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization cockscomb\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, skirt, jacket, shoes, socks, hat, gloves, scarf"}
{"cat":"clothes","slot":"specialization","value":"hug-me-tight","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization hug-me-tight\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        t-shirt, pants, dress, jacket, shoes, socks, hat, scarf, gloves, belt"}
{"cat":"clothes","slot":"specialization","value":"Mother Hubbard","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization Mother Hubbard\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, skirt, jacket, shoes, socks, hat, gloves, scarf"}
{"cat":"clothes","slot":"specialization","value":"jockey cap","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization jockey cap\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, skirt, jacket, sweater, shoes, socks, hat, belt"}
{"cat":"clothes","slot":"specialization","value":"tabi","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization tabi\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, skirt, dress, jacket, sweater, socks, shoes, hat, gloves"}
{"cat":"clothes","slot":"specialization","value":"tammy","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization tammy\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pants, shirt, dress, skirt, jacket, hat, socks, shoes, gloves, scarf"}
{"cat":"clothes","slot":"specialization","value":"sunhat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization sunhat\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"1. shirt, 2. pants, 3. dress, 4. jacket, 5. shoes, 6. socks, 7. hat, 8. gloves, 9. scarf, 10. belt"}
{"cat":"clothes","slot":"specialization","value":"woman's hat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization woman's hat\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        blouse, skirt, dress, pants, jacket, shirt, sweater, coat, hat, scarf"}
{"cat":"clothes","slot":"specialization","value":"cavalier hat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization cavalier hat\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, skirt, jacket, shoes, socks, hat, belt, scarf"}
{"cat":"clothes","slot":"specialization","value":"ballet skirt","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization ballet skirt\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, skirt, jacket, coat, hat, gloves, socks, shoes"}
{"cat":"clothes","slot":"specialization","value":"gantlet","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization gantlet\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pants, shirt, jacket, dress, skirt, shorts, socks, shoes, hat, gloves"}
{"cat":"clothes","slot":"specialization","value":"morning coat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization morning coat\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, jacket, skirt, shorts, blouse, sweater, coat, hat"}
{"cat":"clothes","slot":"specialization","value":"single-breasted jacket","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization single-breasted jacket\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"1. t-shirt, 2. jeans, 3. dress, 4. jacket, 5. sweater, 6. socks, 7. shoes, 8. hat, 9. scarf, 10. gloves"}
{"cat":"clothes","slot":"specialization","value":"fur hat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization fur hat\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pants, shirt, dress, jacket, skirt, shorts, sweater, socks, shoes, hat"}
{"cat":"clothes","slot":"specialization","value":"sport shirt","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization sport shirt\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, jacket, dress, skirt, shorts, socks, shoes, hat, gloves"}
{"cat":"clothes","slot":"specialization","value":"beaver","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization beaver\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, jacket, skirt, shorts, sweater, socks, shoes, hat"}
{"cat":"clothes","slot":"specialization","value":"gauntlet","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization gauntlet\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"10 words that belong to the category \"clothes\": shirt, pants, dress, skirt, jacket, shorts, sweater, socks, shoes, hat"}
{"cat":"clothes","slot":"specialization","value":"beret","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization beret\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, jacket, dress, skirt, shorts, socks, shoes, hat, gloves"}
{"cat":"clothes","slot":"specialization","value":"deerstalker","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization deerstalker\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, skirt, jacket, sweater, shoes, hat, socks, underwear"}
{"cat":"clothes","slot":"specialization","value":"nightcap","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization nightcap\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, jacket, dress, skirt, shorts, socks, shoes, hat, gloves"}
{"cat":"clothes","slot":"specialization","value":"tarboosh","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization tarboosh\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, skirt, jacket, shoes, socks, hat, belt, scarf"}
{"cat":"clothes","slot":"specialization","value":"felt hat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization felt hat\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, shoes, hat, jacket, skirt, socks, belt, scarf"}
{"cat":"clothes","slot":"specialization","value":"sou'wester","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization sou'wester\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, skirt, dress, jacket, sweater, socks, shoes, hat, belt"}
{"cat":"clothes","slot":"specialization","value":"jeweled headdress","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization jeweled headdress\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"1. shirt, 2. pants, 3. dress, 4. skirt, 5. jacket, 6. sweater, 7. hat, 8. socks, 9. shoes, 10. gloves"}
{"cat":"clothes","slot":"specialization","value":"cocktail dress","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization cocktail dress\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, skirt, jacket, socks, shoes, hat, gloves, scarf"}
{"cat":"clothes","slot":"specialization","value":"topper","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization topper\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pants, shirt, jacket, dress, skirt, shorts, sweater, socks, shoes, hat"}
{"cat":"clothes","slot":"specialization","value":"bonnet","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization bonnet\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, skirt, jacket, hat, gloves, socks, shoes, scarf"}
{"cat":"clothes","slot":"specialization","value":"Panama","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization Panama\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, jacket, skirt, shorts, hat, socks, shoes, gloves"}
{"cat":"clothes","slot":"specialization","value":"bush jacket","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization bush jacket\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"1. shirt, 2. pants, 3. dress, 4. skirt, 5. jacket, 6. sweater, 7. socks, 8. shoes, 9. hat, 10. scarf"}
{"cat":"clothes","slot":"specialization","value":"overskirt","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization overskirt\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dress, shirt, pants, jacket, skirt, socks, shoes, hat, scarf, gloves"}
{"cat":"clothes","slot":"specialization","value":"T-shirt","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization T-shirt\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        T-shirt, jeans, dress, shirt, jacket, sweater, skirt, shorts, pants, socks"}
{"cat":"clothes","slot":"specialization","value":"grass skirt","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization grass skirt\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, jacket, skirt, shorts, socks, shoes, hat, gloves"}
{"cat":"clothes","slot":"specialization","value":"yachting cap","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization yachting cap\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, skirt, dress, jacket, coat, hat, shoes, socks, gloves"}
{"cat":"clothes","slot":"specialization","value":"millinery","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization millinery\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, jacket, skirt, socks, shoes, hat, gloves, scarf"}
{"cat":"clothes","slot":"specialization","value":"bobbysocks","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization bobbysocks\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, jacket, dress, shoes, socks, hat, gloves, scarf, belt"}
{"cat":"clothes","slot":"specialization","value":"miniskirt","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization miniskirt\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        t-shirt, pants, dress, skirt, shorts, sweater, jacket, shoes, socks, hat"}
{"cat":"clothes","slot":"specialization","value":"shift","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization shift\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, skirt, jacket, shoes, socks, hat, gloves, scarf"}
{"cat":"clothes","slot":"specialization","value":"dunce cap","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization dunce cap\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, skirt, jacket, sweater, socks, shoes, hat, scarf"}
{"cat":"clothes","slot":"specialization","value":"cloth cap","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization cloth cap\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, jacket, skirt, shorts, blouse, sweater, socks, shoes"}
{"cat":"clothes","slot":"specialization","value":"shirtdress","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization shirtdress\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, dress, pants, skirt, jacket, coat, hat, gloves, scarf, socks"}
{"cat":"clothes","slot":"specialization","value":"bathing cap","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization bathing cap\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, jacket, skirt, shorts, shoes, hat, socks, underwear"}
{"cat":"clothes","slot":"specialization","value":"monkey jacket","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization monkey jacket\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, jacket, skirt, shorts, socks, shoes, hat, scarf"}
{"cat":"clothes","slot":"specialization","value":"swimming cap","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization swimming cap\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, jacket, dress, skirt, shoes, hat, socks, belt, gloves"}
{"cat":"clothes","slot":"specialization","value":"kaftan","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization kaftan\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, skirt, jacket, coat, sweater, hat, shoes, socks"}
{"cat":"clothes","slot":"specialization","value":"dunce's cap","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization dunce's cap\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pants, shirt, dress, skirt, jacket, shoes, socks, hat, gloves, scarf"}
{"cat":"clothes","slot":"specialization","value":"pinner","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization pinner\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pants, shirt, jacket, dress, skirt, shorts, socks, shoes, hat, gloves"}
{"cat":"clothes","slot":"specialization","value":"jerkin","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization jerkin\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, skirt, dress, jacket, coat, hat, gloves, scarf, socks"}
{"cat":"clothes","slot":"specialization","value":"Mao jacket","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization Mao jacket\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, skirt, dress, jacket, coat, hat, gloves, scarf, socks"}
{"cat":"clothes","slot":"specialization","value":"kaffiyeh","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization kaffiyeh\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, skirt, jacket, shoes, socks, hat, gloves, scarf"}
{"cat":"clothes","slot":"specialization","value":"cocked hat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization cocked hat\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, skirt, jacket, shoes, socks, hat, gloves, scarf"}
{"cat":"clothes","slot":"specialization","value":"windbreaker","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization windbreaker\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pants, shirt, jacket, dress, skirt, shorts, socks, shoes, hat, gloves"}
{"cat":"clothes","slot":"specialization","value":"tam","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization tam\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, jacket, dress, skirt, shorts, sweater, socks, shoes, hat"}
{"cat":"clothes","slot":"specialization","value":"chemise","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization chemise\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        chemise, blouse, shirt, t-shirt, sweater, jacket, coat, pants, shorts, skirt"}
{"cat":"clothes","slot":"specialization","value":"sari","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization sari\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, skirt, jacket, shoes, socks, hat, gloves, scarf"}
{"cat":"clothes","slot":"specialization","value":"coonskin","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization coonskin\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, skirt, jacket, coat, hat, gloves, scarf, socks"}
{"cat":"clothes","slot":"specialization","value":"cap","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization cap\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, jacket, dress, skirt, hat, shoes, gloves, socks, scarf"}
{"cat":"clothes","slot":"specialization","value":"baseball cap","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization baseball cap\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, shoes, socks, jacket, dress, skirt, hat, gloves, belt"}
{"cat":"clothes","slot":"specialization","value":"Norfolk jacket","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization Norfolk jacket\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        t-shirt, jeans, dress, shirt, pants, skirt, sweater, coat, jacket, shorts"}
{"cat":"clothes","slot":"specialization","value":"wimple","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization wimple\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dress, shirt, pants, skirt, jacket, shoes, hat, gloves, scarf, socks"}
{"cat":"clothes","slot":"specialization","value":"blazer","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization blazer\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        blazer, shirt, pants, jacket, dress, skirt, shorts, sweater, jeans, shoes"}
{"cat":"clothes","slot":"specialization","value":"garrison cap","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization garrison cap\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, jacket, dress, skirt, shorts, socks, shoes, hat, gloves"}
{"cat":"clothes","slot":"specialization","value":"evening shirt","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization evening shirt\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, skirt, jacket, coat, hat, shoes, socks, belt"}
{"cat":"clothes","slot":"specialization","value":"banian","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization banian\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, skirt, jacket, shoes, socks, hat, scarf, belt"}
{"cat":"clothes","slot":"specialization","value":"balaclava","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization balaclava\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, skirt, jacket, coat, sweater, socks, shoes, hat"}
{"cat":"clothes","slot":"specialization","value":"maxi","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization maxi\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, skirt, jacket, shorts, sweater, shoes, socks, hat"}
{"cat":"clothes","slot":"specialization","value":"pinny","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization pinny\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, jacket, dress, skirt, shorts, hat, gloves, socks, shoes"}
{"cat":"clothes","slot":"specialization","value":"bolero","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization bolero\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        t-shirt, jeans, dress, suit, coat, hat, scarf, gloves, socks, underwear"}
{"cat":"clothes","slot":"specialization","value":"skullcap","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization skullcap\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, jacket, dress, shoes, socks, hat, gloves, belt, scarf"}
{"cat":"clothes","slot":"specialization","value":"mortarboard","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization mortarboard\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, shoes, socks, hat, coat, gloves, scarf, belt"}
{"cat":"clothes","slot":"specialization","value":"metal glove","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization metal glove\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"1. shirt, 2. pants, 3. dress, 4. jacket, 5. shoes, 6. socks, 7. hat, 8. scarf, 9. gloves, 10. belt"}
{"cat":"clothes","slot":"specialization","value":"bearskin","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization bearskin\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, jacket, shoes, socks, hat, gloves, scarf, belt"}
{"cat":"clothes","slot":"specialization","value":"fool's cap","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization fool's cap\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, skirt, jacket, shoes, hat, gloves, belt, scarf"}
{"cat":"clothes","slot":"specialization","value":"flat cap","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization flat cap\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        t-shirt, jeans, dress, shirt, shorts, skirt, jacket, socks, shoes, hat"}
{"cat":"clothes","slot":"specialization","value":"false face","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization false face\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, jacket, skirt, shoes, socks, hat, gloves, scarf"}
{"cat":"clothes","slot":"specialization","value":"straw hat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization straw hat\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, skirt, jacket, shoes, socks, hat, gloves, belt"}
{"cat":"clothes","slot":"specialization","value":"culotte","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization culotte\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pants, shirt, dress, skirt, jacket, coat, sweater, shorts, socks, shoes"}
{"cat":"clothes","slot":"specialization","value":"lavalava","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization lavalava\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"1. shirt, 2. pants, 3. dress, 4. jacket, 5. skirt, 6. shorts, 7. blouse, 8. sweater, 9. socks, 10. shoes"}
{"cat":"clothes","slot":"specialization","value":"kilt","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization kilt\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, jacket, skirt, shoes, hat, socks, belt, scarf"}
{"cat":"clothes","slot":"specialization","value":"polo shirt","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization polo shirt\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, jacket, skirt, shorts, sweater, socks, shoes, hat"}
{"cat":"clothes","slot":"specialization","value":"sports coat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization sports coat\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, skirt, dress, jacket, sweater, socks, shoes, hat, belt"}
{"cat":"clothes","slot":"specialization","value":"balaclava helmet","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization balaclava helmet\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, shoes, socks, coat, hat, gloves, scarf, underwear"}
{"cat":"clothes","slot":"specialization","value":"peacoat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization peacoat\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pants, shirt, jacket, dress, skirt, shorts, socks, shoes, hat, gloves"}
{"cat":"clothes","slot":"specialization","value":"sun hat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization sun hat\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, skirt, jacket, coat, shoes, socks, hat, gloves"}
{"cat":"clothes","slot":"specialization","value":"top hat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization top hat\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, shoes, jacket, socks, hat, gloves, skirt, shorts"}
{"cat":"clothes","slot":"specialization","value":"topknot","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization topknot\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pants, shirt, jacket, dress, skirt, socks, shoes, hat, gloves, scarf"}
{"cat":"clothes","slot":"specialization","value":"fez","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization fez\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, jacket, dress, skirt, shorts, hat, gloves, socks, shoes"}
{"cat":"clothes","slot":"specialization","value":"homburg","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization homburg\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, skirt, jacket, shoes, socks, hat, gloves, scarf"}
{"cat":"clothes","slot":"specialization","value":"saree","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization saree\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":" saree, salwar, kameez, lehenga, churidar, dupatta, sherwani, kurta, lungi, dhoti"}
{"cat":"clothes","slot":"specialization","value":"coonskin cap","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization coonskin cap\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, jacket, dress, skirt, shorts, socks, shoes, hat, gloves"}
{"cat":"clothes","slot":"specialization","value":"bomber jacket","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization bomber jacket\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, skirt, jacket, coat, hat, gloves, socks, shoes"}
{"cat":"clothes","slot":"specialization","value":"sundress","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization sundress\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, skirt, jacket, shoes, hat, socks, scarf, gloves"}
{"cat":"clothes","slot":"specialization","value":"strapless","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization strapless\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, skirt, jacket, shoes, socks, hat, gloves, scarf"}
{"cat":"clothes","slot":"specialization","value":"bed jacket","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization bed jacket\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, skirt, jacket, coat, hat, gloves, scarf, socks"}
{"cat":"clothes","slot":"specialization","value":"tutu","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization tutu\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":" tutu, dress, shirt, pants, jacket, skirt, hat, gloves, socks, shoes"}
{"cat":"clothes","slot":"specialization","value":"service cap","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization service cap\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, jacket, skirt, shorts, shoes, socks, hat, gloves"}
{"cat":"clothes","slot":"specialization","value":"golf cap","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization golf cap\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, jacket, skirt, shorts, socks, shoes, hat, gloves"}
{"cat":"clothes","slot":"specialization","value":"doublet","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization doublet\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, skirt, jacket, shoes, socks, hat, gloves, belt"}
{"cat":"clothes","slot":"specialization","value":"eye mask","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization eye mask\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, skirt, dress, jacket, shoes, socks, hat, gloves, scarf"}
{"cat":"clothes","slot":"specialization","value":"busby","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization busby\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, jacket, shoes, hat, socks, skirt, belt, gloves"}
{"cat":"clothes","slot":"specialization","value":"kid glove","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization kid glove\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, skirt, jacket, sweater, shoes, hat, socks, underwear"}
{"cat":"clothes","slot":"specialization","value":"caftan","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization caftan\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, skirt, dress, jacket, coat, hat, gloves, scarf, socks"}
{"cat":"clothes","slot":"specialization","value":"coxcomb","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization coxcomb\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pants, shirt, dress, jacket, skirt, shorts, socks, shoes, hat, gloves"}
{"cat":"clothes","slot":"specialization","value":"crinoline","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization crinoline\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dress, shirt, pants, skirt, jacket, coat, hat, gloves, scarf, shoes"}
{"cat":"clothes","slot":"specialization","value":"muff","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization muff\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, jacket, dress, skirt, shorts, socks, shoes, hat, gloves"}
{"cat":"clothes","slot":"specialization","value":"pea jacket","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization pea jacket\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pants, shirt, dress, jacket, skirt, shorts, blouse, sweater, coat, shoes"}
{"cat":"clothes","slot":"specialization","value":"Glengarry","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization Glengarry\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, jacket, dress, skirt, shorts, socks, shoes, hat, scarf"}
{"cat":"clothes","slot":"specialization","value":"anklets","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization anklets\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dress, shirt, pants, skirt, jacket, shoes, socks, hat, gloves, scarf"}
{"cat":"clothes","slot":"specialization","value":"calpac","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization calpac\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, skirt, jacket, sweater, shoes, socks, hat, gloves"}
{"cat":"clothes","slot":"specialization","value":"polonaise","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization polonaise\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, skirt, jacket, shoes, hat, socks, belt, scarf"}
{"cat":"clothes","slot":"specialization","value":"suede glove","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization suede glove\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, jacket, dress, skirt, shoes, hat, socks, belt, scarf"}
{"cat":"clothes","slot":"specialization","value":"varsity sock","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization varsity sock\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, jacket, dress, skirt, hat, shoes, socks, belt, scarf"}
{"cat":"clothes","slot":"specialization","value":"biggin","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization biggin\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, skirt, jacket, shoes, socks, hat, gloves, scarf"}
{"cat":"clothes","slot":"specialization","value":"banyan","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization banyan\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, skirt, jacket, sweater, socks, shoes, hat, belt"}
{"cat":"clothes","slot":"specialization","value":"dolman jacket","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization dolman jacket\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, jacket, dress, skirt, shorts, sweater, socks, shoes, hat"}
{"cat":"clothes","slot":"specialization","value":"parka","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization parka\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, jacket, dress, skirt, shorts, shoes, socks, hat, belt"}
{"cat":"clothes","slot":"specialization","value":"high hat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization high hat\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, skirt, dress, jacket, shoes, socks, hat, gloves, scarf"}
{"cat":"clothes","slot":"specialization","value":"bluebonnet","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization bluebonnet\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, skirt, jacket, shoes, hat, socks, gloves, belt"}
{"cat":"clothes","slot":"specialization","value":"half mask","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization half mask\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, jacket, dress, skirt, shorts, socks, shoes, hat, gloves"}
{"cat":"clothes","slot":"specialization","value":"sport coat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization sport coat\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"1. shirt, 2. pants, 3. dress, 4. skirt, 5. jacket, 6. coat, 7. sweater, 8. hat, 9. socks, 10. shoes"}
{"cat":"clothes","slot":"specialization","value":"hair shirt","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization hair shirt\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        t-shirt, jeans, dress, shirt, shorts, skirt, sweater, jacket, pants, socks"}
{"cat":"clothes","slot":"specialization","value":"sailor","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization sailor\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, skirt, jacket, shoes, socks, hat, gloves, belt"}
{"cat":"clothes","slot":"specialization","value":"biretta","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization biretta\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, skirt, jacket, shoes, hat, socks, belt, scarf"}
{"cat":"clothes","slot":"specialization","value":"snap-brim hat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization snap-brim hat\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, skirt, jacket, shoes, socks, hat, belt, scarf"}
{"cat":"clothes","slot":"specialization","value":"work-shirt","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization work-shirt\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, jacket, skirt, shorts, sweater, socks, shoes, hat"}
{"cat":"clothes","slot":"specialization","value":"silk hat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization silk hat\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, jacket, dress, skirt, shorts, sweater, socks, shoes, hat"}
{"cat":"clothes","slot":"specialization","value":"dress shirt","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization dress shirt\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dress, shirt, pants, shorts, skirt, jacket, coat, hat, scarf, gloves"}
{"cat":"clothes","slot":"specialization","value":"tank top","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization tank top\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, jacket, dress, skirt, shorts, socks, shoes, hat, gloves"}
{"cat":"clothes","slot":"specialization","value":"tyrolean","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization tyrolean\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, skirt, jacket, shoes, socks, hat, gloves, scarf"}
{"cat":"clothes","slot":"specialization","value":"gown","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization gown\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, jacket, skirt, shorts, shoes, socks, hat, scarf"}
{"cat":"clothes","slot":"specialization","value":"knee-hi","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization knee-hi\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, skirt, jacket, sweater, socks, shoes, hat, gloves"}
{"cat":"clothes","slot":"specialization","value":"slouch hat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization slouch hat\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, skirt, jacket, shoes, socks, hat, scarf, gloves"}
{"cat":"clothes","slot":"specialization","value":"stocking cap","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization stocking cap\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, skirt, jacket, shoes, socks, hat, gloves, scarf"}
{"cat":"clothes","slot":"specialization","value":"fedora","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization fedora\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, jacket, dress, skirt, shorts, sweater, socks, shoes, hat"}
{"cat":"clothes","slot":"specialization","value":"jewelled headdress","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization jewelled headdress\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, jacket, skirt, shorts, shoes, socks, hat, gloves"}
{"cat":"clothes","slot":"specialization","value":"coatdress","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization coatdress\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, jacket, skirt, shorts, sweater, socks, shoes, hat"}
{"cat":"clothes","slot":"specialization","value":"shovel hat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization shovel hat\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, jacket, skirt, shoes, socks, hat, gloves, scarf"}
{"cat":"clothes","slot":"specialization","value":"turban","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization turban\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, skirt, jacket, coat, hat, scarf, gloves, socks"}
{"cat":"clothes","slot":"specialization","value":"lumberjack","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization lumberjack\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, jacket, dress, skirt, shoes, socks, hat, gloves, scarf"}
{"cat":"clothes","slot":"specialization","value":"muumuu","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization muumuu\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, jacket, shoes, socks, hat, gloves, scarf, belt"}
{"cat":"clothes","slot":"specialization","value":"swallowtail","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization swallowtail\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, jacket, skirt, shorts, sweater, shoes, hat, socks"}
{"cat":"clothes","slot":"specialization","value":"overseas cap","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization overseas cap\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, skirt, jacket, coat, shoes, socks, hat, gloves"}
{"cat":"clothes","slot":"specialization","value":"domino","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization domino\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, jacket, skirt, shorts, sweater, shoes, socks, hat"}
{"cat":"clothes","slot":"specialization","value":"Panama hat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization Panama hat\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, jacket, dress, skirt, shorts, socks, shoes, hat, gloves"}
{"cat":"clothes","slot":"specialization","value":"full skirt","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization full skirt\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        t-shirt, jeans, dress, jacket, sweater, shorts, skirt, pants, shirt, blouse"}
{"cat":"clothes","slot":"specialization","value":"argyle","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization argyle\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pants, shirt, jacket, dress, skirt, shorts, socks, shoes, hat, gloves"}
{"cat":"clothes","slot":"specialization","value":"dashiki","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization dashiki\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, skirt, jacket, shoes, hat, socks, gloves, belt"}
{"cat":"clothes","slot":"specialization","value":"batting glove","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization batting glove\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, jacket, dress, skirt, shorts, shoes, socks, hat, gloves"}
{"cat":"clothes","slot":"specialization","value":"miter","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization miter\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, skirt, jacket, shoes, socks, hat, gloves, scarf"}
{"cat":"clothes","slot":"specialization","value":"ski cap","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization ski cap\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        jeans, t-shirt, jacket, dress, skirt, pants, shorts, shoes, socks, hat"}
{"cat":"clothes","slot":"specialization","value":"jersey","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization jersey\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, jacket, dress, skirt, shorts, socks, shoes, hat, gloves"}
{"cat":"clothes","slot":"specialization","value":"leghorn","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization leghorn\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        t-shirt, jeans, shirt, dress, jacket, sweater, pants, skirt, shorts, socks"}
{"cat":"clothes","slot":"specialization","value":"cowboy hat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization cowboy hat\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, skirt, dress, jacket, sweater, socks, shoes, hat, underwear"}
{"cat":"clothes","slot":"specialization","value":"birretta","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization birretta\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, skirt, jacket, shoes, hat, socks, belt, scarf"}
{"cat":"clothes","slot":"specialization","value":"skimmer","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization skimmer\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pants, shirt, dress, jacket, shoes, socks, hat, gloves, scarf, belt"}
{"cat":"clothes","slot":"specialization","value":"gathered skirt","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization gathered skirt\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, jacket, shoes, socks, hat, gloves, scarf, belt"}
{"cat":"clothes","slot":"specialization","value":"wishing cap","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization wishing cap\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, jacket, skirt, hat, shoes, socks, gloves, scarf"}
{"cat":"clothes","slot":"specialization","value":"windcheater","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization windcheater\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, jacket, skirt, sweater, shoes, hat, socks, belt"}
{"cat":"clothes","slot":"specialization","value":"daishiki","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization daishiki\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, skirt, jacket, sweater, socks, shoes, hat, gloves"}
{"cat":"clothes","slot":"specialization","value":"kalpac","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization kalpac\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, skirt, jacket, coat, hat, gloves, socks, shoes"}
{"cat":"clothes","slot":"specialization","value":"kepi","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization kepi\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, jacket, dress, skirt, shoes, hat, gloves, socks, belt"}
{"cat":"clothes","slot":"specialization","value":"athletic sock","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization athletic sock\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, skirt, dress, jacket, coat, sweater, shorts, gloves, scarf"}
{"cat":"clothes","slot":"specialization","value":"watch cap","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization watch cap\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, jacket, dress, skirt, shorts, shoes, socks, hat, scarf"}
{"cat":"clothes","slot":"specialization","value":"sarong","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization sarong\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, jacket, skirt, shorts, socks, shoes, hat, gloves"}
{"cat":"clothes","slot":"specialization","value":"mobcap","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization mobcap\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, skirt, jacket, sweater, socks, shoes, hat, scarf"}
{"cat":"clothes","slot":"specialization","value":"sheath","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization sheath\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pants, shirt, dress, skirt, jacket, shorts, socks, shoes, hat, gloves"}
{"cat":"clothes","slot":"specialization","value":"dress hat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization dress hat\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, skirt, jacket, shoes, socks, hat, gloves, scarf"}
{"cat":"clothes","slot":"specialization","value":"shell jacket","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization shell jacket\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, skirt, jacket, coat, sweater, shorts, socks, shoes"}
{"cat":"clothes","slot":"specialization","value":"mitre","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization mitre\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, jacket, dress, skirt, shorts, socks, shoes, hat, scarf"}
{"cat":"clothes","slot":"specialization","value":"double-breasted jacket","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization double-breasted jacket\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pants, shirt, dress, coat, hat, gloves, scarf, belt, socks, shoes"}
{"cat":"clothes","slot":"specialization","value":"dressing sack","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization dressing sack\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, skirt, jacket, shoes, hat, socks, belt, scarf"}
{"cat":"clothes","slot":"specialization","value":"shako","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization shako\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, skirt, jacket, shoes, socks, hat, gloves, scarf"}
{"cat":"clothes","slot":"specialization","value":"titfer","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization titfer\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, skirt, dress, jacket, socks, shoes, hat, gloves, scarf"}
{"cat":"clothes","slot":"specialization","value":"sweat sock","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization sweat sock\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, coat, shoes, hat, gloves, scarf, belt, underwear"}
{"cat":"clothes","slot":"specialization","value":"kurta","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization kurta\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, skirt, jacket, shoes, socks, hat, scarf, gloves"}
{"cat":"clothes","slot":"specialization","value":"Eton jacket","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization Eton jacket\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, coat, skirt, shorts, sweater, jacket, socks, shoes"}
{"cat":"clothes","slot":"specialization","value":"bowler","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization bowler\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, skirt, jacket, shoes, socks, hat, gloves, belt"}
{"cat":"clothes","slot":"specialization","value":"sailor cap","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization sailor cap\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, shoes, socks, hat, coat, gloves, scarf, belt"}
{"cat":"clothes","slot":"specialization","value":"swallow-tailed coat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization swallow-tailed coat\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, skirt, dress, jacket, socks, shoes, hat, gloves, scarf"}
{"cat":"clothes","slot":"specialization","value":"hood","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization hood\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, jacket, dress, skirt, shorts, sweater, shoes, socks, hat"}
{"cat":"clothes","slot":"specialization","value":"camise","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization camise\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        camise, blouse, chemise, shirt, t-shirt, sweater, jacket, coat, dress, skirt"}
{"cat":"clothes","slot":"specialization","value":"helmet","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization helmet\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, jacket, skirt, dress, shorts, shoes, socks, hat, scarf"}
{"cat":"clothes","slot":"specialization","value":"calpack","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization calpack\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, jacket, skirt, shoes, socks, hat, gloves, scarf"}
{"cat":"clothes","slot":"specialization","value":"knee-high","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization knee-high\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, skirt, jacket, shorts, socks, shoes, hat, gloves"}
{"cat":"clothes","slot":"specialization","value":"toboggan cap","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization toboggan cap\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, jacket, dress, skirt, socks, shoes, hat, gloves, scarf"}
{"cat":"clothes","slot":"specialization","value":"hobble skirt","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization hobble skirt\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pants, shirt, dress, skirt, jacket, coat, hat, gloves, socks, shoes"}
{"cat":"clothes","slot":"specialization","value":"dirndl","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization dirndl\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        t-shirt, sweater, jeans, dress, skirt, jacket, pants, shorts, shirt, socks"}
{"cat":"clothes","slot":"specialization","value":"poke bonnet","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization poke bonnet\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, jacket, shoes, socks, hat, gloves, scarf, belt"}
{"cat":"clothes","slot":"specialization","value":"opera hat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization opera hat\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, skirt, jacket, dress, shoes, socks, hat, gloves, scarf"}
{"cat":"clothes","slot":"specialization","value":"boater","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization boater\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, skirt, jacket, socks, shoes, hat, gloves, scarf"}
{"cat":"clothes","slot":"specialization","value":"tee shirt","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization tee shirt\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        jeans, shirt, pants, dress, skirt, jacket, coat, hat, gloves, scarf"}
{"cat":"clothes","slot":"specialization","value":"berretta","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization berretta\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, skirt, jacket, socks, shoes, hat, gloves, scarf"}
{"cat":"clothes","slot":"specialization","value":"liberty cap","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization liberty cap\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, jacket, skirt, shoes, socks, hat, gloves, scarf"}
{"cat":"clothes","slot":"specialization","value":"anorak","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization anorak\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        anorak, blouse, coat, dress, jeans, shirt, skirt, sweater, t-shirt, trousers"}
{"cat":"clothes","slot":"specialization","value":"Stetson","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization Stetson\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, skirt, jacket, sweater, socks, shoes, hat, gloves"}
{"cat":"clothes","slot":"specialization","value":"argyll","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization argyll\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, jacket, skirt, shorts, socks, shoes, hat, belt"}
{"cat":"clothes","slot":"specialization","value":"sombrero","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization sombrero\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"1. shirt, 2. pants, 3. dress, 4. skirt, 5. jacket, 6. coat, 7. sweater, 8. shorts, 9. hat, 10. shoes"}
{"cat":"clothes","slot":"generalization","value":"glove","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization glove\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, jacket, shoes, socks, hat, scarf, gloves, belt"}
{"cat":"clothes","slot":"generalization","value":"lid","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization lid\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, skirt, jacket, sweater, socks, shoes, hat, scarf"}
{"cat":"clothes","slot":"generalization","value":"chapeau","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization chapeau\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        chapeau, chemise, pantalon, robe, jupe, chaussures, cravate, gilet, manteau, veste"}
{"cat":"clothes","slot":"generalization","value":"hat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization hat\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, jacket, skirt, shoes, socks, hat, gloves, scarf"}
{"cat":"clothes","slot":"generalization","value":"coat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization coat\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, skirt, jacket, shoes, hat, socks, belt, scarf"}
{"cat":"clothes","slot":"part","value":"leg","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part leg\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, shoes, socks, jacket, dress, skirt, hat, gloves, scarf"}
{"cat":"clothes","slot":"part","value":"lace","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part lace\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dress, shirt, skirt, pants, jacket, socks, shoes, hat, gloves, scarf"}
{"cat":"clothes","slot":"specialization","value":"glove","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization glove\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, skirt, dress, jacket, shoes, socks, hat, gloves, scarf"}
{"cat":"clothes","slot":"specialization","value":"lid","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization lid\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pants, shirt, dress, jacket, skirt, socks, shoes, hat, gloves, scarf"}
{"cat":"clothes","slot":"specialization","value":"chapeau","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization chapeau\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, skirt, jacket, shoes, hat, gloves, scarf, belt"}
{"cat":"clothes","slot":"specialization","value":"hat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization hat\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pants, shirt, dress, skirt, jacket, socks, shoes, hat, gloves, scarf"}
{"cat":"clothes","slot":"part","value":"throat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part throat\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        collar, neckline, lapel, button, zipper, cuff, pocket, hem, waistband, belt"}
{"cat":"clothes","slot":"specialization","value":"white","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization white\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shirt, pants, dress, jacket, skirt, shoes, socks, hat, gloves, scarf"}
{"cat":"home","slot":"user","value":"gate-keeper","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"are used by\";         A textual example of the semantic relation is \"user gate-keepers\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        door, window, curtain, rug, couch, table, bed, lamp, TV, computer"}
{"cat":"home","slot":"movement","value":"slide","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"can\";         A textual example of the semantic relation is \"movement slide\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bedroom, living room, kitchen, bathroom, dining room, hallway, garage, basement, attic, patio"}
{"cat":"home","slot":"movement","value":"swing","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"can\";         A textual example of the semantic relation is \"movement swing\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        house, apartment, villa, condo, cottage, bungalow, mansion, townhouse, duplex, penthouse"}
{"cat":"home","slot":"time","value":"morning","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"can be consumed or used during\";         A textual example of the semantic relation is \"time morning\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        breakfast, coffee, newspaper, shower, toothpaste, toothbrush, soap, shampoo, towel, slippers"}
{"cat":"home","slot":"sound","value":"creak","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"\";         A textual example of the semantic relation is \"sound creak\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        door, window, table, chair, bed, couch, rug, curtain, cabinet, lamp"}
{"cat":"home","slot":"sound","value":"clink","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"can\";         A textual example of the semantic relation is \"sound clink\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        chair, table, bed, sofa, lamp, curtain, rug, vase, clock, mirror"}
{"cat":"home","slot":"accessory","value":"key","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"are related with\";         A textual example of the semantic relation is \"accessory key\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        house, apartment, living room, kitchen, bedroom, bathroom, dining room, family room, study, garage"}
{"cat":"home","slot":"accessory","value":"tap","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"are related with\";         A textual example of the semantic relation is \"accessory tap\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        kitchen, bathroom, bedroom, living room, dining room, garage, patio, deck, porch, garden"}
{"cat":"home","slot":"accessory","value":"clicker","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"are related with\";         A textual example of the semantic relation is \"accessory clicker\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        house, apartment, kitchen, living room, bedroom, bathroom, dining room, garage, garden, patio"}
{"cat":"home","slot":"efficiency","value":"leaking","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"efficiency leaking\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        house, apartment, kitchen, living room, bedroom, bathroom, dining room, garage, basement, attic"}
{"cat":"home","slot":"efficiency","value":"breakable","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"efficiency breakable\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        house, apartment, kitchen, living room, bedroom, bathroom, dining room, garage, basement, attic"}
{"cat":"home","slot":"efficiency","value":"impermeable","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"efficiency impermeable\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        kitchen, living room, bedroom, bathroom, dining room, family room, den, home office, laundry room, garage"}
{"cat":"home","slot":"content","value":"liquid","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"contain\";         A textual example of the semantic relation is \"content liquids\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        house, apartment, room, kitchen, bedroom, bathroom, living room, dining room, garage, basement"}
{"cat":"home","slot":"content","value":"water","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"contain\";         A textual example of the semantic relation is \"content water\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        kitchen, living_room, bedroom, bathroom, dining_room, garage, office, den, family_room, laundry_room"}
{"cat":"home","slot":"content","value":"soup","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"contain\";         A textual example of the semantic relation is \"content soups\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        living room, kitchen, bathroom, bedroom, dining room, study, garage, basement, attic, hallway"}
{"cat":"home","slot":"content","value":"dessert","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"contain\";         A textual example of the semantic relation is \"content desserts\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        livingroom, bedroom, kitchen, bathroom, diningroom, garage, basement, attic, garden, yard"}
{"cat":"home","slot":"content","value":"yoghurt","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"contain\";         A textual example of the semantic relation is \"content yoghurts\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        kitchen, living_room, bedroom, bathroom, dining_room, study, garage, basement, attic, patio"}
{"cat":"home","slot":"content","value":"food","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"contain\";         A textual example of the semantic relation is \"content foods\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bedroom, kitchen, living room, bathroom, dining room, garage, basement, attic, patio, yard"}
{"cat":"home","slot":"content","value":"hot chocolate","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"contain\";         A textual example of the semantic relation is \"content hot chocolates\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        furniture, appliances, decorations, electronics, kitchenware, bedding, bathroom essentials, artwork, books, plants"}
{"cat":"home","slot":"content","value":"tea","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"contain\";         A textual example of the semantic relation is \"content teas\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        house, apartment, kitchen, bedroom, living room, bathroom, garage, basement, attic, backyard"}
{"cat":"home","slot":"content","value":"claret","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"contain\";         A textual example of the semantic relation is \"content clarets\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        house, apartment, condo, villa, cottage, mansion, bungalow, townhouse, duplex, chateau"}
{"cat":"home","slot":"content","value":"coffee","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"contain\";         A textual example of the semantic relation is \"content coffees\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        house, apartment, condo, villa, bungalow, cottage, mansion, estate, chateau, manor"}
{"cat":"home","slot":"content","value":"beer","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"contain\";         A textual example of the semantic relation is \"content beers\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        livingroom, kitchen, bedroom, bathroom, diningroom, hallway, staircase, garage, closet, basement"}
{"cat":"home","slot":"content","value":"absinthe","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"contain\";         A textual example of the semantic relation is \"content absinthes\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        living room, kitchen, bedroom, bathroom, dining room, garage, basement, attic, porch, patio"}
{"cat":"home","slot":"content","value":"greasy","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"contain\";         A textual example of the semantic relation is \"content greasies\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        kitchen, living room, bedroom, bathroom, dining room, garage, basement, attic, study, office"}
{"cat":"home","slot":"content","value":"cookie","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"contain\";         A textual example of the semantic relation is \"content cookies\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        home, kitchen, living room, bathroom, bedroom, dining room, hallway, garage, basement, attic"}
{"cat":"home","slot":"content","value":"flower","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"contain\";         A textual example of the semantic relation is \"content flowers\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        livingroom, bedroom, kitchen, bathroom, diningroom, garage, basement, attic, study, garden"}
{"cat":"home","slot":"content","value":"milk","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"contain\";         A textual example of the semantic relation is \"content milks\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        living room, kitchen, bedroom, bathroom, dining room, family room, den, study, office, laundry room"}
{"cat":"home","slot":"shape","value":"concave","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"shape concave\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        house, apartment, kitchen, bedroom, living room, bathroom, dining room, garage, basement, attic"}
{"cat":"home","slot":"shape","value":"circular","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"shape circular\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        house, apartment, kitchen, bedroom, living room, bathroom, dining room, study, garage, garden"}
{"cat":"home","slot":"shape","value":"round","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"shape round\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bed, chair, table, sofa, lamp, rug, curtain, TV, refrigerator, oven"}
{"cat":"home","slot":"shape","value":"long","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"shape long\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        house, apartment, condo, villa, cottage, bungalow, mansion, cabin, townhouse, duplex"}
{"cat":"home","slot":"shape","value":"rectangular","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"shape rectangular\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        livingroom, kitchen, bedroom, bathroom, diningroom, hallway, closet, garage, basement, attic"}
{"cat":"home","slot":"shape","value":"cylindrical","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"shape cylindrical\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        kitchen, bathroom, living room, bedroom, dining room, garage, attic, basement, porch, patio"}
{"cat":"home","slot":"shape","value":"curved","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"shape curved\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        house, apartment, kitchen, living room, bedroom, bathroom, dining room, garage, backyard, front yard"}
{"cat":"home","slot":"shape","value":"elongated","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"shape elongated\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        house, apartment, kitchen, living room, bedroom, bathroom, garage, dining room, study, basement"}
{"cat":"home","slot":"part","value":"support","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part support\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        kitchen, bathroom, bedroom, living room, dining room, garage, basement, attic, patio, deck"}
{"cat":"home","slot":"part","value":"leg","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part leg\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        house, apartment, kitchen, bedroom, living room, bathroom, garage, garden, porch, patio"}
{"cat":"home","slot":"part","value":"arm","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part arm\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        living room, bedroom, kitchen, bathroom, dining room, garage, basement, attic, study, office"}
{"cat":"home","slot":"part","value":"strainer","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part strainer\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        kitchen, living room, bedroom, bathroom, dining room, garage, basement, attic, backyard, front yard"}
{"cat":"home","slot":"part","value":"seatback","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part seatback\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        couch, chair, table, bed, lamp, curtain, rug, television, refrigerator, stove"}
{"cat":"home","slot":"part","value":"footstool","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part footstool\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        living room, kitchen, bedroom, bathroom, dining room, hallway, garage, basement, attic, closet"}
{"cat":"home","slot":"part","value":"handle","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part handle\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        house, apartment, condo, cottage, bungalow, villa, mansion, townhouse, duplex, penthouse"}
{"cat":"home","slot":"part","value":"lock","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part lock\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        door, window, bed, closet, table, chair, sofa, rug, lamp, curtain"}
{"cat":"home","slot":"part","value":"hinge","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part hinge\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        kitchen, living room, bedroom, bathroom, dining room, garage, attic, basement, patio, yard"}
{"cat":"home","slot":"part","value":"latch","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part latch\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        door, window, roof, wall, floor, ceiling, furniture, appliance, decoration, garden"}
{"cat":"home","slot":"part","value":"jamb","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part jamb\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        door, window, wall, floor, ceiling, roof, chimney, staircase, cabinet, shelf"}
{"cat":"home","slot":"part","value":"arch","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part arch\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bedroom, kitchen, living room, bathroom, dining room, garage, basement, attic, study, office"}
{"cat":"home","slot":"part","value":"ceiling","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part ceiling\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        ceiling, floor, walls, roof, windows, doors, furniture, appliances, decorations"}
{"cat":"home","slot":"part","value":"floor","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part floor\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        floor, ceiling, wall, door, window, furniture, appliance, decoration, lighting, ventilation"}
{"cat":"home","slot":"part","value":"toilet","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part toilet\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bathroom, kitchen, living room, bedroom, dining room, garage, basement, attic, porch, patio"}
{"cat":"home","slot":"part","value":"stool","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part stool\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        house, apartment, kitchen, bedroom, bathroom, living room, dining room, garage, yard, patio"}
{"cat":"home","slot":"part","value":"pier","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part pier\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        kitchen, bedroom, living room, bathroom, dining room, garage, basement, attic, closet, patio"}
{"cat":"home","slot":"part","value":"pot","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part pot\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bed, couch, table, chair, desk, lamp, bookshelf, curtain, rug, TV"}
{"cat":"home","slot":"part","value":"wall","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part wall\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        wall, floor, ceiling, window, door, cabinet, table, chair, bed, sofa"}
{"cat":"home","slot":"part","value":"rim","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part rim\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bathroom, kitchen, living room, bedroom, dining room, garage, basement, attic, patio, deck"}
{"cat":"home","slot":"part","value":"backrest","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part backrest\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        house, apartment, kitchen, living room, bedroom, bathroom, dining room, garage, garden, patio"}
{"cat":"home","slot":"part","value":"flooring","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part flooring\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        floor, carpet, tile, rug, couch, chair, table, bed, curtain, wall"}
{"cat":"home","slot":"part","value":"trestle","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part trestle\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        table, chair, bed, couch, desk, lamp, bookshelf, television, computer, refrigerator"}
{"cat":"home","slot":"part","value":"back","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part back\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        living room, kitchen, bedroom, bathroom, dining room, garage, basement, attic, patio, garden"}
{"cat":"home","slot":"part","value":"stave","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part stave\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bathroom, bedroom, kitchen, living room, dining room, garage, basement, attic, porch, deck"}
{"cat":"home","slot":"part","value":"rung","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part rung\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        house, apartment, condo, cottage, bungalow, villa, mansion, townhouse, cabin, chalet"}
{"cat":"home","slot":"part","value":"drain","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part drain\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        house, kitchen, bathroom, living room, bedroom, dining room, garage, basement, attic, patio"}
{"cat":"home","slot":"part","value":"base","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part base\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        house, apartment, condo, cottage, villa, mansion, bungalow, townhouse, duplex, cabin"}
{"cat":"home","slot":"part","value":"toilet seat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part toilet seat\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bathroom, bedroom, kitchen, living room, dining room, garage, basement, attic, patio, deck"}
{"cat":"home","slot":"part","value":"round","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part round\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        kitchen, living room, bedroom, bathroom, dining room, garage, basement, attic, patio, deck"}
{"cat":"home","slot":"part","value":"edge","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part edge\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        kitchen, bedroom, living room, bathroom, dining room, garage, basement, attic, patio, balcony"}
{"cat":"home","slot":"part","value":"toilet bowl","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part toilet bowl\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        living room, bedroom, kitchen, bathroom, dining room, garage, basement, attic, patio, garden"}
{"cat":"home","slot":"part","value":"commode","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part commode\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        commode, bed, chair, table, lamp, couch, desk, bookshelf, curtain, rug"}
{"cat":"home","slot":"part","value":"throne","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part throne\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        home, kitchen, bedroom, living room, bathroom, dining room, garage, basement, attic, yard"}
{"cat":"home","slot":"part","value":"basin","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part basin\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        house, apartment, condo, villa, cottage, mansion, bungalow, townhouse, cabin, chateau"}
{"cat":"home","slot":"part","value":"plughole","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part plughole\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        house, apartment, kitchen, living room, bedroom, bathroom, garage, garden, porch, patio"}
{"cat":"home","slot":"part","value":"can","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part can\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        kitchen, living room, bedroom, bathroom, dining room, family room, den, home office, laundry room, garage"}
{"cat":"home","slot":"part","value":"bottom","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part bottom\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        floor, ceiling, roof, walls, windows, doors, furniture, appliances, decorations, lighting"}
{"cat":"home","slot":"part","value":"potty","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part potty\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        house, apartment, furniture, kitchen, living room, bedroom, bathroom, garage, garden, basement"}
{"cat":"home","slot":"part","value":"rocker","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part rocker\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        living room, kitchen, bedroom, bathroom, dining room, garage, basement, attic, patio, garden"}
{"cat":"home","slot":"part","value":"drain basket","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part drain basket\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"1. sink, 2. drain, 3. faucet, 4. countertop, 5. cabinet, 6. refrigerator, 7. stove, 8. oven, 9. microwave, 10. dishwasher"}
{"cat":"home","slot":"part","value":"showerhead","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part showerhead\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        showerhead, sink, faucet, bathtub, toilet, mirror, cabinet, drawer, door, window"}
{"cat":"home","slot":"part","value":"crapper","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part crapper\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bathroom, kitchen, living room, bedroom, dining room, garage, basement, attic, patio, deck"}
{"cat":"home","slot":"place","value":"kitchen","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"can be found or used in\";         A textual example of the semantic relation is \"place kitchens\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bed, couch, table, chair, kitchen, bathroom, living room, dining room, study, closet"}
{"cat":"home","slot":"place","value":"living room","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"can be found or used in\";         A textual example of the semantic relation is \"place living rooms\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        couch, television, kitchen, bed, bathroom, dining table, living room, stairs, hallway, garage"}
{"cat":"home","slot":"place","value":"courtyard","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"can be found or used in\";         A textual example of the semantic relation is \"place courtyards\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        kitchen, bedroom, living room, bathroom, dining room, garage, patio, garden, yard, porch"}
{"cat":"home","slot":"place","value":"veranda","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"can be found or used in\";         A textual example of the semantic relation is \"place verandas\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        kitchen, bathroom, bedroom, living room, dining room, garage, basement, attic, garden, yard"}
{"cat":"home","slot":"place","value":"palace","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"can be found or used in\";         A textual example of the semantic relation is \"place palaces\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bed, table, chair, sofa, lamp, television, refrigerator, stove, toilet, sink"}
{"cat":"home","slot":"place","value":"castle","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"can be found or used in\";         A textual example of the semantic relation is \"place castles\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bed, chair, table, couch, kitchen, bathroom, living room, dining room, stairs, door"}
{"cat":"home","slot":"place","value":"porch","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"can be found or used in\";         A textual example of the semantic relation is \"place porches\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        kitchen, bedroom, living room, bathroom, dining room, garage, basement, attic, backyard, front yard"}
{"cat":"home","slot":"place","value":"restaurant","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"can be found or used in\";         A textual example of the semantic relation is \"place restaurants\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        kitchen, bedroom, living room, dining room, bathroom, garage, backyard, front yard, hallway, basement"}
{"cat":"home","slot":"place","value":"building","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"can be found or used in\";         A textual example of the semantic relation is \"place buildings\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        sofa, table, bed, kitchen, bathroom, living room, dining room, study, garden, garage"}
{"cat":"home","slot":"place","value":"cafeteria","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"can be found or used in\";         A textual example of the semantic relation is \"place cafeterias\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bed, table, chair, sofa, television, refrigerator, stove, sink, closet, toilet"}
{"cat":"home","slot":"place","value":"bathroom","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"can be found or used in\";         A textual example of the semantic relation is \"place bathrooms\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bed, bathroom, kitchen, living room, dining room, sofa, table, chair, closet, curtains"}
{"cat":"home","slot":"place","value":"garden","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"can be found or used in\";         A textual example of the semantic relation is \"place gardens\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        sofa, bed, kitchen, dining, table, chair, television, computer, bathroom, garden"}
{"cat":"home","slot":"place","value":"field","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"can be found or used in\";         A textual example of the semantic relation is \"place fields\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bed, table, chair, couch, kitchen, bathroom, living room, dining room, closet, curtains"}
{"cat":"home","slot":"place","value":"driveway","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"can be found or used in\";         A textual example of the semantic relation is \"place driveways\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        kitchen, bedroom, living room, bathroom, dining room, garage, backyard, patio, garden, porch"}
{"cat":"home","slot":"place","value":"venue","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"can be found or used in\";         A textual example of the semantic relation is \"place venues\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bed, couch, table, chair, lamp, television, refrigerator, oven, microwave, washing machine"}
{"cat":"home","slot":"place","value":"department","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"can be found or used in\";         A textual example of the semantic relation is \"place departments\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bed, sofa, table, chair, refrigerator, oven, television, computer, toilet, bathtub"}
{"cat":"home","slot":"place","value":"car","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"can be found or used in\";         A textual example of the semantic relation is \"place cars\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        sofa, bed, table, chair, lamp, television, refrigerator, oven, microwave, toaster"}
{"cat":"home","slot":"place","value":"monument","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"can be found or used in\";         A textual example of the semantic relation is \"place monuments\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bed, sofa, table, chair, lamp, curtain, rug, refrigerator, oven, television"}
{"cat":"home","slot":"place","value":"memorial","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"can be found or used in\";         A textual example of the semantic relation is \"place memorials\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        kitchen, bedroom, living room, bathroom, dining room, garage, basement, attic, garden, porch"}
{"cat":"home","slot":"material","value":"wood","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"can be made of\";         A textual example of the semantic relation is \"material wood\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        wood, brick, stone, concrete, glass, metal, plastic, fabric, leather, ceramic"}
{"cat":"home","slot":"material","value":"plastic","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"can be made of\";         A textual example of the semantic relation is \"material plastic\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        wood, brick, concrete, stone, glass, metal, plastic, fabric, paper, ceramic"}
{"cat":"home","slot":"material","value":"steel","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"can be made of\";         A textual example of the semantic relation is \"material steel\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        wood, brick, stone, concrete, glass, steel, marble, granite, tile, plaster"}
{"cat":"home","slot":"material","value":"metal","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"can be made of\";         A textual example of the semantic relation is \"material metal\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        table, chair, bed, curtain, carpet, door, window, wall, floor, roof"}
{"cat":"home","slot":"material","value":"porcelain","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"can be made of\";         A textual example of the semantic relation is \"material porcelain\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        table, chair, couch, bed, desk, curtain, rug, lamp, vase, picture"}
{"cat":"home","slot":"material","value":"china","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"can be made of\";         A textual example of the semantic relation is \"material china\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        wood, brick, stone, concrete, steel, glass, marble, granite, plaster, ceramic"}
{"cat":"home","slot":"material","value":"pottery","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"can be made of\";         A textual example of the semantic relation is \"material pottery\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        floor, wall, roof, door, window, table, chair, bed, sofa, cabinet"}
{"cat":"home","slot":"material","value":"glass","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"can be made of\";         A textual example of the semantic relation is \"material glass\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        carpet, curtain, table, chair, sofa, bed, rug, window, door, wall"}
{"cat":"home","slot":"material","value":"wrought iron","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"can be made of\";         A textual example of the semantic relation is \"material wrought iron\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        door, table, chair, bed, curtain, rug, couch, shelf, cabinet, window"}
{"cat":"home","slot":"material","value":"marble","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"can be made of\";         A textual example of the semantic relation is \"material marble\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        brick, stone, wood, marble, granite, concrete, glass, steel, aluminum, plastic"}
{"cat":"home","slot":"material","value":"copper","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"can be made of\";         A textual example of the semantic relation is \"material copper\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        carpet, wood, brick, stone, glass, plastic, metal, concrete, fabric, leather"}
{"cat":"home","slot":"material","value":"glassware","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"can be made of\";         A textual example of the semantic relation is \"material glassware\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        curtains, rugs, furniture, lamps, tableware, bedding, wallpaper, flooring, appliances, decorations"}
{"cat":"home","slot":"material","value":"ceramic","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"can be made of\";         A textual example of the semantic relation is \"material ceramic\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        floor, wall, sink, toilet, shower, bathtub, countertop, tile, dish, pottery"}
{"cat":"home","slot":"material","value":"enamel","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"can be made of\";         A textual example of the semantic relation is \"material enamel\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        wood, brick, stone, concrete, steel, glass, tile, marble, granite, plaster"}
{"cat":"home","slot":"material","value":"wooden","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"can be made of\";         A textual example of the semantic relation is \"material wooden\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        wooden, brick, stone, glass, concrete, metal, plastic, fabric, ceramic, paper"}
{"cat":"home","slot":"material","value":"iron","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"can be made of\";         A textual example of the semantic relation is \"material iron\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        furniture, curtains, carpets, walls, floors, countertops, appliances, decorations, frames, utensils"}
{"cat":"home","slot":"part","value":"seat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part seat\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        sofa, bed, chair, table, carpet, curtain, lamp, bookshelf, couch, desk"}
{"cat":"home","slot":"colorPattern","value":"white","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"colorPattern white\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        kitchen, bedroom, living room, bathroom, dining room, hallway, garage, basement, attic, study"}
{"cat":"home","slot":"colorPattern","value":"silver","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"colorPattern silver\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        livingroom, bedroom, kitchen, bathroom, diningroom, hallway, staircase, basement, garage, backyard"}
{"cat":"home","slot":"colorPattern","value":"black","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"colorPattern black\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        \"bedroom, living room, kitchen, bathroom, dining room, study, family room, garage, basement, attic\""}
{"cat":"home","slot":"colorPattern","value":"brown","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"colorPattern brown\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        wall, floor, ceiling, door, window, furniture, lighting, appliance, decoration, curtain"}
{"cat":"home","slot":"purpose","value":"contain","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"are used to\";         A textual example of the semantic relation is \"purpose contain\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        sofa, bed, table, chair, lamp, rug, curtain, couch, refrigerator, stove"}
{"cat":"home","slot":"purpose","value":"hold","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"are used to\";         A textual example of the semantic relation is \"purpose hold\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        door, window, table, chair, bed, sofa, rug, curtain, lamp, bookshelf"}
{"cat":"home","slot":"purpose","value":"relaxing","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"are used for\";         A textual example of the semantic relation is \"purpose relaxing\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bed, couch, chair, table, desk, lamp, television, computer, bookshelf, kitchen"}
{"cat":"home","slot":"purpose","value":"sleep","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"are used for\";         A textual example of the semantic relation is \"purpose sleep\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":" bed, couch, sofa, table, chair, desk, lamp, curtain, rug, bookshelf"}
{"cat":"home","slot":"colorPattern","value":"shiny","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"colorPattern shiny\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        livingroom, kitchen, bedroom, bathroom, diningroom, garage, basement, attic, porch, patio"}
{"cat":"home","slot":"colorPattern","value":"glossy","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"colorPattern glossy\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        house, apartment, condo, cottage, villa, mansion, bungalow, townhouse, duplex, chateau"}
{"cat":"home","slot":"colorPattern","value":"patterned","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"colorPattern patterned\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        house, apartment, condo, cottage, villa, mansion, bungalow, chateau, castle, estate"}
{"cat":"home","slot":"purpose","value":"cookery","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"are used for\";         A textual example of the semantic relation is \"purpose cookery\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        kitchen, living room, bedroom, bathroom, dining room, garage, basement, attic, porch, patio"}
{"cat":"home","slot":"purpose","value":"eat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"are used to\";         A textual example of the semantic relation is \"purpose eat\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bed, couch, chair, table, refrigerator, oven, dishwasher, washing machine, dryer, vacuum cleaner"}
{"cat":"home","slot":"purpose","value":"sit","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"are used to\";         A textual example of the semantic relation is \"purpose sit\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        sofa, bed, table, chair, lamp, curtain, rug, couch, desk, bookshelf"}
{"cat":"home","slot":"purpose","value":"entrance","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"are used for\";         A textual example of the semantic relation is \"purpose entrance\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        door, window, couch, table, bed, chair, desk, lamp, rug, curtain"}
{"cat":"home","slot":"purpose","value":"security","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"are used for\";         A textual example of the semantic relation is \"purpose security\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        door, lock, key, window, curtain, couch, bed, table, chair, rug"}
{"cat":"home","slot":"purpose","value":"separate","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"are used to\";         A textual example of the semantic relation is \"purpose separate\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        kitchen, living room, bedroom, bathroom, dining room, study, garage, attic, basement, patio"}
{"cat":"home","slot":"purpose","value":"pick up","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"are used to\";         A textual example of the semantic relation is \"purpose pick up\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        house, apartment, furniture, appliances, decorations, curtains, carpets, kitchenware, bedding, bathroom accessories"}
{"cat":"home","slot":"purpose","value":"blend","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"are used to\";         A textual example of the semantic relation is \"purpose blend\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        kitchen, living room, bedroom, bathroom, dining room, garage, basement, attic, closet, hallway"}
{"cat":"home","slot":"purpose","value":"protection","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"are used for\";         A textual example of the semantic relation is \"purpose protection\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bed, couch, table, chair, lamp, curtain, rug, vase, picture, clock"}
{"cat":"home","slot":"purpose","value":"delimit","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"are used to\";         A textual example of the semantic relation is \"purpose delimit\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        door, window, bed, table, chair, sofa, kitchen, bathroom, living room, dining room"}
{"cat":"home","slot":"purpose","value":"exit","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"are used for\";         A textual example of the semantic relation is \"purpose exit\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        door, window, bed, couch, table, chair, kitchen, bathroom, living room, dining room"}
{"cat":"home","slot":"purpose","value":"stir","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"are used to\";         A textual example of the semantic relation is \"purpose stir\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bed, chair, table, sofa, lamp, curtain, rug, clock, television, refrigerator"}
{"cat":"home","slot":"purpose","value":"measure","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"are used to\";         A textual example of the semantic relation is \"purpose measure\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        kitchen, living room, bedroom, bathroom, dining room, hallway, staircase, closet, garage, backyard"}
{"cat":"home","slot":"purpose","value":"drink","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"are used to\";         A textual example of the semantic relation is \"purpose drink\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        door, window, bed, table, chair, couch, TV, refrigerator, stove, sink"}
{"cat":"home","slot":"purpose","value":"guard","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"are used for\";         A textual example of the semantic relation is \"purpose guard\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bed, couch, table, chair, lamp, television, computer, refrigerator, stove, bathtub"}
{"cat":"home","slot":"purpose","value":"rinse","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"are used to\";         A textual example of the semantic relation is \"purpose rinse\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        kitchen, bathroom, bedroom, living room, dining room, garage, basement, attic, yard, garden"}
{"cat":"home","slot":"purpose","value":"bar","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"are used to\";         A textual example of the semantic relation is \"purpose bar\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        kitchen, bedroom, living room, bathroom, dining room, garage, basement, attic, patio, porch"}
{"cat":"home","slot":"purpose","value":"insulate","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"are used to\";         A textual example of the semantic relation is \"purpose insulate\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        curtains, carpets, rugs, insulation, radiators, heaters, air conditioners, furniture, appliances, decorations"}
{"cat":"home","slot":"purpose","value":"wash","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"are used to\";         A textual example of the semantic relation is \"purpose wash\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        house, kitchen, bedroom, living room, bathroom, dining room, garage, basement, attic, yard"}
{"cat":"home","slot":"purpose","value":"feed","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"are used to\";         A textual example of the semantic relation is \"purpose feed\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bed, sofa, table, chair, curtain, rug, lamp, couch, television, refrigerator"}
{"cat":"home","slot":"purpose","value":"access","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"are used for\";         A textual example of the semantic relation is \"purpose access\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bed, couch, table, chair, lamp, curtain, rug, television, refrigerator, oven"}
{"cat":"home","slot":"place","value":"room","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"can be found or used in\";         A textual example of the semantic relation is \"place rooms\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bed, sofa, table, chair, desk, lamp, rug, curtain, TV, kitchen"}
{"cat":"home","slot":"generalization","value":"artifact","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization artifact\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        house, apartment, kitchen, living room, bedroom, bathroom, furniture, appliances, decorations, garden"}
{"cat":"home","slot":"generalization","value":"artefact","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization artefact\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        house, apartment, kitchen, living room, bedroom, bathroom, dining room, garage, garden, patio"}
{"cat":"home","slot":"generalization","value":"container","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization container\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        house, apartment, condo, villa, bungalow, cottage, mansion, townhouse, cabin, chateau"}
{"cat":"home","slot":"generalization","value":"implement","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization implement\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        house, apartment, living room, kitchen, bedroom, bathroom, dining room, garage, basement, attic"}
{"cat":"home","slot":"generalization","value":"utensil","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization utensil\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        house, apartment, cottage, villa, bungalow, mansion, condo, townhouse, cabin, duplex"}
{"cat":"home","slot":"generalization","value":"tool","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization tool\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        house, apartment, villa, cottage, mansion, condo, bungalow, townhouse, duplex, penthouse"}
{"cat":"home","slot":"generalization","value":"seat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization seat\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        house, apartment, kitchen, living room, bedroom, bathroom, dining room, garage, yard, patio"}
{"cat":"home","slot":"generalization","value":"cutlery","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization cutlery\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        house, apartment, kitchen, living room, bedroom, bathroom, dining room, garage, basement, attic"}
{"cat":"home","slot":"generalization","value":"furniture","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization furniture\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bed, couch, table, chair, desk, dresser, lamp, rug, curtains, appliances"}
{"cat":"home","slot":"generalization","value":"barrier","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization barrier\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        house, apartment, kitchen, living room, bedroom, bathroom, dining room, hallway, garage, yard"}
{"cat":"home","slot":"generalization","value":"unit","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization unit\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":" house, apartment, condo, bungalow, cottage, villa, mansion, townhouse, duplex, loft"}
{"cat":"home","slot":"generalization","value":"tableware","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization tableware\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        house, apartment, villa, cottage, bungalow, mansion, condo, townhouse, duplex, cabin"}
{"cat":"home","slot":"generalization","value":"whole","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization whole\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        house, apartment, kitchen, bedroom, living room, bathroom, dining room, garage, patio, garden"}
{"cat":"home","slot":"generalization","value":"receptacle","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization receptacle\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        house, apartment, condo, cottage, villa, mansion, bungalow, townhouse, duplex, mobile home"}
{"cat":"home","slot":"generalization","value":"vessel","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization vessel\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        house, apartment, cottage, villa, mansion, bungalow, townhouse, condominium, duplex, flat"}
{"cat":"home","slot":"generalization","value":"instrumentation","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization instrumentation\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        house, apartment, kitchen, living room, bedroom, bathroom, dining room, garage, backyard, front yard"}
{"cat":"home","slot":"generalization","value":"fixture","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization fixture\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        house, apartment, condo, villa, cottage, bungalow, mansion, townhouse, duplex, mobile home"}
{"cat":"home","slot":"generalization","value":"ware","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization ware\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        house, apartment, condo, cottage, bungalow, villa, mansion, townhouse, duplex, estate"}
{"cat":"home","slot":"generalization","value":"construction","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization construction\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        house, apartment, condo, villa, cottage, bungalow, townhouse, mansion, estate, abode"}
{"cat":"home","slot":"generalization","value":"plumbing fixture","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization plumbing fixture\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        house, apartment, living room, kitchen, bedroom, bathroom, dining room, study, garage, patio"}
{"cat":"home","slot":"generalization","value":"chair","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization chair\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        house, apartment, condo, cottage, villa, mansion, bungalow, cabin, townhouse, duplex"}
{"cat":"home","slot":"generalization","value":"closing","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization closing\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        house, apartment, condo, villa, cottage, bungalow, mansion, duplex, townhouse, flat"}
{"cat":"home","slot":"generalization","value":"structure","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization structure\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        house, apartment, condo, cottage, villa, mansion, bungalow, townhouse, duplex, cabin"}
{"cat":"home","slot":"generalization","value":"instrumentality","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization instrumentality\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        house, apartment, kitchen, living room, bedroom, bathroom, furniture, appliances, decorations, garden"}
{"cat":"home","slot":"generalization","value":"movable barrier","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization movable barrier\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        furniture, appliances, decor, kitchenware, bedding, lighting, electronics, rugs, curtains, artwork"}
{"cat":"home","slot":"generalization","value":"impediment","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization impediment\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        house, apartment, condo, cottage, villa, mansion, bungalow, townhouse, duplex, mobile home"}
{"cat":"home","slot":"generalization","value":"drinking vessel","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization drinking vessel\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        house, apartment, cottage, villa, bungalow, mansion, condo, duplex, townhouse, chalet"}
{"cat":"home","slot":"generalization","value":"eating utensil","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization eating utensil\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        house, apartment, kitchen, living room, bedroom, bathroom, dining room, garage, garden, patio"}
{"cat":"home","slot":"generalization","value":"article","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization article\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        house, apartment, kitchen, living room, bedroom, bathroom, dining room, garage, basement, attic"}
{"cat":"home","slot":"generalization","value":"obstruction","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization obstruction\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        house, apartment, kitchen, living room, bedroom, bathroom, dining room, garage, basement, attic"}
{"cat":"home","slot":"generalization","value":"impedimenta","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization impedimenta\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        house, apartment, condo, cottage, bungalow, villa, mansion, chateau, manor, estate"}
{"cat":"home","slot":"generalization","value":"obstructer","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization obstructer\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        house, apartment, condo, cottage, villa, mansion, bungalow, townhouse, duplex, mobile home"}
{"cat":"home","slot":"generalization","value":"obstructor","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization obstructor\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        house, apartment, condo, cottage, villa, mansion, bungalow, townhouse, duplex, cabin"}
{"cat":"home","slot":"generalization","value":"regulator","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization regulator\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        house, apartment, cottage, condo, villa, mansion, bungalow, townhouse, cabin, loft"}
{"cat":"home","slot":"generalization","value":"cutting implement","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization cutting implement\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        house, apartment, condo, cottage, villa, mansion, bungalow, townhouse, duplex, cabin"}
{"cat":"home","slot":"generalization","value":"corridor","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization corridor\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        house, apartment, kitchen, living room, bedroom, bathroom, dining room, garage, yard, garden"}
{"cat":"home","slot":"generalization","value":"quantity","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization quantity\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        house, apartment, condo, villa, cottage, bungalow, mansion, townhouse, duplex, mobile home"}
{"cat":"home","slot":"generalization","value":"furnishing","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization furnishing\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        kitchen, bathroom, living room, bedroom, dining room, garage, basement, attic, laundry room, study"}
{"cat":"home","slot":"generalization","value":"approach","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization approach\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        house, apartment, living room, kitchen, bedroom, bathroom, dining room, family room, study, garage"}
{"cat":"home","slot":"generalization","value":"spigot","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization spigot\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        house, apartment, condo, cottage, villa, mansion, bungalow, townhouse, duplex, penthouse"}
{"cat":"home","slot":"generalization","value":"cutting tool","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization cutting tool\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        house, apartment, cottage, villa, mansion, condo, bungalow, townhouse, duplex, mobile home"}
{"cat":"home","slot":"generalization","value":"containerful","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization containerful\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        house, apartment, condo, villa, bungalow, cottage, mansion, townhouse, cabin, hut"}
{"cat":"home","slot":"generalization","value":"indefinite quantity","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization indefinite quantity\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        house, apartment, condo, villa, cottage, bungalow, mansion, chateau, castle, estate"}
{"cat":"home","slot":"generalization","value":"way","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization way\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        house, apartment, kitchen, living room, bedroom, bathroom, dining room, garage, basement, attic"}
{"cat":"home","slot":"generalization","value":"passageway","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization passageway\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        house, apartment, condo, villa, cottage, bungalow, mansion, townhouse, duplex, studio"}
{"cat":"home","slot":"generalization","value":"control","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization control\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        house, apartment, condo, cottage, villa, mansion, bungalow, townhouse, duplex, penthouse"}
{"cat":"home","slot":"generalization","value":"cutter","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization cutter\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        house, apartment, kitchen, living room, bedroom, bathroom, dining room, garage, patio, garden"}
{"cat":"home","slot":"generalization","value":"faucet","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization faucet\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        house, apartment, kitchen, living room, bedroom, bathroom, dining room, garage, patio, backyard"}
{"cat":"home","slot":"generalization","value":"passage","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization passage\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        house, apartment, kitchen, living room, bedroom, bathroom, dining room, garage, basement, attic"}
{"cat":"home","slot":"generalization","value":"edge tool","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization edge tool\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        house, apartment, condo, villa, cottage, mansion, bungalow, townhouse, chalet, duplex"}
{"cat":"home","slot":"generalization","value":"crockery","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization crockery\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        house, apartment, kitchen, living room, bedroom, bathroom, dining room, garage, garden, patio"}
{"cat":"home","slot":"generalization","value":"cup","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization cup\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        house, apartment, condo, villa, cottage, bungalow, mansion, townhouse, duplex, chalet"}
{"cat":"home","slot":"generalization","value":"bottle","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization bottle\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":" house, apartment, kitchen, living room, bedroom, bathroom, dining room, garage, garden, patio"}
{"cat":"home","slot":"generalization","value":"controller","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization controller\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        house, apartment, kitchen, living room, bedroom, bathroom, dining room, garage, basement, attic"}
{"cat":"home","slot":"generalization","value":"measure","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization measure\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        house, apartment, living room, kitchen, bedroom, bathroom, dining room, study, garage, patio"}
{"cat":"home","slot":"generalization","value":"device","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization device\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        house, apartment, cottage, bungalow, mansion, villa, townhouse, condo, duplex, penthouse"}
{"cat":"home","slot":"generalization","value":"jar","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization jar\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        house, apartment, condo, cottage, villa, bungalow, mansion, duplex, townhouse, estate"}
{"cat":"home","slot":"generalization","value":"area","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization area\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        living room, kitchen, bedroom, bathroom, dining room, family room, home office, garage, basement, attic"}
{"cat":"home","slot":"generalization","value":"amount","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization amount\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        house, apartment, condo, cottage, mansion, villa, bungalow, townhouse, duplex, flat"}
{"cat":"home","slot":"place","value":"entrance","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"can be found or used in\";         A textual example of the semantic relation is \"place entrances\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        sofa, bed, kitchen, bathroom, living room, dining room, study, garage, garden, patio"}
{"cat":"home","slot":"generalization","value":"room","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization room\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        living room, kitchen, bedroom, bathroom, dining room, family room, study, home office, basement, attic"}
{"cat":"home","slot":"generalization","value":"support","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization support\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        house, apartment, living room, kitchen, bedroom, bathroom, dining room, garage, basement, attic"}
{"cat":"home","slot":"generalization","value":"access","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization access\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        house, apartment, condo, villa, cottage, bungalow, mansion, townhouse, duplex, cabin"}
{"cat":"home","slot":"material","value":"silver","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"can be made of\";         A textual example of the semantic relation is \"material silver\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        carpet, wood, brick, glass, concrete, steel, marble, granite, plastic, tile"}
{"cat":"appliance","slot":"bodyPart","value":"ear","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"can have or be used with\";         A textual example of the semantic relation is \"bodyPart ear\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        refrigerator, washing machine, dishwasher, oven, microwave, toaster, blender, coffee maker, vacuum cleaner, air conditioner"}
{"cat":"appliance","slot":"bodyPart","value":"mouth","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"can have or be used with\";         A textual example of the semantic relation is \"bodyPart mouth\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        refrigerator, washing machine, dryer, dishwasher, stove, oven, microwave, toaster, blender, coffee maker"}
{"cat":"appliance","slot":"accessory","value":"tablet","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"are related with\";         A textual example of the semantic relation is \"accessory tablet\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        refrigerator, washing machine, dishwasher, stove, microwave, toaster, blender, coffee maker, vacuum cleaner, air conditioner"}
{"cat":"appliance","slot":"accessory","value":"salt","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"are related with\";         A textual example of the semantic relation is \"accessory salt\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        refrigerator, oven, washing machine, dryer, dishwasher, microwave, toaster, blender, coffee maker, vacuum cleaner"}
{"cat":"appliance","slot":"content","value":"programmable","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"contain\";         A textual example of the semantic relation is \"content programmables\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        refrigerator, washing machine, dishwasher, oven, microwave, toaster, coffee maker, blender, vacuum cleaner, air conditioner"}
{"cat":"appliance","slot":"efficiency","value":"fragile","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"efficiency fragile\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        refrigerator, washing machine, oven, dishwasher, air conditioner, microwave, toaster, coffee maker, vacuum cleaner, television"}
{"cat":"appliance","slot":"content","value":"alcohol","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"contain\";         A textual example of the semantic relation is \"content alcohols\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        refrigerator, washing machine, dishwasher, microwave, oven, toaster, coffee maker, blender, vacuum cleaner, air conditioner"}
{"cat":"appliance","slot":"user","value":"teacher","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"are used by\";         A textual example of the semantic relation is \"user teachers\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        refrigerator, washing machine, dishwasher, microwave, oven, stove, toaster, coffee maker, blender, vacuum cleaner"}
{"cat":"appliance","slot":"sound","value":"ring","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"can\";         A textual example of the semantic relation is \"sound ring\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dishwasher, washing machine, refrigerator, oven, microwave, toaster, coffee maker, blender, vacuum cleaner, air conditioner"}
{"cat":"appliance","slot":"user","value":"patient","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"are used by\";         A textual example of the semantic relation is \"user patients\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        refrigerator, stove, microwave, dishwasher, washing machine, dryer, air conditioner, vacuum cleaner, toaster, coffee maker"}
{"cat":"appliance","slot":"user","value":"doctor","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"are used by\";         A textual example of the semantic relation is \"user doctors\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        washing machine, refrigerator, dishwasher, oven, microwave, air conditioner, vacuum cleaner, television, computer, smartphone"}
{"cat":"appliance","slot":"content","value":"mercury","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"contain\";         A textual example of the semantic relation is \"content mercuries\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        refrigerator, stove, dishwasher, washing machine, dryer, microwave, toaster, blender, coffee maker, vacuum cleaner"}
{"cat":"appliance","slot":"specialization","value":"landline","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization landline\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        refrigerator, washing machine, dishwasher, microwave oven, air conditioner, television, vacuum cleaner, toaster, blender, coffee maker"}
{"cat":"appliance","slot":"specialization","value":"smartphone","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization smartphone\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        refrigerator, washing machine, dishwasher, oven, microwave, air conditioner, television, vacuum cleaner, toaster, coffee maker"}
{"cat":"appliance","slot":"specialization","value":"cordless","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization cordless\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        refrigerator, washing machine, dryer, dishwasher, microwave, oven, stove, air conditioner, toaster, blender"}
{"cat":"appliance","slot":"specialization","value":"telephone extension","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization telephone extension\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":" refrigerator, washing machine, oven, microwave, dishwasher, air conditioner, television, vacuum cleaner, toaster, blender"}
{"cat":"appliance","slot":"specialization","value":"handset","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization handset\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        refrigerator, washing machine, dishwasher, microwave, oven, toaster, coffee maker, vacuum cleaner, air conditioner, water heater"}
{"cat":"appliance","slot":"specialization","value":"radiophone","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization radiophone\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        refrigerator, oven, microwave, washing machine, dishwasher, air conditioner, television, vacuum cleaner, coffee maker, toaster."}
{"cat":"appliance","slot":"specialization","value":"remote station","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization remote station\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        refrigerator, washing machine, microwave, oven, dishwasher, air conditioner, water heater, toaster, blender, coffee maker"}
{"cat":"appliance","slot":"specialization","value":"pay-station","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization pay-station\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":" refrigerator, oven, dishwasher, washing machine, dryer, microwave, toaster, blender, coffee maker, vacuum cleaner"}
{"cat":"appliance","slot":"specialization","value":"junk e-mail","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization junk e-mail\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        refrigerator, washing machine, dishwasher, microwave, oven, stove, air conditioner, vacuum cleaner, toaster, coffee maker"}
{"cat":"appliance","slot":"specialization","value":"freemail","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization freemail\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        refrigerator, washing machine, dishwasher, microwave, oven, air conditioner, vacuum cleaner, television, computer, smartphone"}
{"cat":"appliance","slot":"specialization","value":"link-attached station","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization link-attached station\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        refrigerator, dishwasher, washing machine, dryer, stove, oven, microwave, toaster, blender, coffee maker"}
{"cat":"appliance","slot":"specialization","value":"radiotelephone","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization radiotelephone\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        refrigerator, washing machine, dishwasher, oven, microwave, toaster, blender, coffee maker, vacuum cleaner, air conditioner"}
{"cat":"appliance","slot":"specialization","value":"dial phone","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization dial phone\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        refrigerator, washing machine, oven, dishwasher, microwave, air conditioner, television, vacuum cleaner, toaster, blender"}
{"cat":"appliance","slot":"specialization","value":"desk phone","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization desk phone\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":" refrigerator, microwave, washing machine, dishwasher, oven, air conditioner, television, vacuum cleaner, coffee maker, toaster"}
{"cat":"appliance","slot":"specialization","value":"spam","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization spam\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        washing machine, refrigerator, microwave, oven, dishwasher, air conditioner, vacuum cleaner, toaster, blender, coffee maker"}
{"cat":"appliance","slot":"specialization","value":"wireless telephone","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization wireless telephone\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        refrigerator, microwave, dishwasher, washing machine, dryer, oven, stove, air conditioner, toaster, blender"}
{"cat":"appliance","slot":"specialization","value":"pay-phone","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization pay-phone\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        refrigerator, dishwasher, washing machine, microwave, oven, stove, toaster, coffee maker, blender, vacuum cleaner"}
{"cat":"appliance","slot":"specialization","value":"extension","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization extension\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        refrigerator, washing machine, dishwasher, microwave, oven, toaster, coffee maker, vacuum cleaner, air conditioner, television"}
{"cat":"appliance","slot":"specialization","value":"dial telephone","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization dial telephone\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        refrigerator, washing machine, dishwasher, oven, microwave, air conditioner, television, vacuum cleaner, toaster, coffee maker"}
{"cat":"appliance","slot":"specialization","value":"link-attached terminal","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization link-attached terminal\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        refrigerator, oven, dishwasher, washing machine, dryer, microwave, air conditioner, vacuum cleaner, toaster, blender"}
{"cat":"appliance","slot":"specialization","value":"job-oriented terminal","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization job-oriented terminal\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        refrigerator, washing machine, dishwasher, microwave, oven, stove, air conditioner, water heater, vacuum cleaner, toaster"}
{"cat":"appliance","slot":"specialization","value":"speakerphone","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization speakerphone\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        refrigerator, stove, microwave, dishwasher, washing machine, dryer, air conditioner, television, vacuum cleaner, water heater"}
{"cat":"appliance","slot":"specialization","value":"extension phone","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization extension phone\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        refrigerator, oven, microwave, dishwasher, washing machine, dryer, air conditioner, television, vacuum cleaner, coffee maker"}
{"cat":"appliance","slot":"specialization","value":"remote terminal","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization remote terminal\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        refrigerator, oven, dishwasher, washing machine, dryer, microwave, toaster, blender, coffee maker, vacuum cleaner"}
{"cat":"appliance","slot":"specialization","value":"French telephone","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization French telephone\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        refrigerator, washing machine, dishwasher, microwave, oven, stove, air conditioner, television, vacuum cleaner, water heater"}
{"cat":"appliance","slot":"shape","value":"rectangular","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"shape rectangular\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        refrigerator, washing machine, microwave, toaster, dishwasher, oven, air conditioner, television, vacuum cleaner, blender"}
{"cat":"appliance","slot":"shape","value":"elongated","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"shape elongated\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        refrigerator, washing machine, dishwasher, microwave, oven, toaster, coffee maker, vacuum cleaner, air conditioner, water heater"}
{"cat":"appliance","slot":"shape","value":"long","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"shape long\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        refrigerator, washing machine, dishwasher, microwave, oven, toaster, coffee maker, blender, vacuum cleaner, air conditioner"}
{"cat":"appliance","slot":"shape","value":"pointy","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"shape pointy\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"1. refrigerator, 2. washing machine, 3. dishwasher, 4. oven, 5. microwave, 6. toaster, 7. blender, 8. vacuum cleaner, 9. air conditioner, 10. television"}
{"cat":"appliance","slot":"supply","value":"electricity","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"use\";         A textual example of the semantic relation is \"supply electricity\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        refrigerator, washing machine, dishwasher, microwave, oven, toaster, blender, coffee maker, vacuum cleaner, air conditioner"}
{"cat":"appliance","slot":"supply","value":"coal","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"use\";         A textual example of the semantic relation is \"supply coal\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        washing machine, refrigerator, dishwasher, oven, microwave, toaster, coffee maker, vacuum cleaner, air conditioner, water heater"}
{"cat":"appliance","slot":"supply","value":"gas","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"use\";         A textual example of the semantic relation is \"supply gas\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        refrigerator, stove, oven, microwave, dishwasher, washing machine, dryer, air conditioner, water heater, vacuum cleaner"}
{"cat":"appliance","slot":"supply","value":"petrol","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"use\";         A textual example of the semantic relation is \"supply petrol\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        refrigerator, microwave, washing machine, dishwasher, air conditioner, vacuum cleaner, toaster, coffee maker, blender, oven"}
{"cat":"appliance","slot":"supply","value":"fire","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"use\";         A textual example of the semantic relation is \"supply fire\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        stove, oven, refrigerator, dishwasher, washing machine, dryer, microwave, toaster, coffee maker, blender"}
{"cat":"appliance","slot":"supply","value":"diesel","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"use\";         A textual example of the semantic relation is \"supply diesel\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        washing machine, refrigerator, dishwasher, microwave, oven, toaster, coffee maker, vacuum cleaner, air conditioner, water heater"}
{"cat":"appliance","slot":"supply","value":"propane","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"use\";         A textual example of the semantic relation is \"supply propane\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        stove, refrigerator, dishwasher, washing machine, dryer, microwave, oven, toaster, blender, coffee maker"}
{"cat":"appliance","slot":"supply","value":"wood","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"use\";         A textual example of the semantic relation is \"supply wood\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        refrigerator, washing machine, oven, dishwasher, microwave, air conditioner, toaster, blender, vacuum cleaner, coffee maker"}
{"cat":"appliance","slot":"supply","value":"pellet","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"use\";         A textual example of the semantic relation is \"supply pellet\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pellet stove, washing machine, dishwasher, refrigerator, microwave, oven, toaster, coffee maker, blender, vacuum cleaner"}
{"cat":"appliance","slot":"supply","value":"electric","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"use\";         A textual example of the semantic relation is \"supply electric\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        refrigerator, stove, washing machine, dishwasher, microwave, air conditioner, vacuum cleaner, toaster, blender, coffee maker"}
{"cat":"appliance","slot":"supply","value":"biomass","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"use\";         A textual example of the semantic relation is \"supply biomass\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"10 words: washing machine, dryer, refrigerator, oven, stove, dishwasher, microwave, toaster, blender, coffee maker"}
{"cat":"appliance","slot":"supply","value":"convection","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"use\";         A textual example of the semantic relation is \"supply convection\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":" oven, refrigerator, microwave, dishwasher, washing machine, dryer, air conditioner, water heater, toaster, blender"}
{"cat":"appliance","slot":"supply","value":"burning","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"use\";         A textual example of the semantic relation is \"supply burning\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        stove, oven, microwave, toaster, kettle, coffee maker, blender, refrigerator, dishwasher, washing machine"}
{"cat":"appliance","slot":"purpose","value":"heat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"are used for\";         A textual example of the semantic relation is \"purpose heat\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        oven, refrigerator, dishwasher, washing machine, dryer, microwave, toaster, coffee maker, blender, vacuum cleaner"}
{"cat":"appliance","slot":"purpose","value":"speak","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"are used to\";         A textual example of the semantic relation is \"purpose speak\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        refrigerator, washing machine, dishwasher, microwave oven, air conditioner, vacuum cleaner, toaster, coffee maker, blender, electric kettle"}
{"cat":"appliance","slot":"purpose","value":"experiment","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"are used for\";         A textual example of the semantic relation is \"purpose experiment\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        refrigerator, washing machine, dishwasher, microwave, oven, toaster, blender, vacuum cleaner, air conditioner, water heater"}
{"cat":"appliance","slot":"purpose","value":"cooking","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"are used for\";         A textual example of the semantic relation is \"purpose cooking\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        oven, refrigerator, dishwasher, washing machine, dryer, microwave, toaster, blender, coffee maker, vacuum cleaner"}
{"cat":"appliance","slot":"purpose","value":"teaching","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"are used for\";         A textual example of the semantic relation is \"purpose teaching\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        refrigerator, washing machine, microwave, dishwasher, oven, stove, toaster, blender, coffee maker, vacuum cleaner"}
{"cat":"appliance","slot":"purpose","value":"enlarge","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"are used to\";         A textual example of the semantic relation is \"purpose enlarge\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        refrigerator, washing machine, dishwasher, oven, microwave, toaster, blender, vacuum cleaner, air conditioner, water heater"}
{"cat":"appliance","slot":"purpose","value":"burn","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"are used to\";         A textual example of the semantic relation is \"purpose burn\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        refrigerator, washing machine, microwave, oven, dishwasher, air conditioner, water heater, vacuum cleaner, toaster, blender"}
{"cat":"appliance","slot":"purpose","value":"education","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"are used for\";         A textual example of the semantic relation is \"purpose education\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        washing machine, refrigerator, oven, dishwasher, microwave, toaster, blender, coffee maker, vacuum cleaner, air conditioner"}
{"cat":"appliance","slot":"purpose","value":"communication","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"are used for\";         A textual example of the semantic relation is \"purpose communication\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        refrigerator, washing machine, dishwasher, microwave, oven, toaster, coffee maker, vacuum cleaner, air conditioner, television"}
{"cat":"appliance","slot":"purpose","value":"presentation","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"are used for\";         A textual example of the semantic relation is \"purpose presentation\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        refrigerator, washing machine, dishwasher, microwave, oven, toaster, coffee maker, vacuum cleaner, air conditioner, television"}
{"cat":"appliance","slot":"purpose","value":"screen","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"are used for\";         A textual example of the semantic relation is \"purpose screen\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        washing machine, refrigerator, microwave, dishwasher, oven, stove, air conditioner, heater, vacuum cleaner, water heater"}
{"cat":"appliance","slot":"purpose","value":"telephone","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"are used for\";         A textual example of the semantic relation is \"purpose telephone\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        refrigerator, oven, washing machine, dishwasher, microwave, toaster, coffee maker, vacuum cleaner, air conditioner, television"}
{"cat":"appliance","slot":"purpose","value":"service","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"are used for\";         A textual example of the semantic relation is \"purpose service\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        refrigerator, washing machine, dishwasher, oven, microwave, toaster, coffee maker, vacuum cleaner, air conditioner, water heater"}
{"cat":"appliance","slot":"purpose","value":"phone","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"are used for\";         A textual example of the semantic relation is \"purpose phone\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        refrigerator, washing machine, dryer, dishwasher, oven, microwave, toaster, coffee maker, vacuum cleaner, air conditioner"}
{"cat":"appliance","slot":"purpose","value":"call","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"are used for\";         A textual example of the semantic relation is \"purpose call\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        refrigerator, washing machine, dishwasher, microwave, oven, toaster, coffee maker, vacuum cleaner, air conditioner, television"}
{"cat":"appliance","slot":"purpose","value":"measure","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"are used to\";         A textual example of the semantic relation is \"purpose measure\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        refrigerator, microwave, oven, dishwasher, washing machine, dryer, air conditioner, vacuum cleaner, toaster, blender"}
{"cat":"appliance","slot":"purpose","value":"display","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"are used to\";         A textual example of the semantic relation is \"purpose display\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        refrigerator, washing machine, dishwasher, microwave, oven, toaster, blender, vacuum cleaner, air conditioner, television"}
{"cat":"appliance","slot":"purpose","value":"wash","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"are used for\";         A textual example of the semantic relation is \"purpose wash\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":" washing machine, dishwasher, refrigerator, oven, microwave, toaster, blender, coffee maker, vacuum cleaner, air conditioner"}
{"cat":"appliance","slot":"purpose","value":"cook","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"are used for\";         A textual example of the semantic relation is \"purpose cook\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        refrigerator, oven, microwave, dishwasher, washing machine, dryer, toaster, blender, coffee maker, vacuum cleaner"}
{"cat":"appliance","slot":"purpose","value":"project","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"are used to\";         A textual example of the semantic relation is \"purpose project\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        oven, refrigerator, washing machine, dishwasher, microwave, toaster, coffee maker, vacuum cleaner, air conditioner, television"}
{"cat":"appliance","slot":"purpose","value":"truck","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"are used for\";         A textual example of the semantic relation is \"purpose truck\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        refrigerator, oven, dishwasher, washing machine, dryer, microwave, toaster, coffee maker, blender, vacuum cleaner"}
{"cat":"appliance","slot":"place","value":"restaurant","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"can be found or used in\";         A textual example of the semantic relation is \"place restaurants\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":" refrigerator, oven, microwave, dishwasher, washing machine, dryer, air conditioner, television, computer, vacuum cleaner"}
{"cat":"appliance","slot":"place","value":"weather station","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"can be found or used in\";         A textual example of the semantic relation is \"place weather stations\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        refrigerator, microwave, oven, dishwasher, washing machine, dryer, air conditioner, television, vacuum cleaner, blender"}
{"cat":"appliance","slot":"place","value":"cinema","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"can be found or used in\";         A textual example of the semantic relation is \"place cinemas\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        refrigerator, dishwasher, washing machine, dryer, oven, microwave, toaster, blender, coffee maker, vacuum cleaner"}
{"cat":"appliance","slot":"place","value":"hospital","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"can be found or used in\";         A textual example of the semantic relation is \"place hospitals\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        refrigerator, washing machine, microwave, dishwasher, oven, toaster, blender, coffee maker, vacuum cleaner, air conditioner"}
{"cat":"appliance","slot":"place","value":"bakery","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"can be found or used in\";         A textual example of the semantic relation is \"place bakeries\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        refrigerator, stove, oven, dishwasher, washing machine, dryer, microwave, toaster, blender, coffee maker"}
{"cat":"appliance","slot":"place","value":"theater","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"can be found or used in\";         A textual example of the semantic relation is \"place theaters\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        refrigerator, oven, microwave, dishwasher, washing machine, dryer, air conditioner, water heater, toaster, blender"}
{"cat":"appliance","slot":"place","value":"planetarium","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"can be found or used in\";         A textual example of the semantic relation is \"place planetariums\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        refrigerator, oven, dishwasher, washing machine, dryer, microwave, toaster, blender, coffee maker, vacuum cleaner"}
{"cat":"appliance","slot":"place","value":"hotel","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"can be found or used in\";         A textual example of the semantic relation is \"place hotels\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":" refrigerator, stove, microwave, dishwasher, washing machine, dryer, air conditioner, water heater, toaster, blender"}
{"cat":"appliance","slot":"place","value":"car","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"can be found or used in\";         A textual example of the semantic relation is \"place cars\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        refrigerator, oven, microwave, washing machine, dryer, dishwasher, toaster, blender, coffee maker, vacuum cleaner"}
{"cat":"appliance","slot":"place","value":"factory","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"can be found or used in\";         A textual example of the semantic relation is \"place factories\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        refrigerator, washing machine, oven, microwave, dishwasher, air conditioner, television, vacuum cleaner, toaster, coffee maker"}
{"cat":"appliance","slot":"place","value":"classroom","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"can be found or used in\";         A textual example of the semantic relation is \"place classrooms\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        refrigerator, dishwasher, oven, microwave, washing machine, dryer, toaster, blender, coffee maker, air conditioner"}
{"cat":"appliance","slot":"place","value":"baker","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"can be found or used in\";         A textual example of the semantic relation is \"place bakers\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        refrigerator, washing machine, oven, dishwasher, microwave, toaster, coffee maker, vacuum cleaner, air conditioner, television"}
{"cat":"appliance","slot":"place","value":"office","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"can be found or used in\";         A textual example of the semantic relation is \"place offices\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        refrigerator, dishwasher, oven, washing machine, dryer, microwave, toaster, blender, coffee maker, vacuum cleaner"}
{"cat":"appliance","slot":"place","value":"conference room","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"can be found or used in\";         A textual example of the semantic relation is \"place conference rooms\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        refrigerator, oven, dishwasher, microwave, washing machine, dryer, air conditioner, water heater, toaster, blender"}
{"cat":"appliance","slot":"place","value":"school","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"can be found or used in\";         A textual example of the semantic relation is \"place schools\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        refrigerator, microwave, oven, dishwasher, washing machine, dryer, air conditioner, water heater, toaster, blender"}
{"cat":"appliance","slot":"place","value":"lab","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"can be found or used in\";         A textual example of the semantic relation is \"place labs\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        refrigerator, washing machine, dishwasher, oven, microwave, toaster, blender, coffee maker, vacuum cleaner, air conditioner"}
{"cat":"appliance","slot":"place","value":"home","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"can be found or used in\";         A textual example of the semantic relation is \"place homes\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        washing machine, refrigerator, oven, dishwasher, microwave, toaster, coffee maker, vacuum cleaner, air conditioner, television"}
{"cat":"appliance","slot":"place","value":"kitchen","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"can be found or used in\";         A textual example of the semantic relation is \"place kitchens\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        oven, refrigerator, dishwasher, stove, microwave, washing machine, dryer, toaster, blender, coffee maker"}
{"cat":"appliance","slot":"place","value":"room","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"can be found or used in\";         A textual example of the semantic relation is \"place rooms\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        refrigerator, oven, dishwasher, washing machine, dryer, microwave, toaster, coffee maker, vacuum cleaner, air conditioner"}
{"cat":"appliance","slot":"material","value":"metal","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"can be made of\";         A textual example of the semantic relation is \"material metal\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        washing machine, refrigerator, dishwasher, oven, microwave, toaster, blender, coffee maker, vacuum cleaner, air conditioner"}
{"cat":"appliance","slot":"material","value":"plastic","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"can be made of\";         A textual example of the semantic relation is \"material plastic\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        refrigerator, washing machine, dishwasher, oven, microwave, toaster, blender, coffee maker, vacuum cleaner, air conditioner"}
{"cat":"appliance","slot":"material","value":"steel","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"can be made of\";         A textual example of the semantic relation is \"material steel\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        fridge, washing machine, oven, dishwasher, microwave, toaster, kettle, blender, coffee maker, air conditioner"}
{"cat":"appliance","slot":"material","value":"glass","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"can be made of\";         A textual example of the semantic relation is \"material glass\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        refrigerator, oven, washing machine, dishwasher, air conditioner, microwave, toaster, blender, coffee maker, vacuum cleaner"}
{"cat":"appliance","slot":"material","value":"cast iron","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"can be made of\";         A textual example of the semantic relation is \"material cast iron\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        stove, washing machine, refrigerator, dishwasher, microwave, oven, toaster, blender, coffee maker, vacuum cleaner"}
{"cat":"appliance","slot":"colorPattern","value":"silver","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"colorPattern silver\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        refrigerator, washing machine, oven, dishwasher, microwave, air conditioner, television, vacuum cleaner, toaster, blender"}
{"cat":"appliance","slot":"colorPattern","value":"black","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"colorPattern black\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        refrigerator, washing machine, dishwasher, oven, microwave, stove, toaster, coffee maker, blender, vacuum cleaner"}
{"cat":"appliance","slot":"colorPattern","value":"white","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"colorPattern white\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        washing machine, refrigerator, microwave, oven, dishwasher, air conditioner, television, vacuum cleaner, coffee maker, toaster"}
{"cat":"appliance","slot":"part","value":"handle","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part handle\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        refrigerator, washing machine, dishwasher, stove, microwave, toaster, coffee maker, blender, vacuum cleaner, air conditioner"}
{"cat":"appliance","slot":"part","value":"cord","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part cord\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        washing machine, dishwasher, refrigerator, oven, microwave, toaster, blender, coffee maker, vacuum cleaner, air conditioner"}
{"cat":"appliance","slot":"part","value":"plug","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part plug\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        fridge, oven, washing machine, dishwasher, microwave, toaster, kettle, coffee maker, blender, vacuum cleaner"}
{"cat":"appliance","slot":"part","value":"push-button","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part push-button\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        refrigerator, washing machine, microwave, dishwasher, stove, oven, air conditioner, television, vacuum cleaner, blender"}
{"cat":"appliance","slot":"part","value":"door","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part door\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        refrigerator, washing machine, microwave oven, dishwasher, air conditioner, toaster, vacuum cleaner, coffee maker, blender, oven"}
{"cat":"appliance","slot":"part","value":"knob","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part knob\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        refrigerator, stove, dishwasher, washing machine, dryer, microwave, toaster, coffee maker, blender, vacuum cleaner"}
{"cat":"appliance","slot":"part","value":"rotor","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part rotor\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        refrigerator, washing machine, dishwasher, microwave, oven, stove, air conditioner, vacuum cleaner, toaster, blender"}
{"cat":"appliance","slot":"part","value":"scale bar","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part scale bar\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        refrigerator, washing machine, dishwasher, oven, microwave, air conditioner, television, computer, vacuum cleaner, toaster"}
{"cat":"appliance","slot":"part","value":"bulb","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part bulb\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        oven, refrigerator, washing machine, dishwasher, air conditioner, microwave, coffee maker, toaster, vacuum cleaner, water heater"}
{"cat":"appliance","slot":"part","value":"sprayer","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part sprayer\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dishwasher, refrigerator, washing machine, dryer, oven, microwave, toaster, blender, coffee maker, vacuum cleaner"}
{"cat":"appliance","slot":"part","value":"sensor","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part sensor\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        washing machine, dishwasher, refrigerator, microwave, oven, stove, air conditioner, vacuum cleaner, coffee maker, toaster"}
{"cat":"appliance","slot":"part","value":"rack","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part rack\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        refrigerator, dishwasher, oven, microwave, washing machine, dryer, toaster, blender, coffee maker, vacuum cleaner"}
{"cat":"appliance","slot":"part","value":"hearthstone","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part hearthstone\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        stove, oven, microwave, refrigerator, dishwasher, washing machine, dryer, air conditioner, water heater, toaster"}
{"cat":"appliance","slot":"part","value":"pipe","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part pipe\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        washing machine, refrigerator, dishwasher, stove, oven, microwave, toaster, blender, coffee maker, vacuum cleaner"}
{"cat":"appliance","slot":"part","value":"receiver","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part receiver\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"1. refrigerator, 2. stove, 3. microwave, 4. dishwasher, 5. washing machine, 6. dryer, 7. air conditioner, 8. water heater, 9. vacuum cleaner, 10. toaster."}
{"cat":"appliance","slot":"part","value":"grate","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part grate\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        refrigerator, washing machine, dishwasher, microwave, oven, toaster, blender, coffee maker, vacuum cleaner, air conditioner"}
{"cat":"appliance","slot":"part","value":"keypad","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part keypad\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        fridge, oven, dishwasher, washing machine, microwave, coffee maker, toaster, blender, vacuum cleaner, air conditioner"}
{"cat":"appliance","slot":"part","value":"shutter","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part shutter\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        refrigerator, oven, washing machine, dishwasher, microwave, air conditioner, television, vacuum cleaner, coffee maker, toaster"}
{"cat":"appliance","slot":"part","value":"fireplace","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part fireplace\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dishwasher, refrigerator, oven, microwave, washing machine, dryer, air conditioner, heater, stove, toaster"}
{"cat":"appliance","slot":"part","value":"mantlepiece","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part mantlepiece\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        refrigerator, washing machine, dishwasher, microwave, oven, toaster, blender, coffee maker, vacuum cleaner, air conditioner"}
{"cat":"appliance","slot":"part","value":"water back","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part water back\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        washing machine, dishwasher, refrigerator, microwave, oven, toaster, blender, coffee maker, vacuum cleaner, air conditioner"}
{"cat":"appliance","slot":"part","value":"microwave","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part microwave\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        microwave, refrigerator, oven, dishwasher, washing machine, dryer, toaster, blender, coffee maker, vacuum cleaner"}
{"cat":"appliance","slot":"part","value":"platform","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part platform\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        washing machine, dishwasher, refrigerator, oven, microwave, toaster, coffee maker, blender, vacuum cleaner, air conditioner"}
{"cat":"appliance","slot":"part","value":"chimneypiece","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part chimneypiece\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        \"oven, fridge, washing machine, dishwasher, microwave, toaster, kettle, coffee maker, blender, vacuum cleaner\""}
{"cat":"appliance","slot":"part","value":"mouthpiece","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part mouthpiece\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        refrigerator, oven, microwave, dishwasher, washing machine, dryer, air conditioner, vacuum cleaner, coffee maker, toaster"}
{"cat":"appliance","slot":"part","value":"cable","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part cable\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        washing machine, dishwasher, refrigerator, microwave, oven, toaster, coffee maker, blender, vacuum cleaner, air conditioner"}
{"cat":"appliance","slot":"part","value":"light","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part light\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        washing machine, dryer, refrigerator, stove, dishwasher, microwave, toaster, blender, coffee maker, vacuum cleaner"}
{"cat":"appliance","slot":"part","value":"capillary tubing","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part capillary tubing\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        refrigerator, washing machine, dishwasher, microwave, oven, air conditioner, television, vacuum cleaner, toaster, blender"}
{"cat":"appliance","slot":"part","value":"lens","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part lens\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        refrigerator, washing machine, dishwasher, microwave, oven, toaster, blender, coffee maker, vacuum cleaner, air conditioner"}
{"cat":"appliance","slot":"part","value":"telephone receiver","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part telephone receiver\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        refrigerator, stove, washing machine, dryer, dishwasher, microwave, air conditioner, television, vacuum cleaner, toaster"}
{"cat":"appliance","slot":"part","value":"refrigerator","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part refrigerator\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        refrigerator, washing machine, dryer, dishwasher, oven, microwave, toaster, blender, coffee maker, vacuum cleaner"}
{"cat":"appliance","slot":"part","value":"oven","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part oven\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        oven, refrigerator, dishwasher, washing machine, dryer, microwave, stove, toaster, coffee maker, blender"}
{"cat":"appliance","slot":"part","value":"mantelpiece","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part mantelpiece\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        fridge, oven, microwave, washing machine, dishwasher, toaster, kettle, blender, coffee maker, vacuum cleaner"}
{"cat":"appliance","slot":"part","value":"refrigeration system","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part refrigeration system\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        refrigerator, stove, microwave, dishwasher, washing machine, dryer, air conditioner, water heater, vacuum cleaner, toaster"}
{"cat":"appliance","slot":"part","value":"hearth","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part hearth\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        stove, refrigerator, microwave, dishwasher, washing machine, dryer, air conditioner, water heater, vacuum cleaner, toaster."}
{"cat":"appliance","slot":"part","value":"fireside","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part fireside\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        stove, refrigerator, washing machine, dishwasher, microwave, oven, air conditioner, television, vacuum cleaner, coffee maker"}
{"cat":"appliance","slot":"part","value":"mantel","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part mantel\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        refrigerator, washing machine, dryer, dishwasher, oven, stove, microwave, toaster, blender, coffee maker"}
{"cat":"appliance","slot":"part","value":"flashlight battery","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part flashlight battery\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        refrigerator, washing machine, oven, microwave, dishwasher, air conditioner, vacuum cleaner, toaster, blender, coffee maker"}
{"cat":"appliance","slot":"part","value":"button","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part button\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"1. refrigerator, 2. washing machine, 3. dryer, 4. dishwasher, 5. oven, 6. microwave, 7. toaster, 8. blender, 9. coffee maker, 10. vacuum cleaner"}
{"cat":"appliance","slot":"part","value":"screen","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part screen\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        washing machine, refrigerator, oven, dishwasher, microwave, coffee maker, toaster, vacuum cleaner, air conditioner, television"}
{"cat":"appliance","slot":"part","value":"capillary","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part capillary\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        refrigerator, washing machine, dryer, dishwasher, oven, microwave, toaster, blender, coffee maker, vacuum cleaner"}
{"cat":"appliance","slot":"part","value":"mantle","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part mantle\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        refrigerator, dishwasher, oven, microwave, washing machine, dryer, toaster, blender, coffee maker, vacuum cleaner"}
{"cat":"appliance","slot":"part","value":"bimetallic strip","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part bimetallic strip\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bimetallic strip, thermostat, heating element, motor, fan, compressor, capacitor, resistor, relay, transformer"}
{"cat":"appliance","slot":"part","value":"capillary tube","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part capillary tube\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"1. refrigerator, 2. washing machine, 3. dishwasher, 4. oven, 5. microwave, 6. air conditioner, 7. vacuum cleaner, 8. toaster, 9. coffee maker, 10. blender"}
{"cat":"appliance","slot":"part","value":"grating","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part grating\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        refrigerator, washing machine, dishwasher, microwave, oven, toaster, blender, coffee maker, vacuum cleaner, air conditioner"}
{"cat":"appliance","slot":"part","value":"steam whistle","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part steam whistle\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        refrigerator, washing machine, dishwasher, oven, microwave, toaster, coffee maker, blender, vacuum cleaner, air conditioner"}
{"cat":"appliance","slot":"part","value":"drip pan","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part drip pan\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        dishwasher, refrigerator, microwave, oven, stove, washing machine, dryer, air conditioner, water heater, toaster"}
{"cat":"appliance","slot":"part","value":"wire","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part wire\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        washing machine, dryer, refrigerator, stove, dishwasher, microwave, toaster, blender, coffee maker, vacuum cleaner"}
{"cat":"appliance","slot":"part","value":"fire iron","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part fire iron\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        stove, refrigerator, washing machine, dishwasher, microwave, toaster, coffee maker, vacuum cleaner, air conditioner, television"}
{"cat":"appliance","slot":"generalization","value":"appliance","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization appliance\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        refrigerator, stove, dishwasher, washing machine, dryer, microwave, toaster, blender, coffee maker, vacuum cleaner"}
{"cat":"appliance","slot":"generalization","value":"tool","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization tool\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        refrigerator, washing machine, dishwasher, stove, microwave, toaster, coffee maker, vacuum cleaner, air conditioner, television"}
{"cat":"appliance","slot":"generalization","value":"instrument","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization instrument\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        refrigerator, washing machine, dishwasher, oven, microwave, air conditioner, toaster, blender, coffee maker, vacuum cleaner"}
{"cat":"appliance","slot":"generalization","value":"home appliance","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization home appliance\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":" refrigerator, washing machine, dishwasher, microwave, oven, stove, toaster, blender, vacuum cleaner, air conditioner"}
{"cat":"appliance","slot":"generalization","value":"household appliance","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization household appliance\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        refrigerator, washing machine, dishwasher, oven, microwave, toaster, coffee maker, vacuum cleaner, air conditioner, television"}
{"cat":"appliance","slot":"generalization","value":"electronic equipment","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization electronic equipment\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        refrigerator, washing machine, microwave, dishwasher, air conditioner, television, oven, toaster, blender, vacuum cleaner"}
{"cat":"appliance","slot":"generalization","value":"measuring system","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization measuring system\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        refrigerator, washing machine, dishwasher, oven, microwave, air conditioner, vacuum cleaner, toaster, coffee maker, blender"}
{"cat":"appliance","slot":"generalization","value":"equipment","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization equipment\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        washing machine, refrigerator, oven, dishwasher, microwave, toaster, coffee maker, vacuum cleaner, air conditioner, television"}
{"cat":"appliance","slot":"generalization","value":"instrumentality","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization instrumentality\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":" refrigerator, washing machine, dishwasher, oven, microwave, toaster, blender, coffee maker, vacuum cleaner, air conditioner"}
{"cat":"appliance","slot":"generalization","value":"white goods","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization white goods\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        refrigerator, washing machine, dishwasher, oven, microwave, air conditioner, water heater, vacuum cleaner, television, toaster."}
{"cat":"appliance","slot":"generalization","value":"measuring device","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization measuring device\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        refrigerator, microwave, oven, dishwasher, washing machine, dryer, air conditioner, water heater, television, vacuum cleaner"}
{"cat":"appliance","slot":"generalization","value":"measuring instrument","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization measuring instrument\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        refrigerator, washing machine, dishwasher, oven, microwave, toaster, blender, coffee maker, vacuum cleaner, air conditioner"}
{"cat":"appliance","slot":"generalization","value":"instrumentation","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization instrumentation\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        refrigerator, washing machine, dishwasher, oven, microwave, toaster, blender, coffee maker, vacuum cleaner, air conditioner"}
{"cat":"appliance","slot":"generalization","value":"peripheral device","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization peripheral device\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        refrigerator, washing machine, dishwasher, microwave, oven, toaster, coffee maker, vacuum cleaner, air conditioner, television"}
{"cat":"appliance","slot":"generalization","value":"peripheral","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization peripheral\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        refrigerator, microwave, washing machine, dishwasher, oven, toaster, blender, coffee maker, vacuum cleaner, air conditioner"}
{"cat":"appliance","slot":"generalization","value":"kitchen appliance","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization kitchen appliance\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        refrigerator, stove, oven, microwave, dishwasher, toaster, blender, coffee maker, washing machine, dryer"}
{"cat":"appliance","slot":"generalization","value":"computer peripheral","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization computer peripheral\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":" refrigerator, washing_machine, microwave, dishwasher, oven, air_conditioner, television, vacuum_cleaner, toaster, blender"}
{"cat":"appliance","slot":"generalization","value":"electronic device","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization electronic device\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":" refrigerator, washing machine, microwave, oven, dishwasher, air conditioner, television, vacuum cleaner, toaster, blender"}
{"cat":"appliance","slot":"generalization","value":"durables","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization durables\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        refrigerator, washing machine, dishwasher, oven, microwave, toaster, coffee maker, vacuum cleaner, air conditioner, television."}
{"cat":"appliance","slot":"generalization","value":"consumer durables","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization consumer durables\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        refrigerator, washing machine, microwave oven, dishwasher, air conditioner, television, vacuum cleaner, toaster, coffee maker, blender"}
{"cat":"appliance","slot":"generalization","value":"receiver","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization receiver\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":" refrigerator, oven, dishwasher, washing machine, dryer, microwave, toaster, blender, coffee maker, vacuum cleaner"}
{"cat":"appliance","slot":"generalization","value":"data input device","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization data input device\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        refrigerator, washing machine, dishwasher, microwave, oven, toaster, coffee maker, vacuum cleaner, air conditioner, television"}
{"cat":"appliance","slot":"generalization","value":"broadcasting","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization broadcasting\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        refrigerator, washing machine, microwave, dishwasher, air conditioner, stove, oven, toaster, blender, vacuum cleaner"}
{"cat":"appliance","slot":"generalization","value":"receiving system","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization receiving system\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        refrigerator, oven, dishwasher, washing machine, dryer, microwave, toaster, blender, coffee maker, vacuum cleaner"}
{"cat":"appliance","slot":"generalization","value":"telecom","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization telecom\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        refrigerator, dishwasher, oven, washing machine, dryer, microwave, air conditioner, water heater, toaster, coffee maker"}
{"cat":"appliance","slot":"generalization","value":"consumer goods","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization consumer goods\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        refrigerator, washing machine, dishwasher, oven, microwave, toaster, coffee maker, vacuum cleaner, air conditioner, television"}
{"cat":"appliance","slot":"generalization","value":"medium","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization medium\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        refrigerator, washing machine, microwave oven, dishwasher, air conditioner, television, vacuum cleaner, toaster, blender, coffee maker"}
{"cat":"appliance","slot":"generalization","value":"source of illumination","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization source of illumination\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        refrigerator, washing machine, oven, dishwasher, microwave, toaster, blender, coffee maker, vacuum cleaner, air conditioner"}
{"cat":"appliance","slot":"generalization","value":"printer","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization printer\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        refrigerator, washing machine, dishwasher, microwave, oven, toaster, coffee maker, vacuum cleaner, air conditioner, television"}
{"cat":"appliance","slot":"generalization","value":"controller","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization controller\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        refrigerator, oven, dishwasher, washing machine, dryer, air conditioner, microwave, toaster, coffee maker, vacuum cleaner"}
{"cat":"appliance","slot":"generalization","value":"video display","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization video display\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        refrigerator, dishwasher, oven, microwave, washing machine, dryer, air conditioner, television, vacuum cleaner, toaster"}
{"cat":"appliance","slot":"generalization","value":"mechanism","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization mechanism\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":" refrigerator, washing machine, dishwasher, microwave, oven, toaster, coffee maker, vacuum cleaner, air conditioner, television"}
{"cat":"appliance","slot":"generalization","value":"navigational instrument","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization navigational instrument\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        refrigerator, washing machine, dishwasher, microwave, oven, toaster, coffee maker, vacuum cleaner, air conditioner, television"}
{"cat":"appliance","slot":"generalization","value":"input device","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization input device\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        washing machine, refrigerator, dishwasher, microwave, oven, toaster, blender, coffee maker, vacuum cleaner, air conditioner"}
{"cat":"appliance","slot":"generalization","value":"optical instrument","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization optical instrument\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"10 words: refrigerator, washing machine, microwave, oven, dishwasher, air conditioner, television, vacuum cleaner, toaster, blender."}
{"cat":"appliance","slot":"generalization","value":"durable goods","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization durable goods\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        refrigerator, washing machine, dishwasher, oven, microwave, air conditioner, television, vacuum cleaner, blender, toaster"}
{"cat":"appliance","slot":"generalization","value":"set","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization set\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        refrigerator, washing machine, dishwasher, oven, microwave, toaster, coffee maker, vacuum cleaner, air conditioner, television"}
{"cat":"appliance","slot":"generalization","value":"electronic communication","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization electronic communication\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        refrigerator, washing machine, dishwasher, microwave, oven, toaster, coffee maker, vacuum cleaner, air conditioner, television"}
{"cat":"appliance","slot":"generalization","value":"communicating","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization communicating\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        refrigerator, stove, dishwasher, washing machine, dryer, microwave, toaster, blender, coffee maker, vacuum cleaner"}
{"cat":"appliance","slot":"generalization","value":"electric lamp","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization electric lamp\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        washing machine, refrigerator, oven, microwave, dishwasher, air conditioner, television, vacuum cleaner, blender, toaster"}
{"cat":"appliance","slot":"generalization","value":"transducer","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization transducer\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        refrigerator, washing machine, dishwasher, oven, microwave, toaster, coffee maker, vacuum cleaner, air conditioner, television."}
{"cat":"appliance","slot":"generalization","value":"electrical device","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization electrical device\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        refrigerator, washing machine, oven, dishwasher, air conditioner, microwave, toaster, blender, vacuum cleaner, coffee maker"}
{"cat":"appliance","slot":"generalization","value":"machine","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization machine\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        refrigerator, washing machine, dishwasher, oven, microwave, air conditioner, vacuum cleaner, television, computer, smartphone"}
{"cat":"appliance","slot":"generalization","value":"printing machine","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization printing machine\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":" refrigerator, oven, dishwasher, washing machine, dryer, air conditioner, television, microwave, toaster, blender"}
{"cat":"appliance","slot":"generalization","value":"telecommunication","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization telecommunication\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        refrigerator, washing machine, dishwasher, oven, microwave, toaster, coffee maker, vacuum cleaner, air conditioner, television."}
{"cat":"appliance","slot":"generalization","value":"control","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization control\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        refrigerator, washing machine, dishwasher, microwave, oven, air conditioner, water heater, vacuum cleaner, toaster, blender"}
{"cat":"appliance","slot":"generalization","value":"transmission","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization transmission\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        refrigerator, washing machine, dishwasher, microwave oven, air conditioner, water heater, vacuum cleaner, toaster, coffee maker, blender"}
{"cat":"appliance","slot":"generalization","value":"lamp","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization lamp\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        refrigerator, oven, washing machine, dishwasher, air conditioner, microwave, toaster, coffee maker, vacuum cleaner, television"}
{"cat":"appliance","slot":"generalization","value":"electro-acoustic transducer","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization electro-acoustic transducer\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"1. refrigerator, 2. washing machine, 3. dishwasher, 4. microwave, 5. oven, 6. toaster, 7. coffee maker, 8. blender, 9. vacuum cleaner, 10. air conditioner"}
{"cat":"appliance","slot":"generalization","value":"regulator","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization regulator\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        refrigerator, dishwasher, washing machine, microwave, oven, toaster, blender, coffee maker, vacuum cleaner, air conditioner"}
{"cat":"appliance","slot":"generalization","value":"device","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization device\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        refrigerator, stove, dishwasher, washing machine, dryer, microwave, toaster, blender, coffee maker, vacuum cleaner"}
{"cat":"appliance","slot":"part","value":"display","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part display\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        refrigerator, microwave, oven, dishwasher, washing machine, dryer, air conditioner, television, computer, vacuum cleaner"}
{"cat":"appliance","slot":"material","value":"mercury","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"can be made of\";         A textual example of the semantic relation is \"material mercury\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        refrigerator, oven, dishwasher, washing machine, dryer, microwave, toaster, blender, coffee maker, vacuum cleaner"}
{"cat":"appliance","slot":"material","value":"alcohol","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"can be made of\";         A textual example of the semantic relation is \"material alcohol\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        refrigerator, washing machine, dishwasher, oven, microwave, toaster, blender, coffee maker, vacuum cleaner, air conditioner"}
{"cat":"appliance","slot":"generalization","value":"communication","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization communication\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        refrigerator, microwave, dishwasher, washing machine, dryer, oven, stove, air conditioner, vacuum cleaner, toaster"}
{"cat":"appliance","slot":"generalization","value":"display","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization display\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        refrigerator, stove, microwave, dishwasher, washing machine, dryer, air conditioner, vacuum cleaner, toaster, blender"}
{"cat":"instruments","slot":"accessory","value":"seat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"are related with\";         A textual example of the semantic relation is \"accessory seat\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        guitar, piano, violin, drum, flute, trumpet, saxophone, cello, harp, accordion"}
{"cat":"instruments","slot":"accessory","value":"bow","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"are related with\";         A textual example of the semantic relation is \"accessory bow\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        trumpet, saxophone, guitar, piano, violin, drum, flute, cello, accordion, clarinet"}
{"cat":"instruments","slot":"place","value":"France","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"can be found or used in\";         A textual example of the semantic relation is \"place Frances\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        guitar, piano, violin, flute, trumpet, saxophone, drums, cello, harp, accordion"}
{"cat":"instruments","slot":"specialization","value":"contrabass","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization contrabass\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        piano, violin, guitar, flute, trumpet, saxophone, drums, cello, harp, accordion"}
{"cat":"instruments","slot":"specialization","value":"player piano","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization player piano\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        piano, violin, guitar, flute, drums, trumpet, saxophone, cello, harp, clarinet"}
{"cat":"instruments","slot":"specialization","value":"grand piano","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization grand piano\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":" piano, guitar, violin, flute, trumpet, saxophone, drums, cello, harp, accordion"}
{"cat":"instruments","slot":"specialization","value":"bombard","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization bombard\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        flute, violin, piano, guitar, trumpet, saxophone, drums, cello, clarinet, trombone"}
{"cat":"instruments","slot":"specialization","value":"bull fiddle","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization bull fiddle\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":" piano, guitar, violin, flute, trumpet, drum, saxophone, cello, clarinet, harp"}
{"cat":"instruments","slot":"specialization","value":"sousaphone","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization sousaphone\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        violin, trumpet, piano, guitar, drum, flute, saxophone, cello, accordion, harp"}
{"cat":"instruments","slot":"specialization","value":"Pianola","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization Pianola\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        piano, violin, guitar, flute, trumpet, drums, cello, saxophone, clarinet, harp"}
{"cat":"instruments","slot":"specialization","value":"double bass","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization double bass\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        piano, guitar, violin, flute, drum, trumpet, saxophone, cello, harp, accordion"}
{"cat":"instruments","slot":"specialization","value":"mechanical piano","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization mechanical piano\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        piano, guitar, violin, flute, trumpet, drum, cello, saxophone, clarinet, harp"}
{"cat":"instruments","slot":"specialization","value":"bass fiddle","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization bass fiddle\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        violin, cello, piano, flute, trumpet, guitar, drums, saxophone, harp, clarinet"}
{"cat":"instruments","slot":"specialization","value":"bass horn","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization bass horn\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        guitar, piano, violin, drums, flute, trumpet, saxophone, cello, harp, accordion"}
{"cat":"instruments","slot":"specialization","value":"upright piano","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization upright piano\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        piano, violin, guitar, drums, trumpet, flute, cello, saxophone, harp, accordion"}
{"cat":"instruments","slot":"specialization","value":"bombardon","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization bombardon\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        flute, saxophone, violin, piano, guitar, trumpet, drums, cello, accordion, harp"}
{"cat":"instruments","slot":"specialization","value":"tuba","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization tuba\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        tuba, clarinet, saxophone, trumpet, flute, oboe, bassoon, violin, cello, piano"}
{"cat":"instruments","slot":"specialization","value":"bass viol","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization bass viol\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":" violin, piano, flute, guitar, trumpet, drum, cello, saxophone, harp, clarinet"}
{"cat":"instruments","slot":"specialization","value":"string bass","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization string bass\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        piano, violin, guitar, flute, trumpet, saxophone, drums, cello, harp, clarinet"}
{"cat":"instruments","slot":"specialization","value":"bass guitar","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"specialization bass guitar\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        piano, violin, guitar, drums, flute, trumpet, cello, saxophone, clarinet, harp"}
{"cat":"instruments","slot":"bodyPart","value":"finger","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"can have or be used with\";         A textual example of the semantic relation is \"bodyPart finger\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        guitar, violin, piano, flute, trumpet, saxophone, drums, cello, harp, clarinet"}
{"cat":"instruments","slot":"bodyPart","value":"mouth","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"can have or be used with\";         A textual example of the semantic relation is \"bodyPart mouth\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        trumpet, violin, guitar, flute, piano, drums, saxophone, cello, harp, accordion"}
{"cat":"instruments","slot":"bodyPart","value":"hand","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"can have or be used with\";         A textual example of the semantic relation is \"bodyPart hand\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        guitar, piano, violin, flute, saxophone, trumpet, drum, cello, harp, accordion"}
{"cat":"instruments","slot":"bodyPart","value":"foot","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"can have or be used with\";         A textual example of the semantic relation is \"bodyPart foot\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        guitar, violin, piano, flute, trumpet, saxophone, drum, cello, harp, clarinet"}
{"cat":"instruments","slot":"bodyPart","value":"knee","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"can have or be used with\";         A textual example of the semantic relation is \"bodyPart knee\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        trumpet, violin, guitar, piano, drums, flute, saxophone, cello, harp, accordion"}
{"cat":"instruments","slot":"shape","value":"cylindrical","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"shape cylindrical\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        piano, guitar, violin, drum, trumpet, flute, saxophone, cello, harp, ukulele"}
{"cat":"instruments","slot":"shape","value":"long","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"shape long\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        guitar, piano, violin, trumpet, drum, flute, saxophone, cello, clarinet, accordion"}
{"cat":"instruments","slot":"shape","value":"thin","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"shape thin\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        guitar, piano, violin, cello, flute, trumpet, saxophone, drum, harp, accordion"}
{"cat":"instruments","slot":"shape","value":"elongated","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"shape elongated\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        piano, violin, guitar, drums, flute, trumpet, saxophone, cello, harp, accordion"}
{"cat":"instruments","slot":"shape","value":"circular","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"shape circular\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        guitar, piano, violin, trumpet, saxophone, flute, drum, cello, harp, clarinet"}
{"cat":"instruments","slot":"shape","value":"round","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"shape round\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        guitar, piano, violin, trumpet, saxophone, flute, drums, cello, harp, clarinet"}
{"cat":"instruments","slot":"shape","value":"hollow","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"shape hollow\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        flute, violin, cello, trumpet, piano, guitar, drums, harp, saxophone, clarinet"}
{"cat":"instruments","slot":"howToUse","value":"sit","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"can be used for\";         A textual example of the semantic relation is \"howToUse sit\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        guitar, piano, violin, drums, trumpet, flute, saxophone, cello, harp, ukulele"}
{"cat":"instruments","slot":"howToUse","value":"hold","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"can be used for\";         A textual example of the semantic relation is \"howToUse hold\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        guitar, piano, violin, flute, saxophone, trumpet, drums, cello, ukulele, harp"}
{"cat":"instruments","slot":"howToUse","value":"blow","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"can be used for\";         A textual example of the semantic relation is \"howToUse blow\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        trumpet, violin, flute, guitar, piano, drums, saxophone, cello, harp, ukulele"}
{"cat":"instruments","slot":"howToUse","value":"press","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"can be used for\";         A textual example of the semantic relation is \"howToUse press\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        piano, guitar, drums, trumpet, violin, flute, saxophone, cello, clarinet, harp"}
{"cat":"instruments","slot":"howToUse","value":"sing","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"can be used for\";         A textual example of the semantic relation is \"howToUse sing\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        guitar, piano, violin, flute, trumpet, saxophone, drums, cello, ukulele, harmonica"}
{"cat":"instruments","slot":"howToUse","value":"fill","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"can be used for\";         A textual example of the semantic relation is \"howToUse fill\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"1. guitar, 2. piano, 3. violin, 4. flute, 5. drums, 6. trumpet, 7. saxophone, 8. cello, 9. accordion, 10. harp"}
{"cat":"instruments","slot":"howToUse","value":"expand","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"can be used for\";         A textual example of the semantic relation is \"howToUse expand\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        guitar, piano, violin, trumpet, flute, cello, drums, saxophone, accordion, harp"}
{"cat":"instruments","slot":"howToUse","value":"compress","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"can be used for\";         A textual example of the semantic relation is \"howToUse compress\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        guitar, piano, violin, flute, trumpet, drum, saxophone, cello, harp, accordion"}
{"cat":"instruments","slot":"howToUse","value":"riff","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"can be used for\";         A textual example of the semantic relation is \"howToUse riff\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        guitar, piano, violin, drums, trumpet, saxophone, flute, cello, accordion, ukulele"}
{"cat":"instruments","slot":"sound","value":"mechanical","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"sound\";         A textual example of the semantic relation is \"sound mechanical\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        piano, guitar, violin, flute, saxophone, trumpet, drums, cello, clarinet, harp"}
{"cat":"instruments","slot":"sound","value":"mournful","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"sound\";         A textual example of the semantic relation is \"sound mournful\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        flute, violin, cello, trumpet, saxophone, piano, guitar, drums, harp, clarinet"}
{"cat":"instruments","slot":"sound","value":"melancholy","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"sound\";         A textual example of the semantic relation is \"sound melancholy\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":" piano, violin, cello, harp, flute, clarinet, trumpet, saxophone, guitar, drums"}
{"cat":"instruments","slot":"sound","value":"sad","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"sound\";         A textual example of the semantic relation is \"sound sad\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":" piano, guitar, violin, cello, flute, saxophone, trumpet, drums, harp, ukulele"}
{"cat":"instruments","slot":"sound","value":"deep","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"sound\";         A textual example of the semantic relation is \"sound deep\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":" piano, violin, cello, trumpet, saxophone, flute, guitar, drums, harp, organ"}
{"cat":"instruments","slot":"sound","value":"high","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"sound\";         A textual example of the semantic relation is \"sound high\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        trumpet, violin, guitar, piano, flute, drums, saxophone, cello, harp, trombone"}
{"cat":"instruments","slot":"sound","value":"acute","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"sound\";         A textual example of the semantic relation is \"sound acute\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        piano, violin, guitar, flute, trumpet, drum, cello, saxophone, harp, clarinet"}
{"cat":"instruments","slot":"sound","value":"versatile","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"sound\";         A textual example of the semantic relation is \"sound versatile\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":" piano, guitar, violin, trumpet, saxophone, flute, drums, cello, ukulele, accordion"}
{"cat":"instruments","slot":"user","value":"orchestra","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"are used by\";         A textual example of the semantic relation is \"user orchestras\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        trumpet, violin, piano, flute, guitar, drums, cello, saxophone, harp, clarinet"}
{"cat":"instruments","slot":"user","value":"musician","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"are used by\";         A textual example of the semantic relation is \"user musicians\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        guitar, piano, violin, drums, trumpet, saxophone, flute, cello, harp, accordion"}
{"cat":"instruments","slot":"user","value":"accordionist","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"are used by\";         A textual example of the semantic relation is \"user accordionists\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        accordion, violin, guitar, piano, drums, flute, saxophone, trumpet, cello, harp"}
{"cat":"instruments","slot":"user","value":"band","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"are used by\";         A textual example of the semantic relation is \"user bands\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        Guitar, Piano, Drums, Violin, Trumpet, Saxophone, Flute, Cello, Clarinet, Harp"}
{"cat":"instruments","slot":"user","value":"busker","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"are used by\";         A textual example of the semantic relation is \"user buskers\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        guitar, violin, piano, drums, trumpet, flute, saxophone, cello, accordion, ukulele"}
{"cat":"instruments","slot":"user","value":"pianist","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"are used by\";         A textual example of the semantic relation is \"user pianists\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        piano, guitar, violin, trumpet, drums, flute, saxophone, cello, accordion, harp"}
{"cat":"instruments","slot":"user","value":"cellist","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"are used by\";         A textual example of the semantic relation is \"user cellists\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        violinist, pianist, trumpeter, guitarist, drummer, cellist, flautist, saxophonist, clarinetist, bassist"}
{"cat":"instruments","slot":"user","value":"drummer","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"are used by\";         A textual example of the semantic relation is \"user drummers\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        guitar, piano, violin, trumpet, flute, drums, cello, saxophone, clarinet, trombone"}
{"cat":"instruments","slot":"purpose","value":"rhythm","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"are used for\";         A textual example of the semantic relation is \"purpose rhythm\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        drums, guitar, piano, violin, flute, trumpet, saxophone, cello, harp, accordion"}
{"cat":"instruments","slot":"purpose","value":"groove","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"are used for\";         A textual example of the semantic relation is \"purpose groove\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        piano, guitar, violin, flute, saxophone, trumpet, drums, cello, harp, accordion"}
{"cat":"instruments","slot":"purpose","value":"solo","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"are used for\";         A textual example of the semantic relation is \"purpose solo\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        Guitar, Piano, Violin, Trumpet, Flute, Drums, Saxophone, Cello, Harp, Clarinet"}
{"cat":"instruments","slot":"purpose","value":"classical music","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"are used for\";         A textual example of the semantic relation is \"purpose classical music\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":" piano, violin, cello, flute, harp, trumpet, trombone, clarinet, oboe, bassoon"}
{"cat":"instruments","slot":"purpose","value":"light music","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"are used for\";         A textual example of the semantic relation is \"purpose light music\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        guitar, piano, violin, flute, saxophone, trumpet, drums, cello, harp, clarinet"}
{"cat":"instruments","slot":"purpose","value":"jazz","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"are used for\";         A textual example of the semantic relation is \"purpose jazz\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        saxophone, trumpet, piano, drums, guitar, bass, violin, cello, flute, clarinet"}
{"cat":"instruments","slot":"purpose","value":"beat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"are used to\";         A textual example of the semantic relation is \"purpose beat\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        drum, guitar, piano, flute, violin, trumpet, saxophone, cello, accordion, ukulele"}
{"cat":"instruments","slot":"purpose","value":"practice","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"are used for\";         A textual example of the semantic relation is \"purpose practice\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        guitar, piano, violin, flute, trumpet, drums, cello, saxophone, clarinet, harp"}
{"cat":"instruments","slot":"purpose","value":"recital","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"are used for\";         A textual example of the semantic relation is \"purpose recital\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        piano, guitar, violin, flute, trumpet, saxophone, drums, cello, harp, clarinet"}
{"cat":"instruments","slot":"purpose","value":"accompaniment","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"are used for\";         A textual example of the semantic relation is \"purpose accompaniment\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        guitar, piano, violin, cello, trumpet, saxophone, flute, drums, bass guitar, accordion"}
{"cat":"instruments","slot":"purpose","value":"sound","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"are used for\";         A textual example of the semantic relation is \"purpose sound\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        guitar, piano, violin, flute, trumpet, drums, cello, saxophone, clarinet, harp"}
{"cat":"instruments","slot":"purpose","value":"playing","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"are used to\";         A textual example of the semantic relation is \"purpose playing\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        piano, guitar, violin, drums, flute, trumpet, saxophone, cello, harp, accordion"}
{"cat":"instruments","slot":"purpose","value":"improvise","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"are used to\";         A textual example of the semantic relation is \"purpose improvise\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        guitar, piano, violin, trumpet, saxophone, drums, flute, cello, bass, ukulele"}
{"cat":"instruments","slot":"purpose","value":"sonata","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"are used for\";         A textual example of the semantic relation is \"purpose sonata\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        piano, violin, cello, flute, trumpet, saxophone, guitar, drums, harp, accordion"}
{"cat":"instruments","slot":"purpose","value":"trio","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"are used for\";         A textual example of the semantic relation is \"purpose trio\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        guitar, piano, violin, drums, flute, saxophone, trumpet, cello, harp, ukulele"}
{"cat":"instruments","slot":"purpose","value":"concerto","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"are used for\";         A textual example of the semantic relation is \"purpose concerto\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        piano, violin, cello, flute, trumpet, saxophone, guitar, drums, harp, clarinet"}
{"cat":"instruments","slot":"part","value":"fingerboard","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part fingerboard\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        guitar, violin, piano, flute, trumpet, drum, saxophone, cello, accordion, harp"}
{"cat":"instruments","slot":"part","value":"ligature","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part ligature\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        ligature, reed, mouthpiece, cork, peg, string, bridge, key, valve, slide"}
{"cat":"instruments","slot":"part","value":"reed","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part reed\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        piano, violin, guitar, flute, trumpet, saxophone, drum, cello, clarinet, harp"}
{"cat":"instruments","slot":"part","value":"register key","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part register key\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":" piano, guitar, violin, cello, flute, trumpet, saxophone, drums, harp, accordion"}
{"cat":"instruments","slot":"part","value":"mouthpiece","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part mouthpiece\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":" trumpet, clarinet, flute, saxophone, trombone, oboe, bassoon, tuba, violin, cello"}
{"cat":"instruments","slot":"part","value":"string","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part string\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        guitar, violin, piano, flute, trumpet, cello, saxophone, harp, drums, clarinet"}
{"cat":"instruments","slot":"part","value":"scroll","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part scroll\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        flute, violin, piano, guitar, trumpet, saxophone, cello, drums, harp, accordion"}
{"cat":"instruments","slot":"part","value":"fine tuner","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part fine tuner\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        violin, cello, guitar, piano, flute, trumpet, saxophone, clarinet, drums, harp"}
{"cat":"instruments","slot":"part","value":"neck","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part neck\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        neck, body, strings, frets, bridge, pickups, tuners, headstock, soundhole, pegs"}
{"cat":"instruments","slot":"part","value":"clavier","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part clavier\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":" piano, organ, guitar, violin, flute, trumpet, drums, cello, saxophone, harp"}
{"cat":"instruments","slot":"part","value":"piano keyboard","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part piano keyboard\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":" piano, keyboard, violin, bow, guitar, strings, drum, cymbal, trumpet, mouthpiece"}
{"cat":"instruments","slot":"part","value":"resonance chamber","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part resonance chamber\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        violin, cello, piano, flute, trumpet, guitar, harp, saxophone, drums, accordion"}
{"cat":"instruments","slot":"part","value":"f-hole","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part f-hole\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        violin, viola, cello, double bass, guitar, mandolin, ukulele, banjo, harp, piano"}
{"cat":"instruments","slot":"part","value":"bridge","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part bridge\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"10 instruments that can have a bridge: violin, cello, viola, double bass, guitar, mandolin, banjo, ukulele, lute, oud."}
{"cat":"instruments","slot":"part","value":"strap","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part strap\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        guitar, violin, cello, piano, flute, clarinet, trumpet, saxophone, drums, ukulele"}
{"cat":"instruments","slot":"part","value":"endpin","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part endpin\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        violin, viola, cello, double bass, guitar, piano, trumpet, flute, clarinet, saxophone"}
{"cat":"instruments","slot":"part","value":"tailpiece","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part tailpiece\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        violin, cello, viola, piano, guitar, trumpet, flute, clarinet, saxophone, drums"}
{"cat":"instruments","slot":"part","value":"tuning peg","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part tuning peg\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        guitar, violin, piano, flute, trumpet, saxophone, cello, drums, harp, ukulele"}
{"cat":"instruments","slot":"part","value":"membrane","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part membrane\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        drums, trumpet, piano, violin, guitar, flute, saxophone, cello, harp, accordion"}
{"cat":"instruments","slot":"part","value":"body","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part body\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        guitar, piano, violin, flute, trumpet, saxophone, cello, drum, harp, clarinet"}
{"cat":"instruments","slot":"part","value":"finger hole","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part finger hole\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        flute, clarinet, oboe, saxophone, trumpet, trombone, tuba, violin, cello, double bass"}
{"cat":"instruments","slot":"part","value":"rope","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part rope\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        piano, guitar, violin, flute, trumpet, saxophone, drums, cello, harp, accordion"}
{"cat":"instruments","slot":"part","value":"leg","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part leg\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        piano, guitar, violin, drum, flute, trumpet, saxophone, cello, harp, accordion"}
{"cat":"instruments","slot":"part","value":"pedal","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part pedal\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        trumpet, flute, violin, guitar, piano, drum, cello, saxophone, clarinet, harp"}
{"cat":"instruments","slot":"part","value":"head","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part head\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        guitar, piano, violin, trumpet, flute, drum, cello, saxophone, clarinet, harp"}
{"cat":"instruments","slot":"part","value":"bellows","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part bellows\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        accordion, bagpipes, harmonica, concertina, melodica, hurdy-gurdy, bandoneon, reed organ, squeezebox, free-reed aerophone"}
{"cat":"instruments","slot":"part","value":"surface","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part surface\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        guitar, violin, piano, flute, trumpet, drum, cello, saxophone, clarinet, accordion"}
{"cat":"instruments","slot":"part","value":"screw","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part screw\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        guitar, piano, violin, flute, drum, trumpet, saxophone, cello, clarinet, accordion"}
{"cat":"instruments","slot":"part","value":"violin bow","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part violin bow\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        violin, piano, guitar, flute, trumpet, drum, saxophone, cello, clarinet, trombone"}
{"cat":"instruments","slot":"part","value":"thumbhole","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part thumbhole\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        flute, clarinet, saxophone, trumpet, trombone, violin, cello, guitar, piano, drums"}
{"cat":"instruments","slot":"part","value":"soundboard","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part soundboard\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        guitar, violin, piano, cello, flute, trumpet, saxophone, drums, harp, clarinet"}
{"cat":"instruments","slot":"part","value":"loud pedal","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part loud pedal\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        piano, guitar, violin, trumpet, flute, cello, drums, saxophone, clarinet, accordion"}
{"cat":"instruments","slot":"part","value":"hammer","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part hammer\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":" hammer, piano, guitar, violin, drum, trumpet, flute, cello, saxophone, clarinet"}
{"cat":"instruments","slot":"part","value":"key","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part key\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":" piano, guitar, violin, trumpet, flute, saxophone, drums, cello, harp, accordion"}
{"cat":"instruments","slot":"part","value":"chin rest","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part chin rest\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":" violin, cello, flute, clarinet, trumpet, saxophone, piano, guitar, drums, harp"}
{"cat":"instruments","slot":"part","value":"pleat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part pleat\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        violin, piano, guitar, flute, trumpet, cello, drums, saxophone, clarinet, harp"}
{"cat":"instruments","slot":"part","value":"fiddlestick","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part fiddlestick\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":" violin, cello, flute, clarinet, trumpet, saxophone, guitar, piano, drums, harp"}
{"cat":"instruments","slot":"part","value":"sustaining pedal","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part sustaining pedal\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":" piano, violin, guitar, flute, cello, trumpet, saxophone, drum, harp, clarinet"}
{"cat":"instruments","slot":"part","value":"fallboard","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part fallboard\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":" piano, harp, violin, guitar, cello, flute, trumpet, saxophone, clarinet, drums"}
{"cat":"instruments","slot":"part","value":"button","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part button\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"10 words that belong to the category \"instruments\" and satisfy the semantic relation \"can have\" are: piano, guitar, violin, flute, trumpet, saxophone, cello, drum, clarinet, and accordion."}
{"cat":"instruments","slot":"part","value":"piano action","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part piano action\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        piano, violin, guitar, flute, trumpet, drum, cello, harp, saxophone, clarinet"}
{"cat":"instruments","slot":"part","value":"fall-board","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part fall-board\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":" piano, violin, guitar, cello, trumpet, flute, drum, saxophone, accordion, harp"}
{"cat":"instruments","slot":"part","value":"handle","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part handle\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        trumpet, violin, flute, guitar, piano, drum, saxophone, cello, clarinet, harp"}
{"cat":"instruments","slot":"part","value":"skin","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part skin\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        drums, guitar, piano, violin, trumpet, flute, saxophone, cello, accordion, harp"}
{"cat":"instruments","slot":"part","value":"drumhead","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part drumhead\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        drumhead, mallet, cymbal, pedal, reed, mouthpiece, string, bow, valve, bell"}
{"cat":"instruments","slot":"part","value":"music rack","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part music rack\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        piano, violin, guitar, flute, trumpet, saxophone, drums, cello, harp, accordion"}
{"cat":"instruments","slot":"part","value":"soft pedal","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part soft pedal\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":" piano, violin, cello, guitar, flute, clarinet, trumpet, saxophone, drum, harp"}
{"cat":"instruments","slot":"purpose","value":"play","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"are used to\";         A textual example of the semantic relation is \"purpose play\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        piano, guitar, violin, drums, flute, trumpet, saxophone, cello, harp, accordion"}
{"cat":"instruments","slot":"colorPattern","value":"white","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"colorPattern white\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        guitar, piano, violin, flute, trumpet, saxophone, drum, cello, harp, clarinet"}
{"cat":"instruments","slot":"colorPattern","value":"black","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"colorPattern black\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"10 instruments: piano, guitar, violin, trumpet, flute, drums, cello, saxophone, clarinet, trombone"}
{"cat":"instruments","slot":"colorPattern","value":"silver","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"colorPattern silver\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        guitar, piano, violin, cello, flute, trumpet, saxophone, drums, bass, ukulele"}
{"cat":"instruments","slot":"colorPattern","value":"brown","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"colorPattern brown\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        piano, violin, guitar, flute, trumpet, drum, cello, harp, saxophone, accordion"}
{"cat":"instruments","slot":"material","value":"wood","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"can be made of\";         A textual example of the semantic relation is \"material wood\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        guitar, violin, flute, piano, cello, trumpet, saxophone, harp, drum, ukulele"}
{"cat":"instruments","slot":"material","value":"metal","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"can be made of\";         A textual example of the semantic relation is \"material metal\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        guitar, violin, piano, flute, trumpet, cello, saxophone, drums, ukulele, harp"}
{"cat":"instruments","slot":"material","value":"steel","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"can be made of\";         A textual example of the semantic relation is \"material steel\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        guitar, violin, cello, piano, flute, saxophone, trumpet, drums, harp, ukulele"}
{"cat":"instruments","slot":"material","value":"plastic","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"can be made of\";         A textual example of the semantic relation is \"material plastic\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        guitar, violin, flute, piano, saxophone, trumpet, drum, cello, harp, clarinet"}
{"cat":"instruments","slot":"material","value":"ivory","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"can be made of\";         A textual example of the semantic relation is \"material ivory\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        piano, violin, flute, guitar, cello, trumpet, harp, saxophone, clarinet, oboe"}
{"cat":"instruments","slot":"material","value":"felt","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"can be made of\";         A textual example of the semantic relation is \"material felt\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        guitar, violin, piano, flute, trumpet, saxophone, cello, drums, harp, accordion"}
{"cat":"instruments","slot":"material","value":"aluminium","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"can be made of\";         A textual example of the semantic relation is \"material aluminium\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        piano, guitar, violin, flute, trumpet, saxophone, cello, drums, harp, clarinet"}
{"cat":"instruments","slot":"material","value":"leather","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"can be made of\";         A textual example of the semantic relation is \"material leather\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        piano, guitar, violin, trumpet, flute, saxophone, drums, cello, harp, accordion"}
{"cat":"instruments","slot":"material","value":"ebony","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"can be made of\";         A textual example of the semantic relation is \"material ebony\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        flute, violin, piano, guitar, harp, cello, trumpet, clarinet, saxophone, drums"}
{"cat":"instruments","slot":"material","value":"cork","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"can be made of\";         A textual example of the semantic relation is \"material cork\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        violin, guitar, flute, piano, trumpet, saxophone, cello, harp, drums, tambourine"}
{"cat":"instruments","slot":"material","value":"brass","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"can be made of\";         A textual example of the semantic relation is \"material brass\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":" trumpet, flute, saxophone, clarinet, oboe, trombone, tuba, violin, cello, harp"}
{"cat":"instruments","slot":"howToUse","value":"play","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"can be used for\";         A textual example of the semantic relation is \"howToUse play\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        guitar, piano, violin, drums, trumpet, flute, saxophone, cello, harp, ukulele"}
{"cat":"instruments","slot":"generalization","value":"musical instrument","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization musical instrument\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":" piano, guitar, violin, trumpet, flute, drums, saxophone, cello, harp, accordion"}
{"cat":"instruments","slot":"generalization","value":"device","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization device\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        piano, guitar, violin, flute, trumpet, drum, cello, saxophone, harp, clarinet"}
{"cat":"instruments","slot":"generalization","value":"stringed instrument","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization stringed instrument\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        guitar, violin, piano, flute, trumpet, saxophone, cello, drum, clarinet, harp"}
{"cat":"instruments","slot":"generalization","value":"wind instrument","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization wind instrument\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        trumpet, saxophone, flute, clarinet, oboe, bassoon, trombone, tuba, violin, piano"}
{"cat":"instruments","slot":"generalization","value":"wind","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization wind\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        guitar, piano, violin, flute, trumpet, saxophone, cello, drums, harp, clarinet"}
{"cat":"instruments","slot":"generalization","value":"percussive instrument","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization percussive instrument\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        guitar, piano, violin, drum, flute, trumpet, saxophone, cello, clarinet, harp"}
{"cat":"instruments","slot":"generalization","value":"woodwind instrument","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization woodwind instrument\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        piano, violin, guitar, flute, saxophone, trumpet, drums, cello, harp, clarinet"}
{"cat":"instruments","slot":"generalization","value":"instrument","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization instrument\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":" guitar, piano, violin, drums, trumpet, flute, saxophone, cello, harp, accordion"}
{"cat":"instruments","slot":"generalization","value":"percussion instrument","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization percussion instrument\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        guitar, piano, violin, cello, flute, trumpet, saxophone, drums, harp, accordion"}
{"cat":"instruments","slot":"generalization","value":"percussion","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization percussion\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        drums, piano, guitar, violin, trumpet, saxophone, flute, cello, clarinet, harp"}
{"cat":"instruments","slot":"generalization","value":"woodwind","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization woodwind\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        piano, violin, guitar, trumpet, flute, saxophone, drums, cello, clarinet, harp"}
{"cat":"instruments","slot":"generalization","value":"keyboard instrument","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization keyboard instrument\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":" piano, violin, guitar, flute, trumpet, drums, saxophone, cello, harp, clarinet"}
{"cat":"instruments","slot":"generalization","value":"reed instrument","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization reed instrument\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        flute, clarinet, saxophone, oboe, bassoon, trumpet, trombone, tuba, violin, cello"}
{"cat":"instruments","slot":"generalization","value":"reed","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization reed\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":" piano, guitar, violin, cello, flute, trumpet, drum, saxophone, harp, accordion"}
{"cat":"instruments","slot":"generalization","value":"beating-reed instrument","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization beating-reed instrument\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        piano, guitar, violin, flute, drum, trumpet, saxophone, cello, harp, accordion"}
{"cat":"instruments","slot":"generalization","value":"instrumentation","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization instrumentation\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        piano, guitar, violin, trumpet, drum, flute, saxophone, cello, accordion, ukulele"}
{"cat":"instruments","slot":"generalization","value":"instrumentality","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization instrumentality\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        guitar, piano, violin, drums, trumpet, flute, cello, saxophone, harp, ukulele"}
{"cat":"instruments","slot":"generalization","value":"single-reed woodwind","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization single-reed woodwind\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        trumpet, violin, guitar, piano, flute, drums, saxophone, cello, clarinet, harp"}
{"cat":"instruments","slot":"generalization","value":"double reed","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization double reed\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        oboe, clarinet, bassoon, saxophone, flute, piccolo, recorder, bagpipes, harmonica, accordion"}
{"cat":"instruments","slot":"generalization","value":"bowed stringed instrument","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization bowed stringed instrument\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        violin, cello, viola, double bass, harp, guitar, lute, mandolin, banjo, ukulele"}
{"cat":"instruments","slot":"generalization","value":"free-reed instrument","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization free-reed instrument\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        piano, guitar, violin, flute, trumpet, saxophone, drum, cello, accordion, harp"}
{"cat":"instruments","slot":"generalization","value":"double-reed instrument","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization double-reed instrument\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        clarinet, oboe, bassoon, saxophone, flute, trumpet, trombone, violin, cello, piano"}
{"cat":"instruments","slot":"generalization","value":"single-reed instrument","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization single-reed instrument\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        violin, piano, guitar, trumpet, flute, drums, cello, saxophone, clarinet, harp"}
{"cat":"instruments","slot":"generalization","value":"guitar","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization guitar\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        guitar, piano, violin, cello, flute, trumpet, saxophone, drum, harp, ukulele"}
{"cat":"instruments","slot":"generalization","value":"transverse flute","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization transverse flute\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        piano, guitar, violin, drum, trumpet, flute, saxophone, cello, harp, clarinet"}
{"cat":"instruments","slot":"generalization","value":"flute","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization flute\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        piano, guitar, violin, drum, trumpet, flute, saxophone, cello, clarinet, harp"}
{"cat":"instruments","slot":"generalization","value":"chordophone","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization chordophone\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        piano, violin, guitar, flute, saxophone, trumpet, drum, cello, clarinet, harp"}
{"cat":"instruments","slot":"generalization","value":"brass instrument","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization brass instrument\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        guitar, piano, violin, trumpet, flute, saxophone, drum, cello, harp, clarinet"}
{"cat":"instruments","slot":"generalization","value":"electronic musical instrument","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization electronic musical instrument\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":" piano, guitar, violin, drum, flute, saxophone, trumpet, cello, harp, accordion"}
{"cat":"instruments","slot":"generalization","value":"electronic instrument","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization electronic instrument\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        piano, guitar, violin, trumpet, flute, saxophone, drums, cello, harp, accordion"}
{"cat":"instruments","slot":"part","value":"keyboard","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part keyboard\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        piano, guitar, violin, trumpet, flute, drum, cello, saxophone, accordion, harp"}
{"cat":"instruments","slot":"generalization","value":"string","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization string\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        guitar, piano, violin, flute, trumpet, saxophone, drums, cello, harp, clarinet"}
{"cat":"instruments","slot":"generalization","value":"keyboard","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization keyboard\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":" piano, guitar, violin, flute, drums, trumpet, saxophone, cello, harp, accordion"}
{"cat":"instruments","slot":"generalization","value":"brass","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization brass\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        piano, guitar, violin, drum, flute, trumpet, saxophone, cello, harp, accordion"}
{"cat":"instruments","slot":"generalization","value":"wood","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization wood\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        guitar, piano, violin, cello, flute, saxophone, trumpet, drums, harp, ukulele"}
{"cat":"artifacts","slot":"sound","value":"ping","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"can\";         A textual example of the semantic relation is \"sound ping\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        \"artifacts, can, sound ping, echo, reverberation, distortion, interference, noise, hum, buzz\""}
{"cat":"artifacts","slot":"howToUse","value":"wear","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"can be used for\";         A textual example of the semantic relation is \"howToUse wear\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        \"sword, shield, axe, bow, arrow, spear, dagger, staff, helmet, armor\""}
{"cat":"artifacts","slot":"howToUse","value":"wield","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"can be used for\";         A textual example of the semantic relation is \"howToUse wield\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        sword, shield, axe, bow, spear, staff, dagger, hammer, mace, flail"}
{"cat":"artifacts","slot":"howToUse","value":"don","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"can be used for\";         A textual example of the semantic relation is \"howToUse don\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        sword, shield, bow, arrow, spear, axe, hammer, dagger, staff, torch"}
{"cat":"artifacts","slot":"howToUse","value":"fasten","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"can be used for\";         A textual example of the semantic relation is \"howToUse fasten\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        fasten, hammer, screwdriver, wrench, pliers, chisel, saw, drill, tape measure, level"}
{"cat":"artifacts","slot":"bodyPart","value":"chin","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"can have or be used with\";         A textual example of the semantic relation is \"bodyPart chin\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        sword, shield, spear, bow, arrow, axe, dagger, helmet, armor, gauntlet"}
{"cat":"artifacts","slot":"bodyPart","value":"ring","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"can have or be used with\";         A textual example of the semantic relation is \"bodyPart ring\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        sword, shield, helmet, armor, spear, bow, quiver, axe, dagger, staff"}
{"cat":"artifacts","slot":"bodyPart","value":"wrist","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"can have or be used with\";         A textual example of the semantic relation is \"bodyPart wrist\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        \"bracelet, bangle, watch, cuff, handcuff, wristband, sweatband, armband, anklet, ring\""}
{"cat":"artifacts","slot":"bodyPart","value":"head","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"can have or be used with\";         A textual example of the semantic relation is \"bodyPart head\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        crown, sword, shield, armor, helmet, spear, axe, bow, arrow, dagger"}
{"cat":"artifacts","slot":"place","value":"clothes shop","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"can be found or used in\";         A textual example of the semantic relation is \"place clothes shops\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        artifacts, pottery, coins, jewelry, tools, weapons, figurines, sculptures, vases, urns"}
{"cat":"artifacts","slot":"place","value":"building site","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"can be found or used in\";         A textual example of the semantic relation is \"place building sites\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        hammer, nails, screwdriver, saw, measuring tape, level, safety glasses, hard hat, drill, wrench"}
{"cat":"artifacts","slot":"place","value":"hairdresser","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"can be found or used in\";         A textual example of the semantic relation is \"place hairdressers\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        comb, scissors, mirror, hairbrush, hairdryer, hair gel, hairspray, shampoo, conditioner, hair clippers"}
{"cat":"artifacts","slot":"place","value":"bedroom","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"can be found or used in\";         A textual example of the semantic relation is \"place bedrooms\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        artifacts: pottery, jewelry, tools, weapons, coins, sculptures, textiles, glassware, ceramics, figurines"}
{"cat":"artifacts","slot":"place","value":"bathroom","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"can be found or used in\";         A textual example of the semantic relation is \"place bathrooms\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        toilet, sink, shower, bathtub, mirror, soap, towel, toilet paper, toothbrush, toothpaste"}
{"cat":"artifacts","slot":"bodyPart","value":"bracelet","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"can have or be used with\";         A textual example of the semantic relation is \"bodyPart bracelet\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bracelet, necklace, ring, earring, brooch, pendant, tiara, crown, amulet, medallion"}
{"cat":"artifacts","slot":"efficiency","value":"waterproof","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"efficiency waterproof\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        artifacts, pottery, sculpture, jewelry, textiles, coins, tools, weapons, furniture, architecture"}
{"cat":"artifacts","slot":"efficiency","value":"fragile","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"efficiency fragile\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        artifacts, relics, antiques, heirlooms, treasures, curiosities, memorabilia, collectibles, historical objects, cultural items"}
{"cat":"artifacts","slot":"efficiency","value":"resistant","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"efficiency resistant\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        artifacts: sword, shield, axe, bow, quiver, armor, helmet, gauntlet, greaves, boots"}
{"cat":"artifacts","slot":"efficiency","value":"strong","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"efficiency strong\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        \"sword, shield, helmet, armor, spear, axe, bow, arrow, dagger, staff\""}
{"cat":"artifacts","slot":"purpose","value":"safety","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"are used for\";         A textual example of the semantic relation is \"purpose safety\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"1. helmet, 2. shield, 3. sword, 4. armor, 5. bow, 6. arrow, 7. spear, 8. dagger, 9. gauntlet, 10. greave"}
{"cat":"artifacts","slot":"purpose","value":"write","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"are used to\";         A textual example of the semantic relation is \"purpose write\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pen, paper, typewriter, computer, quill, inkwell, stylus, tablet, notebook, pencil"}
{"cat":"artifacts","slot":"purpose","value":"sport","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"are used for\";         A textual example of the semantic relation is \"purpose sport\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        baseball, basketball, football, hockey, soccer, tennis, golf, bowling, volleyball, cricket"}
{"cat":"artifacts","slot":"purpose","value":"fight","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"are used for\";         A textual example of the semantic relation is \"purpose fight\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        sword, spear, shield, bow, arrow, axe, dagger, flail, mace, halberd"}
{"cat":"artifacts","slot":"purpose","value":"climbing","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"are used for\";         A textual example of the semantic relation is \"purpose climbing\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        rope, harness, carabiner, belay device, helmet, chalk bag, climbing shoes, quickdraws, ice axe, crampons"}
{"cat":"artifacts","slot":"purpose","value":"reflect","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"are used to\";         A textual example of the semantic relation is \"purpose reflect\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        sword, shield, spear, bow, arrow, axe, dagger, helmet, armor, chariot"}
{"cat":"artifacts","slot":"purpose","value":"shade","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"are used for\";         A textual example of the semantic relation is \"purpose shade\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"10 artifacts used for purpose shade: umbrella, parasol, canopy, awning, sunshade, shade sail, patio umbrella, beach umbrella, sun hat, sunscreen."}
{"cat":"artifacts","slot":"purpose","value":"hang","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"are used to\";         A textual example of the semantic relation is \"purpose hang\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        sword, spear, shield, bow, arrow, dagger, axe, mace, flail, halberd"}
{"cat":"artifacts","slot":"purpose","value":"groom","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"are used to\";         A textual example of the semantic relation is \"purpose groom\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        comb, brush, razor, mirror, towel, shaving cream, soap, cologne, aftershave, deodorant"}
{"cat":"artifacts","slot":"user","value":"secretary","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"are used by\";         A textual example of the semantic relation is \"user secretaries\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        paintbrushes, sewing machines, typewriters, computers, cameras, telescopes, microscopes, compasses, abacuses, chisels"}
{"cat":"artifacts","slot":"user","value":"woman","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"are used by\";         A textual example of the semantic relation is \"user women\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        brooch, necklace, earring, bracelet, ring, tiara, crown, pendant, watch, handbag"}
{"cat":"artifacts","slot":"user","value":"riot police","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"are used by\";         A textual example of the semantic relation is \"user riot polices\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        batons, shields, helmets, body armors, handcuffs, pepper sprays, firearms, tasers, flashlights, radios"}
{"cat":"artifacts","slot":"user","value":"climber","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"are used by\";         A textual example of the semantic relation is \"user climbers\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        harness, rope, carabiner, helmet, ice axe, crampons, belay device, ascender, descender, sling"}
{"cat":"artifacts","slot":"user","value":"writer","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"are used by\";         A textual example of the semantic relation is \"user writers\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bow, sword, shield, spear, axe, dagger, staff, wand, crown, throne"}
{"cat":"artifacts","slot":"user","value":"soldier","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"are used by\";         A textual example of the semantic relation is \"user soldiers\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shield, sword, spear, bow, arrow, helmet, armor, gauntlet, dagger, flail"}
{"cat":"artifacts","slot":"user","value":"motorcyclist","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"are used by\";         A textual example of the semantic relation is \"user motorcyclists\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"1. Helmets, 2. Gloves, 3. Jackets, 4. Boots, 5. Goggles, 6. Pants, 7. Knee pads, 8. Elbow pads, 9. Back protectors, 10. Neck braces"}
{"cat":"artifacts","slot":"user","value":"horseman","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"are used by\";         A textual example of the semantic relation is \"user horsemen\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"10 words that belong to the category \"artifacts\" and satisfy the semantic relation \"are used by\":\n        swords, shields, bows, arrows, spears, helmets, armor, quivers, lances, daggers"}
{"cat":"artifacts","slot":"user","value":"cyclist","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"are used by\";         A textual example of the semantic relation is \"user cyclists\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":" helmet, bicycle, pump, lock, lights, reflectors, gloves, water bottle, bike computer, bike rack"}
{"cat":"artifacts","slot":"shape","value":"circular","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"shape circular\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        artifacts: sword, shield, helmet, armor, spear, axe, dagger, bow, arrow, quiver"}
{"cat":"artifacts","slot":"shape","value":"round","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"shape round\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        coins, pottery, jewelry, tools, weapons, statues, vases, figurines, textiles, manuscripts"}
{"cat":"artifacts","slot":"shape","value":"arched","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"shape arched\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        sword, shield, helmet, armor, spear, bow, arrow, dagger, axe, chest"}
{"cat":"artifacts","slot":"shape","value":"rond","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"shape rond\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        vase, bowl, pot, urn, jar, amphora, jug, pitcher, goblet, chalice"}
{"cat":"artifacts","slot":"shape","value":"spherical","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"shape spherical\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        amulet, brooch, crown, dagger, gemstone, goblet, helmet, mirror, ring, scepter"}
{"cat":"artifacts","slot":"colorPattern","value":"black","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"colorPattern black\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        colorPattern, material, shape, size, weight, texture, design, function, origin, age"}
{"cat":"artifacts","slot":"colorPattern","value":"white","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"colorPattern white\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        colorPattern, pattern, texture, material, shape, size, weight, form, design, style"}
{"cat":"artifacts","slot":"colorPattern","value":"sparkly","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"colorPattern sparkly\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        sword, shield, helmet, armor, spear, axe, bow, arrow, dagger, chest"}
{"cat":"artifacts","slot":"colorPattern","value":"golden","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"colorPattern golden\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        colorPattern, metalType, gemstone, craftsmanship, design, material, origin, age, provenance, rarity"}
{"cat":"artifacts","slot":"colorPattern","value":"silver","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"colorPattern silver\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        sword, shield, helmet, armor, spear, axe, bow, quiver, dagger, gauntlet"}
{"cat":"artifacts","slot":"purpose","value":"shelter","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"are used for\";         A textual example of the semantic relation is \"purpose shelter\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        house, tent, umbrella, cave, hut, igloo, yurt, teepee, caravan, shelter"}
{"cat":"artifacts","slot":"bodyPart","value":"jewelry","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"can have or be used with\";         A textual example of the semantic relation is \"bodyPart jewelry\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        necklace, bracelet, ring, earring, brooch, pendant, tiara, crown, watch, anklet"}
{"cat":"artifacts","slot":"part","value":"fastener","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part fastener\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"10 words: \"screw\", \"bolt\", \"nut\", \"rivet\", \"pin\", \"clamp\", \"clip\", \"hook\", \"latch\", \"buckle\""}
{"cat":"artifacts","slot":"part","value":"clasp","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part clasp\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        \"part clasp, part buckle, part strap, part handle, part latch, part hinge, part lock, part button, part zipper, part clasp\""}
{"cat":"artifacts","slot":"part","value":"tip","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part tip\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        sword, spear, axe, dagger, bow, shield, armor, helmet, gauntlet, quiver"}
{"cat":"artifacts","slot":"part","value":"lever","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part lever\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        sword, shield, helmet, armor, spear, axe, dagger, bow, quiver, staff"}
{"cat":"artifacts","slot":"part","value":"ink","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part ink\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        vase, pottery, sculpture, painting, mosaic, coin, seal, jewelry, textile, armor"}
{"cat":"artifacts","slot":"part","value":"bead","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part bead\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bead, pottery, arrowhead, tool, jewelry, figurine, coin, seal, inscription, vase"}
{"cat":"artifacts","slot":"part","value":"platen","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part platen\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"1. platen, 2. gear, 3. screw, 4. handle, 5. blade, 6. spring, 7. lever, 8. hinge, 9. pin, 10. rivet"}
{"cat":"artifacts","slot":"part","value":"knob","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part knob\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        knob, lever, handle, switch, button, dial, gear, crank, latch, hinge"}
{"cat":"artifacts","slot":"part","value":"shaft","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part shaft\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        sword, axe, spear, shield, helmet, armor, bow, quiver, dagger, gauntlet"}
{"cat":"artifacts","slot":"part","value":"record changer","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part record changer\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"10 words that belong to the category \"artifacts\" and satisfy the semantic relation \"can have\":\n        \"part record changer, part record player, part phonograph, part gramophone, part turntable, part jukebox, part music box, part cassette player, part CD player, part MP3 player\""}
{"cat":"artifacts","slot":"part","value":"keyboard","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part keyboard\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"1. keyboard, 2. mouse, 3. monitor, 4. printer, 5. scanner, 6. projector, 7. joystick, 8. gamepad, 9. headphones, 10. webcam"}
{"cat":"artifacts","slot":"part","value":"carriage","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part carriage\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"10 artifacts that can have parts: carriage, clock, compass, engine, gramophone, gun, harp, hourglass, lantern, telescope"}
{"cat":"artifacts","slot":"part","value":"beaver","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part beaver\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        \"sword, shield, helmet, armor, spear, bow, arrow, axe, dagger, mace\""}
{"cat":"artifacts","slot":"part","value":"rim","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part rim\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        handle, blade, hilt, guard, pommel, shaft, head, point, edge, tip"}
{"cat":"artifacts","slot":"part","value":"visor","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part visor\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        mask, shield, helmet, sword, spear, bow, quiver, armor, gauntlet, greave"}
{"cat":"artifacts","slot":"part","value":"angle","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part angle\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        artifacts, part, angle, shape, size, material, design, function, origin, history"}
{"cat":"artifacts","slot":"part","value":"typewriter carriage","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part typewriter carriage\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"10 artifacts that can have a part typewriter carriage: typewriter, mechanical device, office equipment, writing machine, antique, vintage item, collectible, historical artifact, manual typewriter, and industrial design."}
{"cat":"artifacts","slot":"part","value":"eraser","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part eraser\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        artifacts: sword, shield, axe, bow, spear, helmet, armor, dagger, staff, ring"}
{"cat":"artifacts","slot":"part","value":"turntable","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part turntable\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        turntable, record, needle, arm, cartridge, platter, base, motor, tonearm, dustcover"}
{"cat":"artifacts","slot":"part","value":"changer","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part changer\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        part changer, artifact changer, artifact swapper, artifact switcher, artifact exchanger, artifact shifter, artifact trader, artifact transmuter, artifact transformer, artifact converter"}
{"cat":"artifacts","slot":"part","value":"pickup","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part pickup\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"10 words that belong to the category \"artifacts\" and satisfy the semantic relation \"can have\":\n        \"part pickup, part placement, part removal, part rotation, part assembly, part disassembly, part sorting, part inspection, part cleaning, part storage\"."}
{"cat":"artifacts","slot":"part","value":"rib","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part rib\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        sword, shield, helmet, armor, bow, arrow, spear, dagger, axe, staff"}
{"cat":"artifacts","slot":"part","value":"strap","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part strap\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"10 words that belong to the category \"artifacts\" and satisfy the semantic relation \"can have\" are: \"part strap\", \"part handle\", \"part blade\", \"part hilt\", \"part shaft\", \"part head\", \"part grip\", \"part tip\", \"part base\", \"part body\"."}
{"cat":"artifacts","slot":"part","value":"shell","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part shell\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        part shell, metal frame, wooden handle, glass lens, leather strap, ceramic base, stone carving, woven fabric, paper pages, wooden cabinet"}
{"cat":"artifacts","slot":"part","value":"ribbon","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part ribbon\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        ribbon, tape, thread, string, chain, cord, wire, yarn, rope, twine"}
{"cat":"artifacts","slot":"part","value":"parasol","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part parasol\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        parasol, fan, umbrella, lantern, compass, telescope, sextant, hourglass, sundial, astrolabe"}
{"cat":"artifacts","slot":"part","value":"panel","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part panel\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        \"sword, shield, helmet, armor, spear, bow, quiver, dagger, axe, gauntlet\""}
{"cat":"artifacts","slot":"part","value":"ferrule","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part ferrule\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        part ferrule, part handle, part blade, part hilt, part guard, part pommel, part shaft, part head, part tip, part haft"}
{"cat":"artifacts","slot":"part","value":"radio chassis","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part radio chassis\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        radio chassis, radio cabinet, radio dial, radio knob, radio speaker, radio tube, radio wire, radio antenna, radio transformer, radio capacitor"}
{"cat":"artifacts","slot":"part","value":"auto-changer","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part auto-changer\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        artifacts: part auto-changer, artifacts: part auto-changer, artifacts: part auto-changer, artifacts: part auto-changer, artifacts: part auto-changer, artifacts: part auto-changer, artifacts: part auto-changer, artifacts: part auto-changer, artifacts: part auto-changer, artifacts: part auto-changer"}
{"cat":"artifacts","slot":"part","value":"tone arm","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part tone arm\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"10 words: needle, cartridge, tone arm, platter, stylus, record player, turntable, amplifier, speakers, headphones"}
{"cat":"artifacts","slot":"part","value":"key","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part key\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        artifacts, relics, antiques, heirlooms, curiosities, treasures, collectibles, memorabilia, historical objects, cultural artifacts"}
{"cat":"artifacts","slot":"part","value":"gore","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part gore\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        mask, sword, shield, armor, helmet, spear, axe, bow, dagger, gauntlet"}
{"cat":"artifacts","slot":"part","value":"felly","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part felly\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        sword, axe, shield, armor, helmet, spear, bow, quiver, dagger, gauntlet"}
{"cat":"artifacts","slot":"part","value":"cartridge","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part cartridge\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"1. cartridge, 2. sword, 3. shield, 4. helmet, 5. armor, 6. spear, 7. bow, 8. arrow, 9. quiver, 10. dagger"}
{"cat":"artifacts","slot":"part","value":"buckle","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part buckle\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        sword, shield, armor, helmet, spear, axe, bow, arrow, dagger, buckle"}
{"cat":"artifacts","slot":"part","value":"frame","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part frame\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        frame, handle, blade, hilt, shaft, grip, lens, strap, chain, bead"}
{"cat":"artifacts","slot":"part","value":"felloe","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part felloe\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        felloe, axle, hub, rim, spoke, tire, bolt, nut, washer, bearing"}
{"cat":"artifacts","slot":"part","value":"pendent","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part pendent\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        sword, shield, helmet, armor, spear, dagger, bow, arrow, axe, flail"}
{"cat":"artifacts","slot":"part","value":"typewriter keyboard","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part typewriter keyboard\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"1. typewriter, 2. keyboard, 3. computer, 4. monitor, 5. printer, 6. scanner, 7. mouse, 8. joystick, 9. gamepad, 10. headset"}
{"cat":"artifacts","slot":"part","value":"handle","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part handle\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        sword, axe, spear, shield, bow, arrow, dagger, helmet, armor, gauntlet"}
{"cat":"artifacts","slot":"part","value":"pickup arm","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part pickup arm\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        artifacts: part pickup arm, conveyor belt, robotic arm, assembly line, CNC machine, 3D printer, injection molding machine, lathe, milling machine, drill press"}
{"cat":"artifacts","slot":"part","value":"pendant","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part pendant\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        amulet, brooch, buckle, clasp, coin, crown, locket, medallion, pendant, ring"}
{"cat":"artifacts","slot":"part","value":"bell","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part bell\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        part bell, part clock, part compass, part map, part telescope, part watch, part weapon, part armor, part shield, part tool"}
{"cat":"artifacts","slot":"purpose","value":"protection","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"are used for\";         A textual example of the semantic relation is \"purpose protection\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shield, sword, armor, helmet, mace, flail, gauntlet, buckler, dagger, spear"}
{"cat":"artifacts","slot":"material","value":"plastic","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"can be made of\";         A textual example of the semantic relation is \"material plastic\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        sword, shield, spear, helmet, armor, bow, arrow, dagger, axe, mace"}
{"cat":"artifacts","slot":"material","value":"metal","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"can be made of\";         A textual example of the semantic relation is \"material metal\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        sword, shield, helmet, armor, axe, spear, bow, arrow, dagger, gauntlet"}
{"cat":"artifacts","slot":"material","value":"fibre","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"can be made of\";         A textual example of the semantic relation is \"material fibre\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        \"pottery, glassware, metalwork, textiles, jewelry, sculpture, furniture, ceramics, basketry, leatherwork\""}
{"cat":"artifacts","slot":"material","value":"leather","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"can be made of\";         A textual example of the semantic relation is \"material leather\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        sword, shield, armor, helmet, spear, bow, arrow, dagger, axe, mace"}
{"cat":"artifacts","slot":"material","value":"elastic","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"can be made of\";         A textual example of the semantic relation is \"material elastic\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        leather, metal, stone, glass, wood, clay, plastic, fabric, paper, wool"}
{"cat":"artifacts","slot":"material","value":"pearl","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"can be made of\";         A textual example of the semantic relation is \"material pearl\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pearl, sword, crown, vase, statue, pottery, mask, jewelry, armor, shield"}
{"cat":"artifacts","slot":"material","value":"thread","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"can be made of\";         A textual example of the semantic relation is \"material thread\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        sword, shield, helmet, armor, spear, bow, quiver, dagger, axe, hammer"}
{"cat":"artifacts","slot":"material","value":"wood","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"can be made of\";         A textual example of the semantic relation is \"material wood\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        sword, shield, helmet, armor, bow, quiver, spear, axe, dagger, staff"}
{"cat":"artifacts","slot":"material","value":"fiberglass","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"can be made of\";         A textual example of the semantic relation is \"material fiberglass\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        artifacts, made of, material, fiberglass, metal, wood, clay, glass, stone, plastic"}
{"cat":"artifacts","slot":"material","value":"polycarbonate","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"can be made of\";         A textual example of the semantic relation is \"material polycarbonate\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        \"sword, shield, spear, armor, helmet, dagger, axe, bow, quiver, staff\""}
{"cat":"artifacts","slot":"material","value":"canvas","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"can be made of\";         A textual example of the semantic relation is \"material canvas\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        artifacts: canvas, pottery, glass, metal, stone, wood, textile, paper, leather, bone"}
{"cat":"artifacts","slot":"material","value":"grease","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"can be made of\";         A textual example of the semantic relation is \"material grease\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        artifacts: sword, shield, armor, helmet, bow, arrow, quiver, gauntlet, dagger, greatsword"}
{"cat":"artifacts","slot":"material","value":"steel","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"can be made of\";         A textual example of the semantic relation is \"material steel\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        sword, shield, armor, helmet, dagger, spear, axe, bow, arrow, quiver"}
{"cat":"artifacts","slot":"material","value":"glass","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"can be made of\";         A textual example of the semantic relation is \"material glass\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        \"vase, bottle, mirror, window, goblet, marble, statue, pottery, jewelry, coin\""}
{"cat":"artifacts","slot":"material","value":"gold","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"can be made of\";         A textual example of the semantic relation is \"material gold\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        sword, shield, helmet, armor, spear, dagger, axe, bow, quiver, staff"}
{"cat":"artifacts","slot":"part","value":"canopy","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part canopy\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        sword, shield, armor, helmet, gauntlet, bracer, greaves, tunic, belt, boots"}
{"cat":"artifacts","slot":"material","value":"silver","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"can be made of\";         A textual example of the semantic relation is \"material silver\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        sword, shield, helmet, armor, dagger, spear, bow, quiver, axe, mace"}
{"cat":"artifacts","slot":"material","value":"fabric","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"can be made of\";         A textual example of the semantic relation is \"material fabric\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        sword, shield, spear, armor, helmet, bow, arrow, dagger, axe, staff"}
{"cat":"artifacts","slot":"material","value":"cloth","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"can be made of\";         A textual example of the semantic relation is \"material cloth\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        sword, shield, axe, armor, helmet, spear, bow, arrow, dagger, staff"}
{"cat":"artifacts","slot":"part","value":"bracelet","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part bracelet\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bracelet, necklace, ring, pendant, brooch, earring, tiara, crown, amulet, talisman"}
{"cat":"artifacts","slot":"part","value":"gem","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part gem\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        crown, sword, shield, chalice, ring, amulet, staff, armor, helmet, spear"}
{"cat":"artifacts","slot":"material","value":"gem","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"can be made of\";         A textual example of the semantic relation is \"material gem\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        sword, shield, crown, necklace, ring, chalice, armor, spear, helmet, dagger"}
{"cat":"artifacts","slot":"colorPattern","value":"gold","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"colorPattern gold\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        gold, silver, bronze, copper, iron, steel, ceramic, glass, wood, stone"}
{"cat":"artifacts","slot":"generalization","value":"device","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization device\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"1. sword, 2. shield, 3. spear, 4. axe, 5. helmet, 6. armor, 7. bow, 8. arrow, 9. dagger, 10. staff"}
{"cat":"artifacts","slot":"generalization","value":"artifact","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization artifact\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        artifacts, relics, antiquities, treasures, remains, vestiges, monuments, fossils, specimens, curiosities"}
{"cat":"artifacts","slot":"generalization","value":"covering","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization covering\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        sword, shield, spear, helmet, armor, bow, arrow, dagger, axe, staff"}
{"cat":"artifacts","slot":"generalization","value":"artefact","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization artefact\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        artifact, relic, antique, fossil, monument, sculpture, painting, tool, vase, pottery"}
{"cat":"artifacts","slot":"generalization","value":"instrumentation","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization instrumentation\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        artifact, tool, device, implement, utensil, instrument, machine, apparatus, gadget, contraption"}
{"cat":"artifacts","slot":"generalization","value":"instrumentality","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization instrumentality\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        sword, shield, spear, helmet, armor, bow, arrow, axe, dagger, staff"}
{"cat":"artifacts","slot":"generalization","value":"wear","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization wear\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"1. sword, 2. shield, 3. helmet, 4. armor, 5. spear, 6. dagger, 7. bow, 8. arrow, 9. axe, 10. mace"}
{"cat":"artifacts","slot":"generalization","value":"vesture","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization vesture\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        crown, sword, shield, armor, helmet, spear, bow, quiver, axe, dagger"}
{"cat":"artifacts","slot":"generalization","value":"wearable","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization wearable\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        sword, shield, spear, bow, quiver, helmet, armor, gauntlet, greaves, dagger"}
{"cat":"artifacts","slot":"generalization","value":"furniture","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization furniture\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        sword, shield, helmet, armor, spear, bow, arrow, axe, dagger, staff"}
{"cat":"artifacts","slot":"generalization","value":"article of clothing","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization article of clothing\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        sword, shield, spear, helmet, armor, dagger, axe, bow, quiver, arrows"}
{"cat":"artifacts","slot":"generalization","value":"habiliment","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization habiliment\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"10 words that belong to the category \"artifacts\":\n        sword, shield, helmet, armor, spear, bow, quiver, dagger, axe, mace"}
{"cat":"artifacts","slot":"generalization","value":"consumer goods","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization consumer goods\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        artifacts: sword, shield, armor, helmet, spear, axe, bow, arrow, dagger, gauntlet"}
{"cat":"artifacts","slot":"generalization","value":"clothing","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization clothing\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        sword, shield, spear, helmet, armor, dagger, axe, bow, arrow, quiver"}
{"cat":"artifacts","slot":"generalization","value":"copier","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization copier\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        sword, shield, helmet, armor, spear, bow, quiver, dagger, axe, mace"}
{"cat":"artifacts","slot":"generalization","value":"apparatus","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization apparatus\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        artifacts: pottery, sculpture, jewelry, tools, coins, weapons, textiles, ceramics, glassware, furniture"}
{"cat":"artifacts","slot":"generalization","value":"setup","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization setup\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        artifacts: sword, shield, helmet, armor, spear, bow, arrow, dagger, axe, mace"}
{"cat":"artifacts","slot":"generalization","value":"machine","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization machine\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        artifacts: sword, shield, armor, helmet, spear, bow, quiver, dagger, axe, mace"}
{"cat":"artifacts","slot":"generalization","value":"duplicator","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization duplicator\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        sword, shield, helmet, armor, spear, bow, quiver, dagger, axe, mace"}
{"cat":"artifacts","slot":"generalization","value":"equipment","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization equipment\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        sword, shield, helmet, armor, spear, bow, quiver, dagger, axe, mace"}
{"cat":"artifacts","slot":"generalization","value":"simple machine","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization simple machine\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        compass, telescope, microscope, sextant, astrolabe, sundial, hourglass, abacus, loom, quill"}
{"cat":"artifacts","slot":"generalization","value":"shade","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization shade\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        artifacts: sword, shield, spear, helmet, armor, dagger, axe, bow, arrow, quiver"}
{"cat":"artifacts","slot":"generalization","value":"sheet","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization sheet\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        sword, shield, helmet, armor, spear, bow, quiver, axe, dagger, staff"}
{"cat":"artifacts","slot":"generalization","value":"armor plate","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization armor plate\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        sword, shield, helmet, armor, spear, bow, arrow, dagger, axe, mace"}
{"cat":"artifacts","slot":"generalization","value":"garment","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization garment\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        sword, shield, helmet, armor, spear, bow, arrow, dagger, axe, mace"}
{"cat":"artifacts","slot":"generalization","value":"shield","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization shield\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        sword, shield, spear, bow, arrow, dagger, axe, helmet, armor, gauntlet"}
{"cat":"artifacts","slot":"generalization","value":"armour plate","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization armour plate\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        sword, shield, helmet, armor, spear, bow, arrow, axe, dagger, staff"}
{"cat":"artifacts","slot":"generalization","value":"material","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization material\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        artifacts: sword, shield, helmet, armor, spear, axe, bow, arrow, dagger, chest"}
{"cat":"artifacts","slot":"generalization","value":"armor","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization armor\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        sword, shield, helmet, armor, spear, axe, bow, arrow, dagger, staff"}
{"cat":"artifacts","slot":"generalization","value":"container","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization container\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        sword, shield, helmet, spear, bow, arrow, dagger, axe, armor, gauntlet"}
{"cat":"artifacts","slot":"generalization","value":"bedding","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization bedding\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        artifacts: pottery, sculpture, painting, textile, jewelry, metalwork, glasswork, ceramics, mosaic, calligraphy"}
{"cat":"artifacts","slot":"generalization","value":"printing machine","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization printing machine\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        printing press, typewriter, camera, compass, telescope, microscope, sextant, abacus, astrolabe, sundial"}
{"cat":"artifacts","slot":"generalization","value":"plate armor","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization plate armor\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        sword, shield, helmet, gauntlet, breastplate, greaves, vambrace, pauldron, mace, flail"}
{"cat":"artifacts","slot":"generalization","value":"armour","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization armour\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        sword, shield, helmet, armor, dagger, spear, axe, bow, arrow, gauntlet"}
{"cat":"artifacts","slot":"generalization","value":"body covering","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization body covering\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        sword, shield, axe, bow, quiver, armor, helmet, gauntlet, greaves, cuirass"}
{"cat":"artifacts","slot":"generalization","value":"construction","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization construction\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        sword, shield, helmet, armor, spear, dagger, bow, arrow, axe, mace"}
{"cat":"artifacts","slot":"generalization","value":"optical device","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization optical device\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        telescope, microscope, binoculars, monocular, lens, camera, magnifying glass, spectacles, goggles, periscope"}
{"cat":"artifacts","slot":"generalization","value":"scale","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization scale\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        sword, shield, helmet, armor, spear, bow, arrow, quiver, dagger, axe"}
{"cat":"artifacts","slot":"generalization","value":"character printer","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization character printer\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        generalization, character, printer"}
{"cat":"artifacts","slot":"generalization","value":"paper","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization paper\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        artifacts: painting, sculpture, pottery, textile, jewelry, coin, tool, weapon, book, vase"}
{"cat":"artifacts","slot":"generalization","value":"bed clothing","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization bed clothing\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        sword, shield, spear, bow, arrow, helmet, armor, dagger, axe, mace"}
{"cat":"artifacts","slot":"generalization","value":"bedclothes","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization bedclothes\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        sword, shield, helmet, armor, spear, bow, arrow, dagger, axe, mace"}
{"cat":"artifacts","slot":"generalization","value":"scute","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization scute\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        sword, shield, armor, spear, helmet, dagger, bow, axe, staff, chest"}
{"cat":"artifacts","slot":"generalization","value":"commodity","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization commodity\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        artifacts, relics, antiques, collectibles, heirlooms, treasures, curiosities, memorabilia, historical objects, cultural items"}
{"cat":"artifacts","slot":"generalization","value":"reflector","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization reflector\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        \"artifacts, relics, antiquities, treasures, heirlooms, curiosities, collectibles, memorabilia, mementos, souvenirs\""}
{"cat":"artifacts","slot":"generalization","value":"textile","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization textile\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        sword, shield, armor, helmet, spear, dagger, bow, arrow, axe, chest"}
{"cat":"artifacts","slot":"generalization","value":"good","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization good\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        sword, shield, spear, helmet, armor, bow, arrow, dagger, axe, mace"}
{"cat":"artifacts","slot":"generalization","value":"structure","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization structure\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        artifacts: sword, shield, helmet, armor, spear, axe, bow, arrow, dagger, gauntlet"}
{"cat":"artifacts","slot":"generalization","value":"printer","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization printer\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        \"sword, shield, spear, axe, bow, arrow, helmet, armor, chest plate, gauntlet\""}
{"cat":"artifacts","slot":"generalization","value":"shell","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization shell\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        artifact, relic, antique, heirloom, fossil, specimen, monument, sculpture, painting, pottery"}
{"cat":"artifacts","slot":"generalization","value":"mechanism","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization mechanism\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        artifacts: sword, shield, helmet, armor, spear, bow, arrow, axe, dagger, staff"}
{"cat":"artifacts","slot":"generalization","value":"headgear","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization headgear\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"1. crown, 2. sword, 3. shield, 4. helmet, 5. spear, 6. axe, 7. armor, 8. bow, 9. arrow, 10. quiver"}
{"cat":"artifacts","slot":"generalization","value":"armor plating","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization armor plating\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        sword, shield, helmet, armor, spear, axe, bow, arrow, dagger, gauntlet"}
{"cat":"artifacts","slot":"generalization","value":"writing paper","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization writing paper\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        artifacts: writing paper, stone tools, pottery, jewelry, coins, weapons, artwork, textiles, furniture, musical instruments"}
{"cat":"artifacts","slot":"generalization","value":"serial printer","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization serial printer\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        sword, shield, axe, spear, helmet, armor, bow, arrow, dagger, gauntlet"}
{"cat":"artifacts","slot":"generalization","value":"flat solid","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization flat solid\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"1. coin, 2. statue, 3. vase, 4. pottery, 5. painting, 6. sculpture, 7. mosaic, 8. tapestry, 9. mask, 10. jewelry"}
{"cat":"artifacts","slot":"generalization","value":"source of illumination","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization source of illumination\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        torch, lantern, candle, lamp, flashlight, headlamp, spotlight, beacon, chandelier, lighthouse"}
{"cat":"artifacts","slot":"generalization","value":"stuff","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization stuff\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        artifacts: sword, shield, helmet, armor, spear, bow, arrow, dagger, axe, mace"}
{"cat":"artifacts","slot":"generalization","value":"plate","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization plate\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        generalization plate, artifact, archaeological find, historical object, ancient relic, cultural artifact, prehistoric tool, ancient pottery, stone carving, metalwork"}
{"cat":"artifacts","slot":"generalization","value":"cloth covering","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization cloth covering\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"10 artifacts: pottery, tools, jewelry, weapons, coins, sculptures, textiles, glassware, ceramics, and metalwork."}
{"cat":"artifacts","slot":"generalization","value":"mechanical device","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization mechanical device\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        clock, watch, compass, telescope, microscope, camera, sextant, astrolabe, sundial, abacus"}
{"cat":"artifacts","slot":"generalization","value":"plate armour","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization plate armour\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        sword, shield, helmet, armor, spear, axe, bow, arrow, dagger, gauntlet"}
{"cat":"artifacts","slot":"generalization","value":"character-at-a-time printer","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization character-at-a-time printer\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        artifacts: painting, sculpture, pottery, mosaic, tapestry, mask, totem, tool, jewelry, textile"}
{"cat":"artifacts","slot":"generalization","value":"trade good","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization trade good\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        artifacts, relics, antiques, curiosities, collectibles, heirlooms, memorabilia, treasures, mementos, souvenirs"}
{"cat":"artifacts","slot":"generalization","value":"accessory","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization accessory\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"1. sword, 2. shield, 3. spear, 4. helmet, 5. armor, 6. dagger, 7. axe, 8. bow, 9. arrow, 10. quiver"}
{"cat":"artifacts","slot":"generalization","value":"ornament","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization ornament\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"1. pottery, 2. sculpture, 3. painting, 4. jewelry, 5. metalwork, 6. textile, 7. glassware, 8. ceramics, 9. woodwork, 10. basketry"}
{"cat":"artifacts","slot":"generalization","value":"ornamentation","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization ornamentation\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        artifacts, relics, antiques, heirlooms, treasures, curiosities, collectibles, memorabilia, vestiges, mementos"}
{"cat":"artifacts","slot":"generalization","value":"utensil","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization utensil\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        sword, shield, helmet, armor, spear, bow, arrow, dagger, axe, mace"}
{"cat":"artifacts","slot":"generalization","value":"tool","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization tool\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        artifacts: sword, shield, helmet, armor, spear, bow, arrow, quiver, dagger, axe"}
{"cat":"artifacts","slot":"generalization","value":"implement","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization implement\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        sword, shield, spear, bow, arrow, axe, dagger, helmet, armor, chariot"}
{"cat":"artifacts","slot":"generalization","value":"decoration","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization decoration\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        sword, shield, helmet, armor, spear, dagger, bow, arrow, quiver, axe"}
{"cat":"artifacts","slot":"generalization","value":"adornment","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization adornment\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        artifacts: sword, shield, armor, helmet, spear, bow, quiver, dagger, axe, mace"}
{"cat":"artifacts","slot":"generalization","value":"headdress","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization headdress\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        sword, shield, helmet, armor, spear, dagger, bow, quiver, axe, mace"}
{"cat":"artifacts","slot":"generalization","value":"protective cover","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization protective cover\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        sword, shield, armor, helmet, spear, bow, quiver, axe, mace, dagger"}
{"cat":"artifacts","slot":"generalization","value":"unit","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization unit\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        sword, shield, helmet, armor, spear, bow, arrow, dagger, axe, flail"}
{"cat":"artifacts","slot":"generalization","value":"whole","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization whole\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        sword, shield, helmet, armor, spear, bow, arrow, dagger, axe, hammer"}
{"cat":"artifacts","slot":"generalization","value":"protective covering","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization protective covering\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        mask, shield, helmet, armor, cloak, tunic, robe, vest, jacket, cape"}
{"cat":"artifacts","slot":"generalization","value":"jewelry","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization jewelry\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pottery, sculpture, jewelry, furniture, tools, weapons, coins, textiles, ceramics, glassware"}
{"cat":"artifacts","slot":"generalization","value":"protection","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization protection\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        artifact, sword, shield, helmet, armor, dagger, spear, bow, arrow, axe"}
{"cat":"artifacts","slot":"part","value":"glass","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part glass\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        part glass, part metal, part plastic, part wood, part stone, part ceramic, part clay, part paper, part fabric, part leather"}
{"cat":"artifacts","slot":"generalization","value":"shelter","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization shelter\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        sword, shield, axe, bow, arrow, spear, helmet, armor, dagger, chakram"}
{"cat":"artifacts","slot":"generalization","value":"fabric","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization fabric\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        crown, sword, shield, helmet, armor, spear, dagger, bow, arrow, quiver"}
{"cat":"artifacts","slot":"generalization","value":"canopy","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization canopy\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        sword, shield, spear, axe, bow, arrow, helmet, armor, dagger, gauntlet"}
{"cat":"artifacts","slot":"generalization","value":"cloth","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization cloth\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        sword, shield, helmet, armor, spear, dagger, bow, arrow, axe, mace"}
{"cat":"tools","slot":"user","value":"sailor","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"are used by\";         A textual example of the semantic relation is \"user sailors\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        hammer, screwdriver, wrench, saw, drill, pliers, chisel, level, tape measure, sandpaper"}
{"cat":"tools","slot":"user","value":"farmer","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"are used by\";         A textual example of the semantic relation is \"user farmers\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        hammer, screwdriver, wrench, saw, drill, pliers, chisel, plane, tape measure, level"}
{"cat":"tools","slot":"size","value":"small","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"size small\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        hammer, screwdriver, pliers, wrench, saw, drill, chisel, tape measure, level, flashlight"}
{"cat":"tools","slot":"howToUse","value":"stand up","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"can be used for\";         A textual example of the semantic relation is \"howToUse stand up\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        hammer, screwdriver, wrench, pliers, saw, drill, tape measure, level, chisel, sandpaper"}
{"cat":"tools","slot":"howToUse","value":"hold","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"can be used for\";         A textual example of the semantic relation is \"howToUse hold\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        hammer, screwdriver, pliers, wrench, saw, drill, level, tape measure, chisel, sander"}
{"cat":"tools","slot":"place","value":"kitchen","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"can be found or used in\";         A textual example of the semantic relation is \"place kitchens\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"1. knife, 2. spoon, 3. fork, 4. whisk, 5. rolling pin, 6. grater, 7. peeler, 8. can opener, 9. spatula, 10. cutting board"}
{"cat":"tools","slot":"accessory","value":"toolbox","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"are related with\";         A textual example of the semantic relation is \"accessory toolbox\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        hammer, screwdriver, wrench, pliers, saw, drill, tape measure, level, chisel, sandpaper"}
{"cat":"tools","slot":"place","value":"garden","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"can be found or used in\";         A textual example of the semantic relation is \"place gardens\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shovel, rake, hoe, trowel, pruning shears, garden fork, watering can, wheelbarrow, gloves, spade"}
{"cat":"tools","slot":"place","value":"shed","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"can be found or used in\";         A textual example of the semantic relation is \"place sheds\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        hammer, screwdriver, pliers, wrench, saw, drill, level, tape measure, chisel, sander"}
{"cat":"tools","slot":"accessory","value":"screwdriver","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"are related with\";         A textual example of the semantic relation is \"accessory screwdriver\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        hammer, screwdriver, wrench, pliers, saw, drill, tape measure, level, chisel, sander"}
{"cat":"tools","slot":"place","value":"laboratory","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"can be found or used in\";         A textual example of the semantic relation is \"place laboratories\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        hammer, screwdriver, pliers, wrench, saw, drill, level, tape measure, chisel, ruler"}
{"cat":"tools","slot":"place","value":"hairdresser","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"can be found or used in\";         A textual example of the semantic relation is \"place hairdressers\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        scissors, comb, hair dryer, curling iron, straightener, clippers, brush, mirror, hairspray, razor"}
{"cat":"tools","slot":"accessory","value":"staple","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"are related with\";         A textual example of the semantic relation is \"accessory staple\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        hammer, screwdriver, wrench, saw, drill, pliers, tape measure, level, chisel, sander"}
{"cat":"tools","slot":"accessory","value":"rod","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"are related with\";         A textual example of the semantic relation is \"accessory rod\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        hammer, screwdriver, wrench, pliers, saw, drill, level, tape measure, chisel, sander"}
{"cat":"tools","slot":"accessory","value":"knob","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"are related with\";         A textual example of the semantic relation is \"accessory knob\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        hammer, screwdriver, pliers, wrench, drill, saw, tape measure, level, chisel, sander"}
{"cat":"tools","slot":"accessory","value":"bolt","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"are related with\";         A textual example of the semantic relation is \"accessory bolt\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        hammer, screwdriver, wrench, pliers, saw, drill, chisel, level, tape measure, flashlight"}
{"cat":"tools","slot":"purpose","value":"build","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"are used to\";         A textual example of the semantic relation is \"purpose build\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        hammer, screwdriver, wrench, pliers, saw, drill, chisel, plane, level, tape measure"}
{"cat":"tools","slot":"purpose","value":"cooking","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"are used for\";         A textual example of the semantic relation is \"purpose cooking\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":" knife, spoon, fork, ladle, whisk, grater, peeler, can opener, tongs, rolling pin"}
{"cat":"tools","slot":"purpose","value":"agriculture","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"are used for\";         A textual example of the semantic relation is \"purpose agriculture\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        plow, hoe, rake, shovel, pitchfork, cultivator, harrow, sickle, scythe, flail"}
{"cat":"tools","slot":"purpose","value":"weeding","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"are used for\";         A textual example of the semantic relation is \"purpose weeding\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        hoe, rake, shovel, trowel, pruning shears, hedge trimmer, cultivator, watering can, wheelbarrow, garden fork"}
{"cat":"tools","slot":"purpose","value":"clamp","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"are used to\";         A textual example of the semantic relation is \"purpose clamp\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        hammer, saw, screwdriver, wrench, pliers, drill, chisel, plane, level, tape measure"}
{"cat":"tools","slot":"purpose","value":"lock","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"are used to\";         A textual example of the semantic relation is \"purpose lock\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        hammer, screwdriver, pliers, wrench, saw, drill, chisel, ruler, tape measure, level"}
{"cat":"tools","slot":"purpose","value":"pick up","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"are used to\";         A textual example of the semantic relation is \"purpose pick up\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        hammer, screwdriver, wrench, pliers, saw, drill, level, tape measure, chisel, sandpaper"}
{"cat":"tools","slot":"purpose","value":"grip","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"are used to\";         A textual example of the semantic relation is \"purpose grip\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        hammer, screwdriver, wrench, pliers, saw, drill, level, tape measure, chisel, sander"}
{"cat":"tools","slot":"purpose","value":"dig","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"are used to\";         A textual example of the semantic relation is \"purpose dig\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        hammer, screwdriver, wrench, saw, drill, pliers, chisel, mallet, axe, knife"}
{"cat":"tools","slot":"purpose","value":"fasten","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"are used for\";         A textual example of the semantic relation is \"purpose fasten\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        hammer, screwdriver, pliers, wrench, saw, drill, tape measure, level, chisel, sander"}
{"cat":"tools","slot":"purpose","value":"dock","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"are used to\";         A textual example of the semantic relation is \"purpose dock\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        hammer, screwdriver, wrench, pliers, saw, drill, level, tape measure, chisel, sander"}
{"cat":"tools","slot":"purpose","value":"secure","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"are used for\";         A textual example of the semantic relation is \"purpose secure\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        hammer, screwdriver, wrench, pliers, saw, drill, tape measure, level, chisel, sandpaper"}
{"cat":"tools","slot":"purpose","value":"serve","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"are used to\";         A textual example of the semantic relation is \"purpose serve\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        hammer, screwdriver, wrench, pliers, saw, drill, tape measure, level, chisel, sandpaper"}
{"cat":"tools","slot":"purpose","value":"tighten","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"are used to\";         A textual example of the semantic relation is \"purpose tighten\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"10 words that belong to the category \"tools\" and satisfy the semantic relation \"are used to\":\n        hammer, screwdriver, wrench, pliers, saw, drill, tape measure, level, chisel, sander"}
{"cat":"tools","slot":"purpose","value":"cut","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"are used to\";         A textual example of the semantic relation is \"purpose cut\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        hammer, screwdriver, wrench, pliers, saw, drill, chisel, plane, level, tape measure"}
{"cat":"tools","slot":"purpose","value":"moor","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"are used to\";         A textual example of the semantic relation is \"purpose moor\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        hammer, screwdriver, wrench, pliers, saw, drill, chisel, tape measure, level, sandpaper"}
{"cat":"tools","slot":"shape","value":"long","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"shape long\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        saw, hammer, screwdriver, wrench, pliers, chisel, drill, level, tape measure, square"}
{"cat":"tools","slot":"shape","value":"elongated","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"shape elongated\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        hammer, screwdriver, pliers, wrench, saw, drill, chisel, file, ruler, tape measure"}
{"cat":"tools","slot":"shape","value":"curved","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"shape curved\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        hammer, screwdriver, wrench, saw, drill, chisel, pliers, ruler, tape measure, level"}
{"cat":"tools","slot":"shape","value":"cylindrical","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"shape cylindrical\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        hammer, screwdriver, wrench, pliers, saw, drill, chisel, ruler, tape measure, level"}
{"cat":"tools","slot":"shape","value":"triangular","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"shape triangular\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        hammer, screwdriver, wrench, pliers, saw, drill, chisel, file, ruler, tape measure"}
{"cat":"tools","slot":"accessory","value":"screw","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"are related with\";         A textual example of the semantic relation is \"accessory screw\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        hammer, screwdriver, wrench, pliers, saw, drill, level, tape measure, chisel, sander"}
{"cat":"tools","slot":"part","value":"blade","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part blade\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        hammer, screwdriver, wrench, pliers, saw, drill, chisel, axe, knife, ruler"}
{"cat":"tools","slot":"part","value":"handle","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part handle\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"10 words that belong to the category \"tools\" and satisfy the semantic relation \"can have\": hammer, screwdriver, wrench, saw, drill, pliers, chisel, plane, axe, knife"}
{"cat":"tools","slot":"part","value":"arm","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part arm\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        hammer, screwdriver, wrench, pliers, saw, drill, chisel, ruler, tape measure, level"}
{"cat":"tools","slot":"part","value":"edge","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part edge\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        hammer, screwdriver, wrench, pliers, saw, drill, chisel, plane, ruler, tape measure"}
{"cat":"tools","slot":"part","value":"head","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part head\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        hammer, screwdriver, wrench, pliers, saw, drill, chisel, plane, ruler, tape measure"}
{"cat":"tools","slot":"part","value":"shank","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part shank\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        hammer, screwdriver, wrench, pliers, saw, drill, chisel, ruler, tape measure, level"}
{"cat":"tools","slot":"part","value":"point","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part point\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        hammer, screwdriver, wrench, pliers, saw, drill, chisel, plane, level, tape measure"}
{"cat":"tools","slot":"part","value":"rake handle","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part rake handle\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":" hammer, screwdriver, saw, wrench, pliers, tape measure, level, drill, chisel, sander"}
{"cat":"tools","slot":"part","value":"pinhead","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part pinhead\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        hammer, screwdriver, wrench, pliers, saw, drill, ruler, level, tape measure, flashlight"}
{"cat":"tools","slot":"part","value":"hoe handle","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part hoe handle\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        hoe, handle, hammer, head, screwdriver, blade, saw, drill, bit, pliers"}
{"cat":"tools","slot":"part","value":"thread","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part thread\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        hammer, screwdriver, wrench, pliers, saw, drill, level, tape measure, chisel, file"}
{"cat":"tools","slot":"part","value":"stem","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part stem\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        hammer, screwdriver, wrench, pliers, saw, drill, chisel, file, level, tape measure"}
{"cat":"tools","slot":"part","value":"razorblade","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part razorblade\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        hammer, screwdriver, wrench, pliers, saw, drill, level, tape measure, chisel, sandpaper"}
{"cat":"tools","slot":"part","value":"hammerhead","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part hammerhead\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        hammer, screwdriver, wrench, pliers, saw, drill, chisel, ruler, tape measure, level"}
{"cat":"tools","slot":"part","value":"clinch","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part clinch\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        wrench, hammer, screwdriver, pliers, ratchet, socket, saw, drill, chisel, level"}
{"cat":"tools","slot":"part","value":"fluke","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part fluke\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        hammer, screwdriver, wrench, pliers, saw, drill, level, tape measure, chisel, file"}
{"cat":"tools","slot":"part","value":"ring","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part ring\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        hammer, saw, screwdriver, wrench, pliers, chisel, drill, level, tape measure, sandpaper"}
{"cat":"tools","slot":"part","value":"stock","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part stock\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        hammer, screwdriver, wrench, pliers, saw, drill, level, tape measure, chisel, sandpaper"}
{"cat":"tools","slot":"part","value":"slot","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part slot\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        hammer, screwdriver, wrench, pliers, saw, drill, chisel, plane, level, tape measure"}
{"cat":"tools","slot":"material","value":"metal","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"can be made of\";         A textual example of the semantic relation is \"material metal\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"10 words that belong to the category \"tools\" and satisfy the semantic relation \"can be made of\" are: hammer, screwdriver, wrench, pliers, saw, drill, chisel, plane, file, and axe."}
{"cat":"tools","slot":"material","value":"steel","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"can be made of\";         A textual example of the semantic relation is \"material steel\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        hammer, screwdriver, saw, wrench, pliers, chisel, drill, file, ruler, level"}
{"cat":"tools","slot":"material","value":"plastic","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"can be made of\";         A textual example of the semantic relation is \"material plastic\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        hammer, screwdriver, wrench, pliers, saw, drill, chisel, axe, knife, ruler"}
{"cat":"tools","slot":"material","value":"iron","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"can be made of\";         A textual example of the semantic relation is \"material iron\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        hammer, screwdriver, pliers, wrench, saw, drill, chisel, plane, level, tape measure"}
{"cat":"tools","slot":"material","value":"wood","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"can be made of\";         A textual example of the semantic relation is \"material wood\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        hammer, screwdriver, saw, chisel, pliers, wrench, ruler, tape measure, drill, level"}
{"cat":"tools","slot":"colorPattern","value":"silver","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"colorPattern silver\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"10 words that belong to the category \"tools\" and satisfy the semantic relation \"can be\": hammer, screwdriver, wrench, pliers, saw, drill, tape measure, level, chisel, file."}
{"cat":"tools","slot":"colorPattern","value":"brown","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"colorPattern brown\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        hammer, screwdriver, wrench, saw, pliers, drill, chisel, level, tape measure, flashlight"}
{"cat":"tools","slot":"colorPattern","value":"black","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"colorPattern black\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        hammer, screwdriver, pliers, wrench, saw, drill, chisel, level, tape measure, flashlight"}
{"cat":"tools","slot":"colorPattern","value":"golden","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"colorPattern golden\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        hammer, screwdriver, wrench, pliers, saw, drill, tape measure, level, chisel, sandpaper"}
{"cat":"tools","slot":"accessory","value":"fastener","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"are related with\";         A textual example of the semantic relation is \"accessory fastener\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        hammer, screwdriver, wrench, pliers, saw, drill, tape measure, level, chisel, ratchet"}
{"cat":"tools","slot":"generalization","value":"edge tool","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization edge tool\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":" hammer, screwdriver, pliers, wrench, chisel, saw, drill, level, tape measure, sandpaper"}
{"cat":"tools","slot":"generalization","value":"fastening","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization fastening\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        hammer, screwdriver, wrench, pliers, saw, drill, chisel, level, tape measure, flashlight"}
{"cat":"tools","slot":"generalization","value":"fixing","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization fixing\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        hammer, screwdriver, wrench, pliers, saw, drill, level, tape measure, chisel, sandpaper"}
{"cat":"tools","slot":"generalization","value":"holdfast","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization holdfast\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"10 words: hammer, screwdriver, wrench, pliers, saw, drill, chisel, plane, tape measure, level"}
{"cat":"tools","slot":"generalization","value":"lever","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization lever\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        hammer, screwdriver, wrench, pliers, saw, drill, chisel, ruler, tape measure, level"}
{"cat":"tools","slot":"generalization","value":"simple machine","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization simple machine\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        hammer, screwdriver, wrench, pliers, saw, drill, chisel, level, tape measure, ruler"}
{"cat":"tools","slot":"generalization","value":"cutting implement","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization cutting implement\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        hammer, screwdriver, wrench, pliers, saw, drill, chisel, level, tape measure, ruler"}
{"cat":"tools","slot":"generalization","value":"compound lever","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization compound lever\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        hammer, screwdriver, wrench, pliers, saw, drill, level, tape measure, chisel, sandpaper"}
{"cat":"tools","slot":"generalization","value":"mechanism","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization mechanism\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":" hammer, screwdriver, wrench, pliers, saw, drill, chisel, level, tape measure, flashlight"}
{"cat":"tools","slot":"generalization","value":"machine","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization machine\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"10 words: hammer, screwdriver, wrench, pliers, saw, drill, chisel, plane, tape measure, level."}
{"cat":"tools","slot":"generalization","value":"connection","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization connection\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        hammer, screwdriver, wrench, pliers, saw, drill, chisel, plane, ruler, tape measure"}
{"cat":"tools","slot":"generalization","value":"weapon system","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization weapon system\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        hammer, screwdriver, wrench, pliers, saw, drill, chisel, ruler, tape measure, level"}
{"cat":"tools","slot":"generalization","value":"impediment","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization impediment\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"1. hammer, 2. screwdriver, 3. wrench, 4. pliers, 5. saw, 6. drill, 7. chisel, 8. level, 9. tape measure, 10. sander"}
{"cat":"tools","slot":"generalization","value":"bar","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization bar\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"10 words that belong to the category \"tools\"\n        hammer, screwdriver, wrench, pliers, saw, drill, level, tape measure, chisel, ruler"}
{"cat":"tools","slot":"generalization","value":"pair of scissors","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization pair of scissors\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        hammer, screwdriver, wrench, pliers, saw, drill, chisel, tape measure, level, scissors"}
{"cat":"tools","slot":"generalization","value":"line","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization line\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        hammer, screwdriver, wrench, pliers, saw, drill, tape measure, level, chisel, file"}
{"cat":"tools","slot":"generalization","value":"bond","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization bond\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        hammer, screwdriver, wrench, pliers, saw, drill, chisel, plane, tape measure, level"}
{"cat":"tools","slot":"generalization","value":"surgical knife","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization surgical knife\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":" hammer, screwdriver, wrench, pliers, saw, drill, chisel, level, tape measure, flashlight"}
{"cat":"tools","slot":"generalization","value":"strainer","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization strainer\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        hammer, screwdriver, wrench, pliers, saw, drill, chisel, level, tape measure, flashlight"}
{"cat":"tools","slot":"generalization","value":"bottle opener","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization bottle opener\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        hammer, screwdriver, wrench, pliers, saw, drill, level, tape measure, chisel, file"}
{"cat":"tools","slot":"generalization","value":"weapon","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization weapon\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        hammer, saw, screwdriver, wrench, pliers, chisel, drill, ruler, tape measure, level"}
{"cat":"tools","slot":"generalization","value":"opener","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization opener\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        hammer, screwdriver, wrench, pliers, saw, drill, tape measure, level, chisel, sandpaper"}
{"cat":"tools","slot":"generalization","value":"attachment","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization attachment\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        hammer, screwdriver, wrench, pliers, saw, drill, level, tape measure, chisel, sander"}
{"cat":"tools","slot":"generalization","value":"construction","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization construction\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":" hammer, screwdriver, wrench, pliers, saw, drill, chisel, plane, level, tape measure"}
{"cat":"tools","slot":"generalization","value":"ligament","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization ligament\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        hammer, screwdriver, wrench, pliers, saw, drill, chisel, level, tape measure, ruler"}
{"cat":"tools","slot":"generalization","value":"medical instrument","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization medical instrument\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":" hammer, screwdriver, pliers, wrench, saw, drill, chisel, ruler, tape measure, level"}
{"cat":"tools","slot":"generalization","value":"form","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization form\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        hammer, screwdriver, wrench, pliers, saw, drill, chisel, file, level, tape measure"}
{"cat":"tools","slot":"generalization","value":"paper","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization paper\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        hammer, screwdriver, pliers, wrench, saw, drill, tape measure, level, chisel, ruler"}
{"cat":"tools","slot":"generalization","value":"playing card","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization playing card\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        hammer, screwdriver, wrench, saw, pliers, drill, chisel, level, tape measure, sandpaper"}
{"cat":"tools","slot":"generalization","value":"curved shape","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization curved shape\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        hammer, screwdriver, wrench, pliers, saw, drill, tape measure, level, chisel, sander"}
{"cat":"tools","slot":"generalization","value":"structure","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization structure\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":" hammer, screwdriver, wrench, pliers, saw, drill, chisel, file, ruler, tape measure"}
{"cat":"tools","slot":"generalization","value":"connector","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization connector\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"10 words: hammer, screwdriver, pliers, wrench, saw, drill, tape measure, level, chisel, sander"}
{"cat":"tools","slot":"generalization","value":"obstruction","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization obstruction\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        hammer, screwdriver, wrench, pliers, saw, drill, level, tape measure, chisel, ruler"}
{"cat":"tools","slot":"generalization","value":"inclined plane","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization inclined plane\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        hammer, screwdriver, wrench, pliers, saw, drill, chisel, tape measure, level, sandpaper"}
{"cat":"tools","slot":"generalization","value":"tumbler","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization tumbler\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        hammer, screwdriver, wrench, pliers, saw, drill, chisel, ruler, tape measure, level"}
{"cat":"tools","slot":"generalization","value":"knife","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization knife\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        hammer, screwdriver, wrench, pliers, saw, drill, chisel, level, tape measure, flashlight"}
{"cat":"tools","slot":"generalization","value":"card","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization card\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        hammer, screwdriver, wrench, pliers, saw, drill, tape measure, level, chisel, sander"}
{"cat":"tools","slot":"generalization","value":"obstructer","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization obstructer\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        hammer, screwdriver, pliers, wrench, saw, drill, level, tape measure, chisel, ruler"}
{"cat":"tools","slot":"generalization","value":"impedimenta","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization impedimenta\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        hammer, screwdriver, pliers, wrench, saw, drill, chisel, plane, ruler, tape measure"}
{"cat":"tools","slot":"generalization","value":"claw","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization claw\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"1. hammer, 2. screwdriver, 3. wrench, 4. pliers, 5. saw, 6. drill, 7. tape measure, 8. level, 9. chisel, 10. sander"}
{"cat":"tools","slot":"generalization","value":"kitchen utensil","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization kitchen utensil\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":" hammer, screwdriver, wrench, pliers, saw, drill, tape measure, level, chisel, file"}
{"cat":"tools","slot":"generalization","value":"connexion","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization connexion\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        hammer, screwdriver, wrench, pliers, saw, drill, level, tape measure, chisel, sander"}
{"cat":"tools","slot":"generalization","value":"surgical instrument","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization surgical instrument\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        hammer, screwdriver, pliers, wrench, saw, drill, chisel, plane, level, tape measure"}
{"cat":"tools","slot":"generalization","value":"instrument","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization instrument\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        hammer, screwdriver, wrench, pliers, saw, drill, level, tape measure, chisel, ruler"}
{"cat":"tools","slot":"generalization","value":"hook","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization hook\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        hammer, screwdriver, wrench, pliers, saw, drill, chisel, ruler, tape measure, level"}
{"cat":"tools","slot":"generalization","value":"curve","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization curve\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        hammer, screwdriver, wrench, pliers, saw, drill, chisel, ruler, tape measure, level"}
{"cat":"tools","slot":"generalization","value":"connecter","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization connecter\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        hammer, screwdriver, wrench, pliers, saw, drill, chisel, ruler, tape measure, level"}
{"cat":"tools","slot":"generalization","value":"obstructor","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization obstructor\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        hammer, screwdriver, wrench, pliers, saw, drill, chisel, ruler, tape measure, level"}
{"cat":"tools","slot":"generalization","value":"filter","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization filter\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":" hammer, screwdriver, wrench, pliers, saw, drill, chisel, plane, level, tape measure"}
{"cat":"tools","slot":"generalization","value":"connective","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization connective\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        hammer, screwdriver, wrench, pliers, saw, drill, level, tape measure, chisel, plane"}
{"cat":"tools","slot":"generalization","value":"shape","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization shape\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        hammer, screwdriver, pliers, wrench, saw, drill, chisel, ruler, tape measure, level"}
{"cat":"tools","slot":"generalization","value":"scissors","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization scissors\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        hammer, screwdriver, wrench, pliers, saw, drill, tape measure, level, chisel, scissors"}
{"cat":"tools","slot":"generalization","value":"seal","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization seal\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        hammer, screwdriver, wrench, saw, pliers, drill, chisel, level, tape measure, flashlight"}
{"cat":"tools","slot":"generalization","value":"tool","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization tool\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        hammer, screwdriver, wrench, saw, drill, pliers, tape measure, level, chisel, ruler"}
{"cat":"tools","slot":"generalization","value":"utensil","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization utensil\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        hammer, screwdriver, wrench, pliers, saw, drill, level, tape measure, chisel, sander"}
{"cat":"tools","slot":"generalization","value":"implement","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization implement\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        hammer, screwdriver, wrench, saw, pliers, chisel, drill, level, tape measure, sandpaper"}
{"cat":"tools","slot":"generalization","value":"instrumentation","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization instrumentation\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        hammer, screwdriver, wrench, pliers, saw, drill, ruler, tape measure, level, chisel"}
{"cat":"tools","slot":"generalization","value":"object","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization object\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        hammer, screwdriver, wrench, pliers, saw, drill, level, tape measure, chisel, file"}
{"cat":"tools","slot":"generalization","value":"hand tool","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization hand tool\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        hammer, screwdriver, pliers, wrench, saw, drill, chisel, ruler, tape measure, level"}
{"cat":"tools","slot":"generalization","value":"instrumentality","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization instrumentality\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        hammer, screwdriver, wrench, pliers, saw, drill, chisel, plane, level, tape measure"}
{"cat":"tools","slot":"generalization","value":"device","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization device\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        hammer, screwdriver, wrench, pliers, saw, drill, chisel, plane, level, tape measure"}
{"cat":"tools","slot":"generalization","value":"constraint","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization constraint\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":" hammer, screwdriver, pliers, wrench, saw, drill, chisel, ruler, tape measure, level"}
{"cat":"tools","slot":"generalization","value":"restraint","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization restraint\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        hammer, screwdriver, pliers, wrench, saw, drill, chisel, level, tape measure, ruler"}
{"cat":"tools","slot":"generalization","value":"artifact","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization artifact\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        hammer, screwdriver, wrench, saw, drill, pliers, ruler, tape measure, level, chisel"}
{"cat":"tools","slot":"generalization","value":"cutting tool","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization cutting tool\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        hammer, screwdriver, wrench, pliers, saw, drill, chisel, plane, ruler, level"}
{"cat":"tools","slot":"generalization","value":"cutter","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization cutter\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        hammer, screwdriver, pliers, wrench, saw, drill, chisel, plane, level, tape measure"}
{"cat":"tools","slot":"generalization","value":"cutlery","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization cutlery\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        hammer, screwdriver, saw, wrench, pliers, drill, chisel, ruler, tape measure, level"}
{"cat":"tools","slot":"generalization","value":"mechanical device","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization mechanical device\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        hammer, screwdriver, wrench, saw, drill, pliers, chisel, ruler, level, tape measure"}
{"cat":"tools","slot":"generalization","value":"artefact","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization artefact\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        hammer, screwdriver, wrench, pliers, saw, drill, chisel, level, tape measure, ruler"}
{"cat":"tools","slot":"generalization","value":"fastener","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization fastener\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        hammer, screwdriver, wrench, pliers, saw, drill, chisel, level, tape measure, ruler"}
{"cat":"tools","slot":"generalization","value":"screw","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization screw\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        hammer, screwdriver, wrench, pliers, saw, drill, chisel, ruler, tape measure, level"}
{"cat":"tools","slot":"generalization","value":"arm","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization arm\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"10 words that belong to the category \"tools\": hammer, screwdriver, pliers, wrench, saw, drill, chisel, plane, level, tape measure."}
{"cat":"containers","slot":"bodyPart","value":"shoulder","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"can have or be used with\";         A textual example of the semantic relation is \"bodyPart shoulder\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bottle, jar, box, can, bag, bucket, drum, vase, casket, barrel"}
{"cat":"containers","slot":"bodyPart","value":"hand","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"can have or be used with\";         A textual example of the semantic relation is \"bodyPart hand\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        box, jar, bag, bottle, can, container, carton, crate, drum, package"}
{"cat":"containers","slot":"user","value":"woman","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"are used by\";         A textual example of the semantic relation is \"user women\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        box, bag, jar, can, bottle, bucket, crate, carton, bin, tube"}
{"cat":"containers","slot":"user","value":"waiter","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"are used by\";         A textual example of the semantic relation is \"user waiters\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bags,boxes,jars,cans,bottles,tubs,crates,barrels,bins,containers"}
{"cat":"containers","slot":"efficiency","value":"impermeable","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"efficiency impermeable\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bucket, jar, box, canister, crate, drum, pail, sack, tub, vat"}
{"cat":"containers","slot":"efficiency","value":"recyclable","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"efficiency recyclable\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bucket, jar, bottle, box, bag, canister, crate, drum, carton, vase"}
{"cat":"containers","slot":"efficiency","value":"recycled","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"efficiency recycled\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        box, bag, jar, bottle, canister, crate, drum, bucket, carton, bin"}
{"cat":"containers","slot":"efficiency","value":"breakable","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"efficiency breakable\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bucket, bag, box, jar, canister, bottle, vase, drum, tub, crate"}
{"cat":"containers","slot":"colorPattern","value":"transparent","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"colorPattern transparent\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        box, bag, jar, bottle, can, container, carton, crate, drum, tube"}
{"cat":"containers","slot":"colorPattern","value":"green","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"colorPattern green\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        box, bag, jar, can, bottle, bucket, bin, container, carton, crate"}
{"cat":"containers","slot":"colorPattern","value":"brown","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"colorPattern brown\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        box, jar, canister, bottle, vase, bucket, bag, basket, container, packaging"}
{"cat":"containers","slot":"colorPattern","value":"cream","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"colorPattern cream\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        box, bag, jar, bottle, canister, container, packaging, vessel, carton, crate"}
{"cat":"containers","slot":"purpose","value":"carry","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"are used to\";         A textual example of the semantic relation is \"purpose carry\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bag,box,can,carton,crate,jar,pot,sack,tank,vase"}
{"cat":"containers","slot":"purpose","value":"store","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"are used to\";         A textual example of the semantic relation is \"purpose store\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        box, jar, bottle, can, bag, basket, bucket, crate, carton, container"}
{"cat":"containers","slot":"purpose","value":"cleaning","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"are used for\";         A textual example of the semantic relation is \"purpose cleaning\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bucket, box, jar, bottle, can, vase, basket, bag, pouch, container"}
{"cat":"containers","slot":"purpose","value":"shopping","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"are used for\";         A textual example of the semantic relation is \"purpose shopping\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        shopping bag, box, jar, bottle, canister, crate, carton, pail, drum, casket"}
{"cat":"containers","slot":"purpose","value":"gardening","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"are used for\";         A textual example of the semantic relation is \"purpose gardening\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bucket, box, jar, bottle, canister, crate, drum, bin, vat, cask"}
{"cat":"containers","slot":"purpose","value":"tote","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"are used to\";         A textual example of the semantic relation is \"purpose tote\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        box, jar, can, bottle, bag, basket, bucket, container, vase, pail"}
{"cat":"containers","slot":"purpose","value":"storage","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"are used for\";         A textual example of the semantic relation is \"purpose storage\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        box, jar, bottle, bag, canister, crate, carton, tube, drum, bin"}
{"cat":"containers","slot":"place","value":"cafeteria","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"can be found or used in\";         A textual example of the semantic relation is \"place cafeterias\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        box, jar, bag, bottle, can, carton, crate, drum, pail, tube"}
{"cat":"containers","slot":"place","value":"kitchen","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"can be found or used in\";         A textual example of the semantic relation is \"place kitchens\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bucket,box,bag,jar,can,bottle,crate,barrel,tub,chest"}
{"cat":"containers","slot":"place","value":"supermarket","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"can be found or used in\";         A textual example of the semantic relation is \"place supermarkets\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        box, bag, jar, bottle, can, container, carton, crate, pack, package"}
{"cat":"containers","slot":"place","value":"restaurant","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"can be found or used in\";         A textual example of the semantic relation is \"place restaurants\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        box, bag, jar, can, bottle, carton, crate, barrel, drum, bucket"}
{"cat":"containers","slot":"place","value":"shop","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"can be found or used in\";         A textual example of the semantic relation is \"place shops\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        box, bag, jar, bottle, canister, crate, carton, tub, bin, bucket"}
{"cat":"containers","slot":"place","value":"cellar","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"can be found or used in\";         A textual example of the semantic relation is \"place cellars\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        barrels, bottles, cans, crates, drums, jars, pails, sacks, tanks, vats"}
{"cat":"containers","slot":"place","value":"pub","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"can be found or used in\";         A textual example of the semantic relation is \"place pubs\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        box, bag, jar, bottle, can, carton, crate, drum, bucket, container"}
{"cat":"containers","slot":"place","value":"canteen","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"can be found or used in\";         A textual example of the semantic relation is \"place canteens\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        canteens, bottles, jars, boxes, bags, crates, barrels, drums, buckets, vases"}
{"cat":"containers","slot":"place","value":"garden","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"can be found or used in\";         A textual example of the semantic relation is \"place gardens\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        box, bag, jar, can, bottle, bucket, bin, crate, carton, container"}
{"cat":"containers","slot":"place","value":"beach","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"can be found or used in\";         A textual example of the semantic relation is \"place beaches\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bucket, bag, box, jar, canister, crate, drum, casket, chest, container"}
{"cat":"containers","slot":"efficiency","value":"plastic","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"efficiency plastic\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bucket, box, jar, bag, canister, drum, crate, barrel, carton, container"}
{"cat":"containers","slot":"efficiency","value":"shaped","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"efficiency shaped\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bucket, box, jar, canister, vase, bottle, container, crate, carton, drum"}
{"cat":"containers","slot":"part","value":"bung","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part bung\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        box, bag, jar, can, bottle, vase, bucket, crate, drum, carton"}
{"cat":"containers","slot":"part","value":"lid","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part lid\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        box, jar, bottle, canister, bag, pouch, carton, tub, drum, crate"}
{"cat":"containers","slot":"part","value":"hoop","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part hoop\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        box, jar, can, bottle, bag, bucket, carton, bin, crate, drum"}
{"cat":"containers","slot":"part","value":"zipper","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part zipper\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bag, box, can, case, container, jar, pouch, sack, tube, vase"}
{"cat":"containers","slot":"part","value":"label","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part label\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        box, bag, jar, bottle, canister, crate, carton, bin, bucket, tub"}
{"cat":"containers","slot":"part","value":"quintal","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part quintal\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bag, box, bottle, can, carton, crate, drum, jar, pail, sack"}
{"cat":"containers","slot":"part","value":"tap","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part tap\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        jar, box, bag, bottle, can, carton, crate, drum, pail, vase"}
{"cat":"containers","slot":"part","value":"rim","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part rim\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        box, jar, can, bottle, bag, basket, carton, crate, drum, vase"}
{"cat":"containers","slot":"part","value":"centner","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part centner\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        box, jar, bottle, can, bag, basket, bucket, carton, crate, drum"}
{"cat":"containers","slot":"part","value":"zip","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part zip\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        box, jar, bag, bottle, canister, carton, crate, drum, pouch, tube"}
{"cat":"containers","slot":"part","value":"compartment","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part compartment\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        box, bag, jar, can, bottle, container, vase, bucket, carton, crate"}
{"cat":"containers","slot":"part","value":"cwt","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part cwt\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        box, bag, jar, bottle, can, carton, crate, drum, pail, tub"}
{"cat":"containers","slot":"part","value":"pocket","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part pocket\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bag, box, jar, can, bottle, bucket, pouch, sack, container, vase"}
{"cat":"containers","slot":"part","value":"rear of barrel","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part rear of barrel\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        barrel, bucket, canister, crate, drum, jar, jug, pail, pot, vat"}
{"cat":"containers","slot":"part","value":"neck","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part neck\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bottle, jar, canister, vase, bowl, box, bag, carton, crate, bucket"}
{"cat":"containers","slot":"part","value":"breech","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part breech\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        box, jar, can, bottle, bag, bucket, bin, carton, crate, drum"}
{"cat":"containers","slot":"part","value":"hundredweight","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part hundredweight\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        barrel, crate, drum, box, jar, canister, carton, sack, cask, bin"}
{"cat":"containers","slot":"part","value":"spigot","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part spigot\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bucket, barrel, jar, canister, bottle, vat, cask, drum, bin, crate"}
{"cat":"containers","slot":"part","value":"bottlecap","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part bottlecap\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bottle, jar, box, bag, canister, carton, crate, drum, jug, vat"}
{"cat":"containers","slot":"part","value":"cap","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part cap\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        box, bag, jar, can, bottle, vase, container, drum, crate, carton"}
{"cat":"containers","slot":"part","value":"mouth","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part mouth\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        box, jar, bottle, can, bag, basket, carton, crate, cup, jug"}
{"cat":"containers","slot":"part","value":"rear of tube","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part rear of tube\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bucket, bag, box, jar, bottle, can, container, carton, crate, drum"}
{"cat":"containers","slot":"part","value":"brim","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part brim\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        cup, bowl, jar, vase, bucket, bottle, canister, flask, jug, pitcher"}
{"cat":"containers","slot":"part","value":"base","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part base\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        box, jar, bag, bottle, canister, crate, drum, pail, tub, vase"}
{"cat":"containers","slot":"part","value":"short hundredweight","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part short hundredweight\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        barrel, box, crate, drum, jar, pail, sack, tub, vat, canister"}
{"cat":"containers","slot":"part","value":"strap","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part strap\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        box, jar, bottle, canister, vase, bucket, basket, bag, bin, pouch"}
{"cat":"containers","slot":"part","value":"cork","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part cork\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bottle, jar, box, bag, canister, crate, carton, drum, vat, barrel"}
{"cat":"containers","slot":"part","value":"cental","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part cental\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        box, jar, bottle, can, bag, basket, crate, carton, container, packaging"}
{"cat":"containers","slot":"part","value":"stave","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part stave\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        box, jar, bottle, bag, can, carton, crate, drum, jug, tub"}
{"cat":"containers","slot":"part","value":"clasp","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part clasp\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        box, jar, bottle, canister, vase, bucket, bag, basket, crate, barrel"}
{"cat":"containers","slot":"part","value":"stopper","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part stopper\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bottle, jar, box, bag, canister, carton, crate, drum, pail, vat"}
{"cat":"containers","slot":"part","value":"spout","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part spout\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        cup, mug, bowl, jar, vase, bottle, jug, canister, flask, bucket"}
{"cat":"containers","slot":"part","value":"handle","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part handle\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        cup, bottle, jar, can, box, bag, bucket, vase, drum, carton"}
{"cat":"containers","slot":"content","value":"liquid","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"contain\";         A textual example of the semantic relation is \"content liquids\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bottle, jar, jug, canister, vase, flask, bucket, barrel, tank, container"}
{"cat":"containers","slot":"content","value":"wine","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"contain\";         A textual example of the semantic relation is \"content wines\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bottles, jugs, barrels, casks, crates, boxes, jars, cans, cartons, bags"}
{"cat":"containers","slot":"content","value":"drink","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"contain\";         A textual example of the semantic relation is \"content drinks\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        cup, mug, bottle, jar, can, bowl, vase, bucket, box, bag"}
{"cat":"containers","slot":"content","value":"beer","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"contain\";         A textual example of the semantic relation is \"content beers\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bag, box, can, case, crate, jar, pouch, sack, tube, vat"}
{"cat":"containers","slot":"content","value":"grocery","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"contain\";         A textual example of the semantic relation is \"content groceries\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        box, bag, jar, can, bottle, bin, container, carton, crate, package"}
{"cat":"containers","slot":"content","value":"sand","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"contain\";         A textual example of the semantic relation is \"content sand\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        box, bag, jar, bottle, canister, container, crate, drum, bucket, carton"}
{"cat":"containers","slot":"content","value":"liquor","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"contain\";         A textual example of the semantic relation is \"content liquors\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bottle, jar, canister, flask, barrel, vat, cask, carboy, demijohn, keg"}
{"cat":"containers","slot":"content","value":"soda","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"contain\";         A textual example of the semantic relation is \"content sodas\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bottles, cans, jars, boxes, bags, cartons, crates, barrels, vats, vessels"}
{"cat":"containers","slot":"content","value":"backpack","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"contain\";         A textual example of the semantic relation is \"content backpacks\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        backpack, suitcase, jar, box, canister, pouch, sack, bag, container, vessel"}
{"cat":"containers","slot":"content","value":"ice","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"contain\";         A textual example of the semantic relation is \"content ices\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        box, bag, jar, bottle, canister, container, vessel, tub, bucket, drum"}
{"cat":"containers","slot":"content","value":"water","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"contain\";         A textual example of the semantic relation is \"content water\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        jug, bowl, vase, bucket, jar, bottle, box, bag, canister, container"}
{"cat":"containers","slot":"content","value":"gardening","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"contain\";         A textual example of the semantic relation is \"content gardenings\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bag, box, can, carton, case, crate, jar, pouch, sack, tube"}
{"cat":"containers","slot":"content","value":"wallet","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"contain\";         A textual example of the semantic relation is \"content wallets\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bag, box, canister, carton, crate, jar, pouch, sack, tube, vat"}
{"cat":"containers","slot":"content","value":"spray","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"contain\";         A textual example of the semantic relation is \"content sprays\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bottle, jar, can, box, bag, bucket, bin, vase, carton, container"}
{"cat":"containers","slot":"content","value":"lunch","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"contain\";         A textual example of the semantic relation is \"content lunches\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        box, bag, jar, bottle, canister, container, crate, carton, pack, pouch"}
{"cat":"containers","slot":"content","value":"purse","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"contain\";         A textual example of the semantic relation is \"content purses\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        baskets,boxes,cans,crates,jars,purses,sacks,tins,tubs,vats"}
{"cat":"containers","slot":"content","value":"muffin","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"contain\";         A textual example of the semantic relation is \"content muffins\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        box, jar, can, bag, bottle, vase, bucket, carton, crate, drum"}
{"cat":"containers","slot":"content","value":"biscuit","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"contain\";         A textual example of the semantic relation is \"content biscuits\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        box, bag, jar, can, bottle, bin, carton, crate, container, packaging"}
{"cat":"containers","slot":"content","value":"haversack","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"contain\";         A textual example of the semantic relation is \"content haversacks\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bucket, box, jar, canister, vase, flask, bottle, bag, bin, drum"}
{"cat":"containers","slot":"content","value":"flower","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"contain\";         A textual example of the semantic relation is \"content flowers\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        vase, pot, jar, basket, box, bag, crate, carton, canister, bucket"}
{"cat":"containers","slot":"material","value":"metal","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"can be made of\";         A textual example of the semantic relation is \"material metal\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bucket, box, jar, canister, vase, bottle, flask, drum, barrel, crate"}
{"cat":"containers","slot":"material","value":"wood","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"can be made of\";         A textual example of the semantic relation is \"material wood\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        box, jar, bottle, can, bag, basket, bucket, barrel, crate, carton"}
{"cat":"containers","slot":"material","value":"polyester","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"can be made of\";         A textual example of the semantic relation is \"material polyester\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        container, box, jar, bottle, canister, vase, bucket, bag, basket, pouch"}
{"cat":"containers","slot":"material","value":"canvas","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"can be made of\";         A textual example of the semantic relation is \"material canvas\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        box, bag, bottle, jar, can, container, vessel, tub, drum, bin"}
{"cat":"containers","slot":"material","value":"ceramic","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"can be made of\";         A textual example of the semantic relation is \"material ceramic\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bowl, jar, vase, pot, bucket, bottle, canister, jug, urn, teapot"}
{"cat":"containers","slot":"material","value":"cotton","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"can be made of\";         A textual example of the semantic relation is \"material cotton\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        box, bag, jar, can, bottle, bucket, drum, crate, carton, container"}
{"cat":"containers","slot":"material","value":"fibre","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"can be made of\";         A textual example of the semantic relation is \"material fibre\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        box, bag, jar, bottle, canister, drum, bucket, carton, crate, container"}
{"cat":"containers","slot":"material","value":"leather","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"can be made of\";         A textual example of the semantic relation is \"material leather\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        box, bag, jar, can, bottle, vase, bucket, drum, crate, casket"}
{"cat":"containers","slot":"material","value":"fabric","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"can be made of\";         A textual example of the semantic relation is \"material fabric\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        box, bag, jar, bottle, canister, crate, drum, carton, casket, urn"}
{"cat":"containers","slot":"material","value":"cloth","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"can be made of\";         A textual example of the semantic relation is \"material cloth\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        box, bag, jar, bottle, canister, crate, casket, carton, drum, vase"}
{"cat":"containers","slot":"material","value":"paper","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"can be made of\";         A textual example of the semantic relation is \"material paper\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bag, box, can, carton, container, jar, pouch, sack, tube, vessel"}
{"cat":"containers","slot":"material","value":"wicker","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"can be made of\";         A textual example of the semantic relation is \"material wicker\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        basket,box,jar,vase,bucket,barrel,crate,chest,canister,container"}
{"cat":"containers","slot":"material","value":"aluminum","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"can be made of\";         A textual example of the semantic relation is \"material aluminum\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        cup, bowl, jar, bottle, can, box, bag, bucket, vase, tube"}
{"cat":"containers","slot":"material","value":"clay","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"can be made of\";         A textual example of the semantic relation is \"material clay\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        box, jar, vase, bottle, canister, urn, casket, bucket, basket, bag"}
{"cat":"containers","slot":"shape","value":"hollow","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"shape hollow\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        box, bag, jar, can, bottle, bucket, vase, drum, bin, crate"}
{"cat":"containers","slot":"shape","value":"circular","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"shape circular\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        jar, bucket, vase, barrel, box, canister, bottle, crate, drum, bin"}
{"cat":"containers","slot":"shape","value":"round","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"shape round\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bucket, box, can, carton, crate, drum, jar, pail, sack, tub"}
{"cat":"containers","slot":"shape","value":"cylindrical","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"shape cylindrical\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bottle, jar, can, box, bag, bucket, bin, basket, container, vessel"}
{"cat":"containers","slot":"shape","value":"conical","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"shape conical\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        cup, mug, jar, bottle, canister, vase, bowl, bucket, jug, pot"}
{"cat":"containers","slot":"shape","value":"curved","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"shape curved\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bag, box, can, carton, case, jar, jug, pouch, sack, tube"}
{"cat":"containers","slot":"shape","value":"rectangular","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"shape rectangular\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        box, bag, jar, bottle, canister, crate, carton, drum, casket, barrel"}
{"cat":"containers","slot":"shape","value":"square","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"shape square\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        box, bag, jar, bottle, can, container, crate, drum, carton, pack"}
{"cat":"containers","slot":"shape","value":"flat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"shape flat\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        box, jar, bottle, canister, bin, crate, carton, pouch, bag, container"}
{"cat":"containers","slot":"shape","value":"dry","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"shape dry\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        box, jar, bottle, canister, vase, bucket, bag, basket, crate, barrel"}
{"cat":"containers","slot":"material","value":"plastic","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"can be made of\";         A textual example of the semantic relation is \"material plastic\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bottle, jar, can, box, bag, bucket, crate, carton, tube, drum"}
{"cat":"containers","slot":"efficiency","value":"reusable","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"efficiency reusable\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bag, box, can, carton, container, crate, jar, pail, pot, tube"}
{"cat":"containers","slot":"part","value":"glass","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"can have\";         A textual example of the semantic relation is \"part glass\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        cup, glass, jar, bottle, vase, bowl, jug, can, box, bucket"}
{"cat":"containers","slot":"content","value":"bag","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"contain\";         A textual example of the semantic relation is \"content bags\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bags, boxes, jars, bottles, cans, crates, barrels, drums, vats, casks"}
{"cat":"containers","slot":"material","value":"reusable","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"can be made of\";         A textual example of the semantic relation is \"material reusable\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        box, jar, bottle, canister, vase, bucket, tub, basket, bag, container"}
{"cat":"containers","slot":"material","value":"recycled","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"can be made of\";         A textual example of the semantic relation is \"material recycled\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bottle, jar, can, box, bag, carton, container, crate, drum, bin"}
{"cat":"containers","slot":"material","value":"glass","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"can be made of\";         A textual example of the semantic relation is \"material glass\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        cup, jar, vase, bottle, bowl, pot, bucket, canister, flask, urn"}
{"cat":"containers","slot":"generalization","value":"instrumentation","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization instrumentation\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        box, bag, jar, can, bottle, vase, bucket, crate, drum, container"}
{"cat":"containers","slot":"generalization","value":"instrumentality","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization instrumentality\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        box, jar, bottle, canister, bag, bucket, carton, crate, drum, bin"}
{"cat":"containers","slot":"generalization","value":"artifact","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization artifact\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        box, bag, jar, bottle, canister, crate, carton, barrel, drum, bucket"}
{"cat":"containers","slot":"generalization","value":"artefact","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization artefact\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        box, bag, jar, can, bottle, container, vessel, drum, casket, chest"}
{"cat":"containers","slot":"generalization","value":"container","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization container\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        box, bag, jar, canister, bottle, crate, carton, container, vessel, drum"}
{"cat":"containers","slot":"generalization","value":"receptacle","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization receptacle\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        box, bag, jar, bottle, canister, container, vessel, tub, bucket, crate"}
{"cat":"containers","slot":"generalization","value":"vessel","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization vessel\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        box, jar, can, bottle, bag, bucket, container, carton, crate, drum"}
{"cat":"containers","slot":"generalization","value":"sheaf","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization sheaf\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        box, bag, jar, canister, bottle, crate, drum, bucket, carton, bin"}
{"cat":"containers","slot":"generalization","value":"food product","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization food product\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bag, box, can, carton, crate, jar, package, pouch, sack, tin"}
{"cat":"containers","slot":"generalization","value":"avoirdupois unit","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization avoirdupois unit\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        box, bag, jar, can, bottle, crate, carton, drum, bucket, container"}
{"cat":"containers","slot":"generalization","value":"unit","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization unit\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        box, bag, jar, can, bottle, container, carton, crate, drum, bin"}
{"cat":"containers","slot":"generalization","value":"tube","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization tube\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        box, bag, jar, can, bottle, tub, bucket, crate, carton, container"}
{"cat":"containers","slot":"generalization","value":"cookware","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization cookware\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        pot, pan, kettle, bowl, jar, bottle, canister, vase, bucket, box"}
{"cat":"containers","slot":"generalization","value":"parcel","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization parcel\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        box, bag, jar, can, bottle, crate, carton, container, package, parcel"}
{"cat":"containers","slot":"generalization","value":"construction","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization construction\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        box, jar, bottle, can, bag, carton, crate, drum, vase, pot"}
{"cat":"containers","slot":"generalization","value":"framework","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization framework\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        box, bag, jar, bottle, canister, crate, carton, bin, container, vessel"}
{"cat":"containers","slot":"generalization","value":"utensil","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization utensil\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        box, jar, bottle, can, bag, basket, carton, crate, drum, tub"}
{"cat":"containers","slot":"generalization","value":"unit of measurement","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization unit of measurement\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        box, bag, jar, can, bottle, drum, carton, crate, bin, container"}
{"cat":"containers","slot":"generalization","value":"conduit","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization conduit\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        box, bag, jar, can, bottle, bucket, basket, bin, container, vessel"}
{"cat":"containers","slot":"generalization","value":"bundle","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization bundle\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        box, bag, jar, bottle, canister, crate, carton, drum, bin, bucket"}
{"cat":"containers","slot":"generalization","value":"passage","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization passage\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        box, bag, jar, canister, bottle, vase, bucket, basket, crate, container"}
{"cat":"containers","slot":"generalization","value":"nutrient","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization nutrient\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        box, jar, bag, can, bottle, bucket, carton, crate, drum, container"}
{"cat":"containers","slot":"generalization","value":"structure","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization structure\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        box, bag, jar, can, bottle, crate, carton, tub, bucket, container"}
{"cat":"containers","slot":"generalization","value":"whole","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization whole\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        box, bag, jar, can, bottle, bin, bucket, carton, crate, container"}
{"cat":"containers","slot":"generalization","value":"kitchen utensil","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization kitchen utensil\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        jar, box, can, bottle, vase, bucket, bag, bin, pail, tub"}
{"cat":"containers","slot":"generalization","value":"cooking utensil","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization cooking utensil\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bag, box, canister, carton, crate, drum, jar, pail, sack, tub"}
{"cat":"containers","slot":"generalization","value":"package","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization package\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        box, bag, jar, can, bottle, bucket, bin, container, crate, carton"}
{"cat":"containers","slot":"generalization","value":"foodstuff","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization foodstuff\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        jar, can, bottle, box, bag, bucket, carton, crate, drum, barrel"}
{"cat":"containers","slot":"generalization","value":"tubing","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization tubing\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        box, bag, jar, canister, bottle, drum, carton, crate, bucket, container"}
{"cat":"containers","slot":"generalization","value":"supporting structure","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization supporting structure\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        box, jar, can, bottle, bag, carton, crate, drum, tube, vase"}
{"cat":"containers","slot":"generalization","value":"mass unit","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization mass unit\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        box, bag, jar, canister, bottle, crate, drum, carton, bin, container"}
{"cat":"containers","slot":"generalization","value":"meal","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization meal\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        box, jar, canister, bag, bottle, container, vessel, tub, carton, crate"}
{"cat":"containers","slot":"generalization","value":"food","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization food\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        jar, bucket, box, bag, can, bottle, carton, crate, drum, vat"}
{"cat":"containers","slot":"shape","value":"shaped","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"can be\";         A textual example of the semantic relation is \"shape shaped\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        box, jar, bottle, canister, carton, crate, drum, pail, sack, vat"}
{"cat":"containers","slot":"content","value":"reusable","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"contain\";         A textual example of the semantic relation is \"content reusables\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        box, bag, jar, bottle, can, container, vessel, tub, bin, crate"}
{"cat":"containers","slot":"generalization","value":"bag","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"are\";         A textual example of the semantic relation is \"generalization bag\";         The desired output is: comma-separated list of words. \n        ### Response: \n        Output: ","result":"\n        bag, box, jar, canister, carton, crate, drum, pouch, sack, tub"}
