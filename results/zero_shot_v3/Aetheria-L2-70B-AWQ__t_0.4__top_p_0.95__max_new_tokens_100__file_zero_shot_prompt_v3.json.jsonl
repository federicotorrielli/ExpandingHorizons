{"cat":"animals","slot":"product","value":"wax","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All types of entity that can be derived from wax through its processing or through natural processes.\";         A textual example of the semantic relation is \"can produce wax\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"bee\", \"honeybee\", \"beehive\", \"beeswax\", \"candle\", \"waxworm\", \"moth\", \"honeycomb\", \"waxwing\", \"waxbill\"]"}
{"cat":"animals","slot":"product","value":"propolis","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All types of entity that can be derived from propolis through its processing or through natural processes.\";         A textual example of the semantic relation is \"can produce propolis\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['bee', 'honeybee', 'bumblebee', 'wasp', 'hornet', 'yellowjacket', 'stingless bee', 'solitary bee', 'hive', 'colony']"}
{"cat":"animals","slot":"product","value":"mucus","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All types of entity that can be derived from mucus through its processing or through natural processes.\";         A textual example of the semantic relation is \"can produce mucus\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['slug', 'snail', 'octopus', 'squid', 'slug', 'snail', 'octopus', 'squid', 'slug', 'snail']"}
{"cat":"animals","slot":"product","value":"honey","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All types of entity that can be derived from honey through its processing or through natural processes.\";         A textual example of the semantic relation is \"can produce honey\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['bee', 'honeybee', 'bumblebee', 'wasp', 'hornet', 'ant', 'butterfly', 'hummingbird', 'honeyguide', 'honey badger']"}
{"cat":"animals","slot":"time","value":"summer","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All the entries which link summer with the time flow or with specific moments of time.\";         A textual example of the semantic relation is \"are active during summer\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"seagull\", \"butterfly\", \"turtle\", \"crab\", \"lobster\", \"fish\", \"dolphin\", \"seal\", \"whale\", \"shark\"]"}
{"cat":"animals","slot":"time","value":"night","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All the entries which link night with the time flow or with specific moments of time.\";         A textual example of the semantic relation is \"are active during night\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"owl\", \"bat\", \"fox\", \"wolf\", \"cat\", \"rat\", \"raccoon\", \"possum\", \"deer\", \"skunk\"]"}
{"cat":"animals","slot":"sound","value":"growl","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All the entries with which the sound of growl can be described.\";         A textual example of the semantic relation is \"can growl\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['lion', 'tiger', 'bear', 'wolf', 'dog', 'hyena', 'puma', 'leopard', 'jaguar', 'lynx']"}
{"cat":"animals","slot":"sound","value":"trumpeting","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All the entries with which the sound of trumpeting can be described.\";         A textual example of the semantic relation is \"can trumpeting\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"elephant\", \"hippopotamus\", \"rhino\", \"walrus\", \"tapir\", \"giraffe\", \"deer\", \"elk\", \"moose\", \"swan\"]"}
{"cat":"animals","slot":"sound","value":"bark","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All the entries with which the sound of bark can be described.\";         A textual example of the semantic relation is \"can bark\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['dog', 'fox', 'wolf', 'coyote', 'jackal', 'dingo', 'hyena', 'seal', 'walrus']"}
{"cat":"animals","slot":"sound","value":"croaking","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All the entries with which the sound of croaking can be described.\";         A textual example of the semantic relation is \"can croaking\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['frog', 'toad', 'cicada', 'raven', 'crow', 'raven', 'bullfrog', 'corvids', 'cicadas', 'crows']"}
{"cat":"animals","slot":"sound","value":"cry","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All the entries with which the sound of cry can be described.\";         A textual example of the semantic relation is \" cry\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"baby\", \"cat\", \"dog\", \"bird\", \"monkey\", \"elephant\", \"pig\", \"sheep\", \"cow\", \"horse\"]"}
{"cat":"animals","slot":"shape","value":"elongated","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Form of elongated.\";         A textual example of the semantic relation is \"can be elongated\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['snake', 'eel', 'python', 'constrictor', 'anaconda', 'boa', 'viper', 'cobra', 'rattlesnake', 'vine snake']"}
{"cat":"animals","slot":"shape","value":"long","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Form of long.\";         A textual example of the semantic relation is \"can be long\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"snake\", \"alligator\", \"python\", \"anaconda\", \"crocodile\", \"lizard\", \"centipede\", \"earthworm\", \"constrictor\"]"}
{"cat":"animals","slot":"accessory","value":"leash","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All those objects that may have to do with leash. The constraint is that there must be a physical contact and that the use of such object is strictly necessary for leash.\";         A textual example of the semantic relation is \"are related with leash\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"dog\", \"cat\", \"horse\", \"leopard\", \"lion\", \"tiger\", \"elephant\", \"giraffe\", \"zebra\", \"monkey\"]"}
{"cat":"animals","slot":"accessory","value":"muzzle","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All those objects that may have to do with muzzle. The constraint is that there must be a physical contact and that the use of such object is strictly necessary for muzzle.\";         A textual example of the semantic relation is \"are related with muzzle\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['dog', 'cat', 'horse', 'cow', 'pig', 'sheep', 'goat', 'deer', 'fox', 'wolf']"}
{"cat":"animals","slot":"shape","value":"circular","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Form of circular.\";         A textual example of the semantic relation is \"can be circular\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['ring', 'circle', 'loop', 'hoop', 'wheel', 'disc', 'orb', 'sphere', 'ball', 'coil']"}
{"cat":"animals","slot":"shape","value":"round","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Form of round.\";         A textual example of the semantic relation is \"can be round\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['turtle', 'koala', 'panda', 'bear', 'pig', 'cat', 'dog', 'rabbit', 'hamster', 'mouse']"}
{"cat":"animals","slot":"accessory","value":"dog","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All those objects that may have to do with dog. The constraint is that there must be a physical contact and that the use of such object is strictly necessary for dog.\";         A textual example of the semantic relation is \"are related with dog\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['leash', 'collar', 'food', 'water', 'toy', 'bed', 'brush', 'veterinarian', 'groomer', 'kennel']"}
{"cat":"animals","slot":"shape","value":"pear","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Form of pear.\";         A textual example of the semantic relation is \"can be pear\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['cat', 'dog', 'horse', 'cow', 'pig', 'sheep', 'goat', 'rabbit', 'deer', 'fox']"}
{"cat":"animals","slot":"group","value":"herd","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Names that indicates a group of animals of the same species of herd.\";         A textual example of the semantic relation is \"are grouped in herd\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"buffaloes\", \"cattle\", \"deer\", \"elephants\", \"giraffes\", \"hippos\", \"horses\", \"sheep\", \"zebras\"]"}
{"cat":"animals","slot":"group","value":"swarm","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Names that indicates a group of animals of the same species of swarm.\";         A textual example of the semantic relation is \"are grouped in swarm\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"bees\", \"ants\", \"locusts\", \"fish\", \"birds\", \"bats\", \"cows\", \"sheep\", \"monkeys\", \"lions\"]"}
{"cat":"animals","slot":"group","value":"infestation","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Names that indicates a group of animals of the same species of infestation.\";         A textual example of the semantic relation is \"are grouped in infestation\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"swarm\", \"flock\", \"herd\", \"school\", \"pack\", \"colony\", \"gaggle\", \"pride\", \"murder\", \"pod\"]"}
{"cat":"animals","slot":"sound","value":"yelp","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All the entries with which the sound of yelp can be described.\";         A textual example of the semantic relation is \" yelp\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['dog', 'puppy', 'fox', 'coyote', 'wolf', 'hyena', 'seal', 'pig', 'deer', 'cat']"}
{"cat":"animals","slot":"group","value":"hive","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Names that indicates a group of animals of the same species of hive.\";         A textual example of the semantic relation is \"are grouped in hive\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"bees\", \"wasps\", \"hornets\", \"bumblebees\", \"honeybees\", \"yellowjackets\", \"ants\", \"termites\", \"beetles\", \"flies\"]"}
{"cat":"animals","slot":"sound","value":"howl","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All the entries with which the sound of howl can be described.\";         A textual example of the semantic relation is \"can howl\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['wolf', 'coyote', 'dog', 'fox', 'hyena', 'jackal', 'lynx', 'puma', 'raccoon', 'tiger']"}
{"cat":"animals","slot":"accessory","value":"collar","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All those objects that may have to do with collar. The constraint is that there must be a physical contact and that the use of such object is strictly necessary for collar.\";         A textual example of the semantic relation is \"are related with collar\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['dog', 'cat', 'horse', 'cow', 'pig', 'sheep', 'goat', 'deer', 'fox', 'wolf']"}
{"cat":"animals","slot":"user","value":"cook","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All the kinds of living beings which are able to operate, employ, interact with or perceive cook.\";         A textual example of the semantic relation is \"are used by cooks\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"chicken\", \"beef\", \"pork\", \"salmon\", \"shrimp\", \"lobster\", \"crab\", \"turkey\", \"duck\", \"quail\"]"}
{"cat":"animals","slot":"user","value":"lover","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All the kinds of living beings which are able to operate, employ, interact with or perceive lover.\";         A textual example of the semantic relation is \"are used by lovers\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['dog', 'cat', 'horse', 'bird', 'fish', 'snake', 'turtle', 'deer', 'rabbit', 'fox']"}
{"cat":"animals","slot":"user","value":"hunter","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All the kinds of living beings which are able to operate, employ, interact with or perceive hunter.\";         A textual example of the semantic relation is \"are used by hunters\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"dog\", \"cat\", \"deer\", \"rabbit\", \"fox\", \"duck\", \"quail\", \"pigeon\", \"hare\", \"wolf\"]"}
{"cat":"animals","slot":"user","value":"beekeeper","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All the kinds of living beings which are able to operate, employ, interact with or perceive beekeeper.\";         A textual example of the semantic relation is \"are used by beekeepers\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['bee', 'honeybee', 'queen bee', 'worker bee', 'drone', 'bumblebee', 'pollinator', 'insect', 'wasp', 'hornet']"}
{"cat":"animals","slot":"user","value":"poacher","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All the kinds of living beings which are able to operate, employ, interact with or perceive poacher.\";         A textual example of the semantic relation is \"are used by poachers\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['elephant', 'rhino', 'tiger', 'leopard', 'lion', 'giraffe', 'zebra', 'hippo', 'crocodile', 'pangolin']"}
{"cat":"animals","slot":"user","value":"blind","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All the kinds of living beings which are able to operate, employ, interact with or perceive blind.\";         A textual example of the semantic relation is \"are used by blinds\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"dog\", \"cat\", \"horse\", \"elephant\", \"lion\", \"tiger\", \"giraffe\", \"zebra\", \"panda\", \"koala\"]"}
{"cat":"animals","slot":"user","value":"policeman","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All the kinds of living beings which are able to operate, employ, interact with or perceive policeman.\";         A textual example of the semantic relation is \"are used by policemen\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"dog\", \"horse\", \"elephant\", \"monkey\", \"rat\", \"cat\", \"bird\", \"snake\", \"tiger\", \"lion\"]"}
{"cat":"animals","slot":"user","value":"shepherd","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All the kinds of living beings which are able to operate, employ, interact with or perceive shepherd.\";         A textual example of the semantic relation is \"are used by shepherds\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['dog', 'sheep', 'goat', 'horse', 'donkey', 'cow', 'llama', 'alpaca', 'camel', 'pig']"}
{"cat":"animals","slot":"user","value":"owner","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All the kinds of living beings which are able to operate, employ, interact with or perceive owner.\";         A textual example of the semantic relation is \"are used by owners\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"dog\", \"cat\", \"horse\", \"cow\", \"pig\", \"sheep\", \"goat\", \"chicken\", \"duck\", \"goose\"]"}
{"cat":"animals","slot":"accessory","value":"kennel","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All those objects that may have to do with kennel. The constraint is that there must be a physical contact and that the use of such object is strictly necessary for kennel.\";         A textual example of the semantic relation is \"are related with kennel\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"dog\", \"cat\", \"puppy\", \"kitten\", \"rabbit\", \"hamster\", \"guinea pig\", \"bird\", \"snake\", \"fish\"]"}
{"cat":"animals","slot":"accessory","value":"trainer","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All those objects that may have to do with trainer. The constraint is that there must be a physical contact and that the use of such object is strictly necessary for trainer.\";         A textual example of the semantic relation is \"are related with trainer\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['horse', 'dog', 'cat', 'elephant', 'lion', 'tiger', 'monkey', 'giraffe', 'zebra', 'whale']"}
{"cat":"animals","slot":"accessory","value":"handler","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All those objects that may have to do with handler. The constraint is that there must be a physical contact and that the use of such object is strictly necessary for handler.\";         A textual example of the semantic relation is \"are related with handler\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"dog\", \"cat\", \"horse\", \"cow\", \"pig\", \"sheep\", \"goat\", \"chicken\", \"duck\", \"goose\"]"}
{"cat":"animals","slot":"purpose","value":"food","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All of the purposes for which food is interacted with.\";         A textual example of the semantic relation is \"are used for food\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"cow\", \"pig\", \"chicken\", \"salmon\", \"shrimp\", \"lobster\", \"deer\", \"duck\", \"turkey\", \"beef\"]"}
{"cat":"animals","slot":"purpose","value":"attraction","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All of the purposes for which attraction is interacted with.\";         A textual example of the semantic relation is \"are used for attraction\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['peacock', 'deer', 'butterfly', 'hummingbird', 'tiger', 'zebra', 'giraffe', 'elephant', 'leopard', 'jaguar']"}
{"cat":"animals","slot":"purpose","value":"research","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All of the purposes for which research is interacted with.\";         A textual example of the semantic relation is \"are used for research\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['mouse', 'rat', 'guinea pig', 'rabbit', 'hamster', 'zebrafish', 'fruit fly', 'worm', 'chicken', 'pig']"}
{"cat":"animals","slot":"purpose","value":"guard","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All of the purposes for which guard is interacted with.\";         A textual example of the semantic relation is \"are used for guard\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['dog', 'wolf', 'lion', 'tiger', 'bear', 'hyena', 'crocodile', 'alligator', 'elephant', 'hippopotamus']"}
{"cat":"animals","slot":"purpose","value":"hunting","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All of the purposes for which hunting is interacted with.\";         A textual example of the semantic relation is \"are used for hunting\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"deer\", \"duck\", \"quail\", \"rabbit\", \"pheasant\", \"moose\", \"elk\", \"bear\", \"wolf\", \"fox\"]"}
{"cat":"animals","slot":"purpose","value":"guard","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All of the purposes for which guard is interacted with.\";         A textual example of the semantic relation is \"are used to guard\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"dog\", \"wolf\", \"lion\", \"tiger\", \"bear\", \"hyena\", \"crocodile\", \"alligator\", \"rhinoceros\", \"hippopotamus\"]"}
{"cat":"animals","slot":"purpose","value":"wild","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All of the purposes for which wild is interacted with.\";         A textual example of the semantic relation is \"are used for wild\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"deer\", \"bear\", \"wolf\", \"fox\", \"elk\", \"moose\", \"cougar\", \"coyote\", \"bison\", \"boar\"]"}
{"cat":"animals","slot":"purpose","value":"transport","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All of the purposes for which transport is interacted with.\";         A textual example of the semantic relation is \"are used for transport\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"horse\", \"donkey\", \"camel\", \"elephant\", \"llama\", \"yak\", \"ox\", \"dog\", \"goat\", \"sheep\"]"}
{"cat":"animals","slot":"purpose","value":"beast of burden","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All of the purposes for which beast of burden is interacted with.\";         A textual example of the semantic relation is \"are used for beast of burden\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"donkey\", \"mule\", \"horse\", \"camel\", \"llama\", \"ox\", \"yak\", \"elephant\", \"water buffalo\", \"reindeer\"]"}
{"cat":"animals","slot":"purpose","value":"haulage","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All of the purposes for which haulage is interacted with.\";         A textual example of the semantic relation is \"are used for haulage\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"horse\", \"donkey\", \"ox\", \"elephant\", \"camel\", \"llama\", \"dog\", \"goat\", \"reindeer\", \"yak\"]"}
{"cat":"animals","slot":"purpose","value":"stray","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All of the purposes for which stray is interacted with.\";         A textual example of the semantic relation is \"are used for stray\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['dog', 'cat', 'rabbit', 'horse', 'cow', 'pig', 'sheep', 'goat', 'chicken', 'duck']"}
{"cat":"animals","slot":"behavior","value":"faithful","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All the psychological features of faithful, including they attitude to they nature.\";         A textual example of the semantic relation is \"can be faithful\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['dog', 'cat', 'horse', 'elephant', 'penguin', 'wolf', 'fox', 'deer', 'rabbit', 'squirrel']"}
{"cat":"animals","slot":"behavior","value":"cute","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All the psychological features of cute, including they attitude to they nature.\";         A textual example of the semantic relation is \"can be cute\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"puppy\", \"kitten\", \"bunny\", \"hamster\", \"panda\", \"otter\", \"koala\", \"penguin\", \"seal\", \"deer\"]"}
{"cat":"animals","slot":"behavior","value":"loyal","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All the psychological features of loyal, including they attitude to they nature.\";         A textual example of the semantic relation is \"can be loyal\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"dog\", \"cat\", \"elephant\", \"wolf\", \"horse\", \"panda\", \"giraffe\", \"lion\", \"tiger\", \"deer\"]"}
{"cat":"animals","slot":"behavior","value":"playful","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All the psychological features of playful, including they attitude to they nature.\";         A textual example of the semantic relation is \"can be playful\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"dog\", \"cat\", \"rabbit\", \"otter\", \"dolphin\", \"seal\", \"monkey\", \"kangaroo\", \"fox\", \"squirrel\"]"}
{"cat":"animals","slot":"behavior","value":"obedient","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All the psychological features of obedient, including they attitude to they nature.\";         A textual example of the semantic relation is \"can be obedient\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['dog', 'horse', 'cat', 'elephant', 'cow', 'sheep', 'pig', 'goat', 'monkey', 'lion']"}
{"cat":"animals","slot":"behavior","value":"affectionate","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All the psychological features of affectionate, including they attitude to they nature.\";         A textual example of the semantic relation is \"can be affectionate\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['dog', 'cat', 'horse', 'rabbit', 'hamster', 'guinea pig', 'parrot', 'dolphin', 'elephant', 'panda']"}
{"cat":"animals","slot":"behavior","value":"healthy","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All the psychological features of healthy, including they attitude to they nature.\";         A textual example of the semantic relation is \"can be healthy\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"cat\", \"dog\", \"horse\", \"elephant\", \"lion\", \"tiger\", \"giraffe\", \"zebra\", \"panda\", \"koala\"]"}
{"cat":"animals","slot":"behavior","value":"aggressive","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All the psychological features of aggressive, including they attitude to they nature.\";         A textual example of the semantic relation is \"can be aggressive\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['wolf', 'tiger', 'lion', 'bear', 'shark', 'crocodile', 'python', 'rattlesnake', 'scorpion', 'wasp']"}
{"cat":"animals","slot":"behavior","value":"rabid","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All the psychological features of rabid, including they attitude to they nature.\";         A textual example of the semantic relation is \"can be rabid\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['dog', 'bat', 'fox', 'skunk', 'raccoon', 'cat', 'wolf', 'coyote', 'monkey', 'horse']"}
{"cat":"animals","slot":"behavior","value":"friendly","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All the psychological features of friendly, including they attitude to they nature.\";         A textual example of the semantic relation is \"can be friendly\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['dog', 'cat', 'horse', 'rabbit', 'hamster', 'guinea pig', 'goldfish', 'parrot', 'pig', 'cow']"}
{"cat":"animals","slot":"behavior","value":"happy","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All the psychological features of happy, including they attitude to they nature.\";         A textual example of the semantic relation is \"can be happy\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['dog', 'cat', 'rabbit', 'hamster', 'guinea pig', 'fish', 'bird', 'horse', 'cow', 'pig']"}
{"cat":"animals","slot":"behavior","value":"cunning","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All the psychological features of cunning, including they attitude to they nature.\";         A textual example of the semantic relation is \"can be cunning\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['fox', 'weasel', 'cat', 'snake', 'rat', 'raccoon', 'coyote', 'wolf', 'crow', 'chimpanzee']"}
{"cat":"animals","slot":"behavior","value":"feral","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All the psychological features of feral, including they attitude to they nature.\";         A textual example of the semantic relation is \"can be feral\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['wolf', 'cat', 'dog', 'bear', 'lion', 'tiger', 'hyena', 'coyote', 'fox', 'panther']"}
{"cat":"animals","slot":"behavior","value":"submissive","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All the psychological features of submissive, including they attitude to they nature.\";         A textual example of the semantic relation is \"can be submissive\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"dog\", \"cat\", \"rabbit\", \"hamster\", \"guinea pig\", \"mouse\", \"rat\", \"deer\", \"sheep\", \"cow\"]"}
{"cat":"animals","slot":"group","value":"colony","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Names that indicates a group of animals of the same species of colony.\";         A textual example of the semantic relation is \"are grouped in colony\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['bees', 'ants', 'penguins', 'dolphins', 'lions', 'wolves', 'bats', 'giraffes', 'elephants', 'monkeys']"}
{"cat":"animals","slot":"movement","value":"slow","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Terms that describe the type and speed of movement.\";         A textual example of the semantic relation is \"are slow\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['slug', 'snail', 'tortoise', 'sloth', 'koala', 'panda', 'manatee', 'sea horse', 'three-toed sloth', 'giant anteater']"}
{"cat":"animals","slot":"movement","value":"attack","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Terms that describe the type and speed of movement.\";         A textual example of the semantic relation is \"can attack\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['lion', 'cheetah', 'tiger', 'leopard', 'gazelle', 'ostrich', 'deer', 'antelope', 'zebra']"}
{"cat":"animals","slot":"movement","value":"chase","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Terms that describe the type and speed of movement.\";         A textual example of the semantic relation is \"can chase\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['cheetah', 'gazelle', 'falcon', 'hare', 'lion', 'ostrich', 'tiger', 'wolf', 'zebra']"}
{"cat":"animals","slot":"movement","value":"attack","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Terms that describe the type and speed of movement.\";         A textual example of the semantic relation is \"can attack\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['lion', 'cheetah', 'tiger', 'leopard', 'gazelle', 'ostrich', 'deer', 'antelope', 'zebra']"}
{"cat":"animals","slot":"size","value":"small","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Size of small.\";         A textual example of the semantic relation is \"can be small\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['mouse', 'hamster', 'gerbil', 'rabbit', 'chipmunk', 'squirrel', 'ferret', 'guinea pig', 'rat', 'shrew']"}
{"cat":"animals","slot":"size","value":"large","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Size of large.\";         A textual example of the semantic relation is \"can be large\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['elephant', 'whale', 'hippopotamus', 'rhino', 'giraffe', 'bear', 'lion', 'tiger', 'crocodile']"}
{"cat":"animals","slot":"size","value":"big","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Size of big.\";         A textual example of the semantic relation is \"can be big\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"elephant\", \"whale\", \"giraffe\", \"hippopotamus\", \"rhino\", \"lion\", \"bear\", \"crocodile\", \"tiger\"]"}
{"cat":"animals","slot":"size","value":"medium","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Size of medium.\";         A textual example of the semantic relation is \"can be medium\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"deer\", \"wolf\", \"giraffe\", \"zebra\", \"elephant\", \"lion\", \"tiger\", \"bear\", \"crocodile\", \"hippopotamus\"]"}
{"cat":"animals","slot":"group","value":"larva","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Names that indicates a group of animals of the same species of larva.\";         A textual example of the semantic relation is \"are grouped in larva\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['maggots', 'larvae', 'caterpillars', 'grubs', 'nymphs', 'pupae', 'tadpoles', 'fry', 'kits', 'cubs']"}
{"cat":"animals","slot":"user","value":"handler","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All the kinds of living beings which are able to operate, employ, interact with or perceive handler.\";         A textual example of the semantic relation is \"are used by handlers\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"dog\", \"cat\", \"horse\", \"elephant\", \"lion\", \"tiger\", \"giraffe\", \"monkey\", \"parrot\", \"snake\"]"}
{"cat":"animals","slot":"user","value":"trainer","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All the kinds of living beings which are able to operate, employ, interact with or perceive trainer.\";         A textual example of the semantic relation is \"are used by trainers\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['dog', 'horse', 'elephant', 'lion', 'tiger', 'monkey', 'bear', 'giraffe', 'zebra', 'camel']"}
{"cat":"animals","slot":"purpose","value":"pet","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All of the purposes for which pet is interacted with.\";         A textual example of the semantic relation is \"are used for pet\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['cat', 'dog', 'fish', 'bird', 'hamster', 'rabbit', 'snake', 'turtle', 'iguana', 'ferret']"}
{"cat":"animals","slot":"sound","value":"pet","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All the entries with which the sound of pet can be described.\";         A textual example of the semantic relation is \"can pet\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"cat\", \"dog\", \"rabbit\", \"hamster\", \"guinea pig\", \"horse\", \"cow\", \"sheep\", \"goat\", \"pig\"]"}
{"cat":"animals","slot":"group","value":"nest","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Names that indicates a group of animals of the same species of nest.\";         A textual example of the semantic relation is \"are grouped in nest\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"birds\", \"squirrels\", \"monkeys\", \"rabbits\", \"horses\", \"cats\", \"dogs\", \"pigs\", \"cows\", \"sheep\"]"}
{"cat":"animals","slot":"purpose","value":"prey","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All of the purposes for which prey is interacted with.\";         A textual example of the semantic relation is \"are used for prey\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"deer\", \"rabbit\", \"squirrel\", \"bird\", \"fish\", \"frog\", \"snake\", \"turtle\", \"insect\", \"rodent\"]"}
{"cat":"animals","slot":"part","value":"eye","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All the constitutive parts of eye.\";         A textual example of the semantic relation is \"can have eye\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"human\", \"cat\", \"dog\", \"cow\", \"horse\", \"elephant\", \"lion\", \"monkey\", \"bird\"]"}
{"cat":"animals","slot":"part","value":"skin","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All the constitutive parts of skin.\";         A textual example of the semantic relation is \"can have skin\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['snake', 'lizard', 'crocodile', 'alligator', 'turtle', 'armadillo', 'elephant', 'rhino', 'hippo', 'walrus']"}
{"cat":"animals","slot":"part","value":"mouth","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All the constitutive parts of mouth.\";         A textual example of the semantic relation is \"can have mouth\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['human', 'dog', 'cat', 'cow', 'pig', 'horse', 'sheep', 'rabbit', 'monkey', 'elephant']"}
{"cat":"animals","slot":"part","value":"head","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All the constitutive parts of head.\";         A textual example of the semantic relation is \"can have head\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"human\", \"dog\", \"cat\", \"cow\", \"horse\", \"monkey\", \"elephant\", \"lion\", \"giraffe\"]"}
{"cat":"animals","slot":"part","value":"leg","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All the constitutive parts of leg.\";         A textual example of the semantic relation is \"can have leg\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['dog', 'cat', 'horse', 'cow', 'sheep', 'pig', 'deer', 'goat', 'bear', 'lion']"}
{"cat":"animals","slot":"part","value":"paw","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All the constitutive parts of paw.\";         A textual example of the semantic relation is \"can have paw\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['cat', 'dog', 'fox', 'wolf', 'bear', 'lion', 'tiger', 'leopard', 'cheetah', 'puma']"}
{"cat":"animals","slot":"part","value":"hair","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All the constitutive parts of hair.\";         A textual example of the semantic relation is \"can have hair\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['horse', 'cow', 'sheep', 'goat', 'llama', 'alpaca', 'camel', 'yak', 'bison', 'deer']"}
{"cat":"animals","slot":"part","value":"ear","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All the constitutive parts of ear.\";         A textual example of the semantic relation is \"can have ear\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['cat', 'dog', 'rabbit', 'horse', 'cow', 'sheep', 'goat', 'pig', 'deer', 'fox']"}
{"cat":"animals","slot":"part","value":"tongue","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All the constitutive parts of tongue.\";         A textual example of the semantic relation is \"can have tongue\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"human\", \"dog\", \"cat\", \"cow\", \"horse\", \"lion\", \"tiger\", \"monkey\", \"giraffe\"]"}
{"cat":"animals","slot":"part","value":"fur","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All the constitutive parts of fur.\";         A textual example of the semantic relation is \"can have fur\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['cat', 'dog', 'rabbit', 'fox', 'bear', 'squirrel', 'chinchilla', 'otter', 'beaver', 'mink']"}
{"cat":"animals","slot":"part","value":"coat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All the constitutive parts of coat.\";         A textual example of the semantic relation is \"can have coat\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['cat', 'dog', 'horse', 'cow', 'sheep', 'deer', 'fox', 'rabbit', 'bear', 'lion']"}
{"cat":"animals","slot":"part","value":"tail","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All the constitutive parts of tail.\";         A textual example of the semantic relation is \"can have tail\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['cat', 'dog', 'fox', 'squirrel', 'rabbit', 'deer', 'rat', 'mouse', 'horse', 'elephant']"}
{"cat":"animals","slot":"part","value":"flesh","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All the constitutive parts of flesh.\";         A textual example of the semantic relation is \"can have flesh\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"cow\", \"pig\", \"sheep\", \"chicken\", \"goat\", \"deer\", \"rabbit\", \"duck\", \"turkey\", \"ox\"]"}
{"cat":"animals","slot":"part","value":"neck","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All the constitutive parts of neck.\";         A textual example of the semantic relation is \"can have neck\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['giraffe', 'lion', 'elephant', 'horse', 'camel', 'snake', 'turtle', 'alligator', 'crocodile', 'ostrich']"}
{"cat":"animals","slot":"part","value":"foot","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All the constitutive parts of foot.\";         A textual example of the semantic relation is \"can have foot\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['cat', 'dog', 'elephant', 'horse', 'lion', 'monkey', 'pig', 'sheep', 'tiger']"}
{"cat":"animals","slot":"part","value":"abdomen","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All the constitutive parts of abdomen.\";         A textual example of the semantic relation is \"can have abdomen\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['ant', 'bee', 'butterfly', 'centipede', 'cockroach', 'cricket', 'earwig', 'flea', 'grasshopper', 'housefly']"}
{"cat":"animals","slot":"part","value":"tooth","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All the constitutive parts of tooth.\";         A textual example of the semantic relation is \"can have tooth\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['human', 'dog', 'cat', 'cow', 'horse', 'pig', 'elephant', 'lion', 'tiger', 'bear']"}
{"cat":"animals","slot":"part","value":"toe","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All the constitutive parts of toe.\";         A textual example of the semantic relation is \"can have toe\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['cat', 'dog', 'elephant', 'horse', 'lion', 'monkey', 'pig', 'rabbit', 'tiger']"}
{"cat":"animals","slot":"part","value":"tusk","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All the constitutive parts of tusk.\";         A textual example of the semantic relation is \"can have tusk\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"elephant\", \"walrus\", \"boar\", \"warthog\", \"hippopotamus\", \"mammoth\", \"mastodon\", \"narwhal\", \"tapir\", \"saola\"]"}
{"cat":"animals","slot":"part","value":"antenna","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All the constitutive parts of antenna.\";         A textual example of the semantic relation is \"can have antenna\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['bee', 'ant', 'moth', 'butterfly', 'cricket', 'grasshopper', 'walking stick', 'silkworm', 'praying mantis', 'termite']"}
{"cat":"animals","slot":"part","value":"stinger","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All the constitutive parts of stinger.\";         A textual example of the semantic relation is \"can have stinger\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['bee', 'scorpion', 'wasp', 'centipede', 'jellyfish', 'caterpillar', 'snake', 'ray', 'spider']"}
{"cat":"animals","slot":"part","value":"bone","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All the constitutive parts of bone.\";         A textual example of the semantic relation is \"can have bone\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"human\", \"cow\", \"pig\", \"sheep\", \"dog\", \"cat\", \"horse\", \"deer\", \"bear\", \"elephant\"]"}
{"cat":"animals","slot":"part","value":"belly","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All the constitutive parts of belly.\";         A textual example of the semantic relation is \"can have belly\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['dog', 'cat', 'cow', 'pig', 'deer', 'rabbit', 'squirrel', 'rat', 'mouse', 'frog']"}
{"cat":"animals","slot":"part","value":"pad","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All the constitutive parts of pad.\";         A textual example of the semantic relation is \"can have pad\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['elephant', 'camel', 'rhino', 'hippo', 'mouse', 'rat', 'cat', 'dog', 'pig', 'horse']"}
{"cat":"animals","slot":"part","value":"sting","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All the constitutive parts of sting.\";         A textual example of the semantic relation is \"can have sting\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['bee', 'wasp', 'scorpion', 'jellyfish', 'centipede', 'caterpillar', 'spider', 'snake', 'ray', 'catfish']"}
{"cat":"animals","slot":"part","value":"beak","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All the constitutive parts of beak.\";         A textual example of the semantic relation is \"can have beak\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"bird\", \"parrot\", \"ostrich\", \"toucan\", \"pelican\", \"eagle\", \"vulture\", \"flamingo\", \"penguin\", \"hummingbird\"]"}
{"cat":"animals","slot":"part","value":"claw","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All the constitutive parts of claw.\";         A textual example of the semantic relation is \"can have claw\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['tiger', 'lion', 'leopard', 'jaguar', 'cheetah', 'crab', 'lobster', 'scorpion', 'ant', 'beetle']"}
{"cat":"animals","slot":"part","value":"flag","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All the constitutive parts of flag.\";         A textual example of the semantic relation is \"can have flag\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['elephant', 'lion', 'tiger', 'bear', 'giraffe', 'zebra', 'hippopotamus', 'rhinoceros', 'crocodile']"}
{"cat":"animals","slot":"part","value":"feeler","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All the constitutive parts of feeler.\";         A textual example of the semantic relation is \"can have feeler\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['ant', 'beetle', 'butterfly', 'cockroach', 'cricket', 'dragonfly', 'fly', 'grasshopper', 'moth', 'wasp']"}
{"cat":"animals","slot":"part","value":"nail","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All the constitutive parts of nail.\";         A textual example of the semantic relation is \"can have nail\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"horse\", \"dog\", \"cat\", \"cow\", \"pig\", \"goat\", \"sheep\", \"rabbit\", \"deer\", \"rat\"]"}
{"cat":"animals","slot":"part","value":"fang","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All the constitutive parts of fang.\";         A textual example of the semantic relation is \"can have fang\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['tiger', 'wolf', 'lion', 'snake', 'alligator', 'crocodile', 'hyena', 'panther', 'leopard', 'jaguar']"}
{"cat":"animals","slot":"part","value":"jaw","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All the constitutive parts of jaw.\";         A textual example of the semantic relation is \"can have jaw\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['shark', 'lion', 'tiger', 'crocodile', 'snake', 'elephant', 'hippopotamus', 'giraffe', 'zebra']"}
{"cat":"animals","slot":"part","value":"horn","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All the constitutive parts of horn.\";         A textual example of the semantic relation is \"can have horn\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['cow', 'goat', 'sheep', 'antelope', 'buffalo', 'bison', 'deer', 'gazelle', 'ibex', 'ox']"}
{"cat":"animals","slot":"part","value":"wing","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All the constitutive parts of wing.\";         A textual example of the semantic relation is \"can have wing\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"bird\", \"bat\", \"butterfly\", \"dragonfly\", \"bee\", \"fly\", \"moth\", \"fairy\", \"angel\", \"pegasus\"]"}
{"cat":"animals","slot":"part","value":"legs","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All the constitutive parts of legs.\";         A textual example of the semantic relation is \"can have legs\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"spider\", \"centipede\", \"millipede\", \"insect\", \"crab\", \"scorpion\", \"lizard\", \"snake\", \"turtle\", \"frog\"]"}
{"cat":"animals","slot":"part","value":"trunk","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All the constitutive parts of trunk.\";         A textual example of the semantic relation is \"can have trunk\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['elephant', 'tapir', 'rhinoceros', 'hippopotamus', 'aardvark', 'anteater', 'pangolin', 'armadillo', 'sloth', 'manatee']"}
{"cat":"animals","slot":"part","value":"tentacle","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All the constitutive parts of tentacle.\";         A textual example of the semantic relation is \"can have tentacle\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['octopus', 'squid', 'cuttlefish', 'jellyfish', 'nautilus', 'sea anemone', 'coral', 'hydra', 'polyp', 'starfish']"}
{"cat":"animals","slot":"part","value":"whisker","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All the constitutive parts of whisker.\";         A textual example of the semantic relation is \"can have whisker\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['cat', 'rat', 'mouse', 'rabbit', 'squirrel', 'otter', 'weasel', 'mink', 'seal']"}
{"cat":"animals","slot":"part","value":"nose","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All the constitutive parts of nose.\";         A textual example of the semantic relation is \"can have nose\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"elephant\", \"dog\", \"cat\", \"pig\", \"cow\", \"rabbit\", \"deer\", \"horse\", \"goat\", \"sheep\"]"}
{"cat":"animals","slot":"part","value":"egg","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All the constitutive parts of egg.\";         A textual example of the semantic relation is \"can have egg\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['chicken', 'duck', 'goose', 'turkey', 'quail', 'pigeon', 'ostrich', 'cassowary', 'emus', 'penguins']"}
{"cat":"animals","slot":"part","value":"shell","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All the constitutive parts of shell.\";         A textual example of the semantic relation is \"can have shell\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['turtle', 'snail', 'crab', 'lobster', 'clam', 'oyster', 'scallop', 'conch', 'abalone', 'limpet']"}
{"cat":"animals","slot":"part","value":"sac","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All the constitutive parts of sac.\";         A textual example of the semantic relation is \"can have sac\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['snake', 'crocodile', 'frog', 'toad', 'salamander', 'newt', 'lizard', 'turtle', 'fish', 'whale']"}
{"cat":"animals","slot":"part","value":"body","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All the constitutive parts of body.\";         A textual example of the semantic relation is \"can have body\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['cat', 'dog', 'elephant', 'giraffe', 'horse', 'lion', 'monkey', 'snake', 'tiger']"}
{"cat":"animals","slot":"movement","value":"run","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Terms that describe the type and speed of movement.\";         A textual example of the semantic relation is \"can run\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"cheetah\", \"ostrich\", \"gazelle\", \"horse\", \"deer\", \"wolf\", \"leopard\", \"hyena\", \"lion\"]"}
{"cat":"animals","slot":"movement","value":"fly","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Terms that describe the type and speed of movement.\";         A textual example of the semantic relation is \"can fly\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['bird', 'bat', 'butterfly', 'dragonfly', 'hummingbird', 'swallow', 'swift', 'falcon', 'eagle', 'hawk']"}
{"cat":"animals","slot":"movement","value":"swim","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Terms that describe the type and speed of movement.\";         A textual example of the semantic relation is \"can swim\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['swim', 'fly', 'run', 'crawl', 'walk', 'gallop', 'slither', 'hop', 'jump', 'pounce']"}
{"cat":"animals","slot":"movement","value":"leap","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Terms that describe the type and speed of movement.\";         A textual example of the semantic relation is \"can leap\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['leopard', 'cheetah', 'gazelle', 'deer', 'kangaroo', 'tiger', 'lion', 'cougar', 'wolf']"}
{"cat":"animals","slot":"movement","value":"creep","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Terms that describe the type and speed of movement.\";         A textual example of the semantic relation is \"can creep\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['crawling', 'slithering', 'galloping', 'darting', 'scurrying', 'bounding', 'loping', 'striding', 'stalking']"}
{"cat":"animals","slot":"movement","value":"leap","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Terms that describe the type and speed of movement.\";         A textual example of the semantic relation is \"can leap\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['leopard', 'cheetah', 'gazelle', 'deer', 'kangaroo', 'tiger', 'lion', 'cougar', 'wolf']"}
{"cat":"animals","slot":"movement","value":"jump","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Terms that describe the type and speed of movement.\";         A textual example of the semantic relation is \"can jump\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['leopard', 'cheetah', 'gazelle', 'kangaroo', 'frog', 'deer', 'horse', 'tiger', 'lion', 'antelope']"}
{"cat":"animals","slot":"movement","value":"hop","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Terms that describe the type and speed of movement.\";         A textual example of the semantic relation is \"can hop\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['run', 'swim', 'fly', 'crawl', 'gallop', 'hop', 'slither', 'scamper', 'stride', 'trot']"}
{"cat":"animals","slot":"movement","value":"fly","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Terms that describe the type and speed of movement.\";         A textual example of the semantic relation is \"can fly\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['bird', 'bat', 'butterfly', 'dragonfly', 'hummingbird', 'swallow', 'swift', 'falcon', 'eagle', 'hawk']"}
{"cat":"animals","slot":"movement","value":"crawl","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Terms that describe the type and speed of movement.\";         A textual example of the semantic relation is \"can crawl\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['crawl', 'slither', 'gallop', 'trot', 'bound', 'scurry', 'dive', 'swim', 'fly', 'leap']"}
{"cat":"animals","slot":"place","value":"land","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All the entities in which land can be experienced, found or perceived.\";         A textual example of the semantic relation is \"can be found or used in lands\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"elephant\", \"lion\", \"giraffe\", \"zebra\", \"rhino\", \"hippo\", \"crocodile\", \"cheetah\", \"hyena\", \"wildebeest\"]"}
{"cat":"animals","slot":"place","value":"garden","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All the entities in which garden can be experienced, found or perceived.\";         A textual example of the semantic relation is \"can be found or used in gardens\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"squirrel\", \"rabbit\", \"bird\", \"butterfly\", \"bee\", \"frog\", \"snake\", \"mouse\", \"cat\", \"dog\"]"}
{"cat":"animals","slot":"place","value":"ditch","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All the entities in which ditch can be experienced, found or perceived.\";         A textual example of the semantic relation is \"can be found or used in ditches\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['frog', 'toad', 'snake', 'rat', 'mole', 'rabbit', 'salamander', 'crayfish', 'turtle', 'water strider']"}
{"cat":"animals","slot":"place","value":"underwater","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All the entities in which underwater can be experienced, found or perceived.\";         A textual example of the semantic relation is \"can be found or used in underwaters\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['octopus', 'sea turtle', 'dolphin', 'shark', 'seahorse', 'whale', 'eel', 'crab', 'lobster', 'starfish']"}
{"cat":"animals","slot":"place","value":"Asia","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All the entities in which Asia can be experienced, found or perceived.\";         A textual example of the semantic relation is \"can be found or used in Asias\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['tiger', 'panda', 'elephant', 'rhino', 'cobra', 'camel', 'yak', 'koala', 'kangaroo', 'giraffe']"}
{"cat":"animals","slot":"place","value":"sea","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All the entities in which sea can be experienced, found or perceived.\";         A textual example of the semantic relation is \"can be found or used in seas\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['whale', 'dolphin', 'shark', 'seal', 'penguin', 'octopus', 'turtle', 'crab', 'lobster', 'sea lion']"}
{"cat":"animals","slot":"place","value":"Africa","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All the entities in which Africa can be experienced, found or perceived.\";         A textual example of the semantic relation is \"can be found or used in Africas\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['elephant', 'lion', 'giraffe', 'zebra', 'hippopotamus', 'crocodile', 'cheetah', 'hyena', 'wildebeest', 'rhinoceros']"}
{"cat":"animals","slot":"place","value":"Namibia","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All the entities in which Namibia can be experienced, found or perceived.\";         A textual example of the semantic relation is \"can be found or used in Namibias\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"elephant\", \"lion\", \"giraffe\", \"zebra\", \"rhino\", \"leopard\", \"cheetah\", \"hyena\", \"wildebeest\", \"ostrich\"]"}
{"cat":"animals","slot":"place","value":"terrarium","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All the entities in which terrarium can be experienced, found or perceived.\";         A textual example of the semantic relation is \"can be found or used in terrariums\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['gecko', 'frog', 'snake', 'lizard', 'turtle', 'fish', 'insect', 'spider', 'scorpion', 'centipede']"}
{"cat":"animals","slot":"place","value":"zoo","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All the entities in which zoo can be experienced, found or perceived.\";         A textual example of the semantic relation is \"can be found or used in zoos\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['lion', 'tiger', 'elephant', 'giraffe', 'zebra', 'monkey', 'panda', 'hippopotamus', 'rhino', 'koala']"}
{"cat":"animals","slot":"place","value":"Thailand","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All the entities in which Thailand can be experienced, found or perceived.\";         A textual example of the semantic relation is \"can be found or used in Thailands\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['elephant', 'tiger', 'monkey', 'crocodile', 'bear', 'snake', 'bird', 'deer', 'buffalo', 'fish']"}
{"cat":"animals","slot":"place","value":"Kenia","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All the entities in which Kenia can be experienced, found or perceived.\";         A textual example of the semantic relation is \"can be found or used in Kenias\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['lion', 'elephant', 'giraffe', 'zebra', 'rhino', 'hippo', 'crocodile', 'cheetah', 'leopard', 'wildebeest']"}
{"cat":"animals","slot":"place","value":"Sri Lanka","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All the entities in which Sri Lanka can be experienced, found or perceived.\";         A textual example of the semantic relation is \"can be found or used in Sri Lankas\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['elephant', 'leopard', 'sloth bear', 'sambar', 'spotted deer', 'humpback whale', 'blue whale', 'sperm whale', 'dolphin', 'turtle']"}
{"cat":"animals","slot":"place","value":"India","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All the entities in which India can be experienced, found or perceived.\";         A textual example of the semantic relation is \"can be found or used in Indias\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"tiger\", \"elephant\", \"cow\", \"monkey\", \"peacock\", \"snake\", \"parrot\", \"camel\", \"rhinoceros\", \"lion\"]"}
{"cat":"animals","slot":"place","value":"Tanzania","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All the entities in which Tanzania can be experienced, found or perceived.\";         A textual example of the semantic relation is \"can be found or used in Tanzanias\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['elephant', 'lion', 'zebra', 'giraffe', 'hippopotamus', 'crocodile', 'wildebeest', 'buffalo', 'antelope', 'leopard']"}
{"cat":"animals","slot":"place","value":"water","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All the entities in which water can be experienced, found or perceived.\";         A textual example of the semantic relation is \"can be found or used in water\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['fish', 'dolphin', 'whale', 'seal', 'shark', 'octopus', 'lobster', 'crab', 'turtle', 'seahorse']"}
{"cat":"animals","slot":"place","value":"pond","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All the entities in which pond can be experienced, found or perceived.\";         A textual example of the semantic relation is \"can be found or used in ponds\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"frog\", \"duck\", \"turtle\", \"fish\", \"crab\", \"beaver\", \"otter\", \"swan\", \"heron\", \"crane\"]"}
{"cat":"animals","slot":"place","value":"tropic","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All the entities in which tropic can be experienced, found or perceived.\";         A textual example of the semantic relation is \"can be found or used in tropics\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['tiger', 'elephant', 'parrot', 'monkey', 'crocodile', 'hippopotamus', 'zebra', 'giraffe', 'lion', 'rhino']"}
{"cat":"animals","slot":"place","value":"sanctuary","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All the entities in which sanctuary can be experienced, found or perceived.\";         A textual example of the semantic relation is \"can be found or used in sanctuaries\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"lion\", \"tiger\", \"elephant\", \"giraffe\", \"zebra\", \"rhino\", \"hippo\", \"cheetah\", \"leopard\", \"hyena\"]"}
{"cat":"animals","slot":"place","value":"circus","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All the entities in which circus can be experienced, found or perceived.\";         A textual example of the semantic relation is \"can be found or used in circuss\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['lion', 'tiger', 'elephant', 'monkey', 'bear', 'horse', 'camel', 'zebra', 'giraffe', 'seal']"}
{"cat":"animals","slot":"movement","value":"walk","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Terms that describe the type and speed of movement.\";         A textual example of the semantic relation is \"can walk\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"tortoise\", \"snail\", \"slug\", \"caterpillar\", \"crawl\", \"slither\", \"waddle\", \"hop\", \"fly\", \"gallop\"]"}
{"cat":"animals","slot":"user","value":"circus","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All the kinds of living beings which are able to operate, employ, interact with or perceive circus.\";         A textual example of the semantic relation is \"are used by circuss\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['lion', 'tiger', 'elephant', 'monkey', 'camel', 'giraffe', 'zebra', 'hippopotamus', 'seal', 'bear']"}
{"cat":"animals","slot":"place","value":"colony","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All the entities in which colony can be experienced, found or perceived.\";         A textual example of the semantic relation is \"can be found or used in colonies\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"bees\", \"ants\", \"termites\", \"penguins\", \"seals\", \"bats\", \"monkeys\", \"elephants\", \"meerkats\", \"dolphins\"]"}
{"cat":"animals","slot":"place","value":"kennel","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All the entities in which kennel can be experienced, found or perceived.\";         A textual example of the semantic relation is \"can be found or used in kennels\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['dog', 'cat', 'puppy', 'kitten', 'rabbit', 'hamster', 'guinea pig', 'ferret', 'bird', 'snake']"}
{"cat":"animals","slot":"colorPattern","value":"black","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All the features that refer to the color or texture of black.\";         A textual example of the semantic relation is \"can be black\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['panther', 'crow', 'raven', 'blackbird', 'penguin', 'grizzly', 'bear', 'black', 'widow', 'spider']"}
{"cat":"animals","slot":"colorPattern","value":"black","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All the features that refer to the color or texture of black.\";         A textual example of the semantic relation is \"can be black\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['panther', 'crow', 'raven', 'blackbird', 'penguin', 'grizzly', 'bear', 'black', 'widow', 'spider']"}
{"cat":"animals","slot":"colorPattern","value":"brown","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All the features that refer to the color or texture of brown.\";         A textual example of the semantic relation is \"can be brown\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['bear', 'deer', 'squirrel', 'rabbit', 'fox', 'horse', 'cow', 'dog', 'cat', 'pig']"}
{"cat":"animals","slot":"colorPattern","value":"brown","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All the features that refer to the color or texture of brown.\";         A textual example of the semantic relation is \"can be brown\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['bear', 'deer', 'squirrel', 'rabbit', 'fox', 'horse', 'cow', 'dog', 'cat', 'pig']"}
{"cat":"animals","slot":"colorPattern","value":"spotted","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All the features that refer to the color or texture of spotted.\";         A textual example of the semantic relation is \"can be spotted\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"leopard\", \"cheetah\", \"jaguar\", \"giraffe\", \"zebra\", \"hyena\", \"clownfish\", \"pufferfish\", \"peacock\", \"guppy\"]"}
{"cat":"animals","slot":"colorPattern","value":"yellow","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All the features that refer to the color or texture of yellow.\";         A textual example of the semantic relation is \"can be yellow\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['duck', 'chicken', 'lion', 'bee', 'butterfly', 'tiger', 'lemur', 'canary', 'gecko', 'frog']"}
{"cat":"animals","slot":"colorPattern","value":"yellow","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All the features that refer to the color or texture of yellow.\";         A textual example of the semantic relation is \"can be yellow\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['duck', 'chicken', 'lion', 'bee', 'butterfly', 'tiger', 'lemur', 'canary', 'gecko', 'frog']"}
{"cat":"animals","slot":"colorPattern","value":"grey","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All the features that refer to the color or texture of grey.\";         A textual example of the semantic relation is \"can be grey\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['elephant', 'rabbit', 'mouse', 'pig', 'cat', 'dog', 'deer', 'donkey', 'horse', 'rat']"}
{"cat":"animals","slot":"colorPattern","value":"grey","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All the features that refer to the color or texture of grey.\";         A textual example of the semantic relation is \"can be grey\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['elephant', 'rabbit', 'mouse', 'pig', 'cat', 'dog', 'deer', 'donkey', 'horse', 'rat']"}
{"cat":"animals","slot":"colorPattern","value":"orange","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All the features that refer to the color or texture of orange.\";         A textual example of the semantic relation is \"can be orange\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['fox', 'tiger', 'lion', 'orange', 'carrot', 'pumpkin', 'butternut squash', 'cantaloupe', 'papaya', 'mango']"}
{"cat":"animals","slot":"colorPattern","value":"white","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All the features that refer to the color or texture of white.\";         A textual example of the semantic relation is \"can be white\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['swan', 'polar bear', 'arctic fox', 'seal', 'beluga whale', 'snowy owl', 'polar wolf', 'penguin', 'albino', 'white tiger']"}
{"cat":"animals","slot":"colorPattern","value":"orange","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All the features that refer to the color or texture of orange.\";         A textual example of the semantic relation is \"can be orange\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['fox', 'tiger', 'lion', 'orange', 'carrot', 'pumpkin', 'butternut squash', 'cantaloupe', 'papaya', 'mango']"}
{"cat":"animals","slot":"colorPattern","value":"green","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All the features that refer to the color or texture of green.\";         A textual example of the semantic relation is \"can be green\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['frog', 'iguana', 'parrot', 'caterpillar', 'turtle', 'snake', 'lizard', 'duck', 'chameleon', 'gecko']"}
{"cat":"animals","slot":"colorPattern","value":"green","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All the features that refer to the color or texture of green.\";         A textual example of the semantic relation is \"can be green\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['frog', 'iguana', 'parrot', 'caterpillar', 'turtle', 'snake', 'lizard', 'duck', 'chameleon', 'gecko']"}
{"cat":"animals","slot":"colorPattern","value":"white","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All the features that refer to the color or texture of white.\";         A textual example of the semantic relation is \"can be white\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['swan', 'polar bear', 'arctic fox', 'seal', 'beluga whale', 'snowy owl', 'polar wolf', 'penguin', 'albino', 'white tiger']"}
{"cat":"animals","slot":"colorPattern","value":"red","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All the features that refer to the color or texture of red.\";         A textual example of the semantic relation is \"can be red\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['fox', 'lobster', 'crab', 'squirrel', 'salmon', 'poppy', 'rose', 'sunset', 'autumn', 'cherry']"}
{"cat":"animals","slot":"colorPattern","value":"solid","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All the features that refer to the color or texture of solid.\";         A textual example of the semantic relation is \"can be solid\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['elephant', 'hippopotamus', 'rhino', 'walrus', 'lion', 'tiger', 'leopard', 'bear', 'panda', 'koala']"}
{"cat":"animals","slot":"colorPattern","value":"red","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All the features that refer to the color or texture of red.\";         A textual example of the semantic relation is \"can be red\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['fox', 'lobster', 'crab', 'squirrel', 'salmon', 'poppy', 'rose', 'sunset', 'autumn', 'cherry']"}
{"cat":"animals","slot":"colorPattern","value":"striped","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All the features that refer to the color or texture of striped.\";         A textual example of the semantic relation is \"can be striped\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['zebra', 'tiger', 'skunk', 'badger', 'mackerel', 'snake', 'caterpillar', 'seal', 'fish', 'cat']"}
{"cat":"animals","slot":"colorPattern","value":"beige","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All the features that refer to the color or texture of beige.\";         A textual example of the semantic relation is \"can be beige\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"beige\", \"camel\", \"fawn\", \"ivory\", \"sand\", \"taupe\", \"topaz\", \"umber\", \"whiskey\", \"wheat\"]"}
{"cat":"animals","slot":"colorPattern","value":"beige","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All the features that refer to the color or texture of beige.\";         A textual example of the semantic relation is \"can be beige\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"beige\", \"camel\", \"fawn\", \"ivory\", \"sand\", \"taupe\", \"topaz\", \"umber\", \"whiskey\", \"wheat\"]"}
{"cat":"animals","slot":"colorPattern","value":"blue","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All the features that refer to the color or texture of blue.\";         A textual example of the semantic relation is \"can be blue\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['bluebird', 'bluefish', 'bluejay', 'bluet', 'bluegill', 'bluecrab', 'bluetit', 'bluebottle', 'bluegum', 'bluebill']"}
{"cat":"animals","slot":"colorPattern","value":"blue","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All the features that refer to the color or texture of blue.\";         A textual example of the semantic relation is \"can be blue\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['bluebird', 'bluefish', 'bluejay', 'bluet', 'bluegill', 'bluecrab', 'bluetit', 'bluebottle', 'bluegum', 'bluebill']"}
{"cat":"animals","slot":"colorPattern","value":"leopard","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All the features that refer to the color or texture of leopard.\";         A textual example of the semantic relation is \"can be leopard\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['leopard', 'spotted', 'furry', 'striped', 'carnivorous', 'predator', 'agile', 'stealthy', 'solitary', 'nocturnal']"}
{"cat":"animals","slot":"activity","value":"breathe","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All actions that breathe can actively or consciously do.\";         A textual example of the semantic relation is \"can be breathe\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['dog', 'cat', 'bird', 'fish', 'cow', 'elephant', 'lion', 'tiger', 'monkey', 'giraffe']"}
{"cat":"animals","slot":"activity","value":"eat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All actions that eat can actively or consciously do.\";         A textual example of the semantic relation is \"can be eat\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['lion', 'tiger', 'bear', 'wolf', 'crocodile', 'shark', 'snake', 'eagle', 'owl', 'octopus']"}
{"cat":"animals","slot":"activity","value":"drink","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All actions that drink can actively or consciously do.\";         A textual example of the semantic relation is \"can be drink\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"dog\", \"cat\", \"elephant\", \"lion\", \"giraffe\", \"zebra\", \"monkey\", \"snake\", \"turtle\"]"}
{"cat":"animals","slot":"activity","value":"bury","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All actions that bury can actively or consciously do.\";         A textual example of the semantic relation is \"can be bury\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['dog', 'cat', 'rabbit', 'rat', 'mole', 'fox', 'wolf', 'bear', 'turtle', 'snake']"}
{"cat":"animals","slot":"activity","value":"play","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All actions that play can actively or consciously do.\";         A textual example of the semantic relation is \"can be play\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"dog\", \"cat\", \"horse\", \"monkey\", \"elephant\", \"lion\", \"tiger\", \"giraffe\", \"bear\", \"whale\"]"}
{"cat":"animals","slot":"activity","value":"chew","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All actions that chew can actively or consciously do.\";         A textual example of the semantic relation is \"can be chew\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['dog', 'cat', 'cow', 'horse', 'pig', 'rabbit', 'mouse', 'rat', 'deer', 'sheep']"}
{"cat":"animals","slot":"activity","value":"fetch","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All actions that fetch can actively or consciously do.\";         A textual example of the semantic relation is \"can be fetch\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['dog', 'cat', 'bird', 'rabbit', 'deer', 'squirrel', 'monkey', 'fish', 'turtle', 'horse']"}
{"cat":"animals","slot":"activity","value":"chase","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All actions that chase can actively or consciously do.\";         A textual example of the semantic relation is \"can be chase\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['lion', 'tiger', 'wolf', 'hyena', 'cheetah', 'leopard', 'cougar', 'bear', 'fox', 'coyote']"}
{"cat":"animals","slot":"activity","value":"bath","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All actions that bath can actively or consciously do.\";         A textual example of the semantic relation is \"can be bath\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"cat\", \"dog\", \"rabbit\", \"hamster\", \"guinea pig\", \"bird\", \"fish\", \"snake\", \"turtle\", \"lizard\"]"}
{"cat":"animals","slot":"activity","value":"growl","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All actions that growl can actively or consciously do.\";         A textual example of the semantic relation is \"can be growl\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"tiger\", \"lion\", \"bear\", \"wolf\", \"hyena\", \"leopard\", \"cougar\", \"jaguar\", \"lynx\"]"}
{"cat":"animals","slot":"activity","value":"live","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All actions that live can actively or consciously do.\";         A textual example of the semantic relation is \"can be live\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['cat', 'dog', 'elephant', 'giraffe', 'horse', 'lion', 'monkey', 'snake', 'tiger']"}
{"cat":"animals","slot":"activity","value":"roam","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All actions that roam can actively or consciously do.\";         A textual example of the semantic relation is \"can be roam\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['lion', 'tiger', 'elephant', 'giraffe', 'zebra', 'deer', 'wolf', 'bear', 'monkey', 'dog']"}
{"cat":"animals","slot":"activity","value":"kill","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All actions that kill can actively or consciously do.\";         A textual example of the semantic relation is \"can be kill\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['lion', 'tiger', 'bear', 'wolf', 'shark', 'crocodile', 'python', 'venomous snake', 'poison dart frog', 'pufferfish']"}
{"cat":"animals","slot":"activity","value":"bite","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All actions that bite can actively or consciously do.\";         A textual example of the semantic relation is \"can be bite\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['dog', 'cat', 'snake', 'spider', 'shark', 'alligator', 'wolf', 'mosquito', 'scorpion', 'bee']"}
{"cat":"animals","slot":"activity","value":"trot","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All actions that trot can actively or consciously do.\";         A textual example of the semantic relation is \"can be trot\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['horse', 'pony', 'donkey', 'mule', 'zebra', 'deer', 'elk', 'antelope', 'gazelle', 'goat']"}
{"cat":"animals","slot":"activity","value":"migrate","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All actions that migrate can actively or consciously do.\";         A textual example of the semantic relation is \"can be migrate\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['birds', 'monarch butterflies', 'whales', 'wildebeests', 'caribou', 'salmon', 'zebras', 'hummingbirds', 'turtles', 'dragonflies']"}
{"cat":"animals","slot":"activity","value":"browse","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All actions that browse can actively or consciously do.\";         A textual example of the semantic relation is \"can be browse\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['deer', 'elk', 'moose', 'sheep', 'goat', 'cattle', 'horse', 'donkey', 'mule', 'llama']"}
{"cat":"animals","slot":"activity","value":"graze","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All actions that graze can actively or consciously do.\";         A textual example of the semantic relation is \"can be graze\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['sheep', 'cattle', 'goat', 'deer', 'horse', 'llama', 'alpaca', 'bison', 'elk', 'antelope']"}
{"cat":"animals","slot":"activity","value":"forage","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All actions that forage can actively or consciously do.\";         A textual example of the semantic relation is \"can be forage\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"squirrel\", \"rabbit\", \"deer\", \"bear\", \"fox\", \"mouse\", \"beaver\", \"ant\", \"honeybee\", \"hummingbird\"]"}
{"cat":"animals","slot":"activity","value":"feed","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All actions that feed can actively or consciously do.\";         A textual example of the semantic relation is \"can be feed\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['cat', 'dog', 'bird', 'fish', 'horse', 'cow', 'pig', 'sheep', 'goat', 'rabbit']"}
{"cat":"animals","slot":"activity","value":"bite","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All actions that bite can actively or consciously do.\";         A textual example of the semantic relation is \"can be bite\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['dog', 'cat', 'snake', 'spider', 'shark', 'alligator', 'wolf', 'mosquito', 'scorpion', 'bee']"}
{"cat":"animals","slot":"activity","value":"suffer","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All actions that suffer can actively or consciously do.\";         A textual example of the semantic relation is \"can be suffer\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"human\", \"dog\", \"cat\", \"elephant\", \"chimpanzee\", \"dolphin\", \"cow\", \"horse\", \"pig\"]"}
{"cat":"animals","slot":"activity","value":"die","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All actions that die can actively or consciously do.\";         A textual example of the semantic relation is \"can be die\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"dog\", \"cat\", \"elephant\", \"lion\", \"tiger\", \"giraffe\", \"zebra\", \"monkey\", \"panda\"]"}
{"cat":"animals","slot":"activity","value":"roar","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All actions that roar can actively or consciously do.\";         A textual example of the semantic relation is \"can be roar\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['lion', 'tiger', 'leopard', 'jaguar', 'cougar', 'panther', 'bear', 'elephant', 'hippopotamus', 'rhino']"}
{"cat":"animals","slot":"activity","value":"hunt","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All actions that hunt can actively or consciously do.\";         A textual example of the semantic relation is \"can be hunt\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['lion', 'tiger', 'wolf', 'bear', 'cougar', 'leopard', 'hyena', 'alligator', 'shark']"}
{"cat":"animals","slot":"activity","value":"live","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All actions that live can actively or consciously do.\";         A textual example of the semantic relation is \"can be live\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['cat', 'dog', 'elephant', 'giraffe', 'horse', 'lion', 'monkey', 'snake', 'tiger']"}
{"cat":"animals","slot":"activity","value":"feed","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All actions that feed can actively or consciously do.\";         A textual example of the semantic relation is \"can be feed\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['cat', 'dog', 'bird', 'fish', 'horse', 'cow', 'pig', 'sheep', 'goat', 'rabbit']"}
{"cat":"animals","slot":"activity","value":"bark","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All actions that bark can actively or consciously do.\";         A textual example of the semantic relation is \"can be bark\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['dog', 'fox', 'seal', 'wolf', 'coyote', 'jackal', 'hyena', 'prairie dog', 'dingo', 'dhole']"}
{"cat":"animals","slot":"activity","value":"trumpet","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All actions that trumpet can actively or consciously do.\";         A textual example of the semantic relation is \"can be trumpet\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['roar', 'bark', 'meow', 'chirp', 'growl', 'purr', 'moan', 'whine', 'howl']"}
{"cat":"animals","slot":"activity","value":"pollinate","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All actions that pollinate can actively or consciously do.\";         A textual example of the semantic relation is \"can be pollinate\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['bee', 'butterfly', 'hummingbird', 'bat', 'bird', 'moth', 'fly', 'beetle', 'ant', 'wasp']"}
{"cat":"animals","slot":"activity","value":"bait","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All actions that bait can actively or consciously do.\";         A textual example of the semantic relation is \"can be bait\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['fish', 'squirrel', 'deer', 'bird', 'rabbit', 'mouse', 'rat', 'frog', 'worm', 'cricket']"}
{"cat":"animals","slot":"activity","value":"forage","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All actions that forage can actively or consciously do.\";         A textual example of the semantic relation is \"can be forage\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"squirrel\", \"rabbit\", \"deer\", \"bear\", \"fox\", \"mouse\", \"beaver\", \"ant\", \"honeybee\", \"hummingbird\"]"}
{"cat":"animals","slot":"activity","value":"sleep","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All actions that sleep can actively or consciously do.\";         A textual example of the semantic relation is \"can be sleep\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['cat', 'dog', 'bear', 'lion', 'tiger', 'elephant', 'giraffe', 'zebra', 'monkey', 'panda']"}
{"cat":"animals","slot":"activity","value":"overwinter","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All actions that overwinter can actively or consciously do.\";         A textual example of the semantic relation is \"can be overwinter\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['bear', 'squirrel', 'chipmunk', 'hedgehog', 'bat', 'beaver', 'skunk', 'rabbit', 'deer', 'mouse']"}
{"cat":"animals","slot":"activity","value":"lick","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All actions that lick can actively or consciously do.\";         A textual example of the semantic relation is \"can be lick\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['dog', 'cat', 'cow', 'horse', 'tiger', 'lion', 'giraffe', 'elephant', 'pig', 'sheep']"}
{"cat":"animals","slot":"activity","value":"fuck","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All actions that fuck can actively or consciously do.\";         A textual example of the semantic relation is \"can be fuck\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"dog\", \"cat\", \"horse\", \"cow\", \"pig\", \"sheep\", \"goat\", \"deer\", \"rabbit\", \"monkey\"]"}
{"cat":"animals","slot":"activity","value":"kill","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All actions that kill can actively or consciously do.\";         A textual example of the semantic relation is \"can be kill\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['lion', 'tiger', 'bear', 'wolf', 'shark', 'crocodile', 'python', 'venomous snake', 'poison dart frog', 'pufferfish']"}
{"cat":"animals","slot":"activity","value":"sting","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All actions that sting can actively or consciously do.\";         A textual example of the semantic relation is \"can be sting\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"bee\", \"wasp\", \"scorpion\", \"jellyfish\", \"spider\", \"centipede\", \"stingray\", \"caterpillar\", \"hornet\", \"snake\"]"}
{"cat":"animals","slot":"activity","value":"sing","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All actions that sing can actively or consciously do.\";         A textual example of the semantic relation is \"can be sing\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['whale', 'dolphin', 'bird', 'human', 'frog', 'elephant', 'dog', 'cat', 'pig', 'cow']"}
{"cat":"animals","slot":"activity","value":"watch","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All actions that watch can actively or consciously do.\";         A textual example of the semantic relation is \"can be watch\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"cat\", \"dog\", \"bird\", \"fish\", \"horse\", \"monkey\", \"lion\", \"tiger\", \"elephant\", \"giraffe\"]"}
{"cat":"animals","slot":"activity","value":"croak","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All actions that croak can actively or consciously do.\";         A textual example of the semantic relation is \"can be croak\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"frog\", \"toad\", \"rabbit\", \"cat\", \"dog\", \"pig\", \"cow\", \"sheep\", \"goat\", \"deer\"]"}
{"cat":"animals","slot":"activity","value":"love","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All actions that love can actively or consciously do.\";         A textual example of the semantic relation is \"can be love\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['purr', 'lick', 'cuddle', 'snuggle', 'kiss', 'hug', 'nuzzle', 'wag', 'pant', 'groom']"}
{"cat":"animals","slot":"activity","value":"watch","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All actions that watch can actively or consciously do.\";         A textual example of the semantic relation is \"can be watch\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"cat\", \"dog\", \"bird\", \"fish\", \"horse\", \"monkey\", \"lion\", \"tiger\", \"elephant\", \"giraffe\"]"}
{"cat":"animals","slot":"activity","value":"funnel","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All actions that funnel can actively or consciously do.\";         A textual example of the semantic relation is \"can be funnel\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['dog', 'cat', 'bird', 'fish', 'horse', 'cow', 'pig', 'sheep', 'monkey', 'elephant']"}
{"cat":"animals","slot":"activity","value":"slither","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All actions that slither can actively or consciously do.\";         A textual example of the semantic relation is \"can be slither\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['snake', 'eel', 'worm', 'slug', 'salamander', 'caterpillar', 'centipede', 'snail', 'leech', 'lizard']"}
{"cat":"animals","slot":"part","value":"collar","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All the constitutive parts of collar.\";         A textual example of the semantic relation is \"can have collar\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['dog', 'cat', 'horse', 'cow', 'pig', 'sheep', 'goat', 'deer', 'fox', 'wolf']"}
{"cat":"animals","slot":"generalization","value":"mammal","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of mammal related to hypernyms.\";         A textual example of the semantic relation is \"are mammal\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['lion', 'tiger', 'elephant', 'giraffe', 'hippopotamus', 'rhino', 'zebra', 'hyena', 'crocodile', 'cheetah']"}
{"cat":"animals","slot":"generalization","value":"eutherian mammal","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of eutherian mammal related to hypernyms.\";         A textual example of the semantic relation is \"are eutherian mammal\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"dog\", \"cat\", \"rabbit\", \"rat\", \"mouse\", \"deer\", \"pig\", \"cow\", \"horse\", \"sheep\"]"}
{"cat":"animals","slot":"generalization","value":"placental","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of placental related to hypernyms.\";         A textual example of the semantic relation is \"are placental\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['dog', 'cat', 'cow', 'pig', 'horse', 'deer', 'elephant', 'rabbit', 'mouse', 'rat']"}
{"cat":"animals","slot":"generalization","value":"placental mammal","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of placental mammal related to hypernyms.\";         A textual example of the semantic relation is \"are placental mammal\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['dog', 'cat', 'horse', 'cow', 'pig', 'sheep', 'deer', 'fox', 'rabbit', 'rat']"}
{"cat":"animals","slot":"generalization","value":"eutherian","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of eutherian related to hypernyms.\";         A textual example of the semantic relation is \"are eutherian\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"dog\", \"cat\", \"horse\", \"cow\", \"pig\", \"sheep\", \"rabbit\", \"deer\", \"fox\", \"wolf\"]"}
{"cat":"animals","slot":"generalization","value":"carnivore","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of carnivore related to hypernyms.\";         A textual example of the semantic relation is \"are carnivore\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"lion\", \"tiger\", \"wolf\", \"bear\", \"hyena\", \"leopard\", \"cougar\", \"cheetah\", \"jaguar\", \"fox\"]"}
{"cat":"animals","slot":"generalization","value":"gastropod","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of gastropod related to hypernyms.\";         A textual example of the semantic relation is \"are gastropod\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['snail', 'slug', 'conch', 'whelk', 'abalone', 'limpet', 'periwinkle', 'cowrie', 'murex', 'nudibranch']"}
{"cat":"animals","slot":"generalization","value":"insect","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of insect related to hypernyms.\";         A textual example of the semantic relation is \"are insect\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"bee\", \"ant\", \"butterfly\", \"cricket\", \"dragonfly\", \"grasshopper\", \"ladybug\", \"moth\", \"spider\"]"}
{"cat":"animals","slot":"generalization","value":"vertebrate","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of vertebrate related to hypernyms.\";         A textual example of the semantic relation is \"are vertebrate\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"dog\", \"cat\", \"horse\", \"cow\", \"pig\", \"sheep\", \"goat\", \"deer\", \"rabbit\", \"fox\"]"}
{"cat":"animals","slot":"generalization","value":"craniate","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of craniate related to hypernyms.\";         A textual example of the semantic relation is \"are craniate\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['shark', 'dolphin', 'seal', 'whale', 'walrus', 'otter', 'beaver', 'platypus', 'crocodile', 'alligator']"}
{"cat":"animals","slot":"generalization","value":"reptilian","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of reptilian related to hypernyms.\";         A textual example of the semantic relation is \"are reptilian\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['crocodile', 'alligator', 'lizard', 'snake', 'turtle', 'iguana', 'gecko', 'chameleon', 'boa', 'python']"}
{"cat":"animals","slot":"generalization","value":"reptile","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of reptile related to hypernyms.\";         A textual example of the semantic relation is \"are reptile\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['crocodile', 'alligator', 'lizard', 'snake', 'turtle', 'iguana', 'gecko', 'chameleon', 'cobra', 'python']"}
{"cat":"animals","slot":"generalization","value":"canid","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of canid related to hypernyms.\";         A textual example of the semantic relation is \"are canid\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['dog', 'wolf', 'fox', 'coyote', 'jackal', 'dingo', 'dhole', 'raccoon dog', 'African wild dog']"}
{"cat":"animals","slot":"generalization","value":"oviparous","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of oviparous related to hypernyms.\";         A textual example of the semantic relation is \"are oviparous\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['bird', 'fish', 'reptile', 'snake', 'turtle', 'frog', 'salamander', 'newt', 'shark', 'ostrich']"}
{"cat":"animals","slot":"generalization","value":"organism","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of organism related to hypernyms.\";         A textual example of the semantic relation is \"are organism\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['dog', 'cat', 'horse', 'cow', 'pig', 'sheep', 'goat', 'rabbit', 'fox', 'deer']"}
{"cat":"animals","slot":"generalization","value":"amphibian","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of amphibian related to hypernyms.\";         A textual example of the semantic relation is \"are amphibian\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['frog', 'toad', 'salamander', 'newt', 'caecilian', 'axolotl', 'tree frog', 'fire-bellied toad', 'spadefoot toad', 'hellbender']"}
{"cat":"animals","slot":"generalization","value":"feline","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of feline related to hypernyms.\";         A textual example of the semantic relation is \"are feline\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['lion', 'tiger', 'leopard', 'cheetah', 'jaguar', 'cougar', 'puma', 'lynx', 'bobcat', 'ocelot']"}
{"cat":"animals","slot":"generalization","value":"felid","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of felid related to hypernyms.\";         A textual example of the semantic relation is \"are felid\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['lion', 'tiger', 'leopard', 'jaguar', 'cougar', 'cheetah', 'lynx', 'ocelot', 'serval']"}
{"cat":"animals","slot":"generalization","value":"canine","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of canine related to hypernyms.\";         A textual example of the semantic relation is \"are canine\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['dog', 'wolf', 'fox', 'coyote', 'jackal', 'dingo', 'hyena', 'canine', 'mammal', 'carnivore']"}
{"cat":"animals","slot":"generalization","value":"being","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of being related to hypernyms.\";         A textual example of the semantic relation is \"are being\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['dog', 'cat', 'bird', 'fish', 'horse', 'cow', 'pig', 'monkey', 'lion', 'elephant']"}
{"cat":"animals","slot":"generalization","value":"diapsid","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of diapsid related to hypernyms.\";         A textual example of the semantic relation is \"are diapsid\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"crocodile\", \"turtle\", \"iguana\", \"snake\", \"lizard\", \"alligator\", \"gecko\", \"monitor lizard\", \"gila monster\", \"tuatara\"]"}
{"cat":"animals","slot":"generalization","value":"cat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of cat related to hypernyms.\";         A textual example of the semantic relation is \"are cat\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['cat', 'lion', 'tiger', 'leopard', 'cheetah', 'puma', 'cougar', 'jaguar', 'lynx', 'panther']"}
{"cat":"animals","slot":"generalization","value":"diapsid reptile","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of diapsid reptile related to hypernyms.\";         A textual example of the semantic relation is \"are diapsid reptile\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['turtle', 'crocodile', 'alligator', 'gharial', 'iguana', 'chameleon', 'gecko', 'monitor', 'skink', 'whiptail']"}
{"cat":"animals","slot":"generalization","value":"animate thing","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of animate thing related to hypernyms.\";         A textual example of the semantic relation is \"are animate thing\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['dog', 'cat', 'elephant', 'lion', 'giraffe', 'zebra', 'monkey', 'snake', 'turtle', 'fish']"}
{"cat":"animals","slot":"generalization","value":"big cat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of big cat related to hypernyms.\";         A textual example of the semantic relation is \"are big cat\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['lion', 'tiger', 'leopard', 'jaguar', 'cougar', 'cheetah', 'snow leopard', 'clouded leopard', 'ocelot', 'serval']"}
{"cat":"animals","slot":"generalization","value":"living thing","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of living thing related to hypernyms.\";         A textual example of the semantic relation is \"are living thing\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"dog\", \"cat\", \"horse\", \"elephant\", \"lion\", \"tiger\", \"giraffe\", \"zebra\", \"monkey\", \"panda\"]"}
{"cat":"animals","slot":"generalization","value":"primate","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of primate related to hypernyms.\";         A textual example of the semantic relation is \"are primate\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"chimpanzee\", \"bonobo\", \"orangutan\", \"gorilla\", \"human\", \"baboon\", \"macaque\", \"marmoset\", \"tamarin\", \"capuchin\"]"}
{"cat":"animals","slot":"generalization","value":"ruminant","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of ruminant related to hypernyms.\";         A textual example of the semantic relation is \"are ruminant\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"cattle\", \"sheep\", \"goat\", \"deer\", \"elk\", \"giraffe\", \"camel\", \"llama\", \"alpaca\", \"yak\"]"}
{"cat":"animals","slot":"generalization","value":"anapsid reptile","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of anapsid reptile related to hypernyms.\";         A textual example of the semantic relation is \"are anapsid reptile\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['turtle', 'tortoise', 'terrapin', 'platypus', 'echidna', 'tuatara', 'lizard', 'snake', 'crocodile', 'alligator']"}
{"cat":"animals","slot":"generalization","value":"mytilid","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of mytilid related to hypernyms.\";         A textual example of the semantic relation is \"are mytilid\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['mussel', 'clam', 'oyster', 'scallop', 'squid', 'octopus', 'cuttlefish', 'snail', 'slug', 'worm']"}
{"cat":"animals","slot":"generalization","value":"even-toed ungulate","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of even-toed ungulate related to hypernyms.\";         A textual example of the semantic relation is \"are even-toed ungulate\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['pig', 'hippopotamus', 'cattle', 'deer', 'sheep', 'goat', 'giraffe', 'camel', 'llama', 'antelope']"}
{"cat":"animals","slot":"generalization","value":"leporid","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of leporid related to hypernyms.\";         A textual example of the semantic relation is \"are leporid\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"rabbit\", \"hare\", \"jackrabbit\", \"cottontail\", \"pika\", \"snowshoe hare\", \"hutia\", \"pika\", \"mountain cottontail\", \"desert cottontail\"]"}
{"cat":"animals","slot":"generalization","value":"leporid mammal","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of leporid mammal related to hypernyms.\";         A textual example of the semantic relation is \"are leporid mammal\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"rabbit\", \"hare\", \"jackrabbit\", \"cottontail\", \"pika\", \"snowshoe hare\", \"desert cottontail\", \"European rabbit\", \"mountain cottontail\", \"brush rabbit\"]"}
{"cat":"animals","slot":"generalization","value":"lagomorph","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of lagomorph related to hypernyms.\";         A textual example of the semantic relation is \"are lagomorph\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"rabbit\", \"hare\", \"pika\", \"cottontail\", \"jackrabbit\", \"snowshoe hare\", \"mountain hare\", \"European rabbit\", \"American pika\", \"volcano rabbit\"]"}
{"cat":"animals","slot":"generalization","value":"unit","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of unit related to hypernyms.\";         A textual example of the semantic relation is \"are unit\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['cat', 'dog', 'lion', 'tiger', 'elephant', 'giraffe', 'zebra', 'monkey', 'gorilla', 'bear']"}
{"cat":"animals","slot":"generalization","value":"marine mussel","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of marine mussel related to hypernyms.\";         A textual example of the semantic relation is \"are marine mussel\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"sea mussel\", \"marine mussel\", \"mussel\", \"bivalve\", \"shellfish\", \"mollusk\", \"marine mollusk\", \"marine invertebrate\", \"invertebrate\", \"animal\"]"}
{"cat":"animals","slot":"generalization","value":"arachnoid","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of arachnoid related to hypernyms.\";         A textual example of the semantic relation is \"are arachnoid\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['spider', 'scorpion', 'tick', 'mite', 'ticks', 'mites', 'arachnids', 'arachnid', 'scorpions', 'spiders']"}
{"cat":"animals","slot":"generalization","value":"proboscidean","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of proboscidean related to hypernyms.\";         A textual example of the semantic relation is \"are proboscidean\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['elephant', 'mammoth', 'mastodon', 'gompothere', 'deinotherium', 'stegodon', 'elephas', 'loxodonta', 'palaeoloxodon', 'mammuthus']"}
{"cat":"animals","slot":"generalization","value":"chelonian reptile","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of chelonian reptile related to hypernyms.\";         A textual example of the semantic relation is \"are chelonian reptile\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"tortoise\", \"terrapin\", \"turtle\", \"sea turtle\", \"loggerhead turtle\", \"leatherback turtle\", \"green turtle\", \"hawksbill turtle\", \"olive ridley turtle\", \"flatback turtle\"]"}
{"cat":"animals","slot":"generalization","value":"arachnid","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of arachnid related to hypernyms.\";         A textual example of the semantic relation is \"are arachnid\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['spider', 'scorpion', 'ticks', 'mites', 'harvestmen', 'whip scorpion', 'pseudo scorpion', 'camel spider', 'vinegaroon', 'solifuge']"}
{"cat":"animals","slot":"generalization","value":"hoofed mammal","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of hoofed mammal related to hypernyms.\";         A textual example of the semantic relation is \"are hoofed mammal\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['deer', 'goat', 'sheep', 'cow', 'pig', 'horse', 'donkey', 'mule', 'zebra', 'giraffe']"}
{"cat":"animals","slot":"generalization","value":"artiodactyl mammal","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of artiodactyl mammal related to hypernyms.\";         A textual example of the semantic relation is \"are artiodactyl mammal\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['pig', 'hippopotamus', 'camel', 'sheep', 'deer', 'giraffe', 'cattle', 'antelope', 'goat', 'llama']"}
{"cat":"animals","slot":"generalization","value":"lamellibranch","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of lamellibranch related to hypernyms.\";         A textual example of the semantic relation is \"are lamellibranch\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['clam', 'oyster', 'scallop', 'mussel', 'cockle', 'razor clam', 'geoduck', 'quahog', 'surf clam', 'soft-shell clam']"}
{"cat":"animals","slot":"generalization","value":"herbivorous","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of herbivorous related to hypernyms.\";         A textual example of the semantic relation is \"are herbivorous\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"cow\", \"deer\", \"elephant\", \"giraffe\", \"horse\", \"rabbit\", \"sheep\", \"squirrel\", \"zebra\"]"}
{"cat":"animals","slot":"generalization","value":"pelecypod","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of pelecypod related to hypernyms.\";         A textual example of the semantic relation is \"are pelecypod\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['clam', 'oyster', 'mussel', 'scallop', 'cockle', 'razor clam', 'quahog', 'surf clam', 'geoduck', 'soft-shell clam']"}
{"cat":"animals","slot":"generalization","value":"hermaphrodite","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of hermaphrodite related to hypernyms.\";         A textual example of the semantic relation is \"are hermaphrodite\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['snail', 'worm', 'earthworm', 'slug', 'hermit crab', 'barnacle', 'sea anemone', 'sea cucumber', 'sea urchin', 'starfish']"}
{"cat":"animals","slot":"generalization","value":"saurian","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of saurian related to hypernyms.\";         A textual example of the semantic relation is \"are saurian\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['lizard', 'crocodile', 'alligator', 'dinosaur', 'iguana', 'gecko', 'monitor', 'turtle', 'terrapin', 'skink']"}
{"cat":"animals","slot":"generalization","value":"artiodactyl","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of artiodactyl related to hypernyms.\";         A textual example of the semantic relation is \"are artiodactyl\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['deer', 'giraffe', 'camel', 'pig', 'hippopotamus', 'sheep', 'cattle', 'antelope', 'goat', 'llama']"}
{"cat":"animals","slot":"generalization","value":"bivalve","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of bivalve related to hypernyms.\";         A textual example of the semantic relation is \"are bivalve\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['oyster', 'clam', 'mussel', 'scallop', 'cockle', 'razor clam', 'quahog', 'piddock', 'geoduck', 'pen shell']"}
{"cat":"animals","slot":"generalization","value":"chelonian","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of chelonian related to hypernyms.\";         A textual example of the semantic relation is \"are chelonian\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['turtle', 'terrapin', 'tortoise', 'chelonian', 'reptile', 'vertebrate', 'animal', 'testudines', 'turtles', 'testudinata']"}
{"cat":"animals","slot":"generalization","value":"proboscidian","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of proboscidian related to hypernyms.\";         A textual example of the semantic relation is \"are proboscidian\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['elephant', 'mammoth', 'mastodon', 'giraffe', 'rhinoceros', 'hippopotamus', 'tapir', 'aardvark', 'anteater', 'pangolin']"}
{"cat":"animals","slot":"generalization","value":"whole","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of whole related to hypernyms.\";         A textual example of the semantic relation is \"are whole\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['elephant', 'lion', 'tiger', 'bear', 'giraffe', 'zebra', 'rhino', 'hippo', 'crocodile']"}
{"cat":"animals","slot":"generalization","value":"pachyderm","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of pachyderm related to hypernyms.\";         A textual example of the semantic relation is \"are pachyderm\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['elephant', 'rhinoceros', 'hippopotamus', 'tapir', 'pangolin', 'armadillo', 'sloth', 'anteater', 'aardvark', 'crocodile']"}
{"cat":"animals","slot":"generalization","value":"crustacean","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of crustacean related to hypernyms.\";         A textual example of the semantic relation is \"are crustacean\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['shrimp', 'crab', 'lobster', 'crayfish', 'krill', 'barnacle', 'hermit crab', 'squilla', 'isopod', 'amphipod']"}
{"cat":"animals","slot":"generalization","value":"ungulate","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of ungulate related to hypernyms.\";         A textual example of the semantic relation is \"are ungulate\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['deer', 'elk', 'moose', 'antelope', 'gazelle', 'impala', 'giraffe', 'okapi', 'pronghorn', 'sheep']"}
{"cat":"animals","slot":"generalization","value":"mussel","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of mussel related to hypernyms.\";         A textual example of the semantic relation is \"are mussel\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['mollusk', 'bivalve', 'shellfish', 'invertebrate', 'marine animal', 'aquatic animal', 'crustacean', 'cephalopod', 'echinoderm', 'vertebrate']"}
{"cat":"animals","slot":"generalization","value":"gnawing mammal","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of gnawing mammal related to hypernyms.\";         A textual example of the semantic relation is \"are gnawing mammal\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"beaver\", \"capybara\", \"chipmunk\", \"gopher\", \"hamster\", \"hedgehog\", \"marmot\", \"mouse\", \"squirrel\", \"vole\"]"}
{"cat":"animals","slot":"generalization","value":"anapsid","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of anapsid related to hypernyms.\";         A textual example of the semantic relation is \"are anapsid\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['turtle', 'crocodile', 'alligator', 'tuatara', 'platypus', 'lizard', 'snake', 'crocodilian', 'tuataran', 'turtle']"}
{"cat":"animals","slot":"generalization","value":"animal","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of animal related to hypernyms.\";         A textual example of the semantic relation is \"are animal\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['cat', 'dog', 'elephant', 'lion', 'tiger', 'giraffe', 'monkey', 'zebra', 'penguin', 'koala']"}
{"cat":"animals","slot":"generalization","value":"arthropod","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of arthropod related to hypernyms.\";         A textual example of the semantic relation is \"are arthropod\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['spider', 'scorpion', 'crab', 'lobster', 'shrimp', 'beetle', 'cricket', 'grasshopper', 'tick', 'mite']"}
{"cat":"animals","slot":"generalization","value":"invertebrate","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of invertebrate related to hypernyms.\";         A textual example of the semantic relation is \"are invertebrate\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"spider\", \"scorpion\", \"centipede\", \"millipede\", \"worm\", \"snail\", \"slug\", \"octopus\", \"squid\", \"crab\"]"}
{"cat":"animals","slot":"activity","value":"nest","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All actions that nest can actively or consciously do.\";         A textual example of the semantic relation is \"can be nest\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['bird', 'squirrel', 'rabbit', 'beaver', 'duck', 'swan', 'pigeon', 'eagle', 'robin', 'ostrich']"}
{"cat":"animals","slot":"generalization","value":"hymenopter","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of hymenopter related to hypernyms.\";         A textual example of the semantic relation is \"are hymenopter\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['bee', 'wasp', 'ant', 'beetle', 'butterfly', 'moth', 'fly', 'hornet', 'yellowjacket', 'honeybee']"}
{"cat":"animals","slot":"generalization","value":"hymenopterous insect","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of hymenopterous insect related to hypernyms.\";         A textual example of the semantic relation is \"are hymenopterous insect\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['bee', 'wasp', 'ant', 'beetle', 'butterfly', 'moth', 'fly', 'hornet', 'bumblebee', 'honeybee']"}
{"cat":"animals","slot":"generalization","value":"chordate","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of chordate related to hypernyms.\";         A textual example of the semantic relation is \"are chordate\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['human', 'dog', 'cat', 'mouse', 'rat', 'rabbit', 'pig', 'cow', 'horse', 'sheep']"}
{"cat":"animals","slot":"generalization","value":"hymenopteron","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of hymenopteron related to hypernyms.\";         A textual example of the semantic relation is \"are hymenopteron\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"bee\", \"wasp\", \"ant\", \"hornet\", \"yellow jacket\", \"bumblebee\", \"mason bee\", \"carpenter bee\", \"sawfly\", \"sand wasp\"]"}
{"cat":"animals","slot":"generalization","value":"hymenopteran","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of hymenopteran related to hypernyms.\";         A textual example of the semantic relation is \"are hymenopteran\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['bee', 'wasp', 'ant', 'beetle', 'butterfly', 'moth', 'fly', 'hornet', 'yellow jacket', 'honeybee']"}
{"cat":"animals","slot":"place","value":"larva","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All the entities in which larva can be experienced, found or perceived.\";         A textual example of the semantic relation is \"can be found or used in larvas\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['caterpillar', 'maggot', 'grub', 'tadpole', 'mosquito', 'bee', 'ant', 'butterfly', 'dragonfly', 'fly']"}
{"cat":"animals","slot":"place","value":"hive","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All the entities in which hive can be experienced, found or perceived.\";         A textual example of the semantic relation is \"can be found or used in hives\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"bee\", \"honeybee\", \"hive\", \"beehive\", \"beekeeper\", \"apiary\", \"pollination\", \"nectar\", \"worker bee\", \"drone\"]"}
{"cat":"animals","slot":"generalization","value":"mollusk","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of mollusk related to hypernyms.\";         A textual example of the semantic relation is \"are mollusk\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"octopus\", \"squid\", \"snail\", \"clam\", \"oyster\", \"slug\", \"conch\", \"mussel\", \"cuttlefish\", \"nautilus\"]"}
{"cat":"animals","slot":"generalization","value":"herbivore","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of herbivore related to hypernyms.\";         A textual example of the semantic relation is \"are herbivore\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['deer', 'rabbit', 'cow', 'sheep', 'goat', 'giraffe', 'zebra', 'elephant', 'rhino', 'hippo']"}
{"cat":"animals","slot":"activity","value":"walk","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All actions that walk can actively or consciously do.\";         A textual example of the semantic relation is \"can be walk\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"cat\", \"dog\", \"horse\", \"elephant\", \"lion\", \"tiger\", \"bear\", \"giraffe\", \"zebra\"]"}
{"cat":"animals","slot":"activity","value":"crawl","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All actions that crawl can actively or consciously do.\";         A textual example of the semantic relation is \"can be crawl\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"snake\", \"caterpillar\", \"centipede\", \"spider\", \"snail\", \"worm\", \"cockroach\", \"lizard\", \"turtle\", \"baby\"]"}
{"cat":"animals","slot":"activity","value":"run","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All actions that run can actively or consciously do.\";         A textual example of the semantic relation is \"can be run\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['rabbit', 'cheetah', 'deer', 'horse', 'gazelle', 'antelope', 'ostrich', 'wolf', 'fox']"}
{"cat":"animals","slot":"activity","value":"fly","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All actions that fly can actively or consciously do.\";         A textual example of the semantic relation is \"can be fly\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"bird\", \"bat\", \"butterfly\", \"dragonfly\", \"bee\", \"fly\", \"eagle\", \"hawk\", \"hummingbird\", \"mosquito\"]"}
{"cat":"animals","slot":"activity","value":"yelp","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All actions that yelp can actively or consciously do.\";         A textual example of the semantic relation is \"can be yelp\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['dog', 'puppy', 'wolf', 'coyote', 'fox', 'seal', 'otter', 'beagle', 'poodle', 'dachshund']"}
{"cat":"animals","slot":"activity","value":"swim","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All actions that swim can actively or consciously do.\";         A textual example of the semantic relation is \"can be swim\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"dolphin\", \"shark\", \"seal\", \"turtle\", \"whale\", \"fish\", \"otter\", \"crab\", \"squid\", \"octopus\"]"}
{"cat":"animals","slot":"activity","value":"leap","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All actions that leap can actively or consciously do.\";         A textual example of the semantic relation is \"can be leap\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['frog', 'deer', 'kangaroo', 'impala', 'gazelle', 'grasshopper', 'squirrel', 'hare', 'horse', 'flea']"}
{"cat":"animals","slot":"activity","value":"creep","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All actions that creep can actively or consciously do.\";         A textual example of the semantic relation is \"can be creep\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['snake', 'worm', 'slug', 'centipede', 'millipede', 'spider', 'caterpillar', 'snail', 'crawfish', 'earthworm']"}
{"cat":"animals","slot":"activity","value":"leap","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All actions that leap can actively or consciously do.\";         A textual example of the semantic relation is \"can be leap\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['frog', 'deer', 'kangaroo', 'impala', 'gazelle', 'grasshopper', 'squirrel', 'hare', 'horse', 'flea']"}
{"cat":"animals","slot":"activity","value":"fly","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All actions that fly can actively or consciously do.\";         A textual example of the semantic relation is \"can be fly\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"bird\", \"bat\", \"butterfly\", \"dragonfly\", \"bee\", \"fly\", \"eagle\", \"hawk\", \"hummingbird\", \"mosquito\"]"}
{"cat":"animals","slot":"activity","value":"jump","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All actions that jump can actively or consciously do.\";         A textual example of the semantic relation is \"can be jump\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['kangaroo', 'frog', 'deer', 'rabbit', 'cat', 'dog', 'horse', 'monkey', 'squirrel', 'goat']"}
{"cat":"animals","slot":"activity","value":"hop","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All actions that hop can actively or consciously do.\";         A textual example of the semantic relation is \"can be hop\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['rabbit', 'kangaroo', 'frog', 'grasshopper', 'toad', 'bunny', 'hare', 'squirrel', 'mouse']"}
{"cat":"animals","slot":"activity","value":"howl","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All actions that howl can actively or consciously do.\";         A textual example of the semantic relation is \"can be howl\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['wolf', 'dog', 'coyote', 'fox', 'hyena', 'jackal', 'dhole', 'dingo', 'cougar', 'lynx']"}
{"cat":"animals","slot":"generalization","value":"lepidopteron","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of lepidopteron related to hypernyms.\";         A textual example of the semantic relation is \"are lepidopteron\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"butterfly\", \"moth\", \"caterpillar\", \"larva\", \"pupa\", \"imago\", \"nymph\", \"chrysalis\", \"egg\", \"adult\"]"}
{"cat":"animals","slot":"generalization","value":"domestic animal","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of domestic animal related to hypernyms.\";         A textual example of the semantic relation is \"are domestic animal\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"dog\", \"cat\", \"rabbit\", \"hamster\", \"guinea pig\", \"fish\", \"bird\", \"horse\", \"cow\", \"pig\"]"}
{"cat":"animals","slot":"generalization","value":"ectotherm","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of ectotherm related to hypernyms.\";         A textual example of the semantic relation is \"are ectotherm\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"lizard\", \"snake\", \"turtle\", \"crocodile\", \"alligator\", \"iguana\", \"gecko\", \"chameleon\", \"skink\", \"monitor\"]"}
{"cat":"animals","slot":"generalization","value":"lepidopterous insect","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of lepidopterous insect related to hypernyms.\";         A textual example of the semantic relation is \"are lepidopterous insect\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['butterfly', 'moth', 'skipper', 'hawk moth', 'owlet moth', 'swallowtail', 'brush-footed butterfly', 'metalmark', 'satyrid', 'geometer moth']"}
{"cat":"animals","slot":"generalization","value":"lepidopteran","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of lepidopteran related to hypernyms.\";         A textual example of the semantic relation is \"are lepidopteran\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['butterfly', 'moth', 'skipper', 'hawk moth', 'owlet moth', 'geometer moth', 'sphinx moth', 'brush-footed butterfly', 'swallowtail butterfly', 'longwing butterfly']"}
{"cat":"animals","slot":"generalization","value":"decapod crustacean","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of decapod crustacean related to hypernyms.\";         A textual example of the semantic relation is \"are decapod crustacean\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['lobster', 'crab', 'shrimp', 'crayfish', 'krill', 'barnacle', 'squid', 'octopus', 'cuttlefish', 'mantis shrimp']"}
{"cat":"animals","slot":"generalization","value":"domesticated animal","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of domesticated animal related to hypernyms.\";         A textual example of the semantic relation is \"are domesticated animal\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"dog\", \"cat\", \"horse\", \"cow\", \"pig\", \"sheep\", \"goat\", \"chicken\", \"duck\", \"rabbit\"]"}
{"cat":"animals","slot":"generalization","value":"decapod","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of decapod related to hypernyms.\";         A textual example of the semantic relation is \"are decapod\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['lobster', 'crab', 'shrimp', 'crayfish', 'squid', 'octopus', 'cuttlefish', 'snail', 'slug', 'clam']"}
{"cat":"animals","slot":"specialization","value":"worker","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of worker in terms of their hyponyms.\";         A textual example of the semantic relation is \"are worker\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"bee\", \"ant\", \"beaver\", \"honeybee\", \"hornet\", \"bumblebee\", \"wasp\", \"butterfly\", \"moth\", \"ladybug\"]"}
{"cat":"animals","slot":"specialization","value":"queen","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of queen in terms of their hyponyms.\";         A textual example of the semantic relation is \"are queen\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"bee\", \"ant\", \"wasp\", \"termite\", \"beetle\", \"cricket\", \"cockroach\", \"butterfly\", \"moth\", \"spider\"]"}
{"cat":"animals","slot":"specialization","value":"drone","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of drone in terms of their hyponyms.\";         A textual example of the semantic relation is \"are drone\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['bird', 'insect', 'mammal', 'reptile', 'fish', 'amphibian', 'arachnid', 'crustacean', 'mollusk', 'worm']"}
{"cat":"animals","slot":"specialization","value":"Labrador","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of Labrador in terms of their hyponyms.\";         A textual example of the semantic relation is \"are Labrador\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['puppy', 'dog', 'canine', 'pet', 'animal', 'furry', 'companion', 'friendly', 'loyal', 'energetic']"}
{"cat":"animals","slot":"specialization","value":"Beagle","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of Beagle in terms of their hyponyms.\";         A textual example of the semantic relation is \"are Beagle\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['dog', 'pet', 'canine', 'hound', 'puppy', 'mammal', 'furry', 'companion', 'animal', 'friend']"}
{"cat":"animals","slot":"specialization","value":"Bulldog","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of Bulldog in terms of their hyponyms.\";         A textual example of the semantic relation is \"are Bulldog\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['dog', 'canine', 'mammal', 'pet', 'companion', 'guardian', 'protector', 'friend', 'loyal']"}
{"cat":"animals","slot":"specialization","value":"Golden Retriever","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of Golden Retriever in terms of their hyponyms.\";         A textual example of the semantic relation is \"are Golden Retriever\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"dog\", \"pet\", \"canine\", \"mammal\", \"companion\", \"friend\", \"household\", \"furry\", \"faithful\", \"loyal\"]"}
{"cat":"animals","slot":"specialization","value":"red fox","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of red fox in terms of their hyponyms.\";         A textual example of the semantic relation is \"are red fox\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['fox', 'red fox', 'vulpes vulpes', 'mammal', 'carnivore', 'canine', 'dog', 'wolf', 'animal', 'vertebrate']"}
{"cat":"animals","slot":"specialization","value":"Rottweiler","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of Rottweiler in terms of their hyponyms.\";         A textual example of the semantic relation is \"are Rottweiler\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['dog', 'canine', 'mammal', 'carnivore', 'pet', 'guardian', 'companion', 'police dog', 'working dog']"}
{"cat":"animals","slot":"specialization","value":"bug","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of bug in terms of their hyponyms.\";         A textual example of the semantic relation is \"are bug\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"beetle\", \"mosquito\", \"fly\", \"cricket\", \"cockroach\", \"moth\", \"ant\", \"butterfly\", \"spider\", \"bee\"]"}
{"cat":"animals","slot":"specialization","value":"kit fox","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of kit fox in terms of their hyponyms.\";         A textual example of the semantic relation is \"are kit fox\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['fox', 'mammal', 'carnivore', 'canine', 'predator', 'desert dweller', 'nocturnal', 'omnivore', 'solitary', 'small']"}
{"cat":"animals","slot":"specialization","value":"German Shepherd","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of German Shepherd in terms of their hyponyms.\";         A textual example of the semantic relation is \"are German Shepherd\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['dog', 'canine', 'mammal', 'pet', 'guard', 'protector', 'police dog', 'herding dog', 'working dog']"}
{"cat":"animals","slot":"specialization","value":"Boxer","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of Boxer in terms of their hyponyms.\";         A textual example of the semantic relation is \"are Boxer\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"dog\", \"canine\", \"mammal\", \"vertebrate\", \"animal\", \"pet\", \"companion\", \"athlete\", \"guardian\"]"}
{"cat":"animals","slot":"specialization","value":"louse","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of louse in terms of their hyponyms.\";         A textual example of the semantic relation is \"are louse\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['body', 'lice', 'louse', 'head', 'leg', 'abdomen', 'thorax', 'antenna', 'eye']"}
{"cat":"animals","slot":"specialization","value":"Poodle","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of Poodle in terms of their hyponyms.\";         A textual example of the semantic relation is \"are Poodle\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"dog\", \"pet\", \"canine\", \"mammal\", \"companion\", \"furry\", \"friendly\", \"intelligent\", \"loyal\"]"}
{"cat":"animals","slot":"specialization","value":"Yorkshire Terrier","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of Yorkshire Terrier in terms of their hyponyms.\";         A textual example of the semantic relation is \"are Yorkshire Terrier\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"dog\", \"terrier\", \"toy dog\", \"companion dog\", \"pet\", \"canine\", \"puppy\", \"furry friend\", \"small breed\"]"}
{"cat":"animals","slot":"specialization","value":"branchiopod","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of branchiopod in terms of their hyponyms.\";         A textual example of the semantic relation is \"are branchiopod\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"tadpole\", \"fairy shrimp\", \"triops\", \"water flea\", \"clam shrimp\", \"spineless\", \"microscopic\", \"crustacean\", \"freshwater\", \"invertebrate\"]"}
{"cat":"animals","slot":"specialization","value":"stonefly","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of stonefly in terms of their hyponyms.\";         A textual example of the semantic relation is \"are stonefly\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['stonefly', 'insect', 'arthropod', 'invertebrate', 'animal', 'winged insect', 'flying insect', 'aquatic insect', 'mayfly', 'caddisfly']"}
{"cat":"animals","slot":"specialization","value":"pierid","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of pierid in terms of their hyponyms.\";         A textual example of the semantic relation is \"are pierid\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['butterfly', 'cabbage white', 'painted lady', 'orange tip', 'green-veined white', 'large white', 'small white', 'brimstone', 'peacock', 'red admiral']"}
{"cat":"animals","slot":"specialization","value":"pleurodont","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of pleurodont in terms of their hyponyms.\";         A textual example of the semantic relation is \"are pleurodont\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"iguana\", \"gecko\", \"salamander\", \"newt\", \"chameleon\", \"skink\", \"turtle\", \"crocodile\", \"alligator\", \"caiman\"]"}
{"cat":"animals","slot":"specialization","value":"stomatopod crustacean","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of stomatopod crustacean in terms of their hyponyms.\";         A textual example of the semantic relation is \"are stomatopod crustacean\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"mantis shrimp\", \"peacock mantis shrimp\", \"harlequin mantis shrimp\", \"spearer mantis shrimp\", \"smasher mantis shrimp\", \"tiger mantis shrimp\", \"ghost mantis shrimp\", \"humbug mantis shrimp\", \"coffin mantis shrimp\", \"pistol mantis shrimp\"]"}
{"cat":"animals","slot":"specialization","value":"stone crab","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of stone crab in terms of their hyponyms.\";         A textual example of the semantic relation is \"are stone crab\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"stone crab\", \"crab\", \"crustacean\", \"arthropod\", \"animal\", \"marine animal\", \"decapod\", \"invertebrate\", \"seafood\", \"food\"]"}
{"cat":"animals","slot":"specialization","value":"doggy","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of doggy in terms of their hyponyms.\";         A textual example of the semantic relation is \"are doggy\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"Chihuahua\", \"Poodle\", \"Golden Retriever\", \"Labrador Retriever\", \"Bulldog\", \"Beagle\", \"Dachshund\", \"Pug\", \"Shih Tzu\", \"Yorkshire Terrier\"]"}
{"cat":"animals","slot":"specialization","value":"sea creature","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of sea creature in terms of their hyponyms.\";         A textual example of the semantic relation is \"are sea creature\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"shark\", \"whale\", \"octopus\", \"dolphin\", \"seal\", \"turtle\", \"crab\", \"lobster\", \"eel\", \"squid\"]"}
{"cat":"animals","slot":"specialization","value":"dickey-bird","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of dickey-bird in terms of their hyponyms.\";         A textual example of the semantic relation is \"are dickey-bird\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"bird\", \"animal\", \"vertebrate\", \"chordate\", \"dickey-bird\", \"passerine\", \"perching bird\", \"songbird\", \"insectivore\", \"granivore\"]"}
{"cat":"animals","slot":"specialization","value":"stomatopod","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of stomatopod in terms of their hyponyms.\";         A textual example of the semantic relation is \"are stomatopod\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['mantis shrimp', 'peacock mantis shrimp', 'harlequin mantis shrimp', 'spearer mantis shrimp', 'smasher mantis shrimp', 'ghost mantis shrimp', 'prawn', 'shrimp', 'lobster', 'crab']"}
{"cat":"animals","slot":"specialization","value":"Symbion pandora","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of Symbion pandora in terms of their hyponyms.\";         A textual example of the semantic relation is \"are Symbion pandora\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['Coral', 'Anemone', 'Shrimp', 'Crab', 'Sea urchin', 'Starfish', 'Sea cucumber', 'Jellyfish', 'Sea sponge', 'Snail']"}
{"cat":"animals","slot":"specialization","value":"adult","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of adult in terms of their hyponyms.\";         A textual example of the semantic relation is \"are adult\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"lion\", \"tiger\", \"elephant\", \"giraffe\", \"rhino\", \"hippo\", \"crocodile\", \"cheetah\", \"zebra\", \"gorilla\"]"}
{"cat":"animals","slot":"specialization","value":"nonpasserine bird","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of nonpasserine bird in terms of their hyponyms.\";         A textual example of the semantic relation is \"are nonpasserine bird\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['ostrich', 'emus', 'rheas', 'cassowaries', 'kiwis', 'penguins', 'albatrosses', 'pelicans', 'flamingos', 'swans']"}
{"cat":"animals","slot":"specialization","value":"basenji","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of basenji in terms of their hyponyms.\";         A textual example of the semantic relation is \"are basenji\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['dog', 'hound', 'terrier', 'canine', 'mammal', 'pet', 'companion', 'animal', 'furry friend', 'domesticated']"}
{"cat":"animals","slot":"specialization","value":"social insect","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of social insect in terms of their hyponyms.\";         A textual example of the semantic relation is \"are social insect\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"bee\", \"ant\", \"wasp\", \"termite\", \"beetle\", \"butterfly\", \"moth\", \"cockroach\", \"louse\", \"flea\"]"}
{"cat":"animals","slot":"specialization","value":"raptor","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of raptor in terms of their hyponyms.\";         A textual example of the semantic relation is \"are raptor\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['eagle', 'hawk', 'falcon', 'owl', 'vulture', 'harpy', 'kite', 'buzzard', 'caracara', 'condor']"}
{"cat":"animals","slot":"specialization","value":"prairie wolf","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of prairie wolf in terms of their hyponyms.\";         A textual example of the semantic relation is \"are prairie wolf\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['prairie wolf', 'wolf', 'canine', 'carnivore', 'mammal', 'animal', 'predator', 'hunter', 'pack animal', 'endangered species']"}
{"cat":"animals","slot":"specialization","value":"ladybird beetle","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of ladybird beetle in terms of their hyponyms.\";         A textual example of the semantic relation is \"are ladybird beetle\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['ladybug', 'beetle', 'insect', 'coleoptera', 'coccinellidae', 'arthropod', 'invertebrate', 'animal', 'organism', 'living thing']"}
{"cat":"animals","slot":"specialization","value":"zooplankton","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of zooplankton in terms of their hyponyms.\";         A textual example of the semantic relation is \"are zooplankton\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"copepod\", \"euphausiid\", \"salp\", \"pteropod\", \"chaetognath\", \"heteropod\", \"amphipod\", \"ostracod\", \"cladoceran\", \"cyclopoid\"]"}
{"cat":"animals","slot":"specialization","value":"copepod crustacean","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of copepod crustacean in terms of their hyponyms.\";         A textual example of the semantic relation is \"are copepod crustacean\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['copepod', 'crustacean', 'zooplankton', 'marine', 'aquatic', 'invertebrate', 'arthropod', 'plankton', 'benthic', 'pelagic']"}
{"cat":"animals","slot":"specialization","value":"aquatic bird","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of aquatic bird in terms of their hyponyms.\";         A textual example of the semantic relation is \"are aquatic bird\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"penguin\", \"duck\", \"swan\", \"pelican\", \"cormorant\", \"gull\", \"albatross\", \"tern\", \"petrel\", \"loon\"]"}
{"cat":"animals","slot":"specialization","value":"insectivore","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of insectivore in terms of their hyponyms.\";         A textual example of the semantic relation is \"are insectivore\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['shrew', 'mole', 'hedgehog', 'anteater', 'armadillo', 'pangolin', 'insect', 'bug', 'beetle', 'fly']"}
{"cat":"animals","slot":"specialization","value":"pea crab","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of pea crab in terms of their hyponyms.\";         A textual example of the semantic relation is \"are pea crab\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['pea crab', 'crab', 'crustacean', 'arthropod', 'animal', 'marine animal', 'sea creature', 'decapod', 'invertebrate', 'zoon']"}
{"cat":"animals","slot":"specialization","value":"gray wolf","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of gray wolf in terms of their hyponyms.\";         A textual example of the semantic relation is \"are gray wolf\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['gray wolf', 'wolf', 'canine', 'mammal', 'carnivore', 'predator', 'animal', 'Eurasian wolf', 'North American wolf']"}
{"cat":"animals","slot":"specialization","value":"carpet beetle","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of carpet beetle in terms of their hyponyms.\";         A textual example of the semantic relation is \"are carpet beetle\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"beetle\", \"insect\", \"arthropod\", \"animal\", \"coleoptera\", \"pest\", \"larva\", \"adult\", \"nymph\", \"imago\"]"}
{"cat":"animals","slot":"specialization","value":"Monomorium pharaonis","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of Monomorium pharaonis in terms of their hyponyms.\";         A textual example of the semantic relation is \"are Monomorium pharaonis\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['ants', 'insects', 'arthropods', 'hexapods', 'invertebrates', 'animals', 'organisms', 'living beings', 'colonies', 'social insects']"}
{"cat":"animals","slot":"specialization","value":"mecopteran","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of mecopteran in terms of their hyponyms.\";         A textual example of the semantic relation is \"are mecopteran\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['scorpionfly', 'earwig', 'crane fly', 'mayfly', 'stonefly', 'dragonfly', 'damselfly', 'lacewing', 'antlion', 'termite']"}
{"cat":"animals","slot":"specialization","value":"soft-shell crab","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of soft-shell crab in terms of their hyponyms.\";         A textual example of the semantic relation is \"are soft-shell crab\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['soft-shell crab', 'crab', 'crustacean', 'arthropod', 'animal', 'seafood', 'food', 'marine animal', 'shellfish', 'invertebrate']"}
{"cat":"animals","slot":"specialization","value":"bunny rabbit","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of bunny rabbit in terms of their hyponyms.\";         A textual example of the semantic relation is \"are bunny rabbit\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"bunny\", \"rabbit\", \"hare\", \"cottontail\", \"lagomorph\", \"leporid\", \"rodent\", \"mammal\", \"vertebrate\", \"animal\"]"}
{"cat":"animals","slot":"specialization","value":"gallfly","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of gallfly in terms of their hyponyms.\";         A textual example of the semantic relation is \"are gallfly\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"gallfly\", \"fly\", \"insect\", \"arthropod\", \"animal\", \"diptera\", \"pest\", \"herbivore\", \"pollinator\"]"}
{"cat":"animals","slot":"specialization","value":"Apis mellifera","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of Apis mellifera in terms of their hyponyms.\";         A textual example of the semantic relation is \"are Apis mellifera\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"bee\", \"honeybee\", \"insect\", \"pollinator\", \"worker bee\", \"drone\", \"queen\", \"colony\", \"hive\", \"swarm\"]"}
{"cat":"animals","slot":"specialization","value":"carriage dog","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of carriage dog in terms of their hyponyms.\";         A textual example of the semantic relation is \"are carriage dog\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['Dalmatian', 'Great Dane', 'Bernese Mountain Dog', 'Newfoundland', 'St. Bernard', 'Irish Wolfhound', 'English Mastiff', 'Scottish Deerhound', 'Russian Black Terrier', 'Bouvier des Flandres']"}
{"cat":"animals","slot":"specialization","value":"pug-dog","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of pug-dog in terms of their hyponyms.\";         A textual example of the semantic relation is \"are pug-dog\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['pug', 'dog', 'breed', 'canine', 'pet', 'companion', 'mammal', 'fauna', 'animal', 'furry friend']"}
{"cat":"animals","slot":"specialization","value":"molter","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of molter in terms of their hyponyms.\";         A textual example of the semantic relation is \"are molter\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['salamander', 'newt', 'lizard', 'snake', 'fish', 'insect', 'mollusk', 'crustacean', 'bird', 'mammal']"}
{"cat":"animals","slot":"specialization","value":"young","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of young in terms of their hyponyms.\";         A textual example of the semantic relation is \"are young\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['calf', 'kitten', 'pup', 'cub', 'chick', 'joey', 'fawn', 'foal', 'duckling', 'piglet']"}
{"cat":"animals","slot":"specialization","value":"cuckoo-bumblebee","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of cuckoo-bumblebee in terms of their hyponyms.\";         A textual example of the semantic relation is \"are cuckoo-bumblebee\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['cuckoo-bumblebee', 'cuckoo', 'bumblebee', 'bee', 'insect', 'pollinator', 'honeybee', 'wasp', 'butterfly', 'moth']"}
{"cat":"animals","slot":"specialization","value":"puppy","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of puppy in terms of their hyponyms.\";         A textual example of the semantic relation is \"are puppy\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['dog', 'canine', 'pet', 'companion', 'furry', 'cute', 'playful', 'loyal', 'friendly', 'young']"}
{"cat":"animals","slot":"specialization","value":"ephemeropteran","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of ephemeropteran in terms of their hyponyms.\";         A textual example of the semantic relation is \"are ephemeropteran\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['mayfly', 'ephemeroptera', 'baetidae', 'baetis', 'baetopus', 'baetulus', 'baeturana', 'baetylus', 'baetydidae', 'baetylidae']"}
{"cat":"animals","slot":"specialization","value":"wood ant","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of wood ant in terms of their hyponyms.\";         A textual example of the semantic relation is \"are wood ant\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"worker\", \"queen\", \"drone\", \"soldier\", \"nymph\", \"larva\", \"pupa\", \"egg\", \"nymphal\", \"larval\"]"}
{"cat":"animals","slot":"specialization","value":"parazoan","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of parazoan in terms of their hyponyms.\";         A textual example of the semantic relation is \"are parazoan\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['sponge', 'jellyfish', 'hydra', 'sea anemone', 'coral', 'flatworm', 'roundworm', 'earthworm', 'leech', 'tardigrade']"}
{"cat":"animals","slot":"specialization","value":"clerid beetle","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of clerid beetle in terms of their hyponyms.\";         A textual example of the semantic relation is \"are clerid beetle\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['clerid', 'beetle', 'insect', 'arthropod', 'animal', 'coleoptera', 'insecta', 'hexapoda', 'eukaryote', 'organism']"}
{"cat":"animals","slot":"specialization","value":"leaf-cutter","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of leaf-cutter in terms of their hyponyms.\";         A textual example of the semantic relation is \"are leaf-cutter\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['leaf-cutter ant', 'leaf-cutter beetle', 'leaf-cutter moth', 'leaf-cutter wasp', 'leaf-cutter termite', 'leaf-cutter butterfly', 'leaf-cutter bee', 'leaf-cutter fly', 'leaf-cutter cricket', 'leaf-cutter spider']"}
{"cat":"animals","slot":"specialization","value":"domestic cat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of domestic cat in terms of their hyponyms.\";         A textual example of the semantic relation is \"are domestic cat\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"Persian\", \"Siamese\", \"British Shorthair\", \"Ragdoll\", \"Maine Coon\", \"Scottish Fold\", \"Exotic Shorthair\", \"Bengal\", \"Sphynx\", \"Russian Blue\"]"}
{"cat":"animals","slot":"specialization","value":"timber wolf","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of timber wolf in terms of their hyponyms.\";         A textual example of the semantic relation is \"are timber wolf\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"wolf\", \"canine\", \"mammal\", \"carnivore\", \"predator\", \"animal\", \"wildlife\", \"fauna\", \"endangered species\"]"}
{"cat":"animals","slot":"specialization","value":"offspring","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of offspring in terms of their hyponyms.\";         A textual example of the semantic relation is \"are offspring\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['puppy', 'kitten', 'cub', 'chick', 'calf', 'fawn', 'piglet', 'foal', 'joey', 'cria']"}
{"cat":"animals","slot":"specialization","value":"odonate","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of odonate in terms of their hyponyms.\";         A textual example of the semantic relation is \"are odonate\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['dragonfly', 'damselfly', 'spreadwing', 'petaltail', 'clubtail', 'darters', 'emerald', 'chaser', 'skimmer', 'cruiser']"}
{"cat":"animals","slot":"specialization","value":"Jonah crab","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of Jonah crab in terms of their hyponyms.\";         A textual example of the semantic relation is \"are Jonah crab\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['Jonah crab', 'crab', 'crustacean', 'arthropod', 'invertebrate', 'animal', 'marine animal', 'seafood', 'food', 'edible']"}
{"cat":"animals","slot":"specialization","value":"purebred","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of purebred in terms of their hyponyms.\";         A textual example of the semantic relation is \"are purebred\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['Golden Retriever', 'Labrador Retriever', 'Poodle', 'Siberian Husky', 'Shih Tzu', 'Bulldog', 'Beagle', 'Dachshund', 'Boxer', 'Pit Bull']"}
{"cat":"animals","slot":"specialization","value":"Alopex lagopus","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of Alopex lagopus in terms of their hyponyms.\";         A textual example of the semantic relation is \"are Alopex lagopus\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"arctic fox\", \"fox\", \"mammal\", \"carnivore\", \"canine\", \"animal\", \"vertebrate\", \"chordate\", \"living thing\"]"}
{"cat":"animals","slot":"specialization","value":"rove beetle","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of rove beetle in terms of their hyponyms.\";         A textual example of the semantic relation is \"are rove beetle\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['beetle', 'insect', 'arthropod', 'animal', 'coleoptera', 'coleopteran', 'invertebrate', 'hexapod', 'bug', 'rove beetle']"}
{"cat":"animals","slot":"specialization","value":"dicky-bird","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of dicky-bird in terms of their hyponyms.\";         A textual example of the semantic relation is \"are dicky-bird\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['finch', 'sparrow', 'canary', 'warbler', 'thrush', 'wren', 'titmouse', 'oriole', 'swallow', 'tanager']"}
{"cat":"animals","slot":"specialization","value":"Helix pomatia","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of Helix pomatia in terms of their hyponyms.\";         A textual example of the semantic relation is \"are Helix pomatia\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"snail\", \"gastropod\", \"mollusk\", \"invertebrate\", \"animal\", \"living organism\", \"creature\", \"being\", \"life form\", \"entity\"]"}
{"cat":"animals","slot":"specialization","value":"long-horned beetle","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of long-horned beetle in terms of their hyponyms.\";         A textual example of the semantic relation is \"are long-horned beetle\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['beetle', 'insect', 'arthropod', 'animal', 'coleoptera', 'insecta', 'hexapoda', 'arthropoda', 'phylum', 'class']"}
{"cat":"animals","slot":"specialization","value":"maned wolf","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of maned wolf in terms of their hyponyms.\";         A textual example of the semantic relation is \"are maned wolf\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['fox', 'coyote', 'jackal', 'wolf', 'dog', 'canid', 'carnivore', 'mammal', 'animal']"}
{"cat":"animals","slot":"specialization","value":"game","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of game in terms of their hyponyms.\";         A textual example of the semantic relation is \"are game\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['deer', 'rabbit', 'duck', 'pheasant', 'quail', 'grouse', 'turkey', 'goose', 'elk', 'moose']"}
{"cat":"animals","slot":"specialization","value":"neuropterous insect","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of neuropterous insect in terms of their hyponyms.\";         A textual example of the semantic relation is \"are neuropterous insect\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['antlion', 'caddisfly', 'lacewing', 'dragonfly', 'damselfly', 'snakefly', 'scorpionfly', 'dobsonfly', 'earwig', 'termite']"}
{"cat":"animals","slot":"specialization","value":"clerid","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of clerid in terms of their hyponyms.\";         A textual example of the semantic relation is \"are clerid\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['cleridae', 'clerid', 'clerid beetle', 'clerid bug', 'clerid insect', 'clerid species', 'clerid type', 'clerid variety', 'clerid wasp', 'clerid-like']"}
{"cat":"animals","slot":"specialization","value":"little black ant","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of little black ant in terms of their hyponyms.\";         A textual example of the semantic relation is \"are little black ant\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['insect', 'ant', 'black ant', 'little black ant', 'small ant', 'tiny ant', 'miniature ant', 'diminutive ant', 'minute ant', 'microscopic ant']"}
{"cat":"animals","slot":"specialization","value":"rock crab","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of rock crab in terms of their hyponyms.\";         A textual example of the semantic relation is \"are rock crab\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['rock crab', 'crab', 'crustacean', 'arthropod', 'animal', 'decapod', 'malacostraca', 'marine animal', 'invertebrate', 'aquatic animal']"}
{"cat":"animals","slot":"specialization","value":"brachiopod","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of brachiopod in terms of their hyponyms.\";         A textual example of the semantic relation is \"are brachiopod\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['clam', 'oyster', 'scallop', 'mussel', 'barnacle', 'cockle', 'quahog', 'razor', 'geoduck', 'littleneck']"}
{"cat":"animals","slot":"specialization","value":"Alaska crab","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of Alaska crab in terms of their hyponyms.\";         A textual example of the semantic relation is \"are Alaska crab\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['King Crab', 'Snow Crab', 'Dungeness Crab', 'Red King Crab', 'Golden King Crab', 'Blue King Crab', 'Bairdi Crab', 'Tanner Crab', 'Opilio Crab', 'True Crab']"}
{"cat":"animals","slot":"specialization","value":"bow-wow","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of bow-wow in terms of their hyponyms.\";         A textual example of the semantic relation is \"are bow-wow\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"dog\", \"puppy\", \"poodle\", \"beagle\", \"golden retriever\", \"labrador\", \"dachshund\", \"chihuahua\", \"bulldog\", \"greyhound\"]"}
{"cat":"animals","slot":"specialization","value":"potter bee","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of potter bee in terms of their hyponyms.\";         A textual example of the semantic relation is \"are potter bee\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['mason bee', 'solitary bee', 'insect', 'hymenopteran', 'pollinator', 'arthropod', 'flying insect', 'bee', 'insectivore', 'stinging insect']"}
{"cat":"animals","slot":"specialization","value":"four-footed butterfly","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of four-footed butterfly in terms of their hyponyms.\";         A textual example of the semantic relation is \"are four-footed butterfly\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['butterfly', 'moth', 'ant', 'bee', 'fly', 'beetle', 'cricket', 'grasshopper', 'spider', 'scorpion']"}
{"cat":"animals","slot":"specialization","value":"mongrel","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of mongrel in terms of their hyponyms.\";         A textual example of the semantic relation is \"are mongrel\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['mutt', 'cur', 'crossbreed', 'mongrel dog', 'mixed-breed dog', 'hybrid dog', 'half-breed', 'mongrel', 'mixed-breed', 'mutt']"}
{"cat":"animals","slot":"specialization","value":"Nomia melanderi","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of Nomia melanderi in terms of their hyponyms.\";         A textual example of the semantic relation is \"are Nomia melanderi\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"bee\", \"wasp\", \"ant\", \"fly\", \"moth\", \"butterfly\", \"beetle\", \"cricket\", \"grasshopper\", \"spider\"]"}
{"cat":"animals","slot":"specialization","value":"peanut worm","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of peanut worm in terms of their hyponyms.\";         A textual example of the semantic relation is \"are peanut worm\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"sipunculid\", \"sipunculus\", \"phylum\", \"annelid\", \"annelida\", \"invertebrate\", \"worm\", \"marine\", \"animal\"]"}
{"cat":"animals","slot":"specialization","value":"moulter","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of moulter in terms of their hyponyms.\";         A textual example of the semantic relation is \"are moulter\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"snail\", \"slug\", \"crab\", \"lobster\", \"shrimp\", \"clam\", \"oyster\", \"scallop\", \"squid\", \"octopus\"]"}
{"cat":"animals","slot":"specialization","value":"rotifer","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of rotifer in terms of their hyponyms.\";         A textual example of the semantic relation is \"are rotifer\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"rotifer\", \"bdelloid rotifer\", \"phylum rotifer\", \"rotifer species\", \"rotifer genus\", \"rotifer clade\", \"rotifer group\", \"rotifer family\", \"rotifer order\", \"rotifer class\"]"}
{"cat":"animals","slot":"specialization","value":"earwig","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of earwig in terms of their hyponyms.\";         A textual example of the semantic relation is \"are earwig\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['insect', 'bug', 'arthropod', 'invertebrate', 'pest', 'nocturnal', 'scavenger', 'predator', 'omnivore']"}
{"cat":"animals","slot":"specialization","value":"Felis domesticus","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of Felis domesticus in terms of their hyponyms.\";         A textual example of the semantic relation is \"are Felis domesticus\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"cat\", \"kitten\", \"tomcat\", \"tabby\", \"calico\", \"sphynx\", \"ragdoll\", \"siamese\", \"maine coon\"]"}
{"cat":"animals","slot":"specialization","value":"sucking louse","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of sucking louse in terms of their hyponyms.\";         A textual example of the semantic relation is \"are sucking louse\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['cattle', 'sheep', 'goat', 'deer', 'rabbit', 'horse', 'dog', 'cat', 'human', 'pig']"}
{"cat":"animals","slot":"specialization","value":"wolf cub","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of wolf cub in terms of their hyponyms.\";         A textual example of the semantic relation is \"are wolf cub\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"pup\", \"cub\", \"whelp\", \"litter\", \"young\", \"offspring\", \"pack\", \"den\", \"predator\", \"canine\"]"}
{"cat":"animals","slot":"specialization","value":"Fenusa pusilla","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of Fenusa pusilla in terms of their hyponyms.\";         A textual example of the semantic relation is \"are Fenusa pusilla\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"sawfly\", \"insect\", \"arthropod\", \"animal\", \"hexapod\", \"invertebrate\", \"arthropod\", \"hexapod\", \"insect\", \"sawfly\"]"}
{"cat":"animals","slot":"specialization","value":"humblebee","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of humblebee in terms of their hyponyms.\";         A textual example of the semantic relation is \"are humblebee\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"bumblebee\", \"honeybee\", \"carpenter bee\", \"mason bee\", \"leafcutter bee\", \"mining bee\", \"sweat bee\", \"cuckoo bee\", \"digger bee\", \"stingless bee\"]"}
{"cat":"animals","slot":"specialization","value":"archaeopteryx","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of archaeopteryx in terms of their hyponyms.\";         A textual example of the semantic relation is \"are archaeopteryx\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['bird', 'dinosaur', 'reptile', 'avian', 'flying', 'feathered', 'prehistoric', 'extinct', 'vertebrate']"}
{"cat":"animals","slot":"specialization","value":"Menippe mercenaria","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of Menippe mercenaria in terms of their hyponyms.\";         A textual example of the semantic relation is \"are Menippe mercenaria\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"Menippe mercenaria\", \"mollusk\", \"bivalve\", \"clam\", \"filter feeder\", \"invertebrate\", \"marine organism\", \"shellfish\", \"suspension feeder\", \"aquatic animal\"]"}
{"cat":"animals","slot":"specialization","value":"stunt","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of stunt in terms of their hyponyms.\";         A textual example of the semantic relation is \"are stunt\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"lion\", \"tiger\", \"elephant\", \"giraffe\", \"zebra\", \"rhino\", \"hippo\", \"cheetah\", \"leopard\", \"crocodile\"]"}
{"cat":"animals","slot":"specialization","value":"imago","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of imago in terms of their hyponyms.\";         A textual example of the semantic relation is \"are imago\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['cat', 'dog', 'horse', 'cow', 'pig', 'sheep', 'chicken', 'duck', 'goose', 'turkey']"}
{"cat":"animals","slot":"specialization","value":"sponge","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of sponge in terms of their hyponyms.\";         A textual example of the semantic relation is \"are sponge\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"Porifera\", \"Sea sponge\", \"Marine sponge\", \"Freshwater sponge\", \"Bath sponge\", \"Kitchen sponge\", \"Loofah\", \"Synthetic sponge\", \"Natural sponge\", \"Cleaning sponge\"]"}
{"cat":"animals","slot":"specialization","value":"longicorn","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of longicorn in terms of their hyponyms.\";         A textual example of the semantic relation is \"are longicorn\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['longhorn beetle', 'longicorn', 'cerambycid', 'coleopteran', 'beetle', 'insect', 'arthropod', 'animal', 'living thing', 'organism']"}
{"cat":"animals","slot":"specialization","value":"mining bee","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of mining bee in terms of their hyponyms.\";         A textual example of the semantic relation is \"are mining bee\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['bee', 'insect', 'pollinator', 'hymenopteran', 'solitary bee', 'ground-nesting bee', 'Andrena', 'Colletes', 'Halictus', 'Lasioglossum']"}
{"cat":"animals","slot":"specialization","value":"ringlet butterfly","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of ringlet butterfly in terms of their hyponyms.\";         A textual example of the semantic relation is \"are ringlet butterfly\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['butterfly', 'insect', 'lepidoptera', 'ringlet', 'animal', 'arthropod', 'invertebrate', 'organism', 'fauna', 'creature']"}
{"cat":"animals","slot":"specialization","value":"omnivore","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of omnivore in terms of their hyponyms.\";         A textual example of the semantic relation is \"are omnivore\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"pig\", \"bear\", \"raccoon\", \"opossum\", \"skunk\", \"rat\", \"fox\", \"dog\", \"cat\", \"human\"]"}
{"cat":"animals","slot":"specialization","value":"protoavis","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of protoavis in terms of their hyponyms.\";         A textual example of the semantic relation is \"are protoavis\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['protoavis', 'bird', 'dinosaur', 'reptile', 'vertebrate', 'animal', 'mammal', 'fish', 'insect', 'amphibian']"}
{"cat":"animals","slot":"specialization","value":"Vulpes vulpes","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of Vulpes vulpes in terms of their hyponyms.\";         A textual example of the semantic relation is \"are Vulpes vulpes\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['fox', 'red fox', 'silver fox', 'kit fox', 'arctic fox', 'fennec fox', 'gray fox', 'swift fox', 'bat-eared fox', 'crab-eating fox']"}
{"cat":"animals","slot":"specialization","value":"birch leaf miner","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of birch leaf miner in terms of their hyponyms.\";         A textual example of the semantic relation is \"are birch leaf miner\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['birch', 'leaf', 'miner', 'insect', 'larva', 'pupa', 'adult', 'species', 'genus', 'family']"}
{"cat":"animals","slot":"specialization","value":"darter","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of darter in terms of their hyponyms.\";         A textual example of the semantic relation is \"are darter\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"darter\", \"rainbow darter\", \"orangethroat darter\", \"tangerine darter\", \"candy darter\", \"warmouth darter\", \"Johnny darter\", \"bluebreast darter\", \"greenside darter\", \"variegated darter\"]"}
{"cat":"animals","slot":"specialization","value":"carinate bird","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of carinate bird in terms of their hyponyms.\";         A textual example of the semantic relation is \"are carinate bird\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"eagle\", \"falcon\", \"hawk\", \"vulture\", \"owl\", \"parrot\", \"penguin\", \"albatross\", \"pelican\", \"stork\"]"}
{"cat":"animals","slot":"specialization","value":"coraciiform bird","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of coraciiform bird in terms of their hyponyms.\";         A textual example of the semantic relation is \"are coraciiform bird\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"kingfisher\", \"bee-eater\", \"roller\", \"hoopoe\", \"cuckoo-roller\", \"ground-roller\", \"malkoha\", \"coucal\", \"cuckoo\", \"hornbill\"]"}
{"cat":"animals","slot":"specialization","value":"carpenter bee","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of carpenter bee in terms of their hyponyms.\";         A textual example of the semantic relation is \"are carpenter bee\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['bee', 'insect', 'pollinator', 'arthropod', 'hymenopteran', 'solitary bee', 'Xylocopa', 'Carpenter bee', 'wood-nesting bee', 'Xylocopa virginica']"}
{"cat":"animals","slot":"specialization","value":"ctenophore","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of ctenophore in terms of their hyponyms.\";         A textual example of the semantic relation is \"are ctenophore\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['comb jelly', 'sea walnut', 'venus girdle', 'wavy comb jelly', 'lophotrochozoan', 'ctenophore', 'cnidarian', 'jellyfish', 'sea anemone', 'hydrozoan']"}
{"cat":"animals","slot":"specialization","value":"telsontail","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of telsontail in terms of their hyponyms.\";         A textual example of the semantic relation is \"are telsontail\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"cat\", \"dog\", \"rabbit\", \"hamster\", \"guinea pig\", \"mouse\", \"rat\", \"snake\", \"turtle\", \"fish\"]"}
{"cat":"animals","slot":"specialization","value":"Leonberg","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of Leonberg in terms of their hyponyms.\";         A textual example of the semantic relation is \"are Leonberg\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"dog\", \"breed\", \"large\", \"strong\", \"loyal\", \"friendly\", \"protective\", \"intelligent\", \"trainable\", \"active\"]"}
{"cat":"animals","slot":"specialization","value":"thysanopter","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of thysanopter in terms of their hyponyms.\";         A textual example of the semantic relation is \"are thysanopter\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['thrips', 'flea', 'louse', 'tsetse fly', 'mosquito', 'gnat', 'midge', 'crane fly', 'black fly', 'sand fly']"}
{"cat":"animals","slot":"specialization","value":"alkali bee","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of alkali bee in terms of their hyponyms.\";         A textual example of the semantic relation is \"are alkali bee\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"bee\", \"insect\", \"arthropod\", \"animal\", \"pollinator\", \"hymenopteran\", \"apis\", \"apis mellifera\", \"apis dorsata\", \"apis cerana\"]"}
{"cat":"animals","slot":"specialization","value":"captive","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of captive in terms of their hyponyms.\";         A textual example of the semantic relation is \"are captive\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['tiger', 'lion', 'elephant', 'giraffe', 'zebra', 'panda', 'koala', 'kangaroo', 'monkey', 'chimpanzee']"}
{"cat":"animals","slot":"specialization","value":"Great Pyrenees","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of Great Pyrenees in terms of their hyponyms.\";         A textual example of the semantic relation is \"are Great Pyrenees\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['dog', 'canine', 'mammal', 'pet', 'guardian', 'protector', 'herder', 'working dog', 'large breed']"}
{"cat":"animals","slot":"specialization","value":"hemipterous insect","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of hemipterous insect in terms of their hyponyms.\";         A textual example of the semantic relation is \"are hemipterous insect\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"aphid\", \"assassin bug\", \"bedbug\", \"cicada\", \"cimex\", \"cicada\", \"leafhopper\", \"planthopper\", \"stink bug\", \"true bug\"]"}
{"cat":"animals","slot":"specialization","value":"pug","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of pug in terms of their hyponyms.\";         A textual example of the semantic relation is \"are pug\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['dog', 'canine', 'pet', 'companion', 'toy breed', 'lap dog', 'fawn', 'black', 'brindle']"}
{"cat":"animals","slot":"specialization","value":"hard-shell crab","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of hard-shell crab in terms of their hyponyms.\";         A textual example of the semantic relation is \"are hard-shell crab\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['blue crab', 'stone crab', 'dungeness crab', 'red king crab', 'snow crab', 'peekytoe crab', 'alaska king crab', 'horseshoe crab', 'soft-shell crab', 'crab']"}
{"cat":"animals","slot":"specialization","value":"cock","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of cock in terms of their hyponyms.\";         A textual example of the semantic relation is \"are cock\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"rooster\", \"chicken\", \"hen\", \"poultry\", \"bird\", \"fowl\", \"bantam\", \"pullet\", \"capon\", \"gamecock\"]"}
{"cat":"animals","slot":"specialization","value":"cottontail","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of cottontail in terms of their hyponyms.\";         A textual example of the semantic relation is \"are cottontail\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['rabbit', 'hare', 'bunny', 'cottontail', 'leporid', 'lagomorph', 'mammal', 'vertebrate', 'animal', 'creature']"}
{"cat":"animals","slot":"specialization","value":"thysanopteron","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of thysanopteron in terms of their hyponyms.\";         A textual example of the semantic relation is \"are thysanopteron\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['thrips', 'flea', 'louse', 'ticks', 'mites', 'aphids', 'leafhoppers', 'scale insects', 'whiteflies', 'planthoppers']"}
{"cat":"animals","slot":"specialization","value":"trichopteron","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of trichopteron in terms of their hyponyms.\";         A textual example of the semantic relation is \"are trichopteron\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['mayfly', 'ephemeroptera', 'insect', 'aquatic insect', 'nymph', 'larva', 'pupa', 'adult', 'winged insect', 'arthropod']"}
{"cat":"animals","slot":"specialization","value":"flying bird","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of flying bird in terms of their hyponyms.\";         A textual example of the semantic relation is \"are flying bird\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"eagle\", \"hawk\", \"falcon\", \"owl\", \"vulture\", \"condor\", \"kite\", \"harrier\", \"buzzard\", \"osprey\"]"}
{"cat":"animals","slot":"specialization","value":"pollinator","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of pollinator in terms of their hyponyms.\";         A textual example of the semantic relation is \"are pollinator\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['bee', 'butterfly', 'hummingbird', 'bat', 'moth', 'beetle', 'fly', 'bird', 'wasp', 'mosquito']"}
{"cat":"animals","slot":"specialization","value":"sulfur butterfly","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of sulfur butterfly in terms of their hyponyms.\";         A textual example of the semantic relation is \"are sulfur butterfly\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"sulfur butterfly\", \"animal\", \"insect\", \"lepidoptera\", \"pieridae\", \"colias\", \"phengaris\", \"polyommatus\", \"lycaenidae\", \"nymphalidae\"]"}
{"cat":"animals","slot":"specialization","value":"Arctic fox","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of Arctic fox in terms of their hyponyms.\";         A textual example of the semantic relation is \"are Arctic fox\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['fox', 'mammal', 'carnivore', 'canine', 'animal', 'predator', 'arctic fox', 'vulpes lagopus', 'wildlife', 'fauna']"}
{"cat":"animals","slot":"specialization","value":"Vulpes macrotis","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of Vulpes macrotis in terms of their hyponyms.\";         A textual example of the semantic relation is \"are Vulpes macrotis\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"coyote\", \"fox\", \"canid\", \"carnivore\", \"mammal\", \"animal\", \"vertebrate\", \"living organism\", \"organism\"]"}
{"cat":"animals","slot":"specialization","value":"pupa","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of pupa in terms of their hyponyms.\";         A textual example of the semantic relation is \"are pupa\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"caterpillar\", \"chrysalis\", \"larva\", \"nymph\", \"pupa\", \"imago\", \"maggot\", \"grub\", \"tadpole\", \"nymph\"]"}
{"cat":"animals","slot":"specialization","value":"slave-maker","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of slave-maker in terms of their hyponyms.\";         A textual example of the semantic relation is \"are slave-maker\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['slave-maker', 'ant', 'bee', 'wasp', 'spider', 'fly', 'beetle', 'cricket', 'grasshopper', 'locust']"}
{"cat":"animals","slot":"specialization","value":"andrena","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of andrena in terms of their hyponyms.\";         A textual example of the semantic relation is \"are andrena\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['bee', 'insect', 'pollinator', 'honeybee', 'bumblebee', 'solitary bee', 'sting', 'hive', 'pollen', 'nectar']"}
{"cat":"animals","slot":"specialization","value":"leaf-cutting bee","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of leaf-cutting bee in terms of their hyponyms.\";         A textual example of the semantic relation is \"are leaf-cutting bee\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['bee', 'insect', 'pollinator', 'hymenoptera', 'ant', 'wasp', 'butterfly', 'moth', 'beetle', 'fly']"}
{"cat":"animals","slot":"specialization","value":"orthopteron","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of orthopteron in terms of their hyponyms.\";         A textual example of the semantic relation is \"are orthopteron\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['grasshopper', 'cricket', 'locust', 'katydid', 'mole cricket', 'weta', 'cave cricket', 'earwig', 'walking stick']"}
{"cat":"animals","slot":"specialization","value":"Welsh corgi","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of Welsh corgi in terms of their hyponyms.\";         A textual example of the semantic relation is \"are Welsh corgi\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['dog', 'canine', 'pet', 'herding dog', 'companion', 'short-legged', 'long-bodied', 'fox-like', 'loyal']"}
{"cat":"animals","slot":"specialization","value":"poikilotherm","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of poikilotherm in terms of their hyponyms.\";         A textual example of the semantic relation is \"are poikilotherm\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['lizard', 'snake', 'turtle', 'frog', 'salamander', 'newt', 'fish', 'shark', 'ray', 'eel']"}
{"cat":"animals","slot":"specialization","value":"lampshell","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of lampshell in terms of their hyponyms.\";         A textual example of the semantic relation is \"are lampshell\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['clam', 'oyster', 'scallop', 'mussel', 'cockle', 'abalone', 'conch', 'whelk', 'snail', 'octopus']"}
{"cat":"animals","slot":"specialization","value":"meloid","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of meloid in terms of their hyponyms.\";         A textual example of the semantic relation is \"are meloid\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['snail', 'slug', 'crab', 'lobster', 'shrimp', 'clam', 'oyster', 'scallop', 'squid', 'octopus']"}
{"cat":"animals","slot":"specialization","value":"carabid beetle","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of carabid beetle in terms of their hyponyms.\";         A textual example of the semantic relation is \"are carabid beetle\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['carabid', 'beetle', 'insect', 'arthropod', 'animal', 'coleoptera', 'invertebrate', 'exoskeleton', 'six legs', 'compound eyes']"}
{"cat":"animals","slot":"specialization","value":"proturan","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of proturan in terms of their hyponyms.\";         A textual example of the semantic relation is \"are proturan\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"eutardigrades\", \"diplurans\", \"collembola\", \"proturans\", \"insects\", \"arthropods\", \"invertebrates\", \"animals\", \"living organisms\"]"}
{"cat":"animals","slot":"specialization","value":"Archaeopteryx lithographica","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of Archaeopteryx lithographica in terms of their hyponyms.\";         A textual example of the semantic relation is \"are Archaeopteryx lithographica\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"bird\", \"dinosaur\", \"reptile\", \"flying creature\", \"prehistoric animal\", \"feathered creature\", \"winged reptile\", \"transitional fossil\", \"mesozoic creature\", \"early bird\"]"}
{"cat":"animals","slot":"specialization","value":"polyzoan","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of polyzoan in terms of their hyponyms.\";         A textual example of the semantic relation is \"are polyzoan\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['bryozoan', 'ectoproct', 'tunicate', 'brachiopod', 'phoronid', 'pterobranch', 'entoproct', 'cycliophoran', 'moss animalcule', 'polyplacophora']"}
{"cat":"animals","slot":"specialization","value":"woodborer","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of woodborer in terms of their hyponyms.\";         A textual example of the semantic relation is \"are woodborer\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['beetle', 'termite', 'carpenter ant', 'powderpost beetle', 'longhorn beetle', 'roundheaded woodborer', 'flatheaded woodborer', 'deathwatch beetle', 'woodwasp', 'furniture beetle']"}
{"cat":"animals","slot":"specialization","value":"work animal","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of work animal in terms of their hyponyms.\";         A textual example of the semantic relation is \"are work animal\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"ox\", \"donkey\", \"mule\", \"horse\", \"llama\", \"camel\", \"elephant\", \"dog\", \"goat\", \"sheep\"]"}
{"cat":"animals","slot":"specialization","value":"weevil","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of weevil in terms of their hyponyms.\";         A textual example of the semantic relation is \"are weevil\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['beetle', 'insect', 'arthropod', 'animal', 'coleoptera', 'invertebrate', 'bug', 'pest', 'cicada', 'cricket']"}
{"cat":"animals","slot":"specialization","value":"thysanuran insect","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of thysanuran insect in terms of their hyponyms.\";         A textual example of the semantic relation is \"are thysanuran insect\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['silverfish', 'firebrats', 'bristletails', 'jumpingbristletails', 'fishmoths', 'booklice', 'psocids', 'barklice', 'true lice', 'thrips']"}
{"cat":"animals","slot":"specialization","value":"sea animal","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of sea animal in terms of their hyponyms.\";         A textual example of the semantic relation is \"are sea animal\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['whale', 'dolphin', 'shark', 'seal', 'octopus', 'turtle', 'eel', 'lobster', 'crab', 'squid']"}
{"cat":"animals","slot":"specialization","value":"Sinornis","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of Sinornis in terms of their hyponyms.\";         A textual example of the semantic relation is \"are Sinornis\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['bird', 'dinosaur', 'fossil', 'feathered creature', 'prehistoric animal', 'extinct species', 'reptile', 'winged reptile', 'maniraptoran', 'theropod']"}
{"cat":"animals","slot":"specialization","value":"lapdog","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of lapdog in terms of their hyponyms.\";         A textual example of the semantic relation is \"are lapdog\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['Pomeranian', 'Shih Tzu', 'Chihuahua', 'Maltese', 'Yorkshire Terrier', 'Cavalier King Charles Spaniel', 'Bichon Frise', 'Pug', 'Pekingese', 'French Bulldog']"}
{"cat":"animals","slot":"specialization","value":"borer","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of borer in terms of their hyponyms.\";         A textual example of the semantic relation is \"are borer\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"beetle\", \"moth\", \"weevil\", \"sawfly\", \"termites\", \"woodworm\", \"bark beetle\", \"powderpost beetle\", \"flatheaded borer\", \"roundheaded borer\"]"}
{"cat":"animals","slot":"specialization","value":"scavenger","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of scavenger in terms of their hyponyms.\";         A textual example of the semantic relation is \"are scavenger\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"vulture\", \"hyena\", \"opossum\", \"crow\", \"rat\", \"coyote\", \"bear\", \"jackal\", \"buzzard\", \"raven\"]"}
{"cat":"animals","slot":"specialization","value":"Anoplophora glabripennis","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of Anoplophora glabripennis in terms of their hyponyms.\";         A textual example of the semantic relation is \"are Anoplophora glabripennis\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"beetle\", \"insect\", \"animal\", \"arthropod\", \"invertebrate\", \"pest\", \"invasive species\", \"Coleoptera\", \"Asian longhorned beetle\"]"}
{"cat":"animals","slot":"specialization","value":"flightless bird","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of flightless bird in terms of their hyponyms.\";         A textual example of the semantic relation is \"are flightless bird\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['ostrich', 'emus', 'kiwis', 'cassowary', 'rhea', 'penguin', 'great auk', 'moa', 'dodo']"}
{"cat":"animals","slot":"specialization","value":"holometabola","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of holometabola in terms of their hyponyms.\";         A textual example of the semantic relation is \"are holometabola\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['butterfly', 'moth', 'bee', 'ant', 'wasp', 'fly', 'beetle', 'weevil', 'grasshopper', 'cricket']"}
{"cat":"animals","slot":"specialization","value":"Cancer borealis","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of Cancer borealis in terms of their hyponyms.\";         A textual example of the semantic relation is \"are Cancer borealis\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['crab', 'crustacean', 'arthropod', 'invertebrate', 'animal', 'marine', 'sea', 'ocean', 'wildlife', 'fauna']"}
{"cat":"animals","slot":"specialization","value":"ladybeetle","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of ladybeetle in terms of their hyponyms.\";         A textual example of the semantic relation is \"are ladybeetle\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"ladybug\", \"beetle\", \"insect\", \"arthropod\", \"coleoptera\", \"hemiptera\", \"coccinellidae\", \"coccinellinae\", \"coccinella\"]"}
{"cat":"animals","slot":"specialization","value":"blister beetle","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of blister beetle in terms of their hyponyms.\";         A textual example of the semantic relation is \"are blister beetle\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['beetle', 'insect', 'arthropod', 'animal', 'coleoptera', 'coleopteran', 'insecta', 'hexapoda', 'invertebrate', 'blister beetle']"}
{"cat":"animals","slot":"specialization","value":"doggie","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of doggie in terms of their hyponyms.\";         A textual example of the semantic relation is \"are doggie\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['poodle', 'beagle', 'bulldog', 'dachshund', 'greyhound', 'labrador', 'pomeranian', 'shepherd', 'terrier', 'whippet']"}
{"cat":"animals","slot":"specialization","value":"echinoderm","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of echinoderm in terms of their hyponyms.\";         A textual example of the semantic relation is \"are echinoderm\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['sea urchin', 'sea cucumber', 'starfish', 'sand dollar', 'sea lily', 'sea daisy', 'sea star', 'urchin', 'cucumber', 'star']"}
{"cat":"animals","slot":"specialization","value":"Newfoundland","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of Newfoundland in terms of their hyponyms.\";         A textual example of the semantic relation is \"are Newfoundland\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"dog\", \"puppy\", \"canine\", \"mammal\", \"pet\", \"furry friend\", \"companion\", \"guardian\", \"protector\"]"}
{"cat":"animals","slot":"specialization","value":"barker","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of barker in terms of their hyponyms.\";         A textual example of the semantic relation is \"are barker\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['dog', 'fox', 'wolf', 'coyote', 'jackal', 'dingo', 'hyena', 'seal', 'walrus', 'otter']"}
{"cat":"animals","slot":"specialization","value":"metabola","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of metabola in terms of their hyponyms.\";         A textual example of the semantic relation is \"are metabola\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['dog', 'cat', 'horse', 'cow', 'sheep', 'pig', 'chicken', 'duck', 'goose', 'turkey']"}
{"cat":"animals","slot":"specialization","value":"driver ant","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of driver ant in terms of their hyponyms.\";         A textual example of the semantic relation is \"are driver ant\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['driver ant', 'insect', 'arthropod', 'animal', 'social insect', 'caste system', 'foraging behavior', 'predator', 'prey', 'ecosystem']"}
{"cat":"animals","slot":"specialization","value":"racer","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of racer in terms of their hyponyms.\";         A textual example of the semantic relation is \"are racer\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"cheetah\", \"pronghorn\", \"gazelle\", \"impala\", \"quagga\", \"horse\", \"thoroughbred\", \"greyhound\", \"salmon\", \"tuna\"]"}
{"cat":"animals","slot":"specialization","value":"chrysomelid","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of chrysomelid in terms of their hyponyms.\";         A textual example of the semantic relation is \"are chrysomelid\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"beetle\", \"ladybug\", \"leaf beetle\", \"weevil\", \"firefly\", \"june bug\", \"cucumber beetle\", \"asparagus beetle\", \"tortoise beetle\", \"dung beetle\"]"}
{"cat":"animals","slot":"specialization","value":"fiddler crab","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of fiddler crab in terms of their hyponyms.\";         A textual example of the semantic relation is \"are fiddler crab\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"fiddler crab\", \"mud crab\", \"horseshoe crab\", \"king crab\", \"spider crab\", \"ghost crab\", \"hermit crab\", \"sand crab\", \"stone crab\", \"porcelain crab\"]"}
{"cat":"animals","slot":"specialization","value":"leporide","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of leporide in terms of their hyponyms.\";         A textual example of the semantic relation is \"are leporide\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['rabbit', 'hare', 'jackrabbit', 'cottontail', 'pika', 'snowshoe hare', 'himalayan marmot', 'mountain cottontail', 'european rabbit', 'american pika']"}
{"cat":"animals","slot":"specialization","value":"longicorn beetle","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of longicorn beetle in terms of their hyponyms.\";         A textual example of the semantic relation is \"are longicorn beetle\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"Cerambycidae\", \"Anoplophora glabripennis\", \"Tetropium\", \"Callidium\", \"Purpuricenus\", \"Leptura\", \"Rosalia\", \"Stenurella\", \"Necydalis\", \"Pseudophilotes\"]"}
{"cat":"animals","slot":"specialization","value":"Ibero-mesornis","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of Ibero-mesornis in terms of their hyponyms.\";         A textual example of the semantic relation is \"are Ibero-mesornis\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['bird', 'dinosaur', 'maniraptoran', 'theropod', 'coelurosaur', 'avian', 'animal', 'reptile', 'vertebrate', 'chordate']"}
{"cat":"animals","slot":"specialization","value":"bulldog ant","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of bulldog ant in terms of their hyponyms.\";         A textual example of the semantic relation is \"are bulldog ant\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['insect', 'ant', 'hymenoptera', 'invertebrate', 'arthropod', 'animal', 'bulldog ant', 'myrmecia', 'myrmecia pyriformis', 'myrmecia brevinoda']"}
{"cat":"animals","slot":"specialization","value":"gallinacean","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of gallinacean in terms of their hyponyms.\";         A textual example of the semantic relation is \"are gallinacean\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"chicken\", \"turkey\", \"quail\", \"pheasant\", \"grouse\", \"partridge\", \"guinea fowl\", \"peafowl\", \"junglefowl\", \"bantam\"]"}
{"cat":"animals","slot":"specialization","value":"griffon","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of griffon in terms of their hyponyms.\";         A textual example of the semantic relation is \"are griffon\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['lion', 'eagle', 'hybrid', 'mythical creature', 'feline', 'bird', 'predator', 'winged', 'beast', 'animal']"}
{"cat":"animals","slot":"specialization","value":"female","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of female in terms of their hyponyms.\";         A textual example of the semantic relation is \"are female\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['she-wolf', 'she-bear', 'she-lion', 'she-tiger', 'she-elephant', 'she-hippo', 'she-giraffe', 'she-zebra', 'she-crocodile', 'she-snake']"}
{"cat":"animals","slot":"specialization","value":"defoliator","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of defoliator in terms of their hyponyms.\";         A textual example of the semantic relation is \"are defoliator\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['caterpillar', 'beetle', 'moth', 'aphid', 'weevil', 'grasshopper', 'locust', 'cricket', 'leafhopper', 'sawfly']"}
{"cat":"animals","slot":"specialization","value":"house cat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of house cat in terms of their hyponyms.\";         A textual example of the semantic relation is \"are house cat\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"tabby\", \"siamese\", \"persian\", \"british shorthair\", \"scottish fold\", \"maine coon\", \"ragdoll\", \"sphynx\", \"bengal\", \"american shorthair\"]"}
{"cat":"animals","slot":"specialization","value":"predatory animal","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of predatory animal in terms of their hyponyms.\";         A textual example of the semantic relation is \"are predatory animal\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"lion\", \"tiger\", \"leopard\", \"cheetah\", \"jaguar\", \"wolf\", \"coyote\", \"fox\", \"bear\", \"shark\"]"}
{"cat":"animals","slot":"specialization","value":"sulphur butterfly","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of sulphur butterfly in terms of their hyponyms.\";         A textual example of the semantic relation is \"are sulphur butterfly\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['sulphur butterfly', 'butterfly', 'insect', 'animal', 'lepidoptera', 'arthropod', 'invertebrate', 'organism', 'living being', 'life form']"}
{"cat":"animals","slot":"specialization","value":"Monomorium minimum","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of Monomorium minimum in terms of their hyponyms.\";         A textual example of the semantic relation is \"are Monomorium minimum\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['ant', 'insect', 'arthropod', 'animal', 'invertebrate', 'hexapod', 'eusocial', 'colony', 'worker', 'queen']"}
{"cat":"animals","slot":"specialization","value":"apodiform bird","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of apodiform bird in terms of their hyponyms.\";         A textual example of the semantic relation is \"are apodiform bird\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['swift', 'hummingbird', 'nightjar', 'whippoorwill', 'oilbird', 'frogmouth', 'swiftlet', 'goatsucker', 'trogon', 'kingfisher']"}
{"cat":"animals","slot":"specialization","value":"ground beetle","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of ground beetle in terms of their hyponyms.\";         A textual example of the semantic relation is \"are ground beetle\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['ground beetle', 'insect', 'arthropod', 'animal', 'coleoptera', 'insecta', 'hexapod', 'beetle', 'carabidae', 'coleopteran']"}
{"cat":"animals","slot":"specialization","value":"homoiotherm","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of homoiotherm in terms of their hyponyms.\";         A textual example of the semantic relation is \"are homoiotherm\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['dog', 'cat', 'horse', 'cow', 'pig', 'sheep', 'goat', 'deer', 'fox', 'wolf']"}
{"cat":"animals","slot":"specialization","value":"range animal","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of range animal in terms of their hyponyms.\";         A textual example of the semantic relation is \"are range animal\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['elk', 'deer', 'antelope', 'bison', 'moose', 'caribou', 'muskox', 'reindeer', 'pronghorn', 'mountain goat']"}
{"cat":"animals","slot":"specialization","value":"Brussels griffon","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of Brussels griffon in terms of their hyponyms.\";         A textual example of the semantic relation is \"are Brussels griffon\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"Brussels griffon\", \"dog\", \"canine\", \"pet\", \"companion\", \"toy breed\", \"lap dog\", \"house pet\", \"small dog\", \"furry friend\"]"}
{"cat":"animals","slot":"specialization","value":"garden snail","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of garden snail in terms of their hyponyms.\";         A textual example of the semantic relation is \"are garden snail\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['snail', 'gastropod', 'mollusk', 'invertebrate', 'animal', 'slug', 'limpet', 'whelk', 'conch', 'sea snail']"}
{"cat":"animals","slot":"specialization","value":"hemipteron","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of hemipteron in terms of their hyponyms.\";         A textual example of the semantic relation is \"are hemipteron\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['assassin bug', 'bed bug', 'boxelder bug', 'cicada', 'cicadellidae', 'cimicidae', 'cryptorhynchus', 'fulgoridae', 'heteroptera', 'lygaeidae']"}
{"cat":"animals","slot":"specialization","value":"elaterid beetle","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of elaterid beetle in terms of their hyponyms.\";         A textual example of the semantic relation is \"are elaterid beetle\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['beetle', 'insect', 'arthropod', 'animal', 'coleoptera', 'elateridae', 'elaterid', 'elaterid beetle', 'elaterid coleoptera', 'elaterid insect']"}
{"cat":"animals","slot":"specialization","value":"dictyopterous insect","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of dictyopterous insect in terms of their hyponyms.\";         A textual example of the semantic relation is \"are dictyopterous insect\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['cockroach', 'termite', 'mantis', 'praying mantis', 'stick insect', 'walking stick', 'grasshopper', 'cricket', 'locust', 'katydid']"}
{"cat":"animals","slot":"specialization","value":"twitterer","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of twitterer in terms of their hyponyms.\";         A textual example of the semantic relation is \"are twitterer\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"dog\", \"cat\", \"bird\", \"fish\", \"horse\", \"cow\", \"pig\", \"sheep\", \"goat\", \"rabbit\"]"}
{"cat":"animals","slot":"specialization","value":"ladybird","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of ladybird in terms of their hyponyms.\";         A textual example of the semantic relation is \"are ladybird\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['ladybird', 'beetle', 'insect', 'arthropod', 'animal', 'invertebrate', 'coleoptera', 'hemiptera', 'true bug']"}
{"cat":"animals","slot":"specialization","value":"tiger beetle","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of tiger beetle in terms of their hyponyms.\";         A textual example of the semantic relation is \"are tiger beetle\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['tiger', 'beetle', 'coleoptera', 'insect', 'arthropod', 'animal', 'predator', 'carnivore', 'invertebrate', 'winged']"}
{"cat":"animals","slot":"specialization","value":"flea","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of flea in terms of their hyponyms.\";         A textual example of the semantic relation is \"are flea\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"flea\", \"insect\", \"arthropod\", \"animal\", \"bug\", \"pest\", \"parasite\", \"jumping insect\", \"small creature\", \"bloodsucker\"]"}
{"cat":"animals","slot":"specialization","value":"neuropteran","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of neuropteran in terms of their hyponyms.\";         A textual example of the semantic relation is \"are neuropteran\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"antlion\", \"lacewing\", \"mantidfly\", \"net-winged insect\", \"planthopper\", \"scorpionfly\", \"snakefly\", \"termite\", \"true bug\", \"wheel bug\"]"}
{"cat":"animals","slot":"specialization","value":"phasmid insect","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of phasmid insect in terms of their hyponyms.\";         A textual example of the semantic relation is \"are phasmid insect\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"stick insect\", \"walking stick\", \"walking stick insect\", \"phasmid\", \"leaf insect\", \"leaf insects\", \"mantis\", \"praying mantis\", \"mantises\", \"praying mantises\"]"}
{"cat":"animals","slot":"specialization","value":"ectoproct","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of ectoproct in terms of their hyponyms.\";         A textual example of the semantic relation is \"are ectoproct\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['bryozoan', 'moss animalcule', 'sea moss', 'sea mosses', 'moss animalcules', 'moss-animalcule', 'moss animalcules', 'moss-animalcules', 'moss-animalcule', 'moss-animalcules']"}
{"cat":"animals","slot":"specialization","value":"ephemeron","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of ephemeron in terms of their hyponyms.\";         A textual example of the semantic relation is \"are ephemeron\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['dog', 'cat', 'bird', 'fish', 'snake', 'lizard', 'turtle', 'rabbit', 'hamster', 'horse']"}
{"cat":"animals","slot":"specialization","value":"Felis catus","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of Felis catus in terms of their hyponyms.\";         A textual example of the semantic relation is \"are Felis catus\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"cat\", \"feline\", \"kitten\", \"pussycat\", \"tabby\", \"tiger\", \"lion\", \"leopard\", \"panther\", \"cougar\"]"}
{"cat":"animals","slot":"specialization","value":"white fox","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of white fox in terms of their hyponyms.\";         A textual example of the semantic relation is \"are white fox\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['arctic fox', 'red fox', 'kit fox', 'fennec fox', 'swift fox', 'gray fox', 'bat-eared fox', 'crab-eating fox', 'sea fox', 'silver fox']"}
{"cat":"animals","slot":"specialization","value":"dickybird","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of dickybird in terms of their hyponyms.\";         A textual example of the semantic relation is \"are dickybird\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['finch', 'sparrow', 'robin', 'warbler', 'thrush', 'wren', 'titmouse', 'oriole', 'tanager']"}
{"cat":"animals","slot":"specialization","value":"archaeornis","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of archaeornis in terms of their hyponyms.\";         A textual example of the semantic relation is \"are archaeornis\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"bird\", \"dinosaur\", \"fossil\", \"prehistoric creature\", \"winged creature\", \"feathered creature\", \"extinct species\", \"ancient animal\", \"paleontological specimen\", \"avian ancestor\"]"}
{"cat":"animals","slot":"specialization","value":"spitz","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of spitz in terms of their hyponyms.\";         A textual example of the semantic relation is \"are spitz\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"Eskimo dog\", \"Greenland dog\", \"Hokkaido dog\", \"Kai Ken\", \"Karelian Bear Dog\", \"Kishu\", \"Korean Jindo\", \"Mikawa dog\", \"Shiba Inu\"]"}
{"cat":"animals","slot":"specialization","value":"rabbit ears","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of rabbit ears in terms of their hyponyms.\";         A textual example of the semantic relation is \"are rabbit ears\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"rabbit\", \"ears\", \"long\", \"short\", \"floppy\", \"upright\", \"perked\", \"alert\", \"relaxed\", \"twitching\"]"}
{"cat":"animals","slot":"specialization","value":"thoroughbred","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of thoroughbred in terms of their hyponyms.\";         A textual example of the semantic relation is \"are thoroughbred\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['horse', 'racehorse', 'stallion', 'mare', 'colt', 'filly', 'foal', 'pony', 'steed', 'charger']"}
{"cat":"animals","slot":"specialization","value":"wildcat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of wildcat in terms of their hyponyms.\";         A textual example of the semantic relation is \"are wildcat\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"leopard\", \"lynx\", \"puma\", \"jaguar\", \"cougar\", \"cheetah\", \"serval\", \"ocelot\", \"caracal\"]"}
{"cat":"animals","slot":"specialization","value":"Dungeness crab","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of Dungeness crab in terms of their hyponyms.\";         A textual example of the semantic relation is \"are Dungeness crab\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"crab\", \"crustacean\", \"decapod\", \"arthropod\", \"animal\", \"marine\", \"seafood\", \"food\", \"edible\", \"tasty\"]"}
{"cat":"animals","slot":"specialization","value":"trogon","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of trogon in terms of their hyponyms.\";         A textual example of the semantic relation is \"are trogon\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['trogon', 'trogonid', 'trogoniformes', 'trogonidae', 'trogoniformes', 'trogonidae', 'trogoniformes', 'trogonidae', 'trogoniformes', 'trogonidae']"}
{"cat":"animals","slot":"specialization","value":"Angora rabbit","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of Angora rabbit in terms of their hyponyms.\";         A textual example of the semantic relation is \"are Angora rabbit\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['Angora rabbit', 'rabbit', 'mammal', 'vertebrate', 'animal', 'furry creature', 'pet', 'herbivore', 'domesticated animal', 'lagomorph']"}
{"cat":"animals","slot":"specialization","value":"gray fox","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of gray fox in terms of their hyponyms.\";         A textual example of the semantic relation is \"are gray fox\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"gray fox\", \"fox\", \"canine\", \"mammal\", \"carnivore\", \"animal\", \"red fox\", \"kit fox\", \"arctic fox\"]"}
{"cat":"animals","slot":"specialization","value":"trichopterous insect","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of trichopterous insect in terms of their hyponyms.\";         A textual example of the semantic relation is \"are trichopterous insect\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['mayfly', 'caddisfly', 'stonefly', 'dragonfly', 'damselfly', 'phryganid', 'leptophlebiid', 'perlid', 'plecopteran', 'ephemeropteran']"}
{"cat":"animals","slot":"specialization","value":"conceptus","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of conceptus in terms of their hyponyms.\";         A textual example of the semantic relation is \"are conceptus\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['dog', 'cat', 'horse', 'cow', 'sheep', 'pig', 'chicken', 'duck', 'goat', 'rabbit']"}
{"cat":"animals","slot":"specialization","value":"ephemerid","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of ephemerid in terms of their hyponyms.\";         A textual example of the semantic relation is \"are ephemerid\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"mayfly\", \"ephemerid\", \"insect\", \"bug\", \"arthropod\", \"invertebrate\", \"animal\", \"organism\", \"living being\"]"}
{"cat":"animals","slot":"specialization","value":"swimming crab","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of swimming crab in terms of their hyponyms.\";         A textual example of the semantic relation is \"are swimming crab\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['swimming crab', 'blue crab', 'red crab', 'hermit crab', 'spider crab', 'mud crab', 'sand crab', 'king crab', 'dungeness crab', 'stone crab']"}
{"cat":"animals","slot":"specialization","value":"leaf miner","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of leaf miner in terms of their hyponyms.\";         A textual example of the semantic relation is \"are leaf miner\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"caterpillar\", \"fly\", \"beetle\", \"moth\", \"sawfly\", \"leafhopper\", \"weevil\", \"midge\", \"snake\", \"spider\"]"}
{"cat":"animals","slot":"specialization","value":"ratite bird","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of ratite bird in terms of their hyponyms.\";         A textual example of the semantic relation is \"are ratite bird\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['emu', 'ostrich', 'rhea', 'kiwi', 'cassowary', 'moa', 'elephant bird', 'tinamou', 'kakapo']"}
{"cat":"animals","slot":"specialization","value":"lycaenid","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of lycaenid in terms of their hyponyms.\";         A textual example of the semantic relation is \"are lycaenid\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['lycaenid', 'blue', 'hairstreak', 'copper', 'brassy', 'flash', 'common', 'bright-eyed', 'brown', 'elegant']"}
{"cat":"animals","slot":"specialization","value":"web spinner","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of web spinner in terms of their hyponyms.\";         A textual example of the semantic relation is \"are web spinner\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['spider', 'arachnid', 'insect', 'arthropod', 'animal', 'predator', 'hunter', 'carnivore', 'invertebrate', 'organism']"}
{"cat":"animals","slot":"specialization","value":"Arctic wolf","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of Arctic wolf in terms of their hyponyms.\";         A textual example of the semantic relation is \"are Arctic wolf\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"Arctic wolf\", \"Canis lupus arctos\", \"Canis lupus\", \"Gray wolf\", \"Wolf\", \"Carnivore\", \"Mammal\", \"Animal\", \"Canid\", \"Canine\"]"}
{"cat":"animals","slot":"specialization","value":"carpet bug","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of carpet bug in terms of their hyponyms.\";         A textual example of the semantic relation is \"are carpet bug\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"carpet\", \"bug\", \"insect\", \"arthropod\", \"animal\", \"pest\", \"creature\", \"infestation\", \"household\", \"nuisance\"]"}
{"cat":"animals","slot":"specialization","value":"plecopteran","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of plecopteran in terms of their hyponyms.\";         A textual example of the semantic relation is \"are plecopteran\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['stonefly', 'insect', 'arthropod', 'invertebrate', 'animal', 'plecoptera', 'insecta', 'pterygota', 'hexapoda', 'eumetazoa']"}
{"cat":"animals","slot":"specialization","value":"dipteran","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of dipteran in terms of their hyponyms.\";         A textual example of the semantic relation is \"are dipteran\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['fly', 'mosquito', 'gnat', 'midge', 'crane fly', 'black fly', 'sand fly', 'horse fly', 'bot fly', 'deer fly']"}
{"cat":"animals","slot":"specialization","value":"coyote","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of coyote in terms of their hyponyms.\";         A textual example of the semantic relation is \"are coyote\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"coyote\", \"canine\", \"mammal\", \"carnivore\", \"predator\", \"wolf\", \"dog\", \"animal\", \"wildlife\", \"nature\"]"}
{"cat":"animals","slot":"specialization","value":"embryo","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of embryo in terms of their hyponyms.\";         A textual example of the semantic relation is \"are embryo\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['cat', 'dog', 'mouse', 'rat', 'rabbit', 'hamster', 'guinea pig', 'gerbil', 'ferret', 'chinchilla']"}
{"cat":"animals","slot":"specialization","value":"bird of prey","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of bird of prey in terms of their hyponyms.\";         A textual example of the semantic relation is \"are bird of prey\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['eagle', 'hawk', 'falcon', 'vulture', 'kite', 'harrier', 'owl', 'condor', 'osprey', 'kestrel']"}
{"cat":"animals","slot":"specialization","value":"varmint","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of varmint in terms of their hyponyms.\";         A textual example of the semantic relation is \"are varmint\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['squirrel', 'rat', 'rabbit', 'mouse', 'vole', 'shrew', 'mole', 'weasel', 'ferret', 'skunk']"}
{"cat":"animals","slot":"specialization","value":"lamellicorn beetle","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of lamellicorn beetle in terms of their hyponyms.\";         A textual example of the semantic relation is \"are lamellicorn beetle\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['rhinoceros beetle', 'dung beetle', 'scarab beetle', 'goliath beetle', 'stag beetle', 'longhorn beetle', 'jewel beetle', 'flower chafer', 'weevil', 'leaf beetle']"}
{"cat":"animals","slot":"specialization","value":"homopteran","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of homopteran in terms of their hyponyms.\";         A textual example of the semantic relation is \"are homopteran\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['aphid', 'cicada', 'leafhopper', 'planthopper', 'whitefly', 'scale insect', 'mealybug', 'psyllid', 'lace bug', 'true bug']"}
{"cat":"animals","slot":"specialization","value":"bryozoan","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of bryozoan in terms of their hyponyms.\";         A textual example of the semantic relation is \"are bryozoan\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['sea_squirt', 'tunicate', 'salpa', 'pyrosome', 'basket_star', 'sea_pen', 'feather_star', 'sea_mat', 'lace_bryozoan', 'moss_animal']"}
{"cat":"animals","slot":"specialization","value":"soft-shelled crab","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of soft-shelled crab in terms of their hyponyms.\";         A textual example of the semantic relation is \"are soft-shelled crab\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['soft-shelled crab', 'blue crab', 'peekytoe crab', 'dungeness crab', 'red swamp crab', 'king crab', 'snow crab', 'horse crab', 'fiddler crab', 'horseshoe crab']"}
{"cat":"animals","slot":"specialization","value":"hexapod","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of hexapod in terms of their hyponyms.\";         A textual example of the semantic relation is \"are hexapod\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['ant', 'bee', 'beetle', 'butterfly', 'cricket', 'flea', 'fly', 'grasshopper', 'louse', 'mosquito']"}
{"cat":"animals","slot":"specialization","value":"Urocyon cinereoargenteus","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of Urocyon cinereoargenteus in terms of their hyponyms.\";         A textual example of the semantic relation is \"are Urocyon cinereoargenteus\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"gray fox\", \"red fox\", \"kit fox\", \"arctic fox\", \"fennec fox\", \"swift fox\", \"bat-eared fox\", \"crab-eating fox\", \"sea fox\", \"island fox\"]"}
{"cat":"animals","slot":"specialization","value":"lamp shell","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of lamp shell in terms of their hyponyms.\";         A textual example of the semantic relation is \"are lamp shell\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"snail\", \"mollusk\", \"gastropod\", \"sea creature\", \"marine animal\", \"shellfish\", \"invertebrate\", \"slug\", \"conch\", \"whelk\"]"}
{"cat":"animals","slot":"specialization","value":"mussel shrimp","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of mussel shrimp in terms of their hyponyms.\";         A textual example of the semantic relation is \"are mussel shrimp\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"mussel\", \"shrimp\", \"crustacean\", \"arthropod\", \"invertebrate\", \"marine\", \"aquatic\", \"filter feeder\", \"benthic\", \"zooplankton\"]"}
{"cat":"animals","slot":"specialization","value":"Cancer irroratus","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of Cancer irroratus in terms of their hyponyms.\";         A textual example of the semantic relation is \"are Cancer irroratus\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['crab', 'decapod', 'arthropod', 'crustacean', 'invertebrate', 'animal', 'living thing', 'organism', 'multicellular organism', 'eukaryote']"}
{"cat":"animals","slot":"specialization","value":"Belgian griffon","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of Belgian griffon in terms of their hyponyms.\";         A textual example of the semantic relation is \"are Belgian griffon\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['dog', 'pet', 'canine', 'companion', 'breed', 'furry', 'four-legged', 'loyal', 'friendly']"}
{"cat":"animals","slot":"specialization","value":"mutt","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of mutt in terms of their hyponyms.\";         A textual example of the semantic relation is \"are mutt\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['mongrel', 'crossbreed', 'mixed breed', 'hybrid', 'mutt', 'half-breed', 'mongrel dog', 'mongrelize', 'mongrelize']"}
{"cat":"animals","slot":"specialization","value":"creepy-crawly","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of creepy-crawly in terms of their hyponyms.\";         A textual example of the semantic relation is \"are creepy-crawly\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['spider', 'scorpion', 'centipede', 'millipede', 'tick', 'mite', 'louse', 'flea', 'beetle', 'cricket']"}
{"cat":"animals","slot":"specialization","value":"archeopteryx","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of archeopteryx in terms of their hyponyms.\";         A textual example of the semantic relation is \"are archeopteryx\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['bird', 'reptile', 'dinosaur', 'flying creature', 'feathered creature', 'prehistoric animal', 'winged creature', 'fossil', 'ancient creature', 'avian species']"}
{"cat":"animals","slot":"specialization","value":"feeder","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of feeder in terms of their hyponyms.\";         A textual example of the semantic relation is \"are feeder\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"carnivore\", \"herbivore\", \"omnivore\", \"insectivore\", \"piscivore\", \"frugivore\", \"granivore\", \"nectarivore\", \"folivore\"]"}
{"cat":"animals","slot":"specialization","value":"neuropteron","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of neuropteron in terms of their hyponyms.\";         A textual example of the semantic relation is \"are neuropteron\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['antlion', 'lacewing', 'mantidfly', 'net-winged insect', 'planthopper', 'scorpionfly', 'snakefly', 'termite', 'tube-nosed insect', 'wheel bug']"}
{"cat":"animals","slot":"specialization","value":"malacostracan crustacean","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of malacostracan crustacean in terms of their hyponyms.\";         A textual example of the semantic relation is \"are malacostracan crustacean\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"lobster\", \"crab\", \"shrimp\", \"crayfish\", \"krill\", \"barnacle\", \"hermit crab\", \"mantis shrimp\", \"squilla\", \"copepod\"]"}
{"cat":"animals","slot":"specialization","value":"spider crab","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of spider crab in terms of their hyponyms.\";         A textual example of the semantic relation is \"are spider crab\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['spider crab', 'crab', 'arachnid', 'crustacean', 'animal', 'marine animal', 'sea creature', 'decapod', 'invertebrate', 'fauna']"}
{"cat":"animals","slot":"specialization","value":"elater","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of elater in terms of their hyponyms.\";         A textual example of the semantic relation is \"are elater\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['beetle', 'insect', 'arthropod', 'animal', 'coleoptera', 'elateridae', 'invertebrate', 'hexapod', 'pest', 'predator']"}
{"cat":"animals","slot":"specialization","value":"pierid butterfly","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of pierid butterfly in terms of their hyponyms.\";         A textual example of the semantic relation is \"are pierid butterfly\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['cabbage white', 'cloudless sulphur', 'orange sulphur', 'painted lady', 'viceroy', 'southern dogface', 'checkered white', 'green-veined white', 'large white', 'small white']"}
{"cat":"animals","slot":"specialization","value":"stone fly","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of stone fly in terms of their hyponyms.\";         A textual example of the semantic relation is \"are stone fly\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['stonefly', 'insect', 'arthropod', 'animal', 'invertebrate', 'hexapod', 'winged insect', 'flying insect', 'aquatic insect', 'mayfly']"}
{"cat":"animals","slot":"specialization","value":"metazoan","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of metazoan in terms of their hyponyms.\";         A textual example of the semantic relation is \"are metazoan\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"dog\", \"cat\", \"elephant\", \"lion\", \"tiger\", \"giraffe\", \"zebra\", \"monkey\", \"gorilla\", \"chimpanzee\"]"}
{"cat":"animals","slot":"specialization","value":"critter","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of critter in terms of their hyponyms.\";         A textual example of the semantic relation is \"are critter\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['dog', 'cat', 'horse', 'cow', 'pig', 'sheep', 'chicken', 'duck', 'goat', 'rabbit']"}
{"cat":"animals","slot":"specialization","value":"marine creature","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of marine creature in terms of their hyponyms.\";         A textual example of the semantic relation is \"are marine creature\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"shark\", \"dolphin\", \"seal\", \"whale\", \"octopus\", \"crab\", \"lobster\", \"sea turtle\", \"jellyfish\", \"seahorse\"]"}
{"cat":"animals","slot":"specialization","value":"predator","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of predator in terms of their hyponyms.\";         A textual example of the semantic relation is \"are predator\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['lion', 'tiger', 'wolf', 'bear', 'shark', 'crocodile', 'eagle', 'hawk', 'python', 'anaconda']"}
{"cat":"animals","slot":"specialization","value":"termite","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of termite in terms of their hyponyms.\";         A textual example of the semantic relation is \"are termite\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"worker\", \"soldier\", \"reproductive\", \"alate\", \"primary\", \"secondary\", \"termites\", \"subterranean\", \"dampwood\", \"drywood\"]"}
{"cat":"animals","slot":"specialization","value":"nester","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of nester in terms of their hyponyms.\";         A textual example of the semantic relation is \"are nester\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"bird\", \"chicken\", \"duck\", \"goose\", \"pigeon\", \"robin\", \"sparrow\", \"turkey\", \"woodpecker\", \"swallow\"]"}
{"cat":"animals","slot":"specialization","value":"andrenid","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of andrenid in terms of their hyponyms.\";         A textual example of the semantic relation is \"are andrenid\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['bee', 'wasp', 'ant', 'beetle', 'fly', 'butterfly', 'moth', 'bee', 'wasp', 'ant']"}
{"cat":"animals","slot":"specialization","value":"leaf-cutter bee","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of leaf-cutter bee in terms of their hyponyms.\";         A textual example of the semantic relation is \"are leaf-cutter bee\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['bee', 'insect', 'arthropod', 'animal', 'pollinator', 'hymenopteran', 'social insect', 'eusocial insect', 'flying insect', 'stinging insect']"}
{"cat":"animals","slot":"specialization","value":"Xestobium rufovillosum","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of Xestobium rufovillosum in terms of their hyponyms.\";         A textual example of the semantic relation is \"are Xestobium rufovillosum\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['beetle', 'insect', 'animal', 'arthropod', 'invertebrate', 'pest', 'bug', 'coleopteran', 'cetoniid', 'scarabaeoidea']"}
{"cat":"animals","slot":"specialization","value":"migrator","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of migrator in terms of their hyponyms.\";         A textual example of the semantic relation is \"are migrator\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"monarch butterfly\", \"humpback whale\", \"arctic tern\", \"grey whale\", \"caribou\", \"salmon\", \"wildebeest\", \"pacific salmon\", \"green turtle\", \"red knot\"]"}
{"cat":"animals","slot":"specialization","value":"toy dog","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of toy dog in terms of their hyponyms.\";         A textual example of the semantic relation is \"are toy dog\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"Chihuahua\", \"Pomeranian\", \"Papillon\", \"Maltese\", \"Yorkshire Terrier\", \"Shih Tzu\", \"Pekingese\", \"Pug\", \"Bichon Frise\", \"Cavalier King Charles Spaniel\"]"}
{"cat":"animals","slot":"specialization","value":"working dog","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of working dog in terms of their hyponyms.\";         A textual example of the semantic relation is \"are working dog\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['sled dog', 'herding dog', 'guard dog', 'search and rescue dog', 'service dog', 'police dog', 'hunting dog', 'retriever', 'terrier', 'spaniel']"}
{"cat":"animals","slot":"specialization","value":"mason bee","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of mason bee in terms of their hyponyms.\";         A textual example of the semantic relation is \"are mason bee\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['mason bee', 'bee', 'insect', 'arthropod', 'animal', 'pollinator', 'solitary bee', 'orchard mason bee', 'hornfaced bee']"}
{"cat":"animals","slot":"specialization","value":"seed shrimp","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of seed shrimp in terms of their hyponyms.\";         A textual example of the semantic relation is \"are seed shrimp\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['sea monkey', 'brine shrimp', 'crustacean', 'artemia', 'sea brine', 'sea creature', 'saltwater invertebrate', 'brine fly', 'aquatic animal', 'marine arthropod']"}
{"cat":"animals","slot":"specialization","value":"passeriform bird","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of passeriform bird in terms of their hyponyms.\";         A textual example of the semantic relation is \"are passeriform bird\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['finch', 'sparrow', 'warbler', 'thrush', 'wren', 'titmouse', 'chickadee', 'nuthatch', 'kinglet', 'oriole']"}
{"cat":"animals","slot":"specialization","value":"European rabbit","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of European rabbit in terms of their hyponyms.\";         A textual example of the semantic relation is \"are European rabbit\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"rabbit\", \"hare\", \"bunny\", \"cottontail\", \"lagomorph\", \"leporid\", \"rodent\", \"mammal\", \"herbivore\", \"prey\"]"}
{"cat":"animals","slot":"specialization","value":"hunting dog","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of hunting dog in terms of their hyponyms.\";         A textual example of the semantic relation is \"are hunting dog\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['Beagle', 'Bloodhound', 'Dachshund', 'Greyhound', 'Pointer', 'Rhodesian Ridgeback', 'Saluki', 'Weimaraner', 'Whippet']"}
{"cat":"animals","slot":"specialization","value":"orthopterous insect","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of orthopterous insect in terms of their hyponyms.\";         A textual example of the semantic relation is \"are orthopterous insect\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['cricket', 'grasshopper', 'locust', 'katydid', 'mole cricket', 'cicada', 'walking stick', 'earwig', 'praying mantis', 'cockroach']"}
{"cat":"animals","slot":"specialization","value":"bumblebee","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of bumblebee in terms of their hyponyms.\";         A textual example of the semantic relation is \"are bumblebee\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['bumblebee', 'bee', 'insect', 'arthropod', 'animal', 'pollinator', 'hymenopteran', 'social insect', 'stinging insect']"}
{"cat":"animals","slot":"specialization","value":"corgi","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of corgi in terms of their hyponyms.\";         A textual example of the semantic relation is \"are corgi\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['dog', 'breed', 'canine', 'pet', 'herding', 'companion', 'short', 'legged', 'welsh']"}
{"cat":"animals","slot":"specialization","value":"Alaskan king crab","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of Alaskan king crab in terms of their hyponyms.\";         A textual example of the semantic relation is \"are Alaskan king crab\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['Alaskan king crab', 'crab', 'crustacean', 'arthropod', 'animal', 'decapod', 'marine animal', 'seafood', 'shellfish', 'food']"}
{"cat":"animals","slot":"specialization","value":"peeper","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of peeper in terms of their hyponyms.\";         A textual example of the semantic relation is \"are peeper\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['frog', 'toad', 'salamander', 'newt', 'lizard', 'snake', 'turtle', 'fish', 'insect', 'bird']"}
{"cat":"animals","slot":"specialization","value":"two-winged insects","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of two-winged insects in terms of their hyponyms.\";         A textual example of the semantic relation is \"are two-winged insects\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"mosquito\", \"fly\", \"gnat\", \"midge\", \"crane fly\", \"sandfly\", \"black fly\", \"deer fly\", \"horse fly\", \"no-see-um\"]"}
{"cat":"animals","slot":"specialization","value":"fictional animal","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of fictional animal in terms of their hyponyms.\";         A textual example of the semantic relation is \"are fictional animal\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"dragon\", \"unicorn\", \"griffin\", \"centaur\", \"minotaur\", \"chimera\", \"sphinx\", \"manticore\", \"wyvern\", \"hydra\"]"}
{"cat":"animals","slot":"specialization","value":"honeybee","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of honeybee in terms of their hyponyms.\";         A textual example of the semantic relation is \"are honeybee\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['worker', 'drone', 'queen', 'bee', 'insect', 'pollinator', 'colony', 'hive', 'swarm', 'sting']"}
{"cat":"animals","slot":"specialization","value":"phoronid","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of phoronid in terms of their hyponyms.\";         A textual example of the semantic relation is \"are phoronid\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"phoronid\", \"brachiopod\", \"bivalve\", \"mollusk\", \"invertebrate\", \"marine\", \"aquatic\", \"sea creature\", \"shellfish\", \"filter feeder\"]"}
{"cat":"animals","slot":"specialization","value":"Canis lupus","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of Canis lupus in terms of their hyponyms.\";         A textual example of the semantic relation is \"are Canis lupus\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['wolf', 'dog', 'coyote', 'jackal', 'dingo', 'fox', 'hyena', 'canid', 'mammal', 'carnivore']"}
{"cat":"animals","slot":"specialization","value":"entoproct","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of entoproct in terms of their hyponyms.\";         A textual example of the semantic relation is \"are entoproct\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['Entoprocta', 'Bryozoa', 'Annelida', 'Arthropoda', 'Chaetognatha', 'Cnidaria', 'Echinodermata', 'Hemichordata', 'Kinorhyncha', 'Mollusca']"}
{"cat":"animals","slot":"specialization","value":"biting louse","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of biting louse in terms of their hyponyms.\";         A textual example of the semantic relation is \"are biting louse\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"louse\", \"biting louse\", \"Pediculus humanus\", \"head louse\", \"body louse\", \"crab louse\", \"Phthirus pubis\", \"Pthirus gorilla\", \"Pthirus schaeffi\", \"Pthirus strongyi\"]"}
{"cat":"animals","slot":"specialization","value":"brush wolf","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of brush wolf in terms of their hyponyms.\";         A textual example of the semantic relation is \"are brush wolf\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"coyote\", \"wolf\", \"canine\", \"mammal\", \"carnivore\", \"predator\", \"animal\", \"vertebrate\", \"species\"]"}
{"cat":"animals","slot":"specialization","value":"biped","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of biped in terms of their hyponyms.\";         A textual example of the semantic relation is \"are biped\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['human', 'kangaroo', 'emu', 'ostrich', 'rhea', 'takahe', 'kiwi', 'penguin', 'flamingo']"}
{"cat":"animals","slot":"specialization","value":"carinate","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of carinate in terms of their hyponyms.\";         A textual example of the semantic relation is \"are carinate\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['penguin', 'gull', 'turtle', 'albatross', 'puffin', 'auk', 'shearwater', 'petrel', 'storm-petrel']"}
{"cat":"animals","slot":"specialization","value":"slave ant","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of slave ant in terms of their hyponyms.\";         A textual example of the semantic relation is \"are slave ant\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['slave ant', 'ant', 'insect', 'arthropod', 'animal', 'colony member', 'worker', 'female', 'reproductive', 'subordinate']"}
{"cat":"animals","slot":"specialization","value":"worm","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of worm in terms of their hyponyms.\";         A textual example of the semantic relation is \"are worm\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['earthworm', 'flatworm', 'roundworm', 'segmented worm', 'leech', 'hookworm', 'threadworm', 'whipworm', 'heartworm', 'ringworm']"}
{"cat":"animals","slot":"specialization","value":"mollusc","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of mollusc in terms of their hyponyms.\";         A textual example of the semantic relation is \"are mollusc\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"snail\", \"octopus\", \"squid\", \"clam\", \"oyster\", \"mussel\", \"slug\", \"cuttlefish\", \"nautilus\", \"conch\"]"}
{"cat":"animals","slot":"specialization","value":"hemipteran","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of hemipteran in terms of their hyponyms.\";         A textual example of the semantic relation is \"are hemipteran\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['aphid', 'cicada', 'leafhopper', 'shield bug', 'assassin bug', 'bed bug', 'stink bug', 'true bug', 'water strider', 'wheel bug']"}
{"cat":"animals","slot":"specialization","value":"passerine","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of passerine in terms of their hyponyms.\";         A textual example of the semantic relation is \"are passerine\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"sparrow\", \"finch\", \"warbler\", \"thrush\", \"wren\", \"titmouse\", \"pipit\", \"shrike\", \"oriole\", \"tanager\"]"}
{"cat":"animals","slot":"specialization","value":"scorpion shell","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of scorpion shell in terms of their hyponyms.\";         A textual example of the semantic relation is \"are scorpion shell\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['scorpion', 'arachnid', 'invertebrate', 'exoskeleton', 'chelicerate', 'venomous', 'predator', 'desert', 'tropical', 'temperate']"}
{"cat":"animals","slot":"specialization","value":"wolf pup","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of wolf pup in terms of their hyponyms.\";         A textual example of the semantic relation is \"are wolf pup\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"wolf\", \"pup\", \"animal\", \"canine\", \"carnivore\", \"mammal\", \"predator\", \"young\", \"offspring\", \"baby\"]"}
{"cat":"animals","slot":"specialization","value":"Alaska king crab","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of Alaska king crab in terms of their hyponyms.\";         A textual example of the semantic relation is \"are Alaska king crab\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['crab', 'crustacean', 'decapod', 'arthropod', 'invertebrate', 'animal', 'king crab', 'Alaska king crab', 'Paralithodes camtschaticus', 'Lithodes aequispinus']"}
{"cat":"animals","slot":"specialization","value":"phasmid","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of phasmid in terms of their hyponyms.\";         A textual example of the semantic relation is \"are phasmid\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"stick insect\", \"walking stick\", \"stick bug\", \"leaf insect\", \"walking leaf\", \"leaf bug\", \"praying mantis\", \"mantis\", \"grasshopper\", \"locust\"]"}
{"cat":"animals","slot":"specialization","value":"lightning bug","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of lightning bug in terms of their hyponyms.\";         A textual example of the semantic relation is \"are lightning bug\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['firefly', 'lampyridae', 'beetle', 'insect', 'bug', 'bioluminescent', 'nocturnal', 'winged', 'invertebrate']"}
{"cat":"animals","slot":"specialization","value":"Paralithodes camtschatica","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of Paralithodes camtschatica in terms of their hyponyms.\";         A textual example of the semantic relation is \"are Paralithodes camtschatica\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"King crab\", \"Red king crab\", \"Alaska king crab\", \"Lithodes aequispinus\", \"Lithodes camtschatica\", \"Lithodes couesi\", \"Lithodes ferox\", \"Lithodes longispina\", \"Lithodes maja\", \"Lithodes pacificus\"]"}
{"cat":"animals","slot":"specialization","value":"branchiopodan","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of branchiopodan in terms of their hyponyms.\";         A textual example of the semantic relation is \"are branchiopodan\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"tadpole\", \"fairy shrimp\", \"triops\", \"water flea\", \"clam shrimp\", \"seed shrimp\", \"tadpole shrimp\", \"ostracod\", \"scud\", \"daphnia\"]"}
{"cat":"animals","slot":"specialization","value":"legionary ant","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of legionary ant in terms of their hyponyms.\";         A textual example of the semantic relation is \"are legionary ant\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"legionary ant\", \"army ant\", \"eusocial insect\", \"insect\", \"arthropod\", \"invertebrate\", \"animal\", \"organism\", \"lifeform\", \"living being\"]"}
{"cat":"animals","slot":"specialization","value":"ratite","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of ratite in terms of their hyponyms.\";         A textual example of the semantic relation is \"are ratite\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['ostrich', 'emu', 'rhea', 'kiwi', 'cassowary', 'moa', 'elephant bird', 'tinamou', 'kakapo']"}
{"cat":"animals","slot":"specialization","value":"brush-footed butterfly","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of brush-footed butterfly in terms of their hyponyms.\";         A textual example of the semantic relation is \"are brush-footed butterfly\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"monarch\", \"queen\", \"viceroy\", \"admiral\", \"painted lady\", \"red admiral\", \"buckeye\", \"mourning cloak\", \"comma\", \"question mark\"]"}
{"cat":"animals","slot":"specialization","value":"wood rabbit","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of wood rabbit in terms of their hyponyms.\";         A textual example of the semantic relation is \"are wood rabbit\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['rabbit', 'hare', 'bunny', 'cottontail', 'lagomorph', 'leporid', 'rodent', 'mammal', 'vertebrate', 'animal']"}
{"cat":"animals","slot":"specialization","value":"zoophyte","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of zoophyte in terms of their hyponyms.\";         A textual example of the semantic relation is \"are zoophyte\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['jellyfish', 'sea anemone', 'coral', 'hydra', 'sea pen', 'sea fan', 'sea whip', 'sea rod', 'sea daisy', 'fire coral']"}
{"cat":"animals","slot":"specialization","value":"ladybug","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of ladybug in terms of their hyponyms.\";         A textual example of the semantic relation is \"are ladybug\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"ladybug\", \"beetle\", \"insect\", \"arthropod\", \"animal\", \"coleoptera\", \"coccinellidae\", \"hemiptera\", \"hexapoda\"]"}
{"cat":"animals","slot":"specialization","value":"army ant","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of army ant in terms of their hyponyms.\";         A textual example of the semantic relation is \"are army ant\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['army ant', 'ant', 'insect', 'arthropod', 'animal', 'colony', 'predator', 'forager', 'social insect']"}
{"cat":"animals","slot":"specialization","value":"Newfoundland dog","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of Newfoundland dog in terms of their hyponyms.\";         A textual example of the semantic relation is \"are Newfoundland dog\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"Newfoundland dog\", \"dog\", \"canine\", \"mammal\", \"animal\", \"pet\", \"working dog\", \"water dog\", \"giant dog\"]"}
{"cat":"animals","slot":"specialization","value":"Angora","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of Angora in terms of their hyponyms.\";         A textual example of the semantic relation is \"are Angora\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['cat', 'rabbit', 'goat', 'sheep', 'llama', 'alpaca', 'guinea pig', 'hamster', 'gerbil', 'mouse']"}
{"cat":"animals","slot":"specialization","value":"hen","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of hen in terms of their hyponyms.\";         A textual example of the semantic relation is \"are hen\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"chicken\", \"pullet\", \"rooster\", \"bantam\", \"cockerel\", \"capon\", \"hen\", \"fowl\", \"poultry\", \"broiler\"]"}
{"cat":"animals","slot":"specialization","value":"dipterous insect","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of dipterous insect in terms of their hyponyms.\";         A textual example of the semantic relation is \"are dipterous insect\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['mosquito', 'fly', 'gnat', 'midge', 'crane fly', 'black fly', 'horse fly', 'sand fly', 'tsetse fly', 'bot fly']"}
{"cat":"animals","slot":"specialization","value":"stayer","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of stayer in terms of their hyponyms.\";         A textual example of the semantic relation is \"are stayer\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['dog', 'cat', 'horse', 'cow', 'pig', 'sheep', 'goat', 'rabbit', 'donkey', 'llama']"}
{"cat":"animals","slot":"specialization","value":"leaf-miner","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of leaf-miner in terms of their hyponyms.\";         A textual example of the semantic relation is \"are leaf-miner\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['beetle', 'fly', 'moth', 'sawfly', 'weevil', 'caterpillar', 'snake', 'lizard', 'spider', 'insect']"}
{"cat":"animals","slot":"specialization","value":"cottontail rabbit","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of cottontail rabbit in terms of their hyponyms.\";         A textual example of the semantic relation is \"are cottontail rabbit\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"rabbit\", \"cottontail\", \"bunny\", \"hare\", \"leporid\", \"lagomorph\", \"mammal\", \"vertebrate\", \"animal\"]"}
{"cat":"animals","slot":"specialization","value":"lapin","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of lapin in terms of their hyponyms.\";         A textual example of the semantic relation is \"are lapin\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['rabbit', 'hare', 'cottontail', 'jackrabbit', 'hutch', 'bunny', 'leporid', 'buck', 'doe', 'kit']"}
{"cat":"animals","slot":"specialization","value":"deathwatch beetle","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of deathwatch beetle in terms of their hyponyms.\";         A textual example of the semantic relation is \"are deathwatch beetle\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['beetle', 'insect', 'arthropod', 'animal', 'invertebrate', 'coleoptera', 'pest', 'wood-boring insect', 'nocturnal creature', 'cicada']"}
{"cat":"animals","slot":"specialization","value":"carpenter ant","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of carpenter ant in terms of their hyponyms.\";         A textual example of the semantic relation is \"are carpenter ant\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['ant', 'insect', 'arthropod', 'animal', 'invertebrate', 'hexapod', 'pest', 'social insect', 'forager', 'worker ant']"}
{"cat":"animals","slot":"specialization","value":"deathwatch","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of deathwatch in terms of their hyponyms.\";         A textual example of the semantic relation is \"are deathwatch\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['beetle', 'insect', 'arthropod', 'animal', 'organism', 'lifeform', 'creature', 'bug', 'crawler', 'pest']"}
{"cat":"animals","slot":"specialization","value":"cnidarian","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of cnidarian in terms of their hyponyms.\";         A textual example of the semantic relation is \"are cnidarian\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['sea anemone', 'coral', 'jellyfish', 'hydra', 'man-of-war', 'box jellyfish', 'sea wasp', 'sea nettle', 'fire coral', 'stinging hydroid']"}
{"cat":"animals","slot":"specialization","value":"elaterid","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of elaterid in terms of their hyponyms.\";         A textual example of the semantic relation is \"are elaterid\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['click beetle', 'wireworm', 'snapping beetle', 'spring beetle', 'skipjack', 'firefly', 'glowworm', 'lampyris', 'lampyridae', 'lampyrinae']"}
{"cat":"animals","slot":"specialization","value":"nymphalid","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of nymphalid in terms of their hyponyms.\";         A textual example of the semantic relation is \"are nymphalid\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['nymphalid', 'butterfly', 'insect', 'lepidoptera', 'arachnid', 'mammal', 'reptile', 'bird', 'fish', 'amphibian']"}
{"cat":"animals","slot":"specialization","value":"leaf beetle","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of leaf beetle in terms of their hyponyms.\";         A textual example of the semantic relation is \"are leaf beetle\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['Chrysomelidae', 'Criocerinae', 'Crioceris', 'Crioceris asparagi', 'Crioceris duodecimpunctata', 'Crioceris quatordecimpunctata', 'Crioceris quinquepunctata', 'Crioceris spp.', 'Lilioceris merdigera', 'Lilioceris ch"}
{"cat":"animals","slot":"specialization","value":"marine animal","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of marine animal in terms of their hyponyms.\";         A textual example of the semantic relation is \"are marine animal\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"shark\", \"whale\", \"dolphin\", \"seal\", \"turtle\", \"octopus\", \"crab\", \"lobster\", \"seahorse\", \"jellyfish\"]"}
{"cat":"animals","slot":"specialization","value":"Vulpes fulva","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of Vulpes fulva in terms of their hyponyms.\";         A textual example of the semantic relation is \"are Vulpes fulva\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['red fox', 'fox', 'canid', 'mammal', 'carnivore', 'animal', 'vertebrate', 'chordate', 'eukaryote']"}
{"cat":"animals","slot":"specialization","value":"lady beetle","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of lady beetle in terms of their hyponyms.\";         A textual example of the semantic relation is \"are lady beetle\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['ladybug', 'coccinellid', 'insect', 'beetle', 'coleopteran', 'arthropod', 'animal', 'invertebrate', 'organism']"}
{"cat":"animals","slot":"specialization","value":"dalmatian","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of dalmatian in terms of their hyponyms.\";         A textual example of the semantic relation is \"are dalmatian\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['dog', 'canine', 'mammal', 'vertebrate', 'animal', 'pet', 'companion', 'guard', 'watchdog']"}
{"cat":"animals","slot":"specialization","value":"homopterous insect","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of homopterous insect in terms of their hyponyms.\";         A textual example of the semantic relation is \"are homopterous insect\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['aphid', 'cicada', 'leafhopper', 'planthopper', 'whitefly', 'scale insect', 'mealybug', 'treehopper', 'froghopper', 'psyllid']"}
{"cat":"animals","slot":"specialization","value":"grey wolf","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of grey wolf in terms of their hyponyms.\";         A textual example of the semantic relation is \"are grey wolf\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['wolf', 'canine', 'mammal', 'carnivore', 'animal', 'predator', 'gray wolf', 'Canis lupus', 'endangered species', 'keystone species']"}
{"cat":"animals","slot":"specialization","value":"Belgian hare","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of Belgian hare in terms of their hyponyms.\";         A textual example of the semantic relation is \"are Belgian hare\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['rabbit', 'hare', 'bunny', 'leporid', 'rodent', 'mammal', 'vertebrate', 'animal', 'pet', 'herbivore']"}
{"cat":"animals","slot":"specialization","value":"Canis niger","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of Canis niger in terms of their hyponyms.\";         A textual example of the semantic relation is \"are Canis niger\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['African_golden_wolf', 'Canis_lupus', 'Canis_lupus_familiaris', 'Canis_lupus_dingo', 'Canis_lupus_baileyi', 'Canis_lupus_arctos', 'Canis_lupus_occidentalis', 'Canis_lupus_chanco', 'Canis_lupus"}
{"cat":"animals","slot":"specialization","value":"brachyuran","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of brachyuran in terms of their hyponyms.\";         A textual example of the semantic relation is \"are brachyuran\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['crab', 'lobster', 'shrimp', 'crayfish', 'hermit crab', 'fiddler crab', 'king crab', 'spider crab', 'porcelain crab', 'squat lobster']"}
{"cat":"animals","slot":"specialization","value":"danaid","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of danaid in terms of their hyponyms.\";         A textual example of the semantic relation is \"are danaid\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"butterfly\", \"monarch\", \"queen\", \"viceroy\", \"admiral\", \"painted lady\", \"buckeye\", \"fritillary\", \"skipper\", \"brushfoot\"]"}
{"cat":"animals","slot":"specialization","value":"nymphalid butterfly","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of nymphalid butterfly in terms of their hyponyms.\";         A textual example of the semantic relation is \"are nymphalid butterfly\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['nymphalid', 'butterfly', 'nymph', 'nymphalidae', 'nymphalis', 'nymphula', 'nymphargus', 'nymphoides', 'nymphula', 'nymphorina']"}
{"cat":"animals","slot":"specialization","value":"shellfish","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of shellfish in terms of their hyponyms.\";         A textual example of the semantic relation is \"are shellfish\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['oyster', 'clam', 'mussel', 'scallop', 'shrimp', 'crab', 'lobster', 'squid', 'octopus', 'cuttlefish']"}
{"cat":"animals","slot":"specialization","value":"Mexican hairless","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of Mexican hairless in terms of their hyponyms.\";         A textual example of the semantic relation is \"are Mexican hairless\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['Mexican Hairless', 'Xoloitzcuintli', 'Xolo', 'Mexican Hairless Dog', 'Mexican Hairless Terrier', 'Mexican Hairless Toy', 'Mexican Hairless Miniature', 'Mexican Hairless Standard', 'Mexican Hairless Giant', 'Mexican Hairless Puppy']"}
{"cat":"animals","slot":"specialization","value":"pooch","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of pooch in terms of their hyponyms.\";         A textual example of the semantic relation is \"are pooch\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['puppy', 'pup', 'whelp', 'cub', 'kitten', 'whelp', 'joey', 'fawn', 'calf', 'foal']"}
{"cat":"animals","slot":"specialization","value":"quarry","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of quarry in terms of their hyponyms.\";         A textual example of the semantic relation is \"are quarry\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['rabbit', 'deer', 'boar', 'fox', 'hare', 'pheasant', 'quail', 'squirrel', 'raccoon', 'opossum']"}
{"cat":"animals","slot":"specialization","value":"Formica rufa","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of Formica rufa in terms of their hyponyms.\";         A textual example of the semantic relation is \"are Formica rufa\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['ant', 'insect', 'arthropod', 'animal', 'eusocial', 'caste', 'polymorphism', 'worker', 'soldier', 'queen']"}
{"cat":"animals","slot":"specialization","value":"moss animal","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of moss animal in terms of their hyponyms.\";         A textual example of the semantic relation is \"are moss animal\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"sloth\", \"koala\", \"panda\", \"anteater\", \"tapir\", \"llama\", \"alpaca\", \"vicuna\", \"guanaco\"]"}
{"cat":"animals","slot":"specialization","value":"pharaoh's ant","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of pharaoh's ant in terms of their hyponyms.\";         A textual example of the semantic relation is \"are pharaoh's ant\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"Pharaoh ant\", \"Ant\", \"Insect\", \"Arthropod\", \"Animal\", \"Hymenoptera\", \"Insecta\", \"Eusocial insect\", \"Pest\", \"Household pest\"]"}
{"cat":"animals","slot":"specialization","value":"red wolf","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of red wolf in terms of their hyponyms.\";         A textual example of the semantic relation is \"are red wolf\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['red wolf', 'canine', 'wolf', 'mammal', 'carnivore', 'animal', 'dog', 'Canis', 'Canidae', 'Lupus']"}
{"cat":"animals","slot":"specialization","value":"grey fox","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of grey fox in terms of their hyponyms.\";         A textual example of the semantic relation is \"are grey fox\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['fox', 'canine', 'mammal', 'carnivore', 'predator', 'omnivore', 'animal', 'vertebrate', 'grey fox']"}
{"cat":"animals","slot":"specialization","value":"white wolf","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of white wolf in terms of their hyponyms.\";         A textual example of the semantic relation is \"are white wolf\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['wolf', 'white wolf', 'canine', 'mammal', 'carnivore', 'predator', 'pack animal', 'endangered species', 'Arctic wolf']"}
{"cat":"animals","slot":"specialization","value":"prairie fox","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of prairie fox in terms of their hyponyms.\";         A textual example of the semantic relation is \"are prairie fox\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['fox', 'mammal', 'carnivore', 'canine', 'predator', 'omnivore', 'rodent', 'herbivore', 'insectivore', 'scavenger']"}
{"cat":"animals","slot":"specialization","value":"fertilized egg","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of fertilized egg in terms of their hyponyms.\";         A textual example of the semantic relation is \"are fertilized egg\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['chicken', 'duck', 'goose', 'turkey', 'quail', 'pheasant', 'partridge', 'grouse', 'guinea fowl', 'peafowl']"}
{"cat":"animals","slot":"specialization","value":"cirripede","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of cirripede in terms of their hyponyms.\";         A textual example of the semantic relation is \"are cirripede\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"barnacle\", \"goose\", \"gull\", \"crab\", \"lobster\", \"shrimp\", \"sea urchin\", \"starfish\", \"sea cucumber\", \"sea anemone\"]"}
{"cat":"animals","slot":"specialization","value":"acrodont","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of acrodont in terms of their hyponyms.\";         A textual example of the semantic relation is \"are acrodont\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['iguana', 'gecko', 'agama', 'chameleon', 'turtle', 'crocodile', 'alligator', 'gharial', 'monitor', 'skink']"}
{"cat":"animals","slot":"specialization","value":"pharaoh ant","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of pharaoh ant in terms of their hyponyms.\";         A textual example of the semantic relation is \"are pharaoh ant\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['ant', 'insect', 'arthropod', 'animal', 'pest', 'invasive species', 'small creature', 'forager', 'social insect', 'colony member']"}
{"cat":"animals","slot":"specialization","value":"beetle","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of beetle in terms of their hyponyms.\";         A textual example of the semantic relation is \"are beetle\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['stag beetle', 'dung beetle', 'firefly', 'weevil', 'scarab beetle', 'ground beetle', 'june beetle', 'click beetle', 'ladybug', 'longhorn beetle']"}
{"cat":"animals","slot":"specialization","value":"branchiopod crustacean","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of branchiopod crustacean in terms of their hyponyms.\";         A textual example of the semantic relation is \"are branchiopod crustacean\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"fairy shrimp\", \"tadpole shrimp\", \"triops\", \"daphnia\", \"water flea\", \"cladocera\", \"cyclops\", \"branchiopoda\", \"ostracod\", \"seed shrimp\"]"}
{"cat":"animals","slot":"specialization","value":"pureblood","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of pureblood in terms of their hyponyms.\";         A textual example of the semantic relation is \"are pureblood\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['cat', 'dog', 'horse', 'cow', 'pig', 'sheep', 'goat', 'rabbit', 'chicken', 'duck']"}
{"cat":"animals","slot":"specialization","value":"trichopteran","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of trichopteran in terms of their hyponyms.\";         A textual example of the semantic relation is \"are trichopteran\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['caddisfly', 'trichoptera', 'insect', 'aquatic', 'larva', 'pupa', 'adult', 'winged', 'nocturnal', 'herbivorous']"}
{"cat":"animals","slot":"specialization","value":"caprimulgiform bird","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of caprimulgiform bird in terms of their hyponyms.\";         A textual example of the semantic relation is \"are caprimulgiform bird\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['nightjar', 'nighthawk', 'whip-poor-will', 'oilbird', 'potoo', 'frogmouth', 'swiftlet', 'swift', 'hummingbird', 'goatsucker']"}
{"cat":"animals","slot":"specialization","value":"sipunculid","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of sipunculid in terms of their hyponyms.\";         A textual example of the semantic relation is \"are sipunculid\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"sipunculid\", \"peanut worm\", \"phylum\", \"marine worm\", \"tube-dwelling\", \"sedentary\", \"segmented\", \"bilateral symmetry\", \"annelid\", \"invertebrate\"]"}
{"cat":"animals","slot":"specialization","value":"parrot","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of parrot in terms of their hyponyms.\";         A textual example of the semantic relation is \"are parrot\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"parakeet\", \"macaw\", \"cockatoo\", \"parrotlet\", \"conure\", \"lorikeet\", \"lovebird\", \"budgie\", \"amazon parrot\"]"}
{"cat":"animals","slot":"specialization","value":"Old World rabbit","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of Old World rabbit in terms of their hyponyms.\";         A textual example of the semantic relation is \"are Old World rabbit\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['cottontail', 'hare', 'jackrabbit', 'rabbit', 'hutch', 'warren', 'burrow', 'hole', 'nest', 'den']"}
{"cat":"animals","slot":"specialization","value":"ephemeral","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of ephemeral in terms of their hyponyms.\";         A textual example of the semantic relation is \"are ephemeral\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"butterfly\", \"mayfly\", \"dragonfly\", \"damselfly\", \"stonefly\", \"caddisfly\", \"midge\", \"mosquito\", \"termite\", \"locust\"]"}
{"cat":"animals","slot":"specialization","value":"varment","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of varment in terms of their hyponyms.\";         A textual example of the semantic relation is \"are varment\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['rat', 'mouse', 'vole', 'shrew', 'mole', 'rabbit', 'hare', 'squirrel', 'chipmunk', 'beaver']"}
{"cat":"animals","slot":"specialization","value":"water beetle","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of water beetle in terms of their hyponyms.\";         A textual example of the semantic relation is \"are water beetle\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"water beetle\", \"diving beetle\", \"whirligig beetle\", \"riffle beetle\", \"crawling water beetle\", \"predaceous diving beetle\", \"water scavenger beetle\", \"water tiger beetle\", \"water scavenger beetle\", \"water tiger beetle\"]"}
{"cat":"animals","slot":"specialization","value":"Asian longhorned beetle","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of Asian longhorned beetle in terms of their hyponyms.\";         A textual example of the semantic relation is \"are Asian longhorned beetle\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['Asian longhorned beetle', 'beetle', 'insect', 'arthropod', 'animal', 'Coleoptera', 'Anoplophora glabripennis', 'invasive species', 'pest', 'forestry threat']"}
{"cat":"animals","slot":"specialization","value":"fire ant","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of fire ant in terms of their hyponyms.\";         A textual example of the semantic relation is \"are fire ant\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['insect', 'ant', 'invertebrate', 'arthropod', 'hymenopteran', 'social insect', 'red imported fire ant', 'solenopsis invicta', 'solenopsis richteri', 'fire ant']"}
{"cat":"animals","slot":"specialization","value":"bunny","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of bunny in terms of their hyponyms.\";         A textual example of the semantic relation is \"are bunny\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['rabbit', 'hare', 'cottontail', 'bunny', 'leporid', 'lagomorph', 'rodent', 'mammal', 'vertebrate', 'animal']"}
{"cat":"animals","slot":"specialization","value":"collembolan","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of collembolan in terms of their hyponyms.\";         A textual example of the semantic relation is \"are collembolan\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['springtail', 'insect', 'arthropod', 'hexapod', 'invertebrate', 'animal', 'organism', 'living thing', 'collembolan', 'bug']"}
{"cat":"animals","slot":"specialization","value":"dickeybird","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of dickeybird in terms of their hyponyms.\";         A textual example of the semantic relation is \"are dickeybird\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['Dickeybird', 'Honeyeater', 'Wattlebird', 'Warbler', 'Titmouse', 'Chickadee', 'Nuthatch', 'Wren', 'Kinglet', 'Creeper']"}
{"cat":"animals","slot":"specialization","value":"bird of passage","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of bird of passage in terms of their hyponyms.\";         A textual example of the semantic relation is \"are bird of passage\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"swallow\", \"cuckoo\", \"swift\", \"martin\", \"nightingale\", \"warbler\", \"wagtail\", \"flycatcher\", \"sandpiper\", \"stint\"]"}
{"cat":"animals","slot":"specialization","value":"sea mat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of sea mat in terms of their hyponyms.\";         A textual example of the semantic relation is \"are sea mat\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['sea urchin', 'sea cucumber', 'sea star', 'sea anemone', 'sea sponge', 'sea slug', 'sea snail', 'sea squirt', 'sea horse', 'sea lily']"}
{"cat":"animals","slot":"specialization","value":"barnacle","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of barnacle in terms of their hyponyms.\";         A textual example of the semantic relation is \"are barnacle\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['goose barnacle', 'acorn barnacle', 'stalked barnacle', 'pedunculate barnacle', 'sessile barnacle', 'capitulum', 'cirri', 'thorax', 'abdomen', 'antennae']"}
{"cat":"animals","slot":"specialization","value":"orthopteran","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of orthopteran in terms of their hyponyms.\";         A textual example of the semantic relation is \"are orthopteran\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"grasshopper\", \"locust\", \"cricket\", \"mole cricket\", \"katydid\", \"cicada\", \"planthopper\", \"walking stick\", \"earwig\", \"cockroach\"]"}
{"cat":"animals","slot":"specialization","value":"homeotherm","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of homeotherm in terms of their hyponyms.\";         A textual example of the semantic relation is \"are homeotherm\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"mammal\", \"reptile\", \"bird\", \"fish\", \"amphibian\", \"insect\", \"arachnid\", \"crustacean\", \"mollusk\", \"worm\"]"}
{"cat":"animals","slot":"specialization","value":"survivor","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of survivor in terms of their hyponyms.\";         A textual example of the semantic relation is \"are survivor\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['dog', 'cat', 'bird', 'fish', 'reptile', 'amphibian', 'mammal', 'insect', 'arachnid', 'rodent']"}
{"cat":"animals","slot":"specialization","value":"psocopterous insect","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of psocopterous insect in terms of their hyponyms.\";         A textual example of the semantic relation is \"are psocopterous insect\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['booklice', 'barklice', 'psocids', 'psocoptera', 'psocids', 'psocopteran', 'psocopterans', 'psocopterous insect', 'psocopterous insects']"}
{"cat":"animals","slot":"specialization","value":"Canis lupus tundrarum","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of Canis lupus tundrarum in terms of their hyponyms.\";         A textual example of the semantic relation is \"are Canis lupus tundrarum\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['wolf', 'tundra wolf', 'arctic wolf', 'white wolf', 'polar wolf', 'grey wolf', 'timber wolf', 'lupus', 'canine', 'mammal']"}
{"cat":"animals","slot":"specialization","value":"slave-making ant","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of slave-making ant in terms of their hyponyms.\";         A textual example of the semantic relation is \"are slave-making ant\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['Polyergus', 'Formica', 'Formica sanguinea', 'Formica rufibarbis', 'Formica truncorum', 'Formica fusca', 'Formica cinerea', 'Formica gagatoides', 'Formica rufa', 'Formica exsecta']"}
{"cat":"animals","slot":"specialization","value":"ringlet","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of ringlet in terms of their hyponyms.\";         A textual example of the semantic relation is \"are ringlet\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['ringlet', 'butterfly', 'insect', 'arthropod', 'animal', 'lepidoptera', 'papilionoidea', 'nymphalidae', 'nymphalinae']"}
{"cat":"animals","slot":"specialization","value":"sea moss","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of sea moss in terms of their hyponyms.\";         A textual example of the semantic relation is \"are sea moss\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"seaweed\", \"kelp\", \"algae\", \"sea lettuce\", \"dulse\", \"nori\", \"wakame\", \"agar\", \"carrageenan\"]"}
{"cat":"animals","slot":"specialization","value":"mutant","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of mutant in terms of their hyponyms.\";         A textual example of the semantic relation is \"are mutant\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"dog\", \"cat\", \"mouse\", \"rat\", \"rabbit\", \"hamster\", \"guinea pig\", \"snake\", \"lizard\", \"fish\"]"}
{"cat":"animals","slot":"specialization","value":"Oryctolagus cuniculus","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of Oryctolagus cuniculus in terms of their hyponyms.\";         A textual example of the semantic relation is \"are Oryctolagus cuniculus\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['rabbit', 'bunny', 'hare', 'cottontail', 'buck', 'doe', 'kit', 'leveret', 'cony', 'lapin']"}
{"cat":"animals","slot":"specialization","value":"piciform bird","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of piciform bird in terms of their hyponyms.\";         A textual example of the semantic relation is \"are piciform bird\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"woodpecker\", \"flicker\", \"pileated woodpecker\", \"downy woodpecker\", \"hairy woodpecker\", \"red-bellied woodpecker\", \"yellow-bellied sapsucker\", \"red-headed woodpecker\", \"acorn woodpecker\", \"ivory-billed woodpecker\"]"}
{"cat":"animals","slot":"specialization","value":"pest","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of pest in terms of their hyponyms.\";         A textual example of the semantic relation is \"are pest\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['rat', 'mouse', 'cockroach', 'termite', 'bedbug', 'flea', 'tick', 'mosquito', 'ant', 'bee']"}
{"cat":"animals","slot":"specialization","value":"gallinaceous bird","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of gallinaceous bird in terms of their hyponyms.\";         A textual example of the semantic relation is \"are gallinaceous bird\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"chicken\", \"turkey\", \"quail\", \"pheasant\", \"grouse\", \"partridge\", \"guinea fowl\", \"peafowl\", \"junglefowl\", \"ptarmigan\"]"}
{"cat":"animals","slot":"specialization","value":"homotherm","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of homotherm in terms of their hyponyms.\";         A textual example of the semantic relation is \"are homotherm\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"mammal\", \"reptile\", \"bird\", \"amphibian\", \"fish\", \"invertebrate\", \"vertebrate\", \"carnivore\", \"herbivore\", \"omnivore\"]"}
{"cat":"animals","slot":"specialization","value":"vixen","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of vixen in terms of their hyponyms.\";         A textual example of the semantic relation is \"are vixen\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"fox\", \"mammal\", \"carnivore\", \"canine\", \"predator\", \"female\", \"nocturnal\", \"omnivore\", \"solitary\"]"}
{"cat":"animals","slot":"specialization","value":"thysanuron","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of thysanuron in terms of their hyponyms.\";         A textual example of the semantic relation is \"are thysanuron\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['silverfish', 'firebrat', 'bristletail', 'thysanuron', 'archaeognatha', 'jumping bristletail', 'archaeognath', 'jumping bristletail', 'bristletail insect', 'thysanura']"}
{"cat":"animals","slot":"specialization","value":"lycaenid butterfly","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of lycaenid butterfly in terms of their hyponyms.\";         A textual example of the semantic relation is \"are lycaenid butterfly\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['lycaenid', 'butterfly', 'insect', 'lepidoptera', 'papilionoidea', 'rhopalocera', 'nymphalidae', 'pieridae', 'riodinidae', 'hesperiidae']"}
{"cat":"animals","slot":"specialization","value":"cuculiform bird","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of cuculiform bird in terms of their hyponyms.\";         A textual example of the semantic relation is \"are cuculiform bird\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['cuckoo', 'roadrunner', 'coucal', 'anis', 'malkoha', 'chachalaca', 'guan', 'turaco', 'hoatzin']"}
{"cat":"animals","slot":"specialization","value":"comb jelly","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of comb jelly in terms of their hyponyms.\";         A textual example of the semantic relation is \"are comb jelly\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['comb jelly', 'ctenophore', 'sea walnut', 'venus girdle', 'worm jelly', 'lophotrochozoan', 'marine invertebrate', 'pelagic organism', 'plankton', 'predator']"}
{"cat":"animals","slot":"specialization","value":"copepod","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of copepod in terms of their hyponyms.\";         A textual example of the semantic relation is \"are copepod\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['copepod', 'crustacean', 'arthropod', 'invertebrate', 'zooplankton', 'plankton', 'marine', 'aquatic', 'animal', 'organism']"}
{"cat":"animals","slot":"specialization","value":"heteropterous insect","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of heteropterous insect in terms of their hyponyms.\";         A textual example of the semantic relation is \"are heteropterous insect\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"bedbug\", \"cicada\", \"stinkbug\", \"shieldbug\", \"assassin bug\", \"water strider\", \"squash bug\", \"milkweed bug\", \"lace bug\", \"leafhopper\"]"}
{"cat":"animals","slot":"specialization","value":"white ant","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of white ant in terms of their hyponyms.\";         A textual example of the semantic relation is \"are white ant\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"termite\", \"insect\", \"arthropod\", \"invertebrate\", \"animal\", \"organism\", \"living being\", \"creature\", \"life form\"]"}
{"cat":"animals","slot":"specialization","value":"king crab","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of king crab in terms of their hyponyms.\";         A textual example of the semantic relation is \"are king crab\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"king crab\", \"crab\", \"crustacean\", \"arthropod\", \"animal\", \"decapod\", \"malacostraca\", \"marine animal\", \"seafood\"]"}
{"cat":"animals","slot":"specialization","value":"cur","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of cur in terms of their hyponyms.\";         A textual example of the semantic relation is \"are cur\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['dog', 'wolf', 'fox', 'coyote', 'jackal', 'dingo', 'hyena', 'civet', 'genet']"}
{"cat":"animals","slot":"specialization","value":"Canis rufus","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of Canis rufus in terms of their hyponyms.\";         A textual example of the semantic relation is \"are Canis rufus\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"red wolf\", \"Canis rufus\", \"gray wolf\", \"coyote\", \"fox\", \"jackal\", \"dingo\", \"African wild dog\", \"New Guinea singing dog\"]"}
{"cat":"animals","slot":"specialization","value":"bird louse","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of bird louse in terms of their hyponyms.\";         A textual example of the semantic relation is \"are bird louse\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['Mallophaga', 'Ischnocera', 'Amblycera', 'Menopon', 'Lice', 'Phthiraptera', 'Insecta', 'Hexapoda', 'Arthropoda', 'Animalia']"}
{"cat":"animals","slot":"specialization","value":"toy","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of toy in terms of their hyponyms.\";         A textual example of the semantic relation is \"are toy\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"dog\", \"cat\", \"horse\", \"elephant\", \"lion\", \"tiger\", \"giraffe\", \"panda\", \"koala\", \"monkey\"]"}
{"cat":"animals","slot":"specialization","value":"whirligig beetle","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of whirligig beetle in terms of their hyponyms.\";         A textual example of the semantic relation is \"are whirligig beetle\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"beetle\", \"insect\", \"arthropod\", \"animal\", \"coleoptera\", \"coleopteran\", \"insecta\", \"hexapod\", \"invertebrate\", \"arthropod\"]"}
{"cat":"animals","slot":"specialization","value":"thysanopterous insect","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of thysanopterous insect in terms of their hyponyms.\";         A textual example of the semantic relation is \"are thysanopterous insect\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['thrips', 'flea', 'louse', 'gnat', 'midge', 'mosquito', 'crane fly', 'no-see-um', 'black fly', 'biting midge']"}
{"cat":"animals","slot":"specialization","value":"raptorial bird","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of raptorial bird in terms of their hyponyms.\";         A textual example of the semantic relation is \"are raptorial bird\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['eagle', 'hawk', 'falcon', 'vulture', 'harpy', 'owl', 'kite', 'buzzard', 'condor', 'golden eagle']"}
{"cat":"animals","slot":"specialization","value":"cirriped","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of cirriped in terms of their hyponyms.\";         A textual example of the semantic relation is \"are cirriped\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['barnacle', 'acorn barnacle', 'goose barnacle', 'stalked barnacle', 'basket barnacle', 'volcano barnacle', 'lepas', 'anomura', 'balanomorpha', 'balanidae']"}
{"cat":"animals","slot":"specialization","value":"edible snail","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of edible snail in terms of their hyponyms.\";         A textual example of the semantic relation is \"are edible snail\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"escargot\", \"gastropod\", \"mollusk\", \"snail\", \"shellfish\", \"seafood\", \"delicacy\", \"appetizer\", \"protein\", \"french cuisine\"]"}
{"cat":"animals","slot":"specialization","value":"danaid butterfly","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of danaid butterfly in terms of their hyponyms.\";         A textual example of the semantic relation is \"are danaid butterfly\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"monarch butterfly\", \"tiger butterfly\", \"queen butterfly\", \"viceroy butterfly\", \"admiral butterfly\", \"painted lady butterfly\", \"buckeye butterfly\", \"mourning cloak butterfly\", \"red admiral butterfly\", \"common buckeye butterfly\"]"}
{"cat":"animals","slot":"specialization","value":"Reynard","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of Reynard in terms of their hyponyms.\";         A textual example of the semantic relation is \"are Reynard\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['fox', 'red fox', 'gray fox', 'kit fox', 'arctic fox', 'fennec fox', 'bat-eared fox', 'crab-eating fox', 'hoary fox', 'swift fox']"}
{"cat":"animals","slot":"specialization","value":"bark beetle","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of bark beetle in terms of their hyponyms.\";         A textual example of the semantic relation is \"are bark beetle\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"beetle\", \"insect\", \"arthropod\", \"animal\", \"coleoptera\", \"invertebrate\", \"pest\", \"forest dweller\", \"herbivore\", \"bark beetle\"]"}
{"cat":"animals","slot":"specialization","value":"night bird","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of night bird in terms of their hyponyms.\";         A textual example of the semantic relation is \"are night bird\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"owl\", \"nightjar\", \"nighthawk\", \"whip-poor-will\", \"frogmouth\", \"potoo\", \"goatsucker\", \"swiftlet\", \"nightingale\", \"loon\"]"}
{"cat":"animals","slot":"specialization","value":"Vulpes velox","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of Vulpes velox in terms of their hyponyms.\";         A textual example of the semantic relation is \"are Vulpes velox\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['swift fox', 'fox', 'canid', 'carnivore', 'mammal', 'animal', 'predator', 'Vulpes velox', 'endangered species']"}
{"cat":"animals","slot":"specialization","value":"poriferan","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of poriferan in terms of their hyponyms.\";         A textual example of the semantic relation is \"are poriferan\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"sponge\", \"sea sponge\", \"glass sponge\", \"demospongiae\", \"calcareous sponge\", \"marine sponge\", \"freshwater sponge\", \"spicule\", \"sponge reef\", \"sponge garden\"]"}
{"cat":"animals","slot":"specialization","value":"coelenterate","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of coelenterate in terms of their hyponyms.\";         A textual example of the semantic relation is \"are coelenterate\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['jellyfish', 'sea anemone', 'coral', 'hydrozoa', 'siphonophore', 'ctenophore', 'comb jelly', 'salp', 'polyp', 'medusa']"}
{"cat":"animals","slot":"specialization","value":"coach dog","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of coach dog in terms of their hyponyms.\";         A textual example of the semantic relation is \"are coach dog\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['greyhound', 'whippet', 'italian greyhound', 'afghan hound', 'saluki', 'borzoi', 'pharaoh hound', 'irish wolfhound', 'scottish deerhound', 'basenji']"}
{"cat":"animals","slot":"specialization","value":"firefly","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of firefly in terms of their hyponyms.\";         A textual example of the semantic relation is \"are firefly\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['firefly', 'insect', 'beetle', 'lampyridae', 'coleoptera', 'bug', 'lightning bug', 'glowworm', 'bioluminescent', 'nocturnal']"}
{"cat":"animals","slot":"specialization","value":"mate","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of mate in terms of their hyponyms.\";         A textual example of the semantic relation is \"are mate\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['dog', 'cat', 'horse', 'cow', 'pig', 'sheep', 'goat', 'chicken', 'duck', 'turkey']"}
{"cat":"animals","slot":"specialization","value":"giant","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of giant in terms of their hyponyms.\";         A textual example of the semantic relation is \"are giant\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['elephant', 'whale', 'giraffe', 'hippopotamus', 'rhino', 'crocodile', 'bear', 'tiger', 'lion', 'gorilla']"}
{"cat":"animals","slot":"specialization","value":"Canis latrans","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of Canis latrans in terms of their hyponyms.\";         A textual example of the semantic relation is \"are Canis latrans\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['coyote', 'prairie wolf', 'brush wolf', 'American jackal', 'Mexican wolf', 'desert wolf', 'coydog', 'coywolf', 'coyote-dog', 'coyote-wolf']"}
{"cat":"animals","slot":"specialization","value":"Cancer magister","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of Cancer magister in terms of their hyponyms.\";         A textual example of the semantic relation is \"are Cancer magister\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"crab\", \"crustacean\", \"arthropod\", \"animal\", \"decapod\", \"cancer\", \"cancer magister\", \"marine animal\", \"sea creature\", \"invertebrate\"]"}
{"cat":"animals","slot":"specialization","value":"ostracod","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of ostracod in terms of their hyponyms.\";         A textual example of the semantic relation is \"are ostracod\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['ostracod', 'crustacean', 'arthropod', 'invertebrate', 'animal', 'marine', 'freshwater', 'bivalve', 'mollusk', 'shellfish']"}
{"cat":"animals","slot":"specialization","value":"springtail","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of springtail in terms of their hyponyms.\";         A textual example of the semantic relation is \"are springtail\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['springtail', 'insect', 'arthropod', 'hexapod', 'invertebrate', 'animal', 'organism', 'living thing', 'biological entity', 'creature']"}
{"cat":"animals","slot":"specialization","value":"male","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of male in terms of their hyponyms.\";         A textual example of the semantic relation is \"are male\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"bull\", \"stallion\", \"ram\", \"buck\", \"drake\", \"cock\", \"tom\", \"dog\", \"horse\", \"lion\"]"}
{"cat":"animals","slot":"specialization","value":"dipteron","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of dipteron in terms of their hyponyms.\";         A textual example of the semantic relation is \"are dipteron\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['mosquito', 'fly', 'gnat', 'midge', 'crane fly', 'black fly', 'sand fly', 'horse fly', 'deer fly', 'bot fly']"}
{"cat":"animals","slot":"specialization","value":"lepidopterous insect","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of lepidopterous insect in terms of their hyponyms.\";         A textual example of the semantic relation is \"are lepidopterous insect\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['butterfly', 'moth', 'skipper', 'swallowtail', 'fritillary', 'tiger moth', 'hawk moth', 'owlet moth', 'sphinx moth', 'geometer moth']"}
{"cat":"animals","slot":"specialization","value":"domestic animal","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of domestic animal in terms of their hyponyms.\";         A textual example of the semantic relation is \"are domestic animal\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"dog\", \"cat\", \"rabbit\", \"hamster\", \"guinea pig\", \"fish\", \"bird\", \"horse\", \"cow\", \"pig\"]"}
{"cat":"animals","slot":"specialization","value":"prey","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of prey in terms of their hyponyms.\";         A textual example of the semantic relation is \"are prey\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['rabbit', 'deer', 'squirrel', 'mouse', 'duck', 'pigeon', 'hare', 'quail', 'pheasant', 'grouse']"}
{"cat":"animals","slot":"specialization","value":"lepidopteron","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of lepidopteron in terms of their hyponyms.\";         A textual example of the semantic relation is \"are lepidopteron\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"butterfly\", \"moth\", \"caterpillar\", \"larva\", \"pupa\", \"adult\", \"nymph\", \"imago\", \"chrysalis\", \"nymphalid\"]"}
{"cat":"animals","slot":"specialization","value":"decapod","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of decapod in terms of their hyponyms.\";         A textual example of the semantic relation is \"are decapod\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"shrimp\", \"lobster\", \"crab\", \"crayfish\", \"krill\", \"barnacle\", \"mantis shrimp\", \"squat lobster\", \"porcelain crab\", \"spiny lobster\"]"}
{"cat":"animals","slot":"specialization","value":"ectotherm","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of ectotherm in terms of their hyponyms.\";         A textual example of the semantic relation is \"are ectotherm\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['lizard', 'snake', 'turtle', 'alligator', 'crocodile', 'iguana', 'gecko', 'chameleon', 'skink', 'salamander']"}
{"cat":"animals","slot":"specialization","value":"domesticated animal","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of domesticated animal in terms of their hyponyms.\";         A textual example of the semantic relation is \"are domesticated animal\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"dog\", \"cat\", \"horse\", \"cow\", \"pig\", \"sheep\", \"goat\", \"rabbit\", \"chicken\", \"duck\"]"}
{"cat":"animals","slot":"specialization","value":"lepidopteran","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of lepidopteran in terms of their hyponyms.\";         A textual example of the semantic relation is \"are lepidopteran\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"butterfly\", \"moth\", \"skipper\", \"hawk moth\", \"owlet moth\", \"sphinx moth\", \"tussock moth\", \"swallowtail butterfly\", \"cabbage moth\", \"emperor moth\"]"}
{"cat":"animals","slot":"specialization","value":"decapod crustacean","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of decapod crustacean in terms of their hyponyms.\";         A textual example of the semantic relation is \"are decapod crustacean\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['lobster', 'crab', 'shrimp', 'crayfish', 'krill', 'prawn', 'langoustine', 'scampi', 'barnacle', 'hermit crab']"}
{"cat":"animals","slot":"purpose","value":"animal","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"All of the purposes for which animal is interacted with.\";         A textual example of the semantic relation is \"are used for animal\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['pet', 'companion', 'transportation', 'food', 'clothing', 'entertainment', 'sport', 'research', 'medicine', 'agriculture']"}
{"cat":"animals","slot":"specialization","value":"herbivore","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of herbivore in terms of their hyponyms.\";         A textual example of the semantic relation is \"are herbivore\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['cow', 'sheep', 'deer', 'rabbit', 'horse', 'goat', 'elephant', 'giraffe', 'zebra', 'hippopotamus']"}
{"cat":"animals","slot":"specialization","value":"mollusk","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of mollusk in terms of their hyponyms.\";         A textual example of the semantic relation is \"are mollusk\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['octopus', 'squid', 'snail', 'slug', 'oyster', 'clam', 'scallop', 'conch', 'abalone', 'whelk']"}
{"cat":"animals","slot":"specialization","value":"larva","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of larva in terms of their hyponyms.\";         A textual example of the semantic relation is \"are larva\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['caterpillar', 'maggot', 'grub', 'nymph', 'pupa', 'tadpole', 'worm', 'larva', 'crawler', 'immature']"}
{"cat":"animals","slot":"specialization","value":"hymenopteron","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of hymenopteron in terms of their hyponyms.\";         A textual example of the semantic relation is \"are hymenopteron\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"bee\", \"wasp\", \"ant\", \"bumblebee\", \"hornet\", \"yellow jacket\", \"honeybee\", \"mason bee\", \"leafcutter bee\", \"carpenter bee\"]"}
{"cat":"animals","slot":"specialization","value":"chordate","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of chordate in terms of their hyponyms.\";         A textual example of the semantic relation is \"are chordate\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['dog', 'cat', 'horse', 'cow', 'elephant', 'whale', 'dolphin', 'turtle', 'snake', 'bird']"}
{"cat":"animals","slot":"specialization","value":"hymenopteran","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of hymenopteran in terms of their hyponyms.\";         A textual example of the semantic relation is \"are hymenopteran\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"bee\", \"ant\", \"wasp\", \"yellow jacket\", \"hornet\", \"bumblebee\", \"mason bee\", \"sweat bee\", \"leafcutter bee\"]"}
{"cat":"animals","slot":"specialization","value":"hymenopterous insect","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of hymenopterous insect in terms of their hyponyms.\";         A textual example of the semantic relation is \"are hymenopterous insect\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"bee\", \"ant\", \"wasp\", \"bumblebee\", \"yellow jacket\", \"hornet\", \"mud dauber\", \"sawfly\", \"honeybee\", \"stingless bee\"]"}
{"cat":"animals","slot":"specialization","value":"hymenopter","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of hymenopter in terms of their hyponyms.\";         A textual example of the semantic relation is \"are hymenopter\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"bee\", \"ant\", \"wasp\", \"bumblebee\", \"hornet\", \"yellow jacket\", \"honeybee\", \"mason bee\", \"cuckoo bee\", \"sawfly\"]"}
{"cat":"animals","slot":"specialization","value":"pet","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of pet in terms of their hyponyms.\";         A textual example of the semantic relation is \"are pet\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['dog', 'cat', 'fish', 'bird', 'hamster', 'rabbit', 'turtle', 'snake', 'iguana', 'ferret']"}
{"cat":"animals","slot":"specialization","value":"invertebrate","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of invertebrate in terms of their hyponyms.\";         A textual example of the semantic relation is \"are invertebrate\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"spider\", \"snail\", \"worm\", \"octopus\", \"jellyfish\", \"crab\", \"lobster\", \"shrimp\", \"ant\", \"bee\"]"}
{"cat":"animals","slot":"specialization","value":"arthropod","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"animals\";         The returned words must satisfy the semantic relation \"Classification of arthropod in terms of their hyponyms.\";         A textual example of the semantic relation is \"are arthropod\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['spider', 'scorpion', 'crab', 'lobster', 'shrimp', 'beetle', 'cockroach', 'ant', 'centipede', 'millipede']"}
{"cat":"food","slot":"purpose","value":"vision","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All of the purposes for which vision is interacted with.\";         A textual example of the semantic relation is \"are used for vision\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"apple\", \"carrot\", \"onion\", \"potato\", \"tomato\", \"cucumber\", \"pepper\", \"garlic\", \"lemon\"]"}
{"cat":"food","slot":"size","value":"small","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Size of small.\";         A textual example of the semantic relation is \"can be small\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['grape', 'cherry', 'blueberry', 'strawberry', 'raisin', 'pea', 'bean', 'olive', 'caper', 'peppercorn']"}
{"cat":"food","slot":"material","value":"rye","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Material of which rye is composed.\";         A textual example of the semantic relation is \"can be made of rye\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['bread', 'flour', 'cereal', 'whiskey', 'pasta', 'beer', 'vodka', 'crackers', 'pumpernickel', 'rye']"}
{"cat":"food","slot":"material","value":"yeast","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Material of which yeast is composed.\";         A textual example of the semantic relation is \"can be made of yeast\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['bread', 'pizza', 'dough', 'beer', 'wine', 'cheese', 'cakes', 'pastries', 'biscuits', 'sourdough']"}
{"cat":"food","slot":"material","value":"tasting","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Material of which tasting is composed.\";         A textual example of the semantic relation is \"can be made of tasting\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['sugar', 'salt', 'fat', 'protein', 'carbohydrates', 'spices', 'herbs', 'flavorings', 'seasonings', 'ingredients']"}
{"cat":"food","slot":"material","value":"unleavened","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Material of which unleavened is composed.\";         A textual example of the semantic relation is \"can be made of unleavened\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['flour', 'water', 'salt', 'yeast', 'baking soda', 'baking powder', 'eggs', 'milk', 'butter', 'oil']"}
{"cat":"food","slot":"material","value":"sourdough","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Material of which sourdough is composed.\";         A textual example of the semantic relation is \"can be made of sourdough\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"flour\", \"water\", \"yeast\", \"salt\", \"starter\", \"dough\", \"bread\", \"baking\", \"fermentation\", \"baking soda\"]"}
{"cat":"food","slot":"material","value":"salt","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Material of which salt is composed.\";         A textual example of the semantic relation is \"can be made of salt\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"salt\", \"sodium\", \"chloride\", \"sea salt\", \"kosher salt\", \"iodized salt\", \"table salt\", \"fleur de sel\", \"rock salt\", \"Himalayan pink salt\"]"}
{"cat":"food","slot":"time","value":"autumn","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the entries which link autumn with the time flow or with specific moments of time.\";         A textual example of the semantic relation is \"can be consumed or used during autumn\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['pumpkin', 'squash', 'cranberry', 'apple', 'corn', 'grape', 'mushroom', 'chestnut', 'fig', 'persimmon']"}
{"cat":"food","slot":"time","value":"lunch","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the entries which link lunch with the time flow or with specific moments of time.\";         A textual example of the semantic relation is \"can be consumed or used during lunch\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['sandwich', 'salad', 'burger', 'pizza', 'soup', 'fries', 'chicken', 'taco', 'sushi', 'pasta']"}
{"cat":"food","slot":"time","value":"dinner","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the entries which link dinner with the time flow or with specific moments of time.\";         A textual example of the semantic relation is \"can be consumed or used during dinner\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"dinner\", \"supper\", \"evening meal\", \"main meal\", \"feast\", \"banquet\", \"gala\", \"reception\", \"buffet\", \"spread\"]"}
{"cat":"food","slot":"time","value":"summer","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the entries which link summer with the time flow or with specific moments of time.\";         A textual example of the semantic relation is \"can be consumed or used during summer\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['ice cream', 'frozen yogurt', 'smoothies', 'salads', 'grilled food', 'fruits', 'lemonade', 'snow cones', 'popscicles', 'watermelon']"}
{"cat":"food","slot":"time","value":"April","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the entries which link April with the time flow or with specific moments of time.\";         A textual example of the semantic relation is \"can be consumed or used during April\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"Easter\", \"spring\", \"seasonal\", \"fresh\", \"new\", \"lamb\", \"asparagus\", \"rhubarb\", \"strawberries\"]"}
{"cat":"food","slot":"time","value":"meal","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the entries which link meal with the time flow or with specific moments of time.\";         A textual example of the semantic relation is \"can be consumed or used during meal\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"breakfast\", \"lunch\", \"dinner\", \"brunch\", \"snack\", \"dessert\", \"appetizer\", \"main course\", \"side dish\", \"midnight snack\"]"}
{"cat":"food","slot":"material","value":"water","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Material of which water is composed.\";         A textual example of the semantic relation is \"can be made of water\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['soup', 'broth', 'consomm\u00e9', 'tea', 'coffee', 'juice', 'smoothie', 'ice', 'gelatin', 'jelly']"}
{"cat":"food","slot":"taste","value":"acid","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Contains information on the taste of a food.\";         A textual example of the semantic relation is \"can be acid\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"sweet\", \"sour\", \"spicy\", \"bitter\", \"savory\", \"tangy\", \"fruity\", \"creamy\", \"nutty\", \"smoky\"]"}
{"cat":"food","slot":"taste","value":"cold","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Contains information on the taste of a food.\";         A textual example of the semantic relation is \"can be cold\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['sweet', 'salty', 'bitter', 'sour', 'spicy', 'tangy', 'creamy', 'rich', 'smoky', 'buttery']"}
{"cat":"food","slot":"taste","value":"dessert","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Contains information on the taste of a food.\";         A textual example of the semantic relation is \"can be dessert\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['sweet', 'savory', 'tangy', 'spicy', 'bitter', 'salty', 'fruity', 'creamy', 'rich', 'juicy']"}
{"cat":"food","slot":"taste","value":"sugary","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Contains information on the taste of a food.\";         A textual example of the semantic relation is \"can be sugary\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['sweet', 'sugary', 'savory', 'spicy', 'salty', 'bitter', 'tart', 'sour', 'umami', 'flavorful']"}
{"cat":"food","slot":"taste","value":"sparkling","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Contains information on the taste of a food.\";         A textual example of the semantic relation is \"can be sparkling\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"sweet\", \"savory\", \"spicy\", \"tangy\", \"bitter\", \"sour\", \"salty\", \"umami\", \"rich\", \"flavorful\"]"}
{"cat":"food","slot":"taste","value":"iced","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Contains information on the taste of a food.\";         A textual example of the semantic relation is \"can be iced\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['sweet', 'savory', 'spicy', 'tangy', 'bitter', 'sour', 'salty', 'creamy', 'crunchy', 'juicy']"}
{"cat":"food","slot":"taste","value":"herbal","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Contains information on the taste of a food.\";         A textual example of the semantic relation is \"can be herbal\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"sweet\", \"savory\", \"spicy\", \"tangy\", \"bitter\", \"sour\", \"umami\", \"herbal\", \"fruity\", \"earthy\"]"}
{"cat":"food","slot":"taste","value":"soft","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Contains information on the taste of a food.\";         A textual example of the semantic relation is \"can be soft\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['juicy', 'tangy', 'savory', 'sweet', 'bitter', 'spicy', 'sour', 'rich', 'flavorful', 'smooth']"}
{"cat":"food","slot":"taste","value":"fizzy","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Contains information on the taste of a food.\";         A textual example of the semantic relation is \"can be fizzy\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['sweet', 'sour', 'bitter', 'spicy', 'savory', 'tangy', 'fizzy', 'creamy', 'juicy', 'crunchy']"}
{"cat":"food","slot":"material","value":"milk","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Material of which milk is composed.\";         A textual example of the semantic relation is \"can be made of milk\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['protein', 'fat', 'lactose', 'calcium', 'vitamin D', 'phosphorus', 'potassium', 'magnesium', 'zinc', 'vitamin B12']"}
{"cat":"food","slot":"smell","value":"fruity","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the entries with which the smell of fruity can be described.\";         A textual example of the semantic relation is \"can smell fruity\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"strawberry\", \"banana\", \"grape\", \"peach\", \"pineapple\", \"watermelon\", \"cherry\", \"mango\", \"orange\", \"apple\"]"}
{"cat":"food","slot":"smell","value":"cheap","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the entries with which the smell of cheap can be described.\";         A textual example of the semantic relation is \"can smell cheap\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['cheap', 'greasy', 'stale', 'artificial', 'processed', 'fake', 'chemical', 'plastic', 'low-quality', 'synthetic']"}
{"cat":"food","slot":"smell","value":"spicy","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the entries with which the smell of spicy can be described.\";         A textual example of the semantic relation is \"can smell spicy\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['curry', 'chili', 'cumin', 'paprika', 'garlic', 'ginger', 'pepper', 'turmeric', 'cinnamon', 'clove']"}
{"cat":"food","slot":"smell","value":"floral","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the entries with which the smell of floral can be described.\";         A textual example of the semantic relation is \"can smell floral\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"rosewater\", \"lavender\", \"honey\", \"vanilla\", \"chamomile\", \"jasmine\", \"orange blossom\", \"elderflower\", \"peach blossom\", \"apricot blossom\"]"}
{"cat":"food","slot":"smell","value":"bitter","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the entries with which the smell of bitter can be described.\";         A textual example of the semantic relation is \"can smell bitter\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['coffee', 'dark chocolate', 'beer', 'grapefruit', 'kale', 'endive', 'quinoa', 'amaranth', 'collard greens', 'broccoli']"}
{"cat":"food","slot":"smell","value":"balsamic","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the entries with which the smell of balsamic can be described.\";         A textual example of the semantic relation is \"can smell balsamic\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['vinegar', 'acetic', 'sweet', 'tart', 'complex', 'fruity', 'rich', 'aromatic', 'smoky', 'balanced']"}
{"cat":"food","slot":"smell","value":"acidic","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the entries with which the smell of acidic can be described.\";         A textual example of the semantic relation is \"can smell acidic\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"lemon\", \"vinegar\", \"tomato\", \"citrus\", \"sour\", \"tart\", \"yogurt\", \"pickle\", \"goat cheese\", \"buttermilk\"]"}
{"cat":"food","slot":"smell","value":"tasty","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the entries with which the smell of tasty can be described.\";         A textual example of the semantic relation is \"can smell tasty\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['pizza', 'chocolate', 'steak', 'sushi', 'curry', 'pasta', 'cheesecake', 'bacon', 'french fries', 'donuts']"}
{"cat":"food","slot":"smell","value":"aromatic","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the entries with which the smell of aromatic can be described.\";         A textual example of the semantic relation is \"can smell aromatic\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['basil', 'cinnamon', 'cloves', 'coriander', 'fennel', 'ginger', 'nutmeg', 'oregano', 'rosemary', 'thyme']"}
{"cat":"food","slot":"smell","value":"organic","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the entries with which the smell of organic can be described.\";         A textual example of the semantic relation is \"can smell organic\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['apple', 'banana', 'carrot', 'potato', 'onion', 'garlic', 'tomato', 'cabbage', 'lettuce', 'mushroom']"}
{"cat":"food","slot":"smell","value":"elegant","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the entries with which the smell of elegant can be described.\";         A textual example of the semantic relation is \"can smell elegant\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"truffle\", \"caviar\", \"champagne\", \"cognac\", \"foie gras\", \"lobster\", \"crab\", \"steak\", \"escargot\", \"caviar\"]"}
{"cat":"food","slot":"smell","value":"fresh","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the entries with which the smell of fresh can be described.\";         A textual example of the semantic relation is \"can smell fresh\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['bread', 'pizza', 'pasta', 'salad', 'fruit', 'vegetables', 'coffee', 'tea', 'chocolate', 'cinnamon']"}
{"cat":"food","slot":"smell","value":"varietal","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the entries with which the smell of varietal can be described.\";         A textual example of the semantic relation is \"can smell varietal\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['wine', 'coffee', 'tea', 'honey', 'cheese', 'chocolate', 'bread', 'fruit', 'herbs', 'spices']"}
{"cat":"food","slot":"material","value":"wheat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Material of which wheat is composed.\";         A textual example of the semantic relation is \"can be made of wheat\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['bread', 'pasta', 'cereal', 'crackers', 'pancakes', 'muffins', 'cookies', 'cake', 'pizza', 'beer']"}
{"cat":"food","slot":"consistency","value":"liquid","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the entries with which the noticeable to the touch consistency or texture of liquid can be described.\";         A textual example of the semantic relation is \"can be liquid\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['soup', 'broth', 'sauce', 'juice', 'smoothie', 'pudding', 'custard', 'mousse', 'gelatin', 'jelly']"}
{"cat":"food","slot":"consistency","value":"firm","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the entries with which the noticeable to the touch consistency or texture of firm can be described.\";         A textual example of the semantic relation is \"can be firm\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['steak', 'tofu', 'chicken', 'pork', 'beef', 'lamb', 'salmon', 'tuna', 'trout', 'halibut']"}
{"cat":"food","slot":"consistency","value":"crispy","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the entries with which the noticeable to the touch consistency or texture of crispy can be described.\";         A textual example of the semantic relation is \"can be crispy\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"potato chips\", \"bacon\", \"corn flakes\", \"french fries\", \"crackers\", \"tortilla chips\", \"apple chips\", \"onion rings\", \"chicken skin\"]"}
{"cat":"food","slot":"consistency","value":"tart","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the entries with which the noticeable to the touch consistency or texture of tart can be described.\";         A textual example of the semantic relation is \"can be tart\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"lemon\", \"grapefruit\", \"rhubarb\", \"cranberry\", \"kiwi\", \"pomegranate\", \"blueberry\", \"strawberry\", \"raspberry\", \"cherry\"]"}
{"cat":"food","slot":"consistency","value":"rich","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the entries with which the noticeable to the touch consistency or texture of rich can be described.\";         A textual example of the semantic relation is \"can be rich\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"chocolate\", \"truffle\", \"butter\", \"cheese\", \"cream\", \"caviar\", \"foie gras\", \"lobster\", \"steak\", \"crab\"]"}
{"cat":"food","slot":"consistency","value":"sour","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the entries with which the noticeable to the touch consistency or texture of sour can be described.\";         A textual example of the semantic relation is \"can be sour\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['lemon', 'lime', 'grapefruit', 'yogurt', 'pickle', 'tamarind', 'sourdough', 'kimchi', 'rhubarb', 'gooseberry']"}
{"cat":"food","slot":"consistency","value":"spongy","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the entries with which the noticeable to the touch consistency or texture of spongy can be described.\";         A textual example of the semantic relation is \"can be spongy\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['cake', 'bread', 'pudding', 'doughnut', 'sponge cake', 'pancake', 'muffin', 'cheesecake', 'biscuit', 'brownie']"}
{"cat":"food","slot":"consistency","value":"edible","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the entries with which the noticeable to the touch consistency or texture of edible can be described.\";         A textual example of the semantic relation is \"can be edible\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"savory\", \"juicy\", \"crispy\", \"tender\", \"creamy\", \"crunchy\", \"chewy\", \"moist\", \"flaky\", \"spicy\"]"}
{"cat":"food","slot":"consistency","value":"ripe","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the entries with which the noticeable to the touch consistency or texture of ripe can be described.\";         A textual example of the semantic relation is \"can be ripe\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['banana', 'peach', 'avocado', 'tomato', 'mango', 'kiwi', 'grape', 'plum', 'pear', 'apricot']"}
{"cat":"food","slot":"consistency","value":"sparkling","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the entries with which the noticeable to the touch consistency or texture of sparkling can be described.\";         A textual example of the semantic relation is \"can be sparkling\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"champagne\", \"soda\", \"sprite\", \"tonic\", \"prosecco\", \"cava\", \"beer\", \"sparkling water\", \"sparkling juice\", \"sparkling cider\"]"}
{"cat":"food","slot":"consistency","value":"crisp","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the entries with which the noticeable to the touch consistency or texture of crisp can be described.\";         A textual example of the semantic relation is \"can be crisp\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['potato chips', 'bacon', 'crispy chicken', 'fried onions', 'tortilla chips', 'apple', 'celery', 'carrot', 'lettuce', 'cucumber']"}
{"cat":"food","slot":"consistency","value":"juicy","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the entries with which the noticeable to the touch consistency or texture of juicy can be described.\";         A textual example of the semantic relation is \"can be juicy\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"steak\", \"hamburger\", \"pork\", \"chicken\", \"turkey\", \"duck\", \"salmon\", \"tuna\", \"shrimp\", \"lobster\"]"}
{"cat":"food","slot":"consistency","value":"crunchy","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the entries with which the noticeable to the touch consistency or texture of crunchy can be described.\";         A textual example of the semantic relation is \"can be crunchy\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['potato chips', 'carrot', 'celery', 'apple', 'crisp', 'biscuit', 'corn flakes', 'popcorn', 'pretzel', 'toast']"}
{"cat":"food","slot":"consistency","value":"juicy","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the entries with which the noticeable to the touch consistency or texture of juicy can be described.\";         A textual example of the semantic relation is \"can be juicy\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"steak\", \"hamburger\", \"pork\", \"chicken\", \"turkey\", \"duck\", \"salmon\", \"tuna\", \"shrimp\", \"lobster\"]"}
{"cat":"food","slot":"shape","value":"elongated","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Form of elongated.\";         A textual example of the semantic relation is \"can be elongated\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"spaghetti\", \"noodle\", \"pasta\", \"fettuccine\", \"linguine\", \"vermicelli\", \"angel hair\", \"tagliatelle\", \"rigatoni\"]"}
{"cat":"food","slot":"shape","value":"long","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Form of long.\";         A textual example of the semantic relation is \"can be long\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"spaghetti\", \"noodles\", \"pasta\", \"baguette\", \"hotdog\", \"sausage\", \"steak\", \"ribs\", \"pizza\", \"sandwich\"]"}
{"cat":"food","slot":"shape","value":"circular","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Form of circular.\";         A textual example of the semantic relation is \"can be circular\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['pizza', 'pancake', 'waffle', 'cookie', 'donut', 'tortilla', 'bagel', 'croissant', 'pita']"}
{"cat":"food","slot":"shape","value":"round","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Form of round.\";         A textual example of the semantic relation is \"can be round\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['apple', 'cherry', 'pear', 'grape', 'peach', 'strawberry', 'orange', 'tangerine', 'kiwi', 'mango']"}
{"cat":"food","slot":"shape","value":"thin","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Form of thin.\";         A textual example of the semantic relation is \"can be thin\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['pancake', 'wafer', 'crepe', 'tortilla', 'flatbread', 'pita', 'naan', 'chapati', 'roti', 'pizza']"}
{"cat":"food","slot":"shape","value":"conical","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Form of conical.\";         A textual example of the semantic relation is \"can be conical\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['ice cream cone', 'witch hat', 'sugar cone', 'cone', 'traffic cone', 'sugarloaf', 'cone of silence', 'cone', 'cone', 'cone']"}
{"cat":"food","slot":"shape","value":"oval","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Form of oval.\";         A textual example of the semantic relation is \"can be oval\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"egg\", \"potato\", \"avocado\", \"peach\", \"nectarine\", \"pear\", \"apple\", \"quail egg\", \"goose egg\", \"duck egg\"]"}
{"cat":"food","slot":"shape","value":"oval","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Form of oval.\";         A textual example of the semantic relation is \"can be oval\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"egg\", \"potato\", \"avocado\", \"peach\", \"nectarine\", \"pear\", \"apple\", \"quail egg\", \"goose egg\", \"duck egg\"]"}
{"cat":"food","slot":"shape","value":"pointed","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Form of pointed.\";         A textual example of the semantic relation is \"can be pointed\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"pickle\", \"spear\", \"dart\", \"spike\", \"stinger\", \"prickle\", \"point\", \"prick\", \"spur\"]"}
{"cat":"food","slot":"material","value":"grape","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Material of which grape is composed.\";         A textual example of the semantic relation is \"can be made of grape\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"grape\", \"juice\", \"sugar\", \"water\", \"acid\", \"tannin\", \"pulp\", \"skin\", \"seeds\", \"stem\"]"}
{"cat":"food","slot":"user","value":"farmer","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the kinds of living beings which are able to operate, employ, interact with or perceive farmer.\";         A textual example of the semantic relation is \"are used by farmers\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['corn', 'wheat', 'potatoes', 'tomatoes', 'cattle', 'pigs', 'chickens', 'sheep', 'horses', 'goats']"}
{"cat":"food","slot":"user","value":"cook","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the kinds of living beings which are able to operate, employ, interact with or perceive cook.\";         A textual example of the semantic relation is \"are used by cooks\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"chicken\", \"beef\", \"pork\", \"fish\", \"vegetables\", \"fruits\", \"grains\", \"dairy\", \"spices\"]"}
{"cat":"food","slot":"user","value":"adult","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the kinds of living beings which are able to operate, employ, interact with or perceive adult.\";         A textual example of the semantic relation is \"are used by adults\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['pizza', 'hamburger', 'sushi', 'steak', 'pasta', 'salad', 'taco', 'soup', 'curry', 'kebab']"}
{"cat":"food","slot":"user","value":"wine grower","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the kinds of living beings which are able to operate, employ, interact with or perceive wine grower.\";         A textual example of the semantic relation is \"are used by wine growers\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['grape', 'vineyard', 'vine', 'harvest', 'fermentation', 'yeast', 'barrel', 'cork', 'bottle', 'label']"}
{"cat":"food","slot":"user","value":"somellier","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the kinds of living beings which are able to operate, employ, interact with or perceive somellier.\";         A textual example of the semantic relation is \"are used by somelliers\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['wine', 'cheese', 'bread', 'olive oil', 'chocolate', 'coffee', 'tea', 'fruit', 'vegetables', 'meat']"}
{"cat":"food","slot":"accessory","value":"barrel","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All those objects that may have to do with barrel. The constraint is that there must be a physical contact and that the use of such object is strictly necessary for barrel.\";         A textual example of the semantic relation is \"are related with barrel\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['wine', 'whiskey', 'rum', 'brandy', 'beer', 'vinegar', 'pickles', 'olives', 'honey', 'syrup']"}
{"cat":"food","slot":"accessory","value":"cup","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All those objects that may have to do with cup. The constraint is that there must be a physical contact and that the use of such object is strictly necessary for cup.\";         A textual example of the semantic relation is \"are related with cup\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['coffee', 'tea', 'sugar', 'cream', 'milk', 'spoon', 'stirrer', 'lid', 'handle', 'mug']"}
{"cat":"food","slot":"accessory","value":"meat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All those objects that may have to do with meat. The constraint is that there must be a physical contact and that the use of such object is strictly necessary for meat.\";         A textual example of the semantic relation is \"are related with meat\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['knife', 'fork', 'steak', 'sausage', 'ham', 'bacon', 'chicken', 'pork', 'beef', 'lamb']"}
{"cat":"food","slot":"accessory","value":"barbecue","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All those objects that may have to do with barbecue. The constraint is that there must be a physical contact and that the use of such object is strictly necessary for barbecue.\";         A textual example of the semantic relation is \"are related with barbecue\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['steak', 'ribs', 'chicken', 'hot dogs', 'hamburgers', 'corn on the cob', 'potatoes', 'asparagus', 'pineapple', 'mushrooms']"}
{"cat":"food","slot":"accessory","value":"sausage","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All those objects that may have to do with sausage. The constraint is that there must be a physical contact and that the use of such object is strictly necessary for sausage.\";         A textual example of the semantic relation is \"are related with sausage\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['sausage', 'meat', 'casing', 'grinder', 'smoker', 'grill', 'pan', 'knife', 'fork', 'plate']"}
{"cat":"food","slot":"accessory","value":"oven","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All those objects that may have to do with oven. The constraint is that there must be a physical contact and that the use of such object is strictly necessary for oven.\";         A textual example of the semantic relation is \"are related with oven\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"pizza\", \"bread\", \"cake\", \"pie\", \"roast\", \"chicken\", \"potatoes\", \"casserole\", \"muffins\", \"cookies\"]"}
{"cat":"food","slot":"accessory","value":"marmalade","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All those objects that may have to do with marmalade. The constraint is that there must be a physical contact and that the use of such object is strictly necessary for marmalade.\";         A textual example of the semantic relation is \"are related with marmalade\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['spoon', 'knife', 'jar', 'toast', 'bread', 'orange', 'peel', 'sugar', 'lemon', 'butter']"}
{"cat":"food","slot":"accessory","value":"cheese","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All those objects that may have to do with cheese. The constraint is that there must be a physical contact and that the use of such object is strictly necessary for cheese.\";         A textual example of the semantic relation is \"are related with cheese\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['knife', 'grater', 'spoon', 'cheese board', 'cheese slicer', 'cheese grater', 'cheese cloth', 'cheese press', 'cheese mold', 'cheese wire']"}
{"cat":"food","slot":"accessory","value":"macaroni","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All those objects that may have to do with macaroni. The constraint is that there must be a physical contact and that the use of such object is strictly necessary for macaroni.\";         A textual example of the semantic relation is \"are related with macaroni\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['pasta', 'cheese', 'sauce', 'noodles', 'spaghetti', 'meatballs', 'garlic', 'onion', 'tomato', 'basil']"}
{"cat":"food","slot":"accessory","value":"bean","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All those objects that may have to do with bean. The constraint is that there must be a physical contact and that the use of such object is strictly necessary for bean.\";         A textual example of the semantic relation is \"are related with bean\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['bean', 'chili', 'soup', 'burrito', 'taco', 'salad', 'dip', 'hummus', 'salsa', 'stew']"}
{"cat":"food","slot":"accessory","value":"pizza","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All those objects that may have to do with pizza. The constraint is that there must be a physical contact and that the use of such object is strictly necessary for pizza.\";         A textual example of the semantic relation is \"are related with pizza\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"dough\", \"cheese\", \"sauce\", \"pepperoni\", \"mushroom\", \"olive\", \"onion\", \"tomato\", \"basil\", \"pepper\"]"}
{"cat":"food","slot":"accessory","value":"extractor","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All those objects that may have to do with extractor. The constraint is that there must be a physical contact and that the use of such object is strictly necessary for extractor.\";         A textual example of the semantic relation is \"are related with extractor\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['corkscrew', 'can opener', 'bottle opener', 'juicer', 'cheese grater', 'lemon squeezer', 'garlic press', 'nutcracker', 'peeler', 'strainer']"}
{"cat":"food","slot":"taste","value":"sweet","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Contains information on the taste of a food.\";         A textual example of the semantic relation is \"can be sweet\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['sweet', 'savory', 'spicy', 'tangy', 'bitter', 'salty', 'creamy', 'juicy', 'crunchy', 'rich']"}
{"cat":"food","slot":"taste","value":"hot","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Contains information on the taste of a food.\";         A textual example of the semantic relation is \"can be hot\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['spicy', 'hot', 'tangy', 'sweet', 'savory', 'bitter', 'salty', 'rich', 'flavorful', 'aromatic']"}
{"cat":"food","slot":"smell","value":"hot","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the entries with which the smell of hot can be described.\";         A textual example of the semantic relation is \"can smell hot\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['pizza', 'fries', 'steak', 'chicken', 'popcorn', 'toast', 'roast', 'coffee', 'soup', 'bacon']"}
{"cat":"food","slot":"smell","value":"varietal","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the entries with which the smell of varietal can be described.\";         A textual example of the semantic relation is \"can smell varietal\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['wine', 'coffee', 'tea', 'honey', 'cheese', 'chocolate', 'bread', 'fruit', 'herbs', 'spices']"}
{"cat":"food","slot":"accessory","value":"bottle","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All those objects that may have to do with bottle. The constraint is that there must be a physical contact and that the use of such object is strictly necessary for bottle.\";         A textual example of the semantic relation is \"are related with bottle\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['wine', 'beer', 'soda', 'juice', 'milk', 'oil', 'vinegar', 'honey', 'soy sauce', 'maple syrup']"}
{"cat":"food","slot":"accessory","value":"butter","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All those objects that may have to do with butter. The constraint is that there must be a physical contact and that the use of such object is strictly necessary for butter.\";         A textual example of the semantic relation is \"are related with butter\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"knife\", \"bread\", \"toast\", \"butter dish\", \"spreader\", \"fork\", \"pan\", \"cookie sheet\", \"whisk\", \"spoon\"]"}
{"cat":"food","slot":"part","value":"pip","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the constitutive parts of pip.\";         A textual example of the semantic relation is \"can have pip\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['apple', 'pear', 'grape', 'cherry', 'plum', 'nectarine', 'apricot', 'peach', 'quince', 'pomegranate']"}
{"cat":"food","slot":"part","value":"stem","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the constitutive parts of stem.\";         A textual example of the semantic relation is \"can have stem\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['apple', 'banana', 'carrot', 'cucumber', 'grape', 'pear', 'potato', 'pumpkin', 'tomato']"}
{"cat":"food","slot":"part","value":"leaf","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the constitutive parts of leaf.\";         A textual example of the semantic relation is \"can have leaf\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['lettuce', 'spinach', 'cabbage', 'kale', 'collard greens', 'arugula', 'beet greens', 'swiss chard', 'turnip greens', 'mustard greens']"}
{"cat":"food","slot":"part","value":"pulp","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the constitutive parts of pulp.\";         A textual example of the semantic relation is \"can have pulp\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['grape', 'orange', 'lemon', 'apple', 'pear', 'grapefruit', 'mango', 'papaya', 'kiwi', 'guava']"}
{"cat":"food","slot":"part","value":"flesh","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the constitutive parts of flesh.\";         A textual example of the semantic relation is \"can have flesh\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"beef\", \"pork\", \"chicken\", \"turkey\", \"lamb\", \"duck\", \"goose\", \"venison\", \"salmon\", \"tuna\"]"}
{"cat":"food","slot":"part","value":"stalk","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the constitutive parts of stalk.\";         A textual example of the semantic relation is \"can have stalk\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['broccoli', 'asparagus', 'rhubarb', 'celery', 'fennel', 'leek', 'kale', 'brussels sprouts', 'cauliflower']"}
{"cat":"food","slot":"part","value":"core","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the constitutive parts of core.\";         A textual example of the semantic relation is \"can have core\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['apple', 'peach', 'grape', 'cherry', 'orange', 'kiwi', 'banana', 'mango', 'pear', 'plum']"}
{"cat":"food","slot":"part","value":"husk","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the constitutive parts of husk.\";         A textual example of the semantic relation is \"can have husk\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['corn', 'coconut', 'peanut', 'walnut', 'almond', 'hazelnut', 'pistachio', 'chestnut', 'acorn', 'pecan']"}
{"cat":"food","slot":"part","value":"skin","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the constitutive parts of skin.\";         A textual example of the semantic relation is \"can have skin\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['apple', 'pear', 'potato', 'onion', 'garlic', 'tomato', 'grape', 'watermelon', 'orange', 'banana']"}
{"cat":"food","slot":"part","value":"glucose","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the constitutive parts of glucose.\";         A textual example of the semantic relation is \"can have glucose\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['corn', 'rice', 'potato', 'wheat', 'barley', 'oats', 'cassava', 'sorghum', 'yam', 'sweet potato']"}
{"cat":"food","slot":"part","value":"fructose","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the constitutive parts of fructose.\";         A textual example of the semantic relation is \"can have fructose\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['apple', 'pear', 'watermelon', 'mango', 'grape', 'pineapple', 'banana', 'peach', 'plum', 'apricot']"}
{"cat":"food","slot":"part","value":"cabbage","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the constitutive parts of cabbage.\";         A textual example of the semantic relation is \"can have cabbage\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['cabbage', 'leaves', 'stem', 'head', 'core', 'outer leaves', 'inner leaves', 'vegetable', 'green', 'cruciferous']"}
{"cat":"food","slot":"part","value":"orange rind","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the constitutive parts of orange rind.\";         A textual example of the semantic relation is \"can have orange rind\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['orange', 'rind', 'peel', 'citrus', 'zest', 'fruit', 'skin', 'pith', 'bitter', 'aroma']"}
{"cat":"food","slot":"part","value":"orange peel","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the constitutive parts of orange peel.\";         A textual example of the semantic relation is \"can have orange peel\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['orange', 'peel', 'rind', 'zest', 'pith', 'fibers', 'oil', 'juice', 'citrus', 'fruit']"}
{"cat":"food","slot":"part","value":"tomato","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the constitutive parts of tomato.\";         A textual example of the semantic relation is \"can have tomato\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"tomato\", \"vegetable\", \"fruit\", \"salad\", \"sandwich\", \"pizza\", \"soup\", \"salsa\", \"ketchup\", \"pasta\"]"}
{"cat":"food","slot":"part","value":"jacket","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the constitutive parts of jacket.\";         A textual example of the semantic relation is \"can have jacket\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['potato', 'corn', 'beans', 'rice', 'meat', 'cheese', 'lettuce', 'tomato', 'onion', 'salsa']"}
{"cat":"food","slot":"part","value":"Zea mays rugosa","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the constitutive parts of Zea mays rugosa.\";         A textual example of the semantic relation is \"can have Zea mays rugosa\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['corn', 'kernel', 'cob', 'husk', 'starch', 'syrup', 'flour', 'oil', 'meal', 'sweeteners']"}
{"cat":"food","slot":"part","value":"cuke","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the constitutive parts of cuke.\";         A textual example of the semantic relation is \"can have cuke\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['cucumber', 'water', 'salt', 'vinegar', 'dill', 'garlic', 'onion', 'pepper', 'sugar', 'mustard']"}
{"cat":"food","slot":"part","value":"breadstuff","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the constitutive parts of breadstuff.\";         A textual example of the semantic relation is \"can have breadstuff\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['flour', 'yeast', 'salt', 'water', 'dough', 'bread', 'crust', 'crumb', 'loaf', 'bun']"}
{"cat":"food","slot":"part","value":"chou","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the constitutive parts of chou.\";         A textual example of the semantic relation is \"can have chou\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"cabbage\", \"pork\", \"shrimp\", \"mushroom\", \"carrot\", \"bean sprouts\", \"onion\", \"soy sauce\", \"vinegar\", \"sugar\"]"}
{"cat":"food","slot":"part","value":"onion","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the constitutive parts of onion.\";         A textual example of the semantic relation is \"can have onion\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['onion', 'bulb', 'skin', 'layers', 'core', 'root', 'stem', 'leaves', 'flavor', 'nutrition']"}
{"cat":"food","slot":"part","value":"isothiocyanate","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the constitutive parts of isothiocyanate.\";         A textual example of the semantic relation is \"can have isothiocyanate\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['broccoli', 'cabbage', 'cauliflower', 'horseradish', 'mustard', 'radish', 'rocket', 'turnip', 'watercress', 'wasabi']"}
{"cat":"food","slot":"part","value":"sugar corn","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the constitutive parts of sugar corn.\";         A textual example of the semantic relation is \"can have sugar corn\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['sugar', 'corn', 'sweet', 'candy', 'cane', 'syrup', 'sorghum', 'molasses', 'beet', 'starch']"}
{"cat":"food","slot":"part","value":"staff of life","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the constitutive parts of staff of life.\";         A textual example of the semantic relation is \"can have staff of life\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"wheat\", \"flour\", \"bread\", \"yeast\", \"grain\", \"corn\", \"rice\", \"oats\", \"barley\", \"millet\"]"}
{"cat":"food","slot":"part","value":"curd","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the constitutive parts of curd.\";         A textual example of the semantic relation is \"can have curd\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['milk', 'yogurt', 'cheese', 'butter', 'cream', 'curd', 'sour cream', 'cottage cheese', 'buttermilk', 'ghee']"}
{"cat":"food","slot":"part","value":"sweet corn plant","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the constitutive parts of sweet corn plant.\";         A textual example of the semantic relation is \"can have sweet corn plant\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['sweet corn', 'corn', 'maize', 'corn kernel', 'corn cob', 'corn silk', 'corn husk', 'corn stalk', 'corn ear', 'corn seed']"}
{"cat":"food","slot":"part","value":"cucumber","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the constitutive parts of cucumber.\";         A textual example of the semantic relation is \"can have cucumber\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['cucumber', 'seeds', 'skin', 'flesh', 'juice', 'stem', 'leaves', 'flowers', 'pollen', 'roots']"}
{"cat":"food","slot":"part","value":"shell","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the constitutive parts of shell.\";         A textual example of the semantic relation is \"can have shell\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['lobster', 'crab', 'shrimp', 'clams', 'oysters', 'mussels', 'scallops', 'abalone', 'conch', 'snails']"}
{"cat":"food","slot":"part","value":"dough","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the constitutive parts of dough.\";         A textual example of the semantic relation is \"can have dough\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['flour', 'water', 'yeast', 'salt', 'oil', 'egg', 'milk', 'butter', 'baking powder', 'sugar']"}
{"cat":"food","slot":"part","value":"tannin","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the constitutive parts of tannin.\";         A textual example of the semantic relation is \"can have tannin\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['tea', 'wine', 'cacao', 'pomegranate', 'oak', 'sorghum', 'barley', 'grape', 'hops', 'corn']"}
{"cat":"food","slot":"part","value":"Zea saccharata","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the constitutive parts of Zea saccharata.\";         A textual example of the semantic relation is \"can have Zea saccharata\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['corn', 'maize', 'kernels', 'husks', 'stalks', 'cobs', 'silk', 'tassels', 'pollen', 'endosperm']"}
{"cat":"food","slot":"part","value":"cheese rind","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the constitutive parts of cheese rind.\";         A textual example of the semantic relation is \"can have cheese rind\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['mold', 'bacteria', 'yeast', 'protein', 'fat', 'lactose', 'minerals', 'water', 'casein', 'calcium']"}
{"cat":"food","slot":"part","value":"spinach","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the constitutive parts of spinach.\";         A textual example of the semantic relation is \"can have spinach\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['spinach', 'leaf', 'stem', 'root', 'leafy green', 'vegetable', 'green vegetable', 'iron', 'nutrient', 'vitamin']"}
{"cat":"food","slot":"product","value":"sauce","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All types of entity that can be derived from sauce through its processing or through natural processes.\";         A textual example of the semantic relation is \"can produce sauce\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"tomato\", \"onion\", \"garlic\", \"basil\", \"oregano\", \"thyme\", \"rosemary\", \"parsley\", \"chili pepper\", \"ginger\"]"}
{"cat":"food","slot":"product","value":"cake","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All types of entity that can be derived from cake through its processing or through natural processes.\";         A textual example of the semantic relation is \"can produce cake\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['flour', 'egg', 'sugar', 'butter', 'baking powder', 'milk', 'chocolate', 'vanilla extract', 'frosting', 'icing']"}
{"cat":"food","slot":"product","value":"compote","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All types of entity that can be derived from compote through its processing or through natural processes.\";         A textual example of the semantic relation is \"can produce compote\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['apple', 'pear', 'peach', 'plum', 'cherry', 'strawberry', 'raspberry', 'blueberry', 'blackberry', 'apricot']"}
{"cat":"food","slot":"product","value":"syrup","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All types of entity that can be derived from syrup through its processing or through natural processes.\";         A textual example of the semantic relation is \"can produce syrup\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['maple', 'sugar', 'cane', 'corn', 'rice', 'sorghum', 'beet', 'agave', 'palm', 'coconut']"}
{"cat":"food","slot":"product","value":"juice","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All types of entity that can be derived from juice through its processing or through natural processes.\";         A textual example of the semantic relation is \"can produce juice\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['orange', 'apple', 'grape', 'lemon', 'pineapple', 'strawberry', 'banana', 'watermelon', 'mango', 'pomegranate']"}
{"cat":"food","slot":"product","value":"puree","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All types of entity that can be derived from puree through its processing or through natural processes.\";         A textual example of the semantic relation is \"can produce puree\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"apples\", \"pears\", \"carrots\", \"potatoes\", \"tomatoes\", \"peaches\", \"nectarines\", \"bananas\", \"avocados\", \"squash\"]"}
{"cat":"food","slot":"product","value":"whiskey","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All types of entity that can be derived from whiskey through its processing or through natural processes.\";         A textual example of the semantic relation is \"can produce whiskey\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['whiskey', 'bourbon', 'scotch', 'rye', 'corn', 'barley', 'malt', 'oak', 'peat', 'water']"}
{"cat":"food","slot":"product","value":"bioethanol","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All types of entity that can be derived from bioethanol through its processing or through natural processes.\";         A textual example of the semantic relation is \"can produce bioethanol\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['sugarcane', 'corn', 'barley', 'wheat', 'potatoes', 'cassava', 'sorghum', 'rice', 'apples', 'grapes']"}
{"cat":"food","slot":"product","value":"biodiesel","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All types of entity that can be derived from biodiesel through its processing or through natural processes.\";         A textual example of the semantic relation is \"can produce biodiesel\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"soybeans\", \"canola\", \"rapeseed\", \"sunflower\", \"palm\", \"waste vegetable oil\", \"animal fats\", \"algae\", \"jatropha\", \"camelina\"]"}
{"cat":"food","slot":"product","value":"cornflake","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All types of entity that can be derived from cornflake through its processing or through natural processes.\";         A textual example of the semantic relation is \"can produce cornflake\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['cornflake', 'corn', 'maize', 'flour', 'starch', 'syrup', 'malt', 'oil', 'meal', 'germ']"}
{"cat":"food","slot":"product","value":"biofuel","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All types of entity that can be derived from biofuel through its processing or through natural processes.\";         A textual example of the semantic relation is \"can produce biofuel\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"corn\", \"soybeans\", \"sugarcane\", \"rapeseed\", \"sunflower\", \"palm oil\", \"wheat\", \"barley\", \"potato\", \"algae\"]"}
{"cat":"food","slot":"product","value":"wine","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All types of entity that can be derived from wine through its processing or through natural processes.\";         A textual example of the semantic relation is \"can produce wine\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['wine', 'grape', 'raisin', 'vinegar', 'grape juice', 'must', 'brandy', 'port', 'sherry', 'champagne']"}
{"cat":"food","slot":"product","value":"cob","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All types of entity that can be derived from cob through its processing or through natural processes.\";         A textual example of the semantic relation is \"can produce cob\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"corn\", \"maize\", \"popcorn\", \"cornmeal\", \"cornstarch\", \"corn syrup\", \"hominy\", \"tortilla\", \"polenta\", \"grits\"]"}
{"cat":"food","slot":"product","value":"pancake","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All types of entity that can be derived from pancake through its processing or through natural processes.\";         A textual example of the semantic relation is \"can produce pancake\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['flour', 'egg', 'milk', 'sugar', 'butter', 'maple syrup', 'berries', 'whipped cream', 'chocolate chips', 'bacon']"}
{"cat":"food","slot":"product","value":"crumb","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All types of entity that can be derived from crumb through its processing or through natural processes.\";         A textual example of the semantic relation is \"can produce crumb\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['bread', 'cake', 'cookie', 'pie', 'pizza', 'muffin', 'scone', 'croissant', 'roll', 'biscuit']"}
{"cat":"food","slot":"product","value":"chowder","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All types of entity that can be derived from chowder through its processing or through natural processes.\";         A textual example of the semantic relation is \"can produce chowder\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['clam', 'potato', 'corn', 'bacon', 'onion', 'cream', 'milk', 'flour', 'butter', 'salt']"}
{"cat":"food","slot":"product","value":"gluten","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All types of entity that can be derived from gluten through its processing or through natural processes.\";         A textual example of the semantic relation is \"can produce gluten\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"wheat\", \"rye\", \"barley\", \"oats\", \"bread\", \"pasta\", \"cereal\", \"beer\", \"baking\", \"flour\"]"}
{"cat":"food","slot":"product","value":"tortilla","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All types of entity that can be derived from tortilla through its processing or through natural processes.\";         A textual example of the semantic relation is \"can produce tortilla\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['tortilla', 'corn tortilla', 'flour tortilla', 'tortilla chip', 'tortilla soup', 'tortilla wrap', 'tortilla salad', 'tortilla pizza', 'tortilla casserole', 'tortilla omelette']"}
{"cat":"food","slot":"product","value":"pie","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All types of entity that can be derived from pie through its processing or through natural processes.\";         A textual example of the semantic relation is \"can produce pie\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['pie', 'crust', 'filling', 'dough', 'pastry', 'fruit', 'meat', 'vegetable', 'cheese', 'gravy']"}
{"cat":"food","slot":"colorPattern","value":"yellow","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the features that refer to the color or texture of yellow.\";         A textual example of the semantic relation is \"can be yellow\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"banana\", \"corn\", \"curry\", \"lemon\", \"maize\", \"mustard\", \"pineapple\", \"squash\", \"turmeric\"]"}
{"cat":"food","slot":"colorPattern","value":"yellow","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the features that refer to the color or texture of yellow.\";         A textual example of the semantic relation is \"can be yellow\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"banana\", \"corn\", \"curry\", \"lemon\", \"maize\", \"mustard\", \"pineapple\", \"squash\", \"turmeric\"]"}
{"cat":"food","slot":"colorPattern","value":"red","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the features that refer to the color or texture of red.\";         A textual example of the semantic relation is \"can be red\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['tomato', 'strawberry', 'beet', 'cherry', 'raspberry', 'red pepper', 'red onion', 'red wine', 'red velvet cake', 'red cabbage']"}
{"cat":"food","slot":"colorPattern","value":"orange","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the features that refer to the color or texture of orange.\";         A textual example of the semantic relation is \"can be orange\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['carrot', 'pumpkin', 'orange', 'butternut squash', 'sweet potato', 'cantaloupe', 'persimmon', 'apricot', 'mango', 'peach']"}
{"cat":"food","slot":"colorPattern","value":"orange","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the features that refer to the color or texture of orange.\";         A textual example of the semantic relation is \"can be orange\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['carrot', 'pumpkin', 'orange', 'butternut squash', 'sweet potato', 'cantaloupe', 'persimmon', 'apricot', 'mango', 'peach']"}
{"cat":"food","slot":"colorPattern","value":"yellowish","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the features that refer to the color or texture of yellowish.\";         A textual example of the semantic relation is \"can be yellowish\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"banana\", \"lemon\", \"corn\", \"curry\", \"honey\", \"mustard\", \"squash\", \"cheese\", \"butter\", \"egg yolk\"]"}
{"cat":"food","slot":"colorPattern","value":"green","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the features that refer to the color or texture of green.\";         A textual example of the semantic relation is \"can be green\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['avocado', 'broccoli', 'cucumber', 'lettuce', 'peas', 'spinach', 'zucchini', 'kiwi', 'green apple']"}
{"cat":"food","slot":"colorPattern","value":"yellowish","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the features that refer to the color or texture of yellowish.\";         A textual example of the semantic relation is \"can be yellowish\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"banana\", \"lemon\", \"corn\", \"curry\", \"honey\", \"mustard\", \"squash\", \"cheese\", \"butter\", \"egg yolk\"]"}
{"cat":"food","slot":"colorPattern","value":"brown","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the features that refer to the color or texture of brown.\";         A textual example of the semantic relation is \"can be brown\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['chocolate', 'coffee', 'cocoa', 'caramel', 'brown sugar', 'cinnamon', 'mocha', 'hazelnut', 'ginger', 'pecan']"}
{"cat":"food","slot":"colorPattern","value":"brown","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the features that refer to the color or texture of brown.\";         A textual example of the semantic relation is \"can be brown\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['chocolate', 'coffee', 'cocoa', 'caramel', 'brown sugar', 'cinnamon', 'mocha', 'hazelnut', 'ginger', 'pecan']"}
{"cat":"food","slot":"colorPattern","value":"white","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the features that refer to the color or texture of white.\";         A textual example of the semantic relation is \"can be white\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['potato', 'rice', 'bread', 'cheese', 'milk', 'flour', 'sugar', 'egg', 'cream', 'yogurt']"}
{"cat":"food","slot":"colorPattern","value":"white","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the features that refer to the color or texture of white.\";         A textual example of the semantic relation is \"can be white\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['potato', 'rice', 'bread', 'cheese', 'milk', 'flour', 'sugar', 'egg', 'cream', 'yogurt']"}
{"cat":"food","slot":"colorPattern","value":"green","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the features that refer to the color or texture of green.\";         A textual example of the semantic relation is \"can be green\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['avocado', 'broccoli', 'cucumber', 'lettuce', 'peas', 'spinach', 'zucchini', 'kiwi', 'green apple']"}
{"cat":"food","slot":"colorPattern","value":"red","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the features that refer to the color or texture of red.\";         A textual example of the semantic relation is \"can be red\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['tomato', 'strawberry', 'beet', 'cherry', 'raspberry', 'red pepper', 'red onion', 'red wine', 'red velvet cake', 'red cabbage']"}
{"cat":"food","slot":"colorPattern","value":"rose","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the features that refer to the color or texture of rose.\";         A textual example of the semantic relation is \"can be rose\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['strawberry', 'raspberry', 'cherry', 'watermelon', 'peach', 'salmon', 'beetroot', 'cranberry', 'pink grapefruit', 'rosehip']"}
{"cat":"food","slot":"colorPattern","value":"glossy","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the features that refer to the color or texture of glossy.\";         A textual example of the semantic relation is \"can be glossy\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['candies', 'fruit', 'sauce', 'jelly', 'honey', 'syrup', 'oil', 'wax', 'jam', 'glaze']"}
{"cat":"food","slot":"colorPattern","value":"shiny","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the features that refer to the color or texture of shiny.\";         A textual example of the semantic relation is \"can be shiny\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['glazed', 'polished', 'glossy', 'lustrous', 'satin', 'burnished', 'mirrored', 'reflective', 'shimmering', 'glittering']"}
{"cat":"food","slot":"colorPattern","value":"pink","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the features that refer to the color or texture of pink.\";         A textual example of the semantic relation is \"can be pink\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['salmon', 'flamingo', 'strawberry', 'raspberry', 'coral', 'blush', 'rose', 'peach', 'cherry', 'bubblegum']"}
{"cat":"food","slot":"colorPattern","value":"pink","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the features that refer to the color or texture of pink.\";         A textual example of the semantic relation is \"can be pink\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['salmon', 'flamingo', 'strawberry', 'raspberry', 'coral', 'blush', 'rose', 'peach', 'cherry', 'bubblegum']"}
{"cat":"food","slot":"place","value":"supermarket","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the entities in which supermarket can be experienced, found or perceived.\";         A textual example of the semantic relation is \"can be found or used in supermarkets\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['bread', 'milk', 'cheese', 'eggs', 'apples', 'bananas', 'potatoes', 'rice', 'pasta', 'chocolate']"}
{"cat":"food","slot":"place","value":"Britain","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the entities in which Britain can be experienced, found or perceived.\";         A textual example of the semantic relation is \"can be found or used in Britains\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['fish and chips', 'scones', 'bangers and mash', 'roast beef', 'shepherds pie', 'yorkshire pudding', 'english breakfast', 'afternoon tea', 'haggis', 'full english breakfast']"}
{"cat":"food","slot":"place","value":"USA","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the entities in which USA can be experienced, found or perceived.\";         A textual example of the semantic relation is \"can be found or used in USAs\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['pizza', 'hamburger', 'hot dog', 'french fries', 'cheeseburger', 'apple pie', 'donut', 'barbecue', 'chili', 'taco']"}
{"cat":"food","slot":"place","value":"field","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the entities in which field can be experienced, found or perceived.\";         A textual example of the semantic relation is \"can be found or used in fields\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['pizza', 'hamburger', 'sushi', 'taco', 'pasta', 'curry', 'salad', 'soup', 'stew']"}
{"cat":"food","slot":"place","value":"underground","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the entities in which underground can be experienced, found or perceived.\";         A textual example of the semantic relation is \"can be found or used in undergrounds\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"mushroom\", \"potato\", \"carrot\", \"onion\", \"garlic\", \"radish\", \"beetroot\", \"turnip\", \"parsnip\", \"rutabaga\"]"}
{"cat":"food","slot":"place","value":"France","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the entities in which France can be experienced, found or perceived.\";         A textual example of the semantic relation is \"can be found or used in Frances\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['baguette', 'croissant', 'escargot', 'foie gras', 'cr\u00e8me br\u00fbl\u00e9e', 'ratatouille', 'moules marini\u00e8res', 'coq au vin', 'pain au chocolat', 'cr\u00eape']"}
{"cat":"food","slot":"place","value":"restaurant","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the entities in which restaurant can be experienced, found or perceived.\";         A textual example of the semantic relation is \"can be found or used in restaurants\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['pizza', 'steak', 'salad', 'soup', 'burger', 'fries', 'sushi', 'pasta', 'dessert']"}
{"cat":"food","slot":"place","value":"garden","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the entities in which garden can be experienced, found or perceived.\";         A textual example of the semantic relation is \"can be found or used in gardens\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"vegetable\", \"fruit\", \"herb\", \"tomato\", \"lettuce\", \"carrot\", \"cucumber\", \"pepper\", \"onion\", \"potato\"]"}
{"cat":"food","slot":"place","value":"grocery","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the entities in which grocery can be experienced, found or perceived.\";         A textual example of the semantic relation is \"can be found or used in groceries\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['apples', 'milk', 'bread', 'eggs', 'cheese', 'vegetables', 'fruits', 'meat', 'pasta', 'rice']"}
{"cat":"food","slot":"place","value":"plantation","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the entities in which plantation can be experienced, found or perceived.\";         A textual example of the semantic relation is \"can be found or used in plantations\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['banana', 'coffee', 'cocoa', 'tea', 'rubber', 'sugarcane', 'pineapple', 'cotton', 'tobacco', 'palm oil']"}
{"cat":"food","slot":"place","value":"bar","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the entities in which bar can be experienced, found or perceived.\";         A textual example of the semantic relation is \"can be found or used in bars\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['beer', 'cocktail', 'whiskey', 'vodka', 'wine', 'shot', 'martini', 'margarita', 'sangria', 'rum']"}
{"cat":"food","slot":"place","value":"tree","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the entities in which tree can be experienced, found or perceived.\";         A textual example of the semantic relation is \"can be found or used in trees\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['apple', 'pear', 'cherry', 'walnut', 'acorn', 'pine cone', 'maple syrup', 'fig', 'dates', 'mango']"}
{"cat":"food","slot":"place","value":"vineyard","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the entities in which vineyard can be experienced, found or perceived.\";         A textual example of the semantic relation is \"can be found or used in vineyards\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"grape\", \"wine\", \"vine\", \"harvest\", \"vintage\", \"barrel\", \"press\", \"fermentation\", \"tasting\", \"tour\"]"}
{"cat":"food","slot":"place","value":"shop","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the entities in which shop can be experienced, found or perceived.\";         A textual example of the semantic relation is \"can be found or used in shops\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['bread', 'milk', 'cheese', 'meat', 'vegetables', 'fruits', 'candy', 'soda', 'chips', 'ice cream']"}
{"cat":"food","slot":"place","value":"bakery","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the entities in which bakery can be experienced, found or perceived.\";         A textual example of the semantic relation is \"can be found or used in bakeries\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"bread\", \"cake\", \"pastry\", \"cookie\", \"donut\", \"croissant\", \"muffin\", \"bun\", \"bagel\", \"loaf\"]"}
{"cat":"food","slot":"place","value":"store","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the entities in which store can be experienced, found or perceived.\";         A textual example of the semantic relation is \"can be found or used in stores\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['bread', 'milk', 'cheese', 'apples', 'bananas', 'potatoes', 'carrots', 'chicken', 'beef', 'pork']"}
{"cat":"food","slot":"part","value":"seed","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the constitutive parts of seed.\";         A textual example of the semantic relation is \"can have seed\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['cucumber', 'grape', 'watermelon', 'apple', 'peach', 'cherry', 'orange', 'banana', 'pear', 'strawberry']"}
{"cat":"food","slot":"user","value":"fruiterer","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the kinds of living beings which are able to operate, employ, interact with or perceive fruiterer.\";         A textual example of the semantic relation is \"are used by fruiterers\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['bananas', 'apples', 'oranges', 'grapes', 'pears', 'kiwis', 'melons', 'berries', 'mangoes', 'papayas']"}
{"cat":"food","slot":"user","value":"greengrocer","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the kinds of living beings which are able to operate, employ, interact with or perceive greengrocer.\";         A textual example of the semantic relation is \"are used by greengrocers\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['apple', 'banana', 'carrot', 'potato', 'onion', 'tomato', 'cucumber', 'lettuce', 'pepper', 'garlic']"}
{"cat":"food","slot":"part","value":"root","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the constitutive parts of root.\";         A textual example of the semantic relation is \"can have root\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['carrot', 'potato', 'onion', 'ginger', 'radish', 'parsnip', 'turnip', 'beetroot', 'daikon', 'rutabaga']"}
{"cat":"food","slot":"product","value":"cider","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All types of entity that can be derived from cider through its processing or through natural processes.\";         A textual example of the semantic relation is \"can produce cider\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['apple', 'pear', 'grape', 'strawberry', 'raspberry', 'blackberry', 'cherry', 'plum', 'apricot', 'quince']"}
{"cat":"food","slot":"material","value":"flour","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Material of which flour is composed.\";         A textual example of the semantic relation is \"can be made of flour\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['wheat', 'corn', 'rice', 'barley', 'rye', 'buckwheat', 'quinoa', 'soybean', 'millet', 'teff']"}
{"cat":"food","slot":"material","value":"fruit","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Material of which fruit is composed.\";         A textual example of the semantic relation is \"can be made of fruit\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['apple', 'banana', 'cherry', 'grape', 'kiwi', 'lemon', 'mango', 'orange', 'pear', 'strawberry']"}
{"cat":"food","slot":"place","value":"orchard","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the entities in which orchard can be experienced, found or perceived.\";         A textual example of the semantic relation is \"can be found or used in orchards\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['apple', 'pear', 'cherry', 'plum', 'apricot', 'fig', 'grape', 'kiwi', 'orange', 'peach']"}
{"cat":"food","slot":"product","value":"popcorn","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All types of entity that can be derived from popcorn through its processing or through natural processes.\";         A textual example of the semantic relation is \"can produce popcorn\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"popcorn\", \"corn\", \"maize\", \"kernel\", \"flour\", \"starch\", \"oil\", \"syrup\", \"sugar\", \"butter\"]"}
{"cat":"food","slot":"accessory","value":"rice","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All those objects that may have to do with rice. The constraint is that there must be a physical contact and that the use of such object is strictly necessary for rice.\";         A textual example of the semantic relation is \"are related with rice\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['rice cooker', 'rice paddle', 'rice bowl', 'rice mill', 'rice steamer', 'rice sieve', 'rice spoon', 'rice pot', 'rice scoop', 'rice strainer']"}
{"cat":"food","slot":"accessory","value":"cooler","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All those objects that may have to do with cooler. The constraint is that there must be a physical contact and that the use of such object is strictly necessary for cooler.\";         A textual example of the semantic relation is \"are related with cooler\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['ice', 'cold', 'drink', 'frozen', 'refrigerator', 'cool', 'chilled', 'freezer', 'beverage', 'frozen food']"}
{"cat":"food","slot":"accessory","value":"bottle","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All those objects that may have to do with bottle. The constraint is that there must be a physical contact and that the use of such object is strictly necessary for bottle.\";         A textual example of the semantic relation is \"are related with bottle\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['wine', 'beer', 'soda', 'juice', 'milk', 'oil', 'vinegar', 'honey', 'soy sauce', 'maple syrup']"}
{"cat":"food","slot":"accessory","value":"cellar","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All those objects that may have to do with cellar. The constraint is that there must be a physical contact and that the use of such object is strictly necessary for cellar.\";         A textual example of the semantic relation is \"are related with cellar\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['wine', 'barrel', 'cork', 'bottle', 'cheese', 'cured meat', 'pickle', 'jam', 'honey', 'mushroom']"}
{"cat":"food","slot":"accessory","value":"burger","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All those objects that may have to do with burger. The constraint is that there must be a physical contact and that the use of such object is strictly necessary for burger.\";         A textual example of the semantic relation is \"are related with burger\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"bun\", \"lettuce\", \"tomato\", \"cheese\", \"pickle\", \"onion\", \"ketchup\", \"mustard\", \"mayonnaise\", \"meat\"]"}
{"cat":"food","slot":"accessory","value":"glass","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All those objects that may have to do with glass. The constraint is that there must be a physical contact and that the use of such object is strictly necessary for glass.\";         A textual example of the semantic relation is \"are related with glass\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"glass\", \"bottle\", \"cup\", \"window\", \"mirror\", \"lens\", \"vase\", \"dish\", \"bowl\", \"tumbler\"]"}
{"cat":"food","slot":"colorPattern","value":"rose","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the features that refer to the color or texture of rose.\";         A textual example of the semantic relation is \"can be rose\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['strawberry', 'raspberry', 'cherry', 'watermelon', 'peach', 'salmon', 'beetroot', 'cranberry', 'pink grapefruit', 'rosehip']"}
{"cat":"food","slot":"product","value":"pastry","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All types of entity that can be derived from pastry through its processing or through natural processes.\";         A textual example of the semantic relation is \"can produce pastry\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"bread\", \"cake\", \"cookie\", \"pie\", \"tart\", \"strudel\", \"puff pastry\", \"filo\", \"shortcrust pastry\", \"choux pastry\"]"}
{"cat":"food","slot":"product","value":"sandwich","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All types of entity that can be derived from sandwich through its processing or through natural processes.\";         A textual example of the semantic relation is \"can produce sandwich\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['bread', 'meat', 'cheese', 'vegetables', 'spreads', 'condiments', 'fruit', 'nuts', 'seeds', 'grains']"}
{"cat":"food","slot":"product","value":"salad","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All types of entity that can be derived from salad through its processing or through natural processes.\";         A textual example of the semantic relation is \"can produce salad\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['lettuce', 'cucumber', 'tomato', 'onion', 'carrot', 'olive', 'cheese', 'dressing', 'crouton', 'vegetable']"}
{"cat":"food","slot":"product","value":"flour","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All types of entity that can be derived from flour through its processing or through natural processes.\";         A textual example of the semantic relation is \"can produce flour\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"bread\", \"pasta\", \"pizza\", \"cakes\", \"cookies\", \"tortillas\", \"noodles\", \"pancakes\", \"muffins\", \"doughnuts\"]"}
{"cat":"food","slot":"product","value":"soup","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All types of entity that can be derived from soup through its processing or through natural processes.\";         A textual example of the semantic relation is \"can produce soup\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['broth', 'consomme', 'stock', 'gazpacho', 'bisque', 'chowder', 'cream soup', 'puree', 'clear soup', 'veloute']"}
{"cat":"food","slot":"product","value":"vinegar","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All types of entity that can be derived from vinegar through its processing or through natural processes.\";         A textual example of the semantic relation is \"can produce vinegar\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['wine', 'balsamic', 'apple', 'rice', 'malt', 'sherry', 'white', 'red', 'cider']"}
{"cat":"food","slot":"consistency","value":"sweet","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the entries with which the noticeable to the touch consistency or texture of sweet can be described.\";         A textual example of the semantic relation is \"can be sweet\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"cake\", \"candy\", \"chocolate\", \"cookie\", \"cotton candy\", \"donut\", \"fudge\", \"ice cream\", \"pie\", \"tart\"]"}
{"cat":"food","slot":"accessory","value":"soup","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All those objects that may have to do with soup. The constraint is that there must be a physical contact and that the use of such object is strictly necessary for soup.\";         A textual example of the semantic relation is \"are related with soup\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['spoon', 'bowl', 'ladle', 'stove', 'pot', 'ingredients', 'recipe', 'cook', 'kitchen', 'table']"}
{"cat":"food","slot":"accessory","value":"pasta","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All those objects that may have to do with pasta. The constraint is that there must be a physical contact and that the use of such object is strictly necessary for pasta.\";         A textual example of the semantic relation is \"are related with pasta\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['pasta', 'spaghetti', 'noodles', 'sauce', 'fork', 'spoon', 'cheese', 'garlic', 'olive oil', 'basil']"}
{"cat":"food","slot":"accessory","value":"bread","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All those objects that may have to do with bread. The constraint is that there must be a physical contact and that the use of such object is strictly necessary for bread.\";         A textual example of the semantic relation is \"are related with bread\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['bread', 'bread knife', 'bread basket', 'bread box', 'bread slicer', 'bread pan', 'bread crumbs', 'bread roll', 'bread flour', 'bread toaster']"}
{"cat":"food","slot":"accessory","value":"corn","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All those objects that may have to do with corn. The constraint is that there must be a physical contact and that the use of such object is strictly necessary for corn.\";         A textual example of the semantic relation is \"are related with corn\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"cornstarch\", \"cornmeal\", \"cornbread\", \"cornflakes\", \"cornsyrup\", \"cornchip\", \"cornonthacob\", \"cornsalad\", \"cornsoup\", \"cornpone\"]"}
{"cat":"food","slot":"accessory","value":"grape","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All those objects that may have to do with grape. The constraint is that there must be a physical contact and that the use of such object is strictly necessary for grape.\";         A textual example of the semantic relation is \"are related with grape\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['grape', 'wine', 'raisin', 'grapefruit', 'jelly', 'juice', 'vineyard', 'vine', 'harvest', 'vine']"}
{"cat":"food","slot":"accessory","value":"vinegar","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All those objects that may have to do with vinegar. The constraint is that there must be a physical contact and that the use of such object is strictly necessary for vinegar.\";         A textual example of the semantic relation is \"are related with vinegar\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"salad\", \"dressing\", \"pickles\", \"sushi\", \"sauce\", \"marinade\", \"dip\", \"chips\", \"coleslaw\", \"vinaigrette\"]"}
{"cat":"food","slot":"accessory","value":"maize","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All those objects that may have to do with maize. The constraint is that there must be a physical contact and that the use of such object is strictly necessary for maize.\";         A textual example of the semantic relation is \"are related with maize\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['corn', 'maize', 'cornmeal', 'tortilla', 'cornbread', 'popcorn', 'cornstarch', 'hominy', 'cornflakes', 'cornsyrup']"}
{"cat":"food","slot":"accessory","value":"dish","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All those objects that may have to do with dish. The constraint is that there must be a physical contact and that the use of such object is strictly necessary for dish.\";         A textual example of the semantic relation is \"are related with dish\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['spoon', 'fork', 'knife', 'plate', 'bowl', 'chopsticks', 'ladle', 'tongs', 'grater', 'peeler']"}
{"cat":"food","slot":"howToUse","value":"cook","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the actions or states required to operate, employ, interact with or perceive the existence of cook.\";         A textual example of the semantic relation is \"can be used for cook\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['oven', 'stove', 'microwave', 'grill', 'pan', 'pot', 'spatula', 'knife', 'whisk', 'mixing bowl']"}
{"cat":"food","slot":"howToUse","value":"cut","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the actions or states required to operate, employ, interact with or perceive the existence of cut.\";         A textual example of the semantic relation is \"can be used for cut\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"knife\", \"scissors\", \"axe\", \"saw\", \"razor\", \"chisel\", \"shears\", \"blade\", \"hatchet\", \"cleaver\"]"}
{"cat":"food","slot":"howToUse","value":"eat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the actions or states required to operate, employ, interact with or perceive the existence of eat.\";         A textual example of the semantic relation is \"can be used for eat\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"apple\", \"bread\", \"cake\", \"cheese\", \"chicken\", \"coffee\", \"egg\", \"ice cream\", \"pizza\", \"steak\"]"}
{"cat":"food","slot":"howToUse","value":"boil","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the actions or states required to operate, employ, interact with or perceive the existence of boil.\";         A textual example of the semantic relation is \"can be used for boil\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['water', 'pot', 'stove', 'heat', 'cook', 'steam', 'ingredients', 'temperature', 'time']"}
{"cat":"food","slot":"howToUse","value":"stew","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the actions or states required to operate, employ, interact with or perceive the existence of stew.\";         A textual example of the semantic relation is \"can be used for stew\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['beef', 'onion', 'carrot', 'potato', 'tomato', 'garlic', 'thyme', 'bay leaf', 'flour', 'water']"}
{"cat":"food","slot":"howToUse","value":"harvest","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the actions or states required to operate, employ, interact with or perceive the existence of harvest.\";         A textual example of the semantic relation is \"can be used for harvest\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['scythe', 'combine', 'tractor', 'harvester', 'sickle', 'thresher', 'grain cart', 'baler', 'plow', 'seeder']"}
{"cat":"food","slot":"howToUse","value":"slice","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the actions or states required to operate, employ, interact with or perceive the existence of slice.\";         A textual example of the semantic relation is \"can be used for slice\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['knife', 'pizza', 'bread', 'cheese', 'cucumber', 'tomato', 'ham', 'loaf', 'apple', 'potato']"}
{"cat":"food","slot":"howToUse","value":"dry","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the actions or states required to operate, employ, interact with or perceive the existence of dry.\";         A textual example of the semantic relation is \"can be used for dry\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"bake\", \"roast\", \"toast\", \"grill\", \"fry\", \"saute\", \"sear\", \"broil\", \"dehydrate\", \"air-dry\"]"}
{"cat":"food","slot":"howToUse","value":"pick","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the actions or states required to operate, employ, interact with or perceive the existence of pick.\";         A textual example of the semantic relation is \"can be used for pick\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['slice', 'cut', 'chop', 'dice', 'peel', 'grate', 'shred', 'mince', 'mash', 'crush']"}
{"cat":"food","slot":"howToUse","value":"bake","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the actions or states required to operate, employ, interact with or perceive the existence of bake.\";         A textual example of the semantic relation is \"can be used for bake\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['oven', 'baking sheet', 'mixing bowl', 'rolling pin', 'baking powder', 'flour', 'sugar', 'butter', 'eggs', 'recipe']"}
{"cat":"food","slot":"howToUse","value":"harvest","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the actions or states required to operate, employ, interact with or perceive the existence of harvest.\";         A textual example of the semantic relation is \"can be used for harvest\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['scythe', 'combine', 'tractor', 'harvester', 'sickle', 'thresher', 'grain cart', 'baler', 'plow', 'seeder']"}
{"cat":"food","slot":"howToUse","value":"roast","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the actions or states required to operate, employ, interact with or perceive the existence of roast.\";         A textual example of the semantic relation is \"can be used for roast\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"oven\", \"pan\", \"spit\", \"oven mitts\", \"knife\", \"fork\", \"carving board\", \"seasonings\", \"thermometer\", \"timer\"]"}
{"cat":"food","slot":"howToUse","value":"wash","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the actions or states required to operate, employ, interact with or perceive the existence of wash.\";         A textual example of the semantic relation is \"can be used for wash\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"detergent\", \"soap\", \"shampoo\", \"conditioner\", \"body wash\", \"bubble bath\", \"hand soap\", \"dish soap\", \"laundry detergent\", \"bleach\"]"}
{"cat":"food","slot":"howToUse","value":"press","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the actions or states required to operate, employ, interact with or perceive the existence of press.\";         A textual example of the semantic relation is \"can be used for press\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"apple\", \"orange\", \"banana\", \"pear\", \"grape\", \"kiwi\", \"strawberry\", \"blueberry\", \"raspberry\", \"cherry\"]"}
{"cat":"food","slot":"howToUse","value":"grow","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the actions or states required to operate, employ, interact with or perceive the existence of grow.\";         A textual example of the semantic relation is \"can be used for grow\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['soil', 'water', 'sunlight', 'nutrients', 'fertilizer', 'seed', 'plant', 'garden', 'greenhouse', 'farm']"}
{"cat":"food","slot":"howToUse","value":"steam","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the actions or states required to operate, employ, interact with or perceive the existence of steam.\";         A textual example of the semantic relation is \"can be used for steam\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"kettle\", \"steamer\", \"teapot\", \"pressure cooker\", \"sauna\", \"whistle\", \"valve\", \"radiator\", \"boiler\", \"humidifier\"]"}
{"cat":"food","slot":"howToUse","value":"fry","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the actions or states required to operate, employ, interact with or perceive the existence of fry.\";         A textual example of the semantic relation is \"can be used for fry\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['oil', 'pan', 'stove', 'spatula', 'potato', 'onion', 'batter', 'flour', 'cheese', 'meat']"}
{"cat":"food","slot":"howToUse","value":"peel","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the actions or states required to operate, employ, interact with or perceive the existence of peel.\";         A textual example of the semantic relation is \"can be used for peel\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['banana', 'orange', 'apple', 'grapefruit', 'kiwi', 'mango', 'potato', 'carrot', 'onion']"}
{"cat":"food","slot":"howToUse","value":"spiced","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the actions or states required to operate, employ, interact with or perceive the existence of spiced.\";         A textual example of the semantic relation is \"can be used for spiced\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"cumin\", \"curry\", \"turmeric\", \"paprika\", \"ginger\", \"garlic\", \"chili\", \"coriander\", \"cinnamon\", \"cloves\"]"}
{"cat":"food","slot":"howToUse","value":"braise","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the actions or states required to operate, employ, interact with or perceive the existence of braise.\";         A textual example of the semantic relation is \"can be used for braise\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['beef', 'chicken', 'pork', 'vegetables', 'tomatoes', 'onions', 'carrots', 'potatoes', 'garlic']"}
{"cat":"food","slot":"howToUse","value":"knead","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the actions or states required to operate, employ, interact with or perceive the existence of knead.\";         A textual example of the semantic relation is \"can be used for knead\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['dough', 'bread', 'flour', 'pastry', 'pizza', 'pasta', 'cookie', 'biscuit', 'pie', 'cake']"}
{"cat":"food","slot":"howToUse","value":"caramelize","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the actions or states required to operate, employ, interact with or perceive the existence of caramelize.\";         A textual example of the semantic relation is \"can be used for caramelize\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['sugar', 'heat', 'pan', 'stir', 'patience', 'sauce', 'recipe', 'cook', 'technique', 'sweetness']"}
{"cat":"food","slot":"howToUse","value":"grind","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the actions or states required to operate, employ, interact with or perceive the existence of grind.\";         A textual example of the semantic relation is \"can be used for grind\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"coffee\", \"sugar\", \"salt\", \"pepper\", \"grains\", \"beans\", \"spices\", \"garlic\", \"ginger\", \"nuts\"]"}
{"cat":"food","slot":"howToUse","value":"cream","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the actions or states required to operate, employ, interact with or perceive the existence of cream.\";         A textual example of the semantic relation is \"can be used for cream\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"whip\", \"churn\", \"stir\", \"mix\", \"blend\", \"fold\", \"beat\", \"combine\", \"dissolve\", \"emulsify\"]"}
{"cat":"food","slot":"howToUse","value":"glaze","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the actions or states required to operate, employ, interact with or perceive the existence of glaze.\";         A textual example of the semantic relation is \"can be used for glaze\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"honey\", \"sugar\", \"lemon\", \"orange\", \"apple\", \"strawberry\", \"raspberry\", \"blueberry\", \"blackberry\", \"cherry\"]"}
{"cat":"food","slot":"howToUse","value":"dip","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the actions or states required to operate, employ, interact with or perceive the existence of dip.\";         A textual example of the semantic relation is \"can be used for dip\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['salsa', 'hummus', 'guacamole', 'yogurt', 'tahini', 'sour cream', 'ranch dressing', 'honey', 'peanut butter', 'pesto']"}
{"cat":"food","slot":"howToUse","value":"break","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the actions or states required to operate, employ, interact with or perceive the existence of break.\";         A textual example of the semantic relation is \"can be used for break\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"bread\", \"butter\", \"jam\", \"tea\", \"coffee\", \"milk\", \"cereal\", \"fruit\", \"yogurt\", \"eggs\"]"}
{"cat":"food","slot":"howToUse","value":"cultivate","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the actions or states required to operate, employ, interact with or perceive the existence of cultivate.\";         A textual example of the semantic relation is \"can be used for cultivate\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"tractor\", \"hoe\", \"seeds\", \"fertilizer\", \"water\", \"sunlight\", \"greenhouse\", \"pruning shears\", \"gloves\", \"spade\"]"}
{"cat":"food","slot":"howToUse","value":"melt","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the actions or states required to operate, employ, interact with or perceive the existence of melt.\";         A textual example of the semantic relation is \"can be used for melt\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['chocolate', 'butter', 'cheese', 'wax', 'ice', 'metal', 'snow', 'fat', 'candle', 'sugar']"}
{"cat":"food","slot":"howToUse","value":"sprout","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the actions or states required to operate, employ, interact with or perceive the existence of sprout.\";         A textual example of the semantic relation is \"can be used for sprout\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['seed', 'water', 'soil', 'container', 'light', 'air', 'temperature', 'humidity', 'nutrients', 'time']"}
{"cat":"food","slot":"howToUse","value":"chop","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the actions or states required to operate, employ, interact with or perceive the existence of chop.\";         A textual example of the semantic relation is \"can be used for chop\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"knife\", \"cleaver\", \"axe\", \"machete\", \"hatchet\", \"sword\", \"scissors\", \"hatchet\", \"blade\", \"saw\"]"}
{"cat":"food","slot":"howToUse","value":"steam","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the actions or states required to operate, employ, interact with or perceive the existence of steam.\";         A textual example of the semantic relation is \"can be used for steam\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"kettle\", \"steamer\", \"teapot\", \"pressure cooker\", \"sauna\", \"whistle\", \"valve\", \"radiator\", \"boiler\", \"humidifier\"]"}
{"cat":"food","slot":"howToUse","value":"taste","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the actions or states required to operate, employ, interact with or perceive the existence of taste.\";         A textual example of the semantic relation is \"can be used for taste\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['savor', 'enjoy', 'taste', 'flavor', 'delicious', 'sweet', 'sour', 'bitter', 'salty', 'spicy']"}
{"cat":"food","slot":"howToUse","value":"leaven","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the actions or states required to operate, employ, interact with or perceive the existence of leaven.\";         A textual example of the semantic relation is \"can be used for leaven\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"yeast\", \"baking soda\", \"baking powder\", \"sourdough starter\", \"potato\", \"rice\", \"corn\", \"wheat\", \"barley\", \"oats\"]"}
{"cat":"food","slot":"howToUse","value":"crumble","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the actions or states required to operate, employ, interact with or perceive the existence of crumble.\";         A textual example of the semantic relation is \"can be used for crumble\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"apples\", \"pears\", \"rhubarb\", \"strawberries\", \"blueberries\", \"blackberries\", \"raspberries\", \"cherries\", \"plums\", \"apricots\"]"}
{"cat":"food","slot":"howToUse","value":"pickle","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the actions or states required to operate, employ, interact with or perceive the existence of pickle.\";         A textual example of the semantic relation is \"can be used for pickle\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"cucumber\", \"vinegar\", \"salt\", \"water\", \"spices\", \"sugar\", \"brine\", \"jar\", \"fridge\", \"spoon\"]"}
{"cat":"food","slot":"howToUse","value":"soak","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the actions or states required to operate, employ, interact with or perceive the existence of soak.\";         A textual example of the semantic relation is \"can be used for soak\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"water\", \"tea\", \"coffee\", \"fruits\", \"vegetables\", \"rice\", \"beans\", \"meat\", \"bread\", \"pasta\"]"}
{"cat":"food","slot":"howToUse","value":"dice","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the actions or states required to operate, employ, interact with or perceive the existence of dice.\";         A textual example of the semantic relation is \"can be used for dice\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['roll', 'shake', 'throw', 'toss', 'count', 'add', 'subtract', 'multiply', 'divide', 'calculate']"}
{"cat":"food","slot":"howToUse","value":"slice","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the actions or states required to operate, employ, interact with or perceive the existence of slice.\";         A textual example of the semantic relation is \"can be used for slice\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['knife', 'pizza', 'bread', 'cheese', 'cucumber', 'tomato', 'ham', 'loaf', 'apple', 'potato']"}
{"cat":"food","slot":"howToUse","value":"grate","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the actions or states required to operate, employ, interact with or perceive the existence of grate.\";         A textual example of the semantic relation is \"can be used for grate\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['cheese', 'potato', 'vegetable', 'onion', 'carrot', 'garlic', 'sugar', 'lemon', 'orange', 'grapefruit']"}
{"cat":"food","slot":"howToUse","value":"toast","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the actions or states required to operate, employ, interact with or perceive the existence of toast.\";         A textual example of the semantic relation is \"can be used for toast\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['bread', 'butter', 'jam', 'knife', 'toaster', 'electricity', 'oven', 'plate', 'spread', 'slicer']"}
{"cat":"food","slot":"howToUse","value":"dip","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the actions or states required to operate, employ, interact with or perceive the existence of dip.\";         A textual example of the semantic relation is \"can be used for dip\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['salsa', 'hummus', 'guacamole', 'yogurt', 'tahini', 'sour cream', 'ranch dressing', 'honey', 'peanut butter', 'pesto']"}
{"cat":"food","slot":"howToUse","value":"taste","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the actions or states required to operate, employ, interact with or perceive the existence of taste.\";         A textual example of the semantic relation is \"can be used for taste\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['savor', 'enjoy', 'taste', 'flavor', 'delicious', 'sweet', 'sour', 'bitter', 'salty', 'spicy']"}
{"cat":"food","slot":"howToUse","value":"wilt","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the actions or states required to operate, employ, interact with or perceive the existence of wilt.\";         A textual example of the semantic relation is \"can be used for wilt\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['lettuce', 'spinach', 'basil', 'parsley', 'cilantro', 'arugula', 'kale', 'chard', 'collard greens', 'mustard greens']"}
{"cat":"food","slot":"part","value":"sweet corn","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the constitutive parts of sweet corn.\";         A textual example of the semantic relation is \"can have sweet corn\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['sweet', 'corn', 'kernels', 'husk', 'cob', 'silk', 'starch', 'sugar', 'water', 'protein']"}
{"cat":"food","slot":"part","value":"shuck","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the constitutive parts of shuck.\";         A textual example of the semantic relation is \"can have shuck\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"corn\", \"oyster\", \"clam\", \"lobster\", \"crab\", \"shrimp\", \"scallop\", \"mussel\", \"abalone\", \"conch\"]"}
{"cat":"food","slot":"part","value":"green corn","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the constitutive parts of green corn.\";         A textual example of the semantic relation is \"can have green corn\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"corn\", \"green\", \"kernels\", \"husk\", \"cob\", \"silk\", \"stalk\", \"ear\", \"grain\", \"maize\"]"}
{"cat":"food","slot":"product","value":"yield","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All types of entity that can be derived from yield through its processing or through natural processes.\";         A textual example of the semantic relation is \"can produce yield\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['corn', 'wheat', 'rice', 'potatoes', 'tomatoes', 'apples', 'bananas', 'oranges', 'grapes', 'cocoa']"}
{"cat":"food","slot":"product","value":"yield","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All types of entity that can be derived from yield through its processing or through natural processes.\";         A textual example of the semantic relation is \"can produce yield\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['corn', 'wheat', 'rice', 'potatoes', 'tomatoes', 'apples', 'bananas', 'oranges', 'grapes', 'cocoa']"}
{"cat":"food","slot":"product","value":"loaf","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All types of entity that can be derived from loaf through its processing or through natural processes.\";         A textual example of the semantic relation is \"can produce loaf\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['bread', 'dough', 'crust', 'crumb', 'sourdough', 'brioche', 'breadcrumb', 'loaf', 'breadstick', 'baguette']"}
{"cat":"food","slot":"smell","value":"sweet","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the entries with which the smell of sweet can be described.\";         A textual example of the semantic relation is \"can smell sweet\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"cake\", \"candy\", \"chocolate\", \"cookie\", \"cotton candy\", \"dessert\", \"honey\", \"ice cream\", \"pie\", \"sugar\"]"}
{"cat":"food","slot":"place","value":"greengrocer","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the entities in which greengrocer can be experienced, found or perceived.\";         A textual example of the semantic relation is \"can be found or used in greengrocers\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"fruits\", \"vegetables\", \"potatoes\", \"onions\", \"carrots\", \"lettuce\", \"apples\", \"pears\", \"bananas\", \"oranges\"]"}
{"cat":"food","slot":"place","value":"fruiterer","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the entities in which fruiterer can be experienced, found or perceived.\";         A textual example of the semantic relation is \"can be found or used in fruiterers\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['apple', 'banana', 'orange', 'pear', 'strawberry', 'kiwi', 'grape', 'mango', 'peach', 'plum']"}
{"cat":"food","slot":"place","value":"bottle","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the entities in which bottle can be experienced, found or perceived.\";         A textual example of the semantic relation is \"can be found or used in bottles\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['wine', 'beer', 'milk', 'juice', 'vinegar', 'oil', 'sauce', 'honey', 'soda', 'water']"}
{"cat":"food","slot":"place","value":"glass","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the entities in which glass can be experienced, found or perceived.\";         A textual example of the semantic relation is \"can be found or used in glasses\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"juice\", \"water\", \"wine\", \"beer\", \"soda\", \"tea\", \"coffee\", \"milk\", \"smoothie\", \"margarita\"]"}
{"cat":"food","slot":"place","value":"cellar","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the entities in which cellar can be experienced, found or perceived.\";         A textual example of the semantic relation is \"can be found or used in cellars\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"wine\", \"cheese\", \"cured meat\", \"pickles\", \"jams\", \"honey\", \"root vegetables\", \"dried fruit\", \"mushrooms\", \"salt\"]"}
{"cat":"food","slot":"generalization","value":"nutrient","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of nutrient related to hypernyms.\";         A textual example of the semantic relation is \"are nutrient\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['fat', 'protein', 'carbohydrate', 'fiber', 'vitamin', 'mineral', 'sugar', 'salt', 'calorie', 'water']"}
{"cat":"food","slot":"generalization","value":"drink","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of drink related to hypernyms.\";         A textual example of the semantic relation is \"are drink\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['coffee', 'tea', 'juice', 'water', 'milk', 'soda', 'beer', 'wine', 'champagne', 'margarita']"}
{"cat":"food","slot":"generalization","value":"food","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of food related to hypernyms.\";         A textual example of the semantic relation is \"are food\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['apple', 'bread', 'cake', 'chicken', 'egg', 'fish', 'hamburger', 'ice cream', 'pizza', 'steak']"}
{"cat":"food","slot":"generalization","value":"vegetable","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of vegetable related to hypernyms.\";         A textual example of the semantic relation is \"are vegetable\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['spinach', 'broccoli', 'carrot', 'cabbage', 'cauliflower', 'lettuce', 'onion', 'tomato', 'potato']"}
{"cat":"food","slot":"generalization","value":"foodstuff","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of foodstuff related to hypernyms.\";         A textual example of the semantic relation is \"are foodstuff\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['pizza', 'sushi', 'burger', 'pasta', 'taco', 'sandwich', 'curry', 'salad', 'stew']"}
{"cat":"food","slot":"generalization","value":"food product","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of food product related to hypernyms.\";         A textual example of the semantic relation is \"are food product\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['apple', 'bread', 'cheese', 'chicken', 'egg', 'fish', 'milk', 'potato', 'rice', 'tomato']"}
{"cat":"food","slot":"generalization","value":"substance","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of substance related to hypernyms.\";         A textual example of the semantic relation is \"are substance\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"pizza\", \"hamburger\", \"sushi\", \"pasta\", \"curry\", \"tacos\", \"donuts\", \"ice cream\", \"fries\"]"}
{"cat":"food","slot":"generalization","value":"staple food","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of staple food related to hypernyms.\";         A textual example of the semantic relation is \"are staple food\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['rice', 'wheat', 'corn', 'potatoes', 'cassava', 'sorghum', 'millet', 'barley', 'oats', 'buckwheat']"}
{"cat":"food","slot":"generalization","value":"garden truck","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of garden truck related to hypernyms.\";         A textual example of the semantic relation is \"are garden truck\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['carrot', 'potato', 'tomato', 'onion', 'cucumber', 'lettuce', 'pepper', 'cabbage', 'zucchini', 'eggplant']"}
{"cat":"food","slot":"generalization","value":"produce","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of produce related to hypernyms.\";         A textual example of the semantic relation is \"are produce\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['apple', 'banana', 'orange', 'grape', 'strawberry', 'pear', 'kiwi', 'mango', 'papaya', 'pineapple']"}
{"cat":"food","slot":"generalization","value":"green groceries","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of green groceries related to hypernyms.\";         A textual example of the semantic relation is \"are green groceries\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['spinach', 'lettuce', 'kale', 'broccoli', 'cucumber', 'peas', 'zucchini', 'asparagus', 'green beans', 'green pepper']"}
{"cat":"food","slot":"generalization","value":"green goods","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of green goods related to hypernyms.\";         A textual example of the semantic relation is \"are green goods\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"lettuce\", \"broccoli\", \"spinach\", \"kale\", \"cucumber\", \"avocado\", \"peas\", \"green beans\", \"asparagus\", \"zucchini\"]"}
{"cat":"food","slot":"generalization","value":"tuber","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of tuber related to hypernyms.\";         A textual example of the semantic relation is \"are tuber\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['potato', 'sweet potato', 'yam', 'cassava', 'taro', 'jicama', 'turnip', 'rutabaga', 'parsnip', 'beet']"}
{"cat":"food","slot":"generalization","value":"tracheophyte","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of tracheophyte related to hypernyms.\";         A textual example of the semantic relation is \"are tracheophyte\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"apple\", \"banana\", \"carrot\", \"corn\", \"lettuce\", \"peach\", \"potato\", \"spinach\", \"tomato\"]"}
{"cat":"food","slot":"generalization","value":"vascular plant","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of vascular plant related to hypernyms.\";         A textual example of the semantic relation is \"are vascular plant\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['tomato', 'potato', 'carrot', 'onion', 'garlic', 'cucumber', 'pepper', 'lettuce', 'spinach', 'cabbage']"}
{"cat":"food","slot":"generalization","value":"reproductive structure","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of reproductive structure related to hypernyms.\";         A textual example of the semantic relation is \"are reproductive structure\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['fruit', 'vegetable', 'grain', 'legume', 'tuber', 'nut', 'seed', 'herb', 'spice', 'root']"}
{"cat":"food","slot":"generalization","value":"herbaceous plant","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of herbaceous plant related to hypernyms.\";         A textual example of the semantic relation is \"are herbaceous plant\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['lettuce', 'spinach', 'arugula', 'watercress', 'parsley', 'cilantro', 'basil', 'dill', 'mint', 'chives']"}
{"cat":"food","slot":"generalization","value":"herb","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of herb related to hypernyms.\";         A textual example of the semantic relation is \"are herb\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['basil', 'parsley', 'thyme', 'rosemary', 'oregano', 'dill', 'mint', 'cilantro', 'sage', 'chives']"}
{"cat":"food","slot":"generalization","value":"liquid","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of liquid related to hypernyms.\";         A textual example of the semantic relation is \"are liquid\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['water', 'milk', 'juice', 'soup', 'tea', 'coffee', 'wine', 'beer', 'soda', 'smoothie']"}
{"cat":"food","slot":"generalization","value":"fluid","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of fluid related to hypernyms.\";         A textual example of the semantic relation is \"are fluid\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['water', 'juice', 'milk', 'soup', 'tea', 'coffee', 'wine', 'beer', 'soda', 'smoothie']"}
{"cat":"food","slot":"generalization","value":"starches","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of starches related to hypernyms.\";         A textual example of the semantic relation is \"are starches\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['potato', 'corn', 'rice', 'wheat', 'tapioca', 'arrowroot', 'sago', 'pearl tapioca', 'cassava', 'barley']"}
{"cat":"food","slot":"generalization","value":"alimentation","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of alimentation related to hypernyms.\";         A textual example of the semantic relation is \"are alimentation\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['pizza', 'burger', 'sushi', 'taco', 'pasta', 'salad', 'curry', 'stew', 'soup', 'noodles']"}
{"cat":"food","slot":"generalization","value":"nutrition","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of nutrition related to hypernyms.\";         A textual example of the semantic relation is \"are nutrition\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['apple', 'bread', 'cheese', 'chicken', 'egg', 'fish', 'milk', 'potato', 'rice', 'tomato']"}
{"cat":"food","slot":"generalization","value":"food grain","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of food grain related to hypernyms.\";         A textual example of the semantic relation is \"are food grain\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['wheat', 'barley', 'oats', 'rye', 'corn', 'rice', 'sorghum', 'millet', 'quinoa', 'buckwheat']"}
{"cat":"food","slot":"generalization","value":"nourishment","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of nourishment related to hypernyms.\";         A textual example of the semantic relation is \"are nourishment\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['pizza', 'hamburger', 'sushi', 'pasta', 'curry', 'taco', 'salad', 'soup', 'stew']"}
{"cat":"food","slot":"generalization","value":"aliment","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of aliment related to hypernyms.\";         A textual example of the semantic relation is \"are aliment\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['apple', 'bread', 'cheese', 'chicken', 'egg', 'fish', 'milk', 'rice', 'steak', 'tomato']"}
{"cat":"food","slot":"generalization","value":"grain","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of grain related to hypernyms.\";         A textual example of the semantic relation is \"are grain\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['rice', 'wheat', 'oats', 'barley', 'corn', 'quinoa', 'buckwheat', 'millet', 'amaranth', 'sorghum']"}
{"cat":"food","slot":"generalization","value":"victuals","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of victuals related to hypernyms.\";         A textual example of the semantic relation is \"are victuals\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['bread', 'cheese', 'chocolate', 'coffee', 'hamburger', 'ice cream', 'pizza', 'potato chips', 'sandwich', 'soup']"}
{"cat":"food","slot":"generalization","value":"flora","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of flora related to hypernyms.\";         A textual example of the semantic relation is \"are flora\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['apple', 'banana', 'carrot', 'corn', 'onion', 'potato', 'tomato', 'watermelon', 'zucchini']"}
{"cat":"food","slot":"generalization","value":"drug of abuse","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of drug of abuse related to hypernyms.\";         A textual example of the semantic relation is \"are drug of abuse\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"cocaine\", \"heroin\", \"marijuana\", \"methamphetamine\", \"opioids\", \"psychedelics\", \"stimulants\", \"tobacco\", \"alcohol\"]"}
{"cat":"food","slot":"generalization","value":"plant organ","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of plant organ related to hypernyms.\";         A textual example of the semantic relation is \"are plant organ\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['apple', 'banana', 'carrot', 'corn', 'potato', 'tomato', 'onion', 'pepper', 'spinach', 'cabbage']"}
{"cat":"food","slot":"generalization","value":"sustenance","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of sustenance related to hypernyms.\";         A textual example of the semantic relation is \"are sustenance\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['pizza', 'sushi', 'taco', 'burger', 'pasta', 'salad', 'curry', 'stew', 'soup']"}
{"cat":"food","slot":"generalization","value":"plant","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of plant related to hypernyms.\";         A textual example of the semantic relation is \"are plant\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"apple\", \"banana\", \"cherry\", \"grape\", \"lemon\", \"orange\", \"peach\", \"pear\", \"strawberry\"]"}
{"cat":"food","slot":"generalization","value":"matter","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of matter related to hypernyms.\";         A textual example of the semantic relation is \"are matter\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['apple', 'banana', 'bread', 'cheese', 'chicken', 'egg', 'fish', 'milk', 'pizza', 'steak']"}
{"cat":"food","slot":"generalization","value":"street drug","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of street drug related to hypernyms.\";         A textual example of the semantic relation is \"are street drug\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"cocaine\", \"heroin\", \"meth\", \"ecstasy\", \"marijuana\", \"LSD\", \"PCP\", \"ketamine\", \"MDMA\", \"opioids\"]"}
{"cat":"food","slot":"generalization","value":"plant life","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of plant life related to hypernyms.\";         A textual example of the semantic relation is \"are plant life\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['apple', 'banana', 'carrot', 'corn', 'lettuce', 'onion', 'pepper', 'potato', 'tomato']"}
{"cat":"food","slot":"generalization","value":"nutriment","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of nutriment related to hypernyms.\";         A textual example of the semantic relation is \"are nutriment\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"bread\", \"cheese\", \"chicken\", \"beef\", \"pork\", \"salmon\", \"rice\", \"potatoes\", \"apples\"]"}
{"cat":"food","slot":"generalization","value":"plant structure","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of plant structure related to hypernyms.\";         A textual example of the semantic relation is \"are plant structure\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"potato\", \"onion\", \"tomato\", \"corn\", \"carrot\", \"lettuce\", \"cabbage\", \"spinach\", \"broccoli\"]"}
{"cat":"food","slot":"generalization","value":"solid","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of solid related to hypernyms.\";         A textual example of the semantic relation is \"are solid\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['apple', 'carrot', 'potato', 'tomato', 'banana', 'pear', 'onion', 'garlic', 'pepper']"}
{"cat":"food","slot":"generalization","value":"plant part","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of plant part related to hypernyms.\";         A textual example of the semantic relation is \"are plant part\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['fruit', 'vegetable', 'root', 'stem', 'leaf', 'seed', 'bulb', 'tuber', 'flower', 'rhizome']"}
{"cat":"food","slot":"generalization","value":"drug","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of drug related to hypernyms.\";         A textual example of the semantic relation is \"are drug\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['pizza', 'sushi', 'taco', 'burger', 'salad', 'pasta', 'curry', 'dumpling', 'soup', 'stew']"}
{"cat":"food","slot":"generalization","value":"gourd vine","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of gourd vine related to hypernyms.\";         A textual example of the semantic relation is \"are gourd vine\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['squash', 'pumpkin', 'gourd', 'cucumber', 'melon', 'cantaloupe', 'watermelon', 'zucchini', 'courgette', 'vegetable']"}
{"cat":"food","slot":"generalization","value":"grass","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of grass related to hypernyms.\";         A textual example of the semantic relation is \"are grass\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['wheat', 'oats', 'barley', 'rice', 'corn', 'sorghum', 'millet', 'rye', 'buckwheat', 'quinoa']"}
{"cat":"food","slot":"generalization","value":"gramineous plant","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of gramineous plant related to hypernyms.\";         A textual example of the semantic relation is \"are gramineous plant\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['wheat', 'rice', 'maize', 'barley', 'oats', 'rye', 'millet', 'sorghum', 'buckwheat', 'quinoa']"}
{"cat":"food","slot":"generalization","value":"cruciferous plant","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of cruciferous plant related to hypernyms.\";         A textual example of the semantic relation is \"are cruciferous plant\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['cabbage', 'broccoli', 'cauliflower', 'kale', 'brussels sprouts', 'collard greens', 'mustard greens', 'watercress', 'arugula', 'radish']"}
{"cat":"food","slot":"generalization","value":"liliaceous plant","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of liliaceous plant related to hypernyms.\";         A textual example of the semantic relation is \"are liliaceous plant\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"garlic\", \"onion\", \"leek\", \"shallot\", \"chive\", \"scallion\", \"asparagus\", \"artichoke\", \"lily\", \"tulip\"]"}
{"cat":"food","slot":"generalization","value":"graminaceous plant","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of graminaceous plant related to hypernyms.\";         A textual example of the semantic relation is \"are graminaceous plant\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"wheat\", \"rice\", \"corn\", \"barley\", \"oats\", \"rye\", \"sorghum\", \"millet\", \"buckwheat\", \"quinoa\"]"}
{"cat":"food","slot":"generalization","value":"vine","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of vine related to hypernyms.\";         A textual example of the semantic relation is \"are vine\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['grape', 'raisin', 'wine', 'vineyard', 'vine', 'vine-ripened', 'vine-dried', 'vine-grown', 'vine-fruit', 'vine-leaf']"}
{"cat":"food","slot":"generalization","value":"solanaceous vegetable","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of solanaceous vegetable related to hypernyms.\";         A textual example of the semantic relation is \"are solanaceous vegetable\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['tomato', 'potato', 'eggplant', 'pepper', 'chili', 'goji berry', 'tamarillo', 'groundcherry', 'nightshade', 'petunia']"}
{"cat":"food","slot":"generalization","value":"brew","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of brew related to hypernyms.\";         A textual example of the semantic relation is \"are brew\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['beer', 'ale', 'lager', 'stout', 'porter', 'malt', 'hops', 'yeast', 'water', 'wheat']"}
{"cat":"food","slot":"generalization","value":"melon vine","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of melon vine related to hypernyms.\";         A textual example of the semantic relation is \"are melon vine\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['melon', 'cantaloupe', 'honeydew', 'watermelon', 'gourd', 'pumpkin', 'squash', 'cucumber', 'zucchini', 'courgette']"}
{"cat":"food","slot":"generalization","value":"snack food","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of snack food related to hypernyms.\";         A textual example of the semantic relation is \"are snack food\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"potato chips\", \"pretzels\", \"popcorn\", \"crackers\", \"cookies\", \"candy\", \"nuts\", \"fruit\", \"cheese\", \"meat\"]"}
{"cat":"food","slot":"generalization","value":"crucifer","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of crucifer related to hypernyms.\";         A textual example of the semantic relation is \"are crucifer\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['broccoli', 'cauliflower', 'cabbage', 'brussels sprouts', 'kale', 'collard greens', 'arugula', 'watercress', 'radish', 'turnip']"}
{"cat":"food","slot":"generalization","value":"citrous fruit","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of citrous fruit related to hypernyms.\";         A textual example of the semantic relation is \"are citrous fruit\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['grapefruit', 'orange', 'lemon', 'lime', 'tangerine', 'kumquat', 'pomelo', 'citron', 'mandarin']"}
{"cat":"food","slot":"generalization","value":"alliaceous plant","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of alliaceous plant related to hypernyms.\";         A textual example of the semantic relation is \"are alliaceous plant\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"garlic\", \"onion\", \"leek\", \"shallot\", \"chive\", \"scallion\", \"ascalonic\", \"garlic chive\", \"wild garlic\", \"crow garlic\"]"}
{"cat":"food","slot":"generalization","value":"bulbous plant","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of bulbous plant related to hypernyms.\";         A textual example of the semantic relation is \"are bulbous plant\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"onion\", \"garlic\", \"shallot\", \"leek\", \"chive\", \"scallion\", \"asparagus\", \"fennel\", \"celery\", \"radish\"]"}
{"cat":"food","slot":"generalization","value":"citrus fruit","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of citrus fruit related to hypernyms.\";         A textual example of the semantic relation is \"are citrus fruit\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['grapefruit', 'lemon', 'orange', 'tangerine', 'clementine', 'kumquat', 'lime', 'pomelo', 'yuzu']"}
{"cat":"food","slot":"generalization","value":"root vegetable","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of root vegetable related to hypernyms.\";         A textual example of the semantic relation is \"are root vegetable\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"carrot\", \"beetroot\", \"radish\", \"turnip\", \"parsnip\", \"sweet potato\", \"rutabaga\", \"daikon\", \"celeriac\", \"kohlrabi\"]"}
{"cat":"food","slot":"generalization","value":"baked goods","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of baked goods related to hypernyms.\";         A textual example of the semantic relation is \"are baked goods\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['bread', 'cake', 'cookie', 'pie', 'muffin', 'tart', 'scone', 'croissant', 'biscuit', 'roll']"}
{"cat":"food","slot":"generalization","value":"dairy product","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of dairy product related to hypernyms.\";         A textual example of the semantic relation is \"are dairy product\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['milk', 'cheese', 'yogurt', 'butter', 'cream', 'sour cream', 'cottage cheese', 'ice cream', 'whipped cream', 'ricotta']"}
{"cat":"food","slot":"generalization","value":"melon","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of melon related to hypernyms.\";         A textual example of the semantic relation is \"are melon\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['cantaloupe', 'watermelon', 'honeydew', 'galia', 'charentais', 'santa claus', 'crenshaw', 'canary', 'armenian', 'acorn']"}
{"cat":"food","slot":"generalization","value":"brewage","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of brewage related to hypernyms.\";         A textual example of the semantic relation is \"are brewage\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['beer', 'ale', 'lager', 'stout', 'porter', 'pilsner', 'malt', 'hops', 'yeast', 'wheat']"}
{"cat":"food","slot":"generalization","value":"legume","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of legume related to hypernyms.\";         A textual example of the semantic relation is \"are legume\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['peas', 'beans', 'lentils', 'chickpeas', 'soybeans', 'peanuts', 'alfalfa', 'clover', 'mesquite', 'tamarind']"}
{"cat":"food","slot":"generalization","value":"citrus","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of citrus related to hypernyms.\";         A textual example of the semantic relation is \"are citrus\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['grapefruit', 'lemon', 'orange', 'lime', 'tangerine', 'mandarin', 'kumquat', 'pomelo', 'citron']"}
{"cat":"food","slot":"howToUse","value":"dry","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the actions or states required to operate, employ, interact with or perceive the existence of dry.\";         A textual example of the semantic relation is \"can be used when dry\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['bake', 'roast', 'toast', 'grill', 'fry', 'dehydrate', 'dry', 'store', 'preserve', 'mill']"}
{"cat":"food","slot":"accessory","value":"milk","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All those objects that may have to do with milk. The constraint is that there must be a physical contact and that the use of such object is strictly necessary for milk.\";         A textual example of the semantic relation is \"are related with milk\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"milk carton\", \"milk bottle\", \"milk jug\", \"milk can\", \"milk pail\", \"milk bucket\", \"milk container\", \"milk bag\", \"milk churn\", \"milk separator\"]"}
{"cat":"food","slot":"accessory","value":"sandwich","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All those objects that may have to do with sandwich. The constraint is that there must be a physical contact and that the use of such object is strictly necessary for sandwich.\";         A textual example of the semantic relation is \"are related with sandwich\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['bread', 'meat', 'cheese', 'lettuce', 'tomato', 'onion', 'mustard', 'mayonnaise', 'pickle', 'ham']"}
{"cat":"food","slot":"generalization","value":"fruit","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of fruit related to hypernyms.\";         A textual example of the semantic relation is \"are fruit\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['apple', 'banana', 'orange', 'pear', 'grape', 'kiwi', 'mango', 'peach', 'plum', 'strawberry']"}
{"cat":"food","slot":"generalization","value":"pome","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of pome related to hypernyms.\";         A textual example of the semantic relation is \"are pome\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['apple', 'pear', 'quince', 'medlar', 'loquat', 'serviceberry', 'rowan', 'hawthorn', 'crabapple', 'chokeberry']"}
{"cat":"food","slot":"consistency","value":"dry","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the entries with which the noticeable to the touch consistency or texture of dry can be described.\";         A textual example of the semantic relation is \"can be dry\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['bread', 'cereal', 'crackers', 'nuts', 'popcorn', 'pretzel', 'rice', 'toast', 'waffle', 'cookie']"}
{"cat":"food","slot":"generalization","value":"edible fruit","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of edible fruit related to hypernyms.\";         A textual example of the semantic relation is \"are edible fruit\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['apple', 'banana', 'orange', 'grape', 'pear', 'cherry', 'kiwi', 'mango', 'strawberry', 'blueberry']"}
{"cat":"food","slot":"part","value":"peel","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the constitutive parts of peel.\";         A textual example of the semantic relation is \"can have peel\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['banana', 'apple', 'orange', 'grapefruit', 'peach', 'nectarine', 'plum', 'mango', 'kiwi']"}
{"cat":"food","slot":"part","value":"bread","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the constitutive parts of bread.\";         A textual example of the semantic relation is \"can have bread\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['wheat', 'flour', 'yeast', 'water', 'salt', 'bread', 'dough', 'crust', 'crumb', 'loaf']"}
{"cat":"food","slot":"part","value":"pasta","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the constitutive parts of pasta.\";         A textual example of the semantic relation is \"can have pasta\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"flour\", \"eggs\", \"water\", \"salt\", \"durum wheat\", \"semolina\", \"tomato\", \"basil\", \"garlic\", \"cheese\"]"}
{"cat":"food","slot":"part","value":"wheat berry","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the constitutive parts of wheat berry.\";         A textual example of the semantic relation is \"can have wheat berry\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['wheat', 'berries', 'endosperm', 'germ', 'bran', 'starch', 'gluten', 'protein', 'fiber', 'nutrients']"}
{"cat":"food","slot":"product","value":"bread","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All types of entity that can be derived from bread through its processing or through natural processes.\";         A textual example of the semantic relation is \"can produce bread\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['bread', 'toast', 'croutons', 'breadcrumbs', 'bread pudding', 'stuffing', 'French toast', 'pizza dough', 'sourdough', 'flatbread']"}
{"cat":"food","slot":"product","value":"crop","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All types of entity that can be derived from crop through its processing or through natural processes.\";         A textual example of the semantic relation is \"can produce crop\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"bread\", \"flour\", \"corn\", \"wheat\", \"rice\", \"potato\", \"pasta\", \"sugar\", \"oil\", \"juice\"]"}
{"cat":"food","slot":"product","value":"pasta","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All types of entity that can be derived from pasta through its processing or through natural processes.\";         A textual example of the semantic relation is \"can produce pasta\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"spaghetti\", \"macaroni\", \"fettuccine\", \"ravioli\", \"tortellini\", \"linguine\", \"penne\", \"rigatoni\", \"farfalle\", \"orzo\"]"}
{"cat":"food","slot":"generalization","value":"cereal","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of cereal related to hypernyms.\";         A textual example of the semantic relation is \"are cereal\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['cornflakes', 'oatmeal', 'rice', 'wheat', 'barley', 'quinoa', 'couscous', 'millet', 'sorghum', 'buckwheat']"}
{"cat":"food","slot":"place","value":"grape","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the entities in which grape can be experienced, found or perceived.\";         A textual example of the semantic relation is \"can be found or used in grapes\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"grape\", \"wine\", \"raisin\", \"jelly\", \"juice\", \"jam\", \"vineyard\", \"harvest\", \"vine\", \"table grape\"]"}
{"cat":"food","slot":"generalization","value":"crop","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of crop related to hypernyms.\";         A textual example of the semantic relation is \"are crop\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['wheat', 'corn', 'rice', 'soybean', 'potato', 'tomato', 'onion', 'garlic', 'cabbage', 'carrot']"}
{"cat":"food","slot":"generalization","value":"inebriant","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of inebriant related to hypernyms.\";         A textual example of the semantic relation is \"are inebriant\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['wine', 'beer', 'alcohol', 'liquor', 'spirits', 'cocktails', 'mixed drinks', 'vodka', 'whiskey', 'rum']"}
{"cat":"food","slot":"generalization","value":"intoxicant","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of intoxicant related to hypernyms.\";         A textual example of the semantic relation is \"are intoxicant\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['alcohol', 'beer', 'wine', 'liquor', 'champagne', 'whiskey', 'vodka', 'rum', 'tequila', 'gin']"}
{"cat":"food","slot":"generalization","value":"alcoholic beverage","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of alcoholic beverage related to hypernyms.\";         A textual example of the semantic relation is \"are alcoholic beverage\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['wine', 'beer', 'vodka', 'whiskey', 'rum', 'tequila', 'gin', 'brandy', 'liqueur']"}
{"cat":"food","slot":"generalization","value":"alcoholic drink","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of alcoholic drink related to hypernyms.\";         A textual example of the semantic relation is \"are alcoholic drink\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"beer\", \"wine\", \"liquor\", \"cocktail\", \"margarita\", \"martini\", \"whiskey\", \"vodka\", \"rum\", \"tequila\"]"}
{"cat":"food","slot":"generalization","value":"alcohol","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of alcohol related to hypernyms.\";         A textual example of the semantic relation is \"are alcohol\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"beer\", \"wine\", \"vodka\", \"whiskey\", \"rum\", \"tequila\", \"gin\", \"brandy\", \"liqueur\"]"}
{"cat":"food","slot":"generalization","value":"dish","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of dish related to hypernyms.\";         A textual example of the semantic relation is \"are dish\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"pizza\", \"sushi\", \"taco\", \"burger\", \"pasta\", \"curry\", \"stew\", \"salad\", \"soup\"]"}
{"cat":"food","slot":"generalization","value":"maize","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of maize related to hypernyms.\";         A textual example of the semantic relation is \"are maize\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"corn\", \"maize\", \"cornmeal\", \"polenta\", \"hominy\", \"grits\", \"tortilla\", \"tamale\", \"cornbread\", \"popcorn\"]"}
{"cat":"food","slot":"accessory","value":"salad","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All those objects that may have to do with salad. The constraint is that there must be a physical contact and that the use of such object is strictly necessary for salad.\";         A textual example of the semantic relation is \"are related with salad\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['lettuce', 'tomato', 'cucumber', 'onion', 'carrot', 'pepper', 'olive', 'cheese', 'dressing', 'bowl']"}
{"cat":"food","slot":"specialization","value":"edible corn","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of edible corn in terms of their hyponyms.\";         A textual example of the semantic relation is \"are edible corn\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['sweet corn', 'field corn', 'popcorn', 'flour corn', 'dent corn', 'flint corn', 'pod corn', 'blue corn', 'waxy corn', 'starch corn']"}
{"cat":"food","slot":"specialization","value":"barleycorn","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of barleycorn in terms of their hyponyms.\";         A textual example of the semantic relation is \"are barleycorn\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"barleycorn\", \"grain\", \"seed\", \"cereal\", \"grass\", \"staple\", \"crop\", \"food\", \"nutrient\", \"harvest\"]"}
{"cat":"food","slot":"specialization","value":"brown bread","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of brown bread in terms of their hyponyms.\";         A textual example of the semantic relation is \"are brown bread\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"wholemeal\", \"rye\", \"multigrain\", \"pumpernickel\", \"sourdough\", \"wheat\", \"seeded\", \"oat\", \"barley\", \"malt\"]"}
{"cat":"food","slot":"specialization","value":"grist","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of grist in terms of their hyponyms.\";         A textual example of the semantic relation is \"are grist\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['flour', 'cornmeal', 'meal', 'grits', 'groats', 'middlings', 'oatmeal', 'bran', 'semolina', 'buckwheat']"}
{"cat":"food","slot":"specialization","value":"malt","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of malt in terms of their hyponyms.\";         A textual example of the semantic relation is \"are malt\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['malt', 'barley', 'corn', 'rye', 'wheat', 'oats', 'sorghum', 'rice', 'buckwheat', 'quinoa']"}
{"cat":"food","slot":"specialization","value":"millet","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of millet in terms of their hyponyms.\";         A textual example of the semantic relation is \"are millet\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['finger', 'foxtail', 'proso', 'pearl', 'barnyard', 'broomcorn', 'little', 'kodo', 'proso', 'foxtail']"}
{"cat":"food","slot":"specialization","value":"breadstick","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of breadstick in terms of their hyponyms.\";         A textual example of the semantic relation is \"are breadstick\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"baguette\", \"batard\", \"brioche\", \"ciabatta\", \"focaccia\", \"naan\", \"pita\", \"sourdough\", \"tortilla\"]"}
{"cat":"food","slot":"specialization","value":"buckwheat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of buckwheat in terms of their hyponyms.\";         A textual example of the semantic relation is \"are buckwheat\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['soba', 'kasha', 'groats', 'noodles', 'flour', 'pancakes', 'blini', 'crepes', 'porridge', 'grits']"}
{"cat":"food","slot":"specialization","value":"baguette","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of baguette in terms of their hyponyms.\";         A textual example of the semantic relation is \"are baguette\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['baguette', 'french bread', 'crusty bread', 'artisan bread', 'sourdough bread', 'ciabatta', 'breadstick', 'focaccia', 'pain au levain', 'boule']"}
{"cat":"food","slot":"specialization","value":"groats","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of groats in terms of their hyponyms.\";         A textual example of the semantic relation is \"are groats\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['oat groats', 'rolled oats', 'steel-cut oats', 'old-fashioned oats', 'quick-cooking oats', 'instant oats', 'barley groats', 'pearled barley', 'hulled barley', 'hulled wheat']"}
{"cat":"food","slot":"specialization","value":"ciabatta","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of ciabatta in terms of their hyponyms.\";         A textual example of the semantic relation is \"are ciabatta\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"bread\", \"ciabatta\", \"flatbread\", \"pizza\", \"focaccia\", \"baguette\", \"sourdough\", \"pita\", \"naan\", \"tortilla\"]"}
{"cat":"food","slot":"specialization","value":"wild rice","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of wild rice in terms of their hyponyms.\";         A textual example of the semantic relation is \"are wild rice\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"black rice\", \"red rice\", \"brown rice\", \"wild rice\", \"jasmine rice\", \"basmati rice\", \"sticky rice\", \"arborio rice\", \"sushi rice\", \"glutinous rice\"]"}
{"cat":"food","slot":"specialization","value":"Indian rice","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of Indian rice in terms of their hyponyms.\";         A textual example of the semantic relation is \"are Indian rice\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['Basmati', 'Jasmine', 'Sona Masuri', 'Brown Rice', 'Red Rice', 'Black Rice', 'Matta Rice', 'Rosematta Rice', 'Kala Jeera Rice', 'Kuttanadan Rice']"}
{"cat":"food","slot":"specialization","value":"oat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of oat in terms of their hyponyms.\";         A textual example of the semantic relation is \"are oat\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['oatmeal', 'porridge', 'muesli', 'granola', 'oat bran', 'oat flour', 'oat milk', 'oat groats', 'rolled oats', 'steel-cut oats']"}
{"cat":"food","slot":"specialization","value":"barley","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of barley in terms of their hyponyms.\";         A textual example of the semantic relation is \"are barley\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['barley', 'grain', 'cereal', 'grass', 'plant', 'food', 'staple', 'crop', 'seed', 'nutrient']"}
{"cat":"food","slot":"specialization","value":"oil nut","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of oil nut in terms of their hyponyms.\";         A textual example of the semantic relation is \"are oil nut\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"macadamia\", \"pecan\", \"almond\", \"cashew\", \"walnut\", \"hazelnut\", \"pistachio\", \"brazil nut\", \"coconut\", \"pine nut\"]"}
{"cat":"food","slot":"specialization","value":"quark cheese","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of quark cheese in terms of their hyponyms.\";         A textual example of the semantic relation is \"are quark cheese\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['quark', 'cheese', 'curd', 'dairy', 'milk', 'protein', 'fat', 'lactose', 'salt', 'culture']"}
{"cat":"food","slot":"specialization","value":"french fries","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of french fries in terms of their hyponyms.\";         A textual example of the semantic relation is \"are french fries\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['french fries', 'potato wedges', 'sweet potato fries', 'curly fries', 'steak fries', 'wavy fries', 'shoestring fries', 'crinkle-cut fries', 'tater tots', 'hash browns']"}
{"cat":"food","slot":"specialization","value":"Fragaria ananassa","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of Fragaria ananassa in terms of their hyponyms.\";         A textual example of the semantic relation is \"are Fragaria ananassa\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['strawberry', 'fruit', 'berry', 'red fruit', 'summer fruit', 'edible fruit', 'sweet fruit', 'small fruit', 'juicy fruit', 'healthy fruit']"}
{"cat":"food","slot":"specialization","value":"garlic bread","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of garlic bread in terms of their hyponyms.\";         A textual example of the semantic relation is \"are garlic bread\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['garlic bread', 'garlic toast', 'garlic knots', 'garlic baguette', 'garlic focaccia', 'garlic ciabatta', 'garlic crostini', 'garlic bruschetta', 'garlic naan', 'garlic pizza']"}
{"cat":"food","slot":"specialization","value":"cinnamon bread","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of cinnamon bread in terms of their hyponyms.\";         A textual example of the semantic relation is \"are cinnamon bread\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['cinnamon roll', 'cinnamon bun', 'cinnamon swirl', 'cinnamon danish', 'cinnamon twist', 'cinnamon bagel', 'cinnamon muffin', 'cinnamon croissant', 'cinnamon loaf', 'cinnamon toast']"}
{"cat":"food","slot":"specialization","value":"Sauvignon Blanc","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of Sauvignon Blanc in terms of their hyponyms.\";         A textual example of the semantic relation is \"are Sauvignon Blanc\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['gooseberry', 'grassy', 'citrus', 'minerality', 'grapefruit', 'green apple', 'pear', 'floral', 'tropical', 'herbaceous']"}
{"cat":"food","slot":"specialization","value":"pasta salad","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of pasta salad in terms of their hyponyms.\";         A textual example of the semantic relation is \"are pasta salad\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['pasta', 'salad', 'noodles', 'vegetables', 'cheese', 'dressing', 'olives', 'tomatoes', 'cucumbers', 'basil']"}
{"cat":"food","slot":"specialization","value":"blush wine","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of blush wine in terms of their hyponyms.\";         A textual example of the semantic relation is \"are blush wine\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['ros\u00e9', 'blush', 'white zinfandel', 'pink moscato', 'pinot grigio', 'sauvignon blanc', 'chardonnay', 'riesling', 'prosecco', 'sparkling ros\u00e9']"}
{"cat":"food","slot":"specialization","value":"home fries","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of home fries in terms of their hyponyms.\";         A textual example of the semantic relation is \"are home fries\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['potato', 'vegetable', 'starch', 'carbohydrate', 'side dish', 'breakfast food', 'fast food', 'comfort food', 'fried food', 'American cuisine']"}
{"cat":"food","slot":"specialization","value":"drupe","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of drupe in terms of their hyponyms.\";         A textual example of the semantic relation is \"are drupe\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['peach', 'cherry', 'plum', 'apricot', 'mango', 'olive', 'date', 'persimmon', 'nectarine', 'prune']"}
{"cat":"food","slot":"specialization","value":"drinking chocolate","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of drinking chocolate in terms of their hyponyms.\";         A textual example of the semantic relation is \"are drinking chocolate\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"hot chocolate\", \"cocoa\", \"chocolate drink\", \"drinking chocolate\", \"chocolate beverage\", \"cacao\", \"chocolate milk\", \"chocolate syrup\", \"melted chocolate\", \"chocolate powder\"]"}
{"cat":"food","slot":"specialization","value":"grinder","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of grinder in terms of their hyponyms.\";         A textual example of the semantic relation is \"are grinder\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"coffee\", \"meat\", \"spices\", \"vegetables\", \"nuts\", \"grains\", \"herbs\", \"seeds\", \"beans\", \"fruits\"]"}
{"cat":"food","slot":"specialization","value":"Rhone wine","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of Rhone wine in terms of their hyponyms.\";         A textual example of the semantic relation is \"are Rhone wine\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['Chateauneuf-du-Pape', 'Cotes-du-Rhone', 'Cotes-du-Rhone Villages', 'Crozes-Hermitage', 'Hermitage', 'Condrieu', 'Viognier', 'Rasteau', 'Tavel', 'Beaumes-de-Venise']"}
{"cat":"food","slot":"specialization","value":"cubeb","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of cubeb in terms of their hyponyms.\";         A textual example of the semantic relation is \"are cubeb\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['cubeb pepper', 'cubeb berry', 'cubeb fruit', 'cubeb seed', 'cubeb spice', 'cubeb flavor', 'cubeb seasoning', 'cubeb condiment', 'cubeb ingredient', 'cubeb component']"}
{"cat":"food","slot":"specialization","value":"matzah","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of matzah in terms of their hyponyms.\";         A textual example of the semantic relation is \"are matzah\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['matzah', 'unleavened bread', 'flatbread', 'cracker', 'pita', 'tortilla', 'naan', 'roti', 'lavash', 'chapati']"}
{"cat":"food","slot":"specialization","value":"home-fried potatoes","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of home-fried potatoes in terms of their hyponyms.\";         A textual example of the semantic relation is \"are home-fried potatoes\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"potatoes\", \"fried potatoes\", \"home-fried potatoes\", \"crispy potatoes\", \"golden brown potatoes\", \"seasoned potatoes\", \"salted potatoes\", \"peppered potatoes\", \"buttered potatoes\", \"herbed potatoes\"]"}
{"cat":"food","slot":"specialization","value":"dessert apple","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of dessert apple in terms of their hyponyms.\";         A textual example of the semantic relation is \"are dessert apple\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['Gala', 'Fuji', 'Honeycrisp', 'Granny Smith', 'Cameo', 'Pink Lady', 'Braeburn', 'Jonagold', 'Cripps Pink', 'Envy']"}
{"cat":"food","slot":"specialization","value":"Sloppy Joe","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of Sloppy Joe in terms of their hyponyms.\";         A textual example of the semantic relation is \"are Sloppy Joe\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"meat\", \"sauce\", \"bread\", \"cheese\", \"onion\", \"tomato\", \"garlic\", \"pepper\", \"ketchup\", \"mustard\"]"}
{"cat":"food","slot":"specialization","value":"Cotes de Provence","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of Cotes de Provence in terms of their hyponyms.\";         A textual example of the semantic relation is \"are Cotes de Provence\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['red wine', 'french wine', 'ros\u00e9 wine', 'c\u00f4tes de provence', 'wine', 'alcoholic beverage', 'beverage', 'food', 'drink', 'provence']"}
{"cat":"food","slot":"specialization","value":"blue cheese","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of blue cheese in terms of their hyponyms.\";         A textual example of the semantic relation is \"are blue cheese\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['Roquefort', 'Stilton', 'Gorgonzola', 'Danish Blue', 'Blue de Gex', 'Bleu d'Auvergne', 'Cabrales', 'Maytag Blue', 'Blue Castello', 'Bleu des Causses']"}
{"cat":"food","slot":"specialization","value":"durum wheat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of durum wheat in terms of their hyponyms.\";         A textual example of the semantic relation is \"are durum wheat\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['spaghetti', 'pasta', 'macaroni', 'couscous', 'bulgur', 'semolina', 'bread', 'crackers', 'pizza dough', 'biscuit']"}
{"cat":"food","slot":"specialization","value":"ear","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of ear in terms of their hyponyms.\";         A textual example of the semantic relation is \"are ear\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['corn', 'wheat', 'rice', 'barley', 'oats', 'millet', 'sorghum', 'rye', 'buckwheat', 'quinoa']"}
{"cat":"food","slot":"specialization","value":"suds","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of suds in terms of their hyponyms.\";         A textual example of the semantic relation is \"are suds\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['bread', 'cheese', 'pizza', 'hamburger', 'steak', 'sushi', 'pasta', 'salad', 'ice cream']"}
{"cat":"food","slot":"specialization","value":"cocoa","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of cocoa in terms of their hyponyms.\";         A textual example of the semantic relation is \"are cocoa\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['cocoa', 'chocolate', 'cacao', 'cocoa butter', 'cocoa powder', 'cocoa bean', 'cocoa nibs', 'cocoa liquor', 'cocoa mass', 'cocoa solids']"}
{"cat":"food","slot":"specialization","value":"flatbread","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of flatbread in terms of their hyponyms.\";         A textual example of the semantic relation is \"are flatbread\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['naan', 'pita', 'roti', 'tortilla', 'lavash', 'focaccia', 'chapati', 'paratha', 'pizza']"}
{"cat":"food","slot":"specialization","value":"refresher","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of refresher in terms of their hyponyms.\";         A textual example of the semantic relation is \"are refresher\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"orange\", \"apple\", \"banana\", \"grape\", \"strawberry\", \"peach\", \"lemon\", \"lime\", \"mango\", \"pineapple\"]"}
{"cat":"food","slot":"specialization","value":"double Gloucester","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of double Gloucester in terms of their hyponyms.\";         A textual example of the semantic relation is \"are double Gloucester\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['cheese', 'dairy product', 'food', 'protein', 'fat', 'milk', 'curd', 'rennet', 'bacteria']"}
{"cat":"food","slot":"specialization","value":"Red Delicious","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of Red Delicious in terms of their hyponyms.\";         A textual example of the semantic relation is \"are Red Delicious\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['apple', 'fruit', 'produce', 'snack', 'dessert', 'juice', 'cider', 'pie', 'cobbler', 'compote']"}
{"cat":"food","slot":"specialization","value":"ham sandwich","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of ham sandwich in terms of their hyponyms.\";         A textual example of the semantic relation is \"are ham sandwich\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['ham', 'bread', 'lettuce', 'tomato', 'cheese', 'mayonnaise', 'mustard', 'pickle', 'onion', 'bacon']"}
{"cat":"food","slot":"specialization","value":"soya bean","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of soya bean in terms of their hyponyms.\";         A textual example of the semantic relation is \"are soya bean\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['soy sauce', 'tofu', 'soy milk', 'soybean oil', 'edamame', 'soybean sprouts', 'soy flour', 'soy nuts', 'soy protein', 'soy lecithin']"}
{"cat":"food","slot":"specialization","value":"pink wine","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of pink wine in terms of their hyponyms.\";         A textual example of the semantic relation is \"are pink wine\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['ros\u00e9', 'blush', 'pink champagne', 'sparkling ros\u00e9', 'rosado', 'schillerwein', 'white zinfandel', 'blanc de noirs', 'clairet', 'vin gris']"}
{"cat":"food","slot":"specialization","value":"Cheshire cheese","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of Cheshire cheese in terms of their hyponyms.\";         A textual example of the semantic relation is \"are Cheshire cheese\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['Cheshire cheese', 'cheddar cheese', 'blue cheese', 'cheddar', 'cheddar-like cheese', 'cheddar-like', 'cheddar-like cheeses', 'cheddar-like cheese', 'cheddar-like cheeses', 'cheddar-like cheese']"}
{"cat":"food","slot":"specialization","value":"challah","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of challah in terms of their hyponyms.\";         A textual example of the semantic relation is \"are challah\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['egg', 'water', 'sugar', 'salt', 'yeast', 'flour', 'oil', 'honey', 'raisins', 'poppy seeds']"}
{"cat":"food","slot":"specialization","value":"brioche","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of brioche in terms of their hyponyms.\";         A textual example of the semantic relation is \"are brioche\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['brioche', 'bread', 'pastry', 'sweet bread', 'French bread', 'enriched bread', 'egg bread', 'butter bread', 'sugar bread', 'yeast bread']"}
{"cat":"food","slot":"specialization","value":"olive","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of olive in terms of their hyponyms.\";         A textual example of the semantic relation is \"are olive\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['olive', 'green olive', 'black olive', 'ripe olive', 'unripe olive', 'cured olive', 'pickled olive', 'stuffed olive', 'pitted olive', 'sliced olive']"}
{"cat":"food","slot":"specialization","value":"goa bean","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of goa bean in terms of their hyponyms.\";         A textual example of the semantic relation is \"are goa bean\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['soybean', 'mung bean', 'adzuki bean', 'black bean', 'kidney bean', 'lima bean', 'navy bean', 'pinto bean', 'red bean', 'white bean']"}
{"cat":"food","slot":"specialization","value":"Velveeta","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of Velveeta in terms of their hyponyms.\";         A textual example of the semantic relation is \"are Velveeta\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['cheese', 'pasteurized', 'processed', 'American', 'melting', 'sauce', 'dip', 'snack', 'ingredient', 'flavor']"}
{"cat":"food","slot":"specialization","value":"common wheat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of common wheat in terms of their hyponyms.\";         A textual example of the semantic relation is \"are common wheat\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['bread', 'pasta', 'cereal', 'crackers', 'buns', 'rolls', 'pizza', 'cookies', 'cake', 'muffins']"}
{"cat":"food","slot":"specialization","value":"beach strawberry","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of beach strawberry in terms of their hyponyms.\";         A textual example of the semantic relation is \"are beach strawberry\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"strawberry\", \"berry\", \"fruit\", \"edible\", \"sweet\", \"red\", \"juicy\", \"small\", \"wild\", \"coastal\"]"}
{"cat":"food","slot":"specialization","value":"red hot","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of red hot in terms of their hyponyms.\";         A textual example of the semantic relation is \"are red hot\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['chili', 'pepper', 'cayenne', 'paprika', 'habanero', 'jalapeno', 'red pepper', 'tabasco', 'red chili', 'chili pepper']"}
{"cat":"food","slot":"specialization","value":"white rice","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of white rice in terms of their hyponyms.\";         A textual example of the semantic relation is \"are white rice\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['steamed rice', 'boiled rice', 'fried rice', 'sticky rice', 'jasmine rice', 'basmati rice', 'sushi rice', 'arborio rice', 'valencia rice', 'calrose rice']"}
{"cat":"food","slot":"specialization","value":"iced coffee","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of iced coffee in terms of their hyponyms.\";         A textual example of the semantic relation is \"are iced coffee\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['iced coffee', 'frozen coffee', 'cold brew', 'frappuccino', 'iced latte', 'iced mocha', 'iced cappuccino', 'iced macchiato', 'iced americano', 'iced espresso']"}
{"cat":"food","slot":"specialization","value":"syncarp","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of syncarp in terms of their hyponyms.\";         A textual example of the semantic relation is \"are syncarp\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['apple', 'banana', 'cherry', 'grape', 'kiwi', 'lemon', 'orange', 'peach', 'pineapple', 'strawberry']"}
{"cat":"food","slot":"specialization","value":"mocha coffee","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of mocha coffee in terms of their hyponyms.\";         A textual example of the semantic relation is \"are mocha coffee\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['mocha', 'espresso', 'cappuccino', 'latte', 'macchiato', 'americano', 'frappuccino', 'mochaccino', 'cortado', 'cafe au lait']"}
{"cat":"food","slot":"specialization","value":"wafer","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of wafer in terms of their hyponyms.\";         A textual example of the semantic relation is \"are wafer\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['vanilla', 'chocolate', 'strawberry', 'coconut', 'peanut butter', 'honey', 'maple syrup', 'cinnamon', 'lemon', 'orange']"}
{"cat":"food","slot":"specialization","value":"triple cream","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of triple cream in terms of their hyponyms.\";         A textual example of the semantic relation is \"are triple cream\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"brie\", \"camembert\", \"roquefort\", \"gorgonzola\", \"stilton\", \"brie\", \"camembert\", \"roquefort\", \"gorgonzola\", \"stilton\"]"}
{"cat":"food","slot":"specialization","value":"starch wheat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of starch wheat in terms of their hyponyms.\";         A textual example of the semantic relation is \"are starch wheat\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['bread', 'pasta', 'cereal', 'noodles', 'pizza', 'crackers', 'cookies', 'cake', 'pie', 'tortillas']"}
{"cat":"food","slot":"specialization","value":"salad nicoise","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of salad nicoise in terms of their hyponyms.\";         A textual example of the semantic relation is \"are salad nicoise\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['olive', 'lettuce', 'tomato', 'egg', 'tuna', 'anchovy', 'onion', 'potato', 'green bean', 'basil']"}
{"cat":"food","slot":"specialization","value":"tea-like drink","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of tea-like drink in terms of their hyponyms.\";         A textual example of the semantic relation is \"are tea-like drink\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"green tea\", \"black tea\", \"white tea\", \"oolong tea\", \"pu-erh tea\", \"chai tea\", \"matcha tea\", \"herbal tea\", \"rooibos tea\", \"yerba mate\"]"}
{"cat":"food","slot":"specialization","value":"hallah","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of hallah in terms of their hyponyms.\";         A textual example of the semantic relation is \"are hallah\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['braided', 'challah', 'egg', 'poppy', 'raisin', 'round', 'sweet', 'traditional', 'whole-wheat', 'yom-kippur']"}
{"cat":"food","slot":"specialization","value":"hamburger","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of hamburger in terms of their hyponyms.\";         A textual example of the semantic relation is \"are hamburger\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['beef', 'lettuce', 'tomato', 'onion', 'cheese', 'bun', 'pickle', 'ketchup', 'mustard', 'mayonnaise']"}
{"cat":"food","slot":"specialization","value":"open sandwich","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of open sandwich in terms of their hyponyms.\";         A textual example of the semantic relation is \"are open sandwich\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['sm\u00f8rrebr\u00f8d', 'croque-monsieur', 'bruschetta', 'tartine', 'tostada', 'patty melt', 'reuben', 'smoked salmon', 'club sandwich', 'croque-madame']"}
{"cat":"food","slot":"specialization","value":"Camembert","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of Camembert in terms of their hyponyms.\";         A textual example of the semantic relation is \"are Camembert\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['cheese', 'dairy', 'french', 'soft', 'creamy', 'white', 'moldy', 'rind', 'pasteurized', 'unpasteurized']"}
{"cat":"food","slot":"specialization","value":"chips","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of chips in terms of their hyponyms.\";         A textual example of the semantic relation is \"are chips\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['potato chips', 'corn chips', 'tortilla chips', 'sweet potato chips', 'veggie chips', 'pita chips', 'apple chips', 'banana chips', 'plantain chips', 'kale chips']"}
{"cat":"food","slot":"specialization","value":"pan gravy","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of pan gravy in terms of their hyponyms.\";         A textual example of the semantic relation is \"are pan gravy\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['pan gravy', 'beef gravy', 'chicken gravy', 'turkey gravy', 'pork gravy', 'vegetable gravy', 'mushroom gravy', 'onion gravy', 'tomato gravy', 'wine gravy']"}
{"cat":"food","slot":"specialization","value":"bun","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of bun in terms of their hyponyms.\";         A textual example of the semantic relation is \"are bun\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"hotdog bun\", \"hamburger bun\", \"sausage bun\", \"steamed bun\", \"cinnamon bun\", \"dinner roll\", \"pretzel bun\", \"brioche bun\", \"sweet bun\", \"bread roll\"]"}
{"cat":"food","slot":"specialization","value":"quick bread","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of quick bread in terms of their hyponyms.\";         A textual example of the semantic relation is \"are quick bread\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['scone', 'biscuit', 'muffin', 'pancake', 'waffle', 'crumpet', 'pikelet', 'griddlecake', 'bannock', 'flapjack']"}
{"cat":"food","slot":"specialization","value":"chicken salad","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of chicken salad in terms of their hyponyms.\";         A textual example of the semantic relation is \"are chicken salad\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['chicken', 'salad', 'lettuce', 'tomato', 'cucumber', 'onion', 'cheese', 'dressing', 'croutons', 'mayonnaise']"}
{"cat":"food","slot":"specialization","value":"rose hip","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of rose hip in terms of their hyponyms.\";         A textual example of the semantic relation is \"are rose hip\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['rosehip', 'fruit', 'berry', 'hip', 'rosehip fruit', 'rosehip berry', 'rosehip hip', 'rosehip jam', 'rosehip tea', 'rosehip syrup']"}
{"cat":"food","slot":"specialization","value":"soy","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of soy in terms of their hyponyms.\";         A textual example of the semantic relation is \"are soy\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['tofu', 'edamame', 'soy sauce', 'miso', 'soy milk', 'soy nuts', 'tempeh', 'soy flour', 'soy lecithin', 'soy protein']"}
{"cat":"food","slot":"specialization","value":"Triticum turgidum","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of Triticum turgidum in terms of their hyponyms.\";         A textual example of the semantic relation is \"are Triticum turgidum\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['bread', 'pasta', 'couscous', 'bulgur', 'matzo', 'noodles', 'crackers', 'pita', 'flatbread', 'tortillas']"}
{"cat":"food","slot":"specialization","value":"maconnais","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of maconnais in terms of their hyponyms.\";         A textual example of the semantic relation is \"are maconnais\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"cheese\", \"wine\", \"bread\", \"meat\", \"vegetables\", \"fruits\", \"sweets\", \"spices\", \"herbs\", \"oils\"]"}
{"cat":"food","slot":"specialization","value":"beefburger","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of beefburger in terms of their hyponyms.\";         A textual example of the semantic relation is \"are beefburger\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['beefburger', 'cheeseburger', 'hamburger', 'bacon burger', 'mushroom burger', 'veggie burger', 'spicy burger', 'double burger', 'triple burger', 'specialty burger']"}
{"cat":"food","slot":"specialization","value":"process cheese","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of process cheese in terms of their hyponyms.\";         A textual example of the semantic relation is \"are process cheese\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['American cheese', 'Velveeta', 'Kraft Singles', 'Easy Cheese', 'Cheez Whiz', 'Laughing Cow', 'Boursin', 'Babybel', 'Frigo', 'Kraft Dinner']"}
{"cat":"food","slot":"specialization","value":"hip","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of hip in terms of their hyponyms.\";         A textual example of the semantic relation is \"are hip\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['apple', 'banana', 'carrot', 'cucumber', 'grape', 'kiwi', 'lemon', 'orange', 'pear', 'strawberry']"}
{"cat":"food","slot":"specialization","value":"Chardonnay","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of Chardonnay in terms of their hyponyms.\";         A textual example of the semantic relation is \"are Chardonnay\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['Chardonnay', 'white wine', 'wine', 'alcoholic beverage', 'drink', 'grape', 'fruit', 'grapes', 'fruits', 'food']"}
{"cat":"food","slot":"specialization","value":"chokecherry","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of chokecherry in terms of their hyponyms.\";         A textual example of the semantic relation is \"are chokecherry\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['fruit', 'berry', 'cherry', 'chokecherry', 'edible fruit', 'wild fruit', 'jam', 'pie', 'syrup', 'wine']"}
{"cat":"food","slot":"specialization","value":"emmer","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of emmer in terms of their hyponyms.\";         A textual example of the semantic relation is \"are emmer\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['bread', 'pasta', 'cereal', 'flour', 'crackers', 'pizza', 'noodles', 'tortillas', 'baked goods', 'pancakes']"}
{"cat":"food","slot":"specialization","value":"tossed salad","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of tossed salad in terms of their hyponyms.\";         A textual example of the semantic relation is \"are tossed salad\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['green salad', 'caesar salad', 'greek salad', 'chinese chicken salad', 'spinach salad', 'cobb salad', 'italian salad', 'waldorf salad', 'tuna salad', 'chicken salad']"}
{"cat":"food","slot":"specialization","value":"hominy","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of hominy in terms of their hyponyms.\";         A textual example of the semantic relation is \"are hominy\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['cornmeal', 'grits', 'masa', 'posole', 'samp', 'mush', 'polenta', 'hominy grits', 'cornmeal mush', 'corn hominy']"}
{"cat":"food","slot":"specialization","value":"mulled wine","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of mulled wine in terms of their hyponyms.\";         A textual example of the semantic relation is \"are mulled wine\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['wine', 'red wine', 'white wine', 'fruit', 'spices', 'honey', 'sugar', 'citrus', 'cinnamon', 'cloves']"}
{"cat":"food","slot":"specialization","value":"mixer","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of mixer in terms of their hyponyms.\";         A textual example of the semantic relation is \"are mixer\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['pizza', 'sandwich', 'salad', 'smoothie', 'soup', 'stir-fry', 'omelette', 'curry', 'chili', 'risotto']"}
{"cat":"food","slot":"specialization","value":"papaya juice","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of papaya juice in terms of their hyponyms.\";         A textual example of the semantic relation is \"are papaya juice\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['papaya', 'juice', 'fruit', 'tropical', 'sweet', 'healthy', 'vitamin', 'nutrient', 'smoothie', 'drink']"}
{"cat":"food","slot":"specialization","value":"lager beer","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of lager beer in terms of their hyponyms.\";         A textual example of the semantic relation is \"are lager beer\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['Pilsner', 'Vienna Lager', 'Munich Helles', 'Helles Bock', 'Dortmunder Export', 'California Common', 'Czech Premium Pale Lager', 'M\u00e4rzen', 'Oktoberfest', 'Bock']"}
{"cat":"food","slot":"specialization","value":"french-fried potatoes","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of french-fried potatoes in terms of their hyponyms.\";         A textual example of the semantic relation is \"are french-fried potatoes\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"french-fries\", \"chips\", \"pommes frites\", \"frites\", \"finger chips\", \"steak fries\", \"curly fries\", \"crinkle-cut fries\", \"wedge fries\", \"shoestring fries\"]"}
{"cat":"food","slot":"specialization","value":"submarine sandwich","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of submarine sandwich in terms of their hyponyms.\";         A textual example of the semantic relation is \"are submarine sandwich\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['meatball', 'tuna', 'ham', 'salami', 'turkey', 'roast beef', 'chicken', 'provolone', 'swiss', 'mozzarella']"}
{"cat":"food","slot":"specialization","value":"cottage cheese","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of cottage cheese in terms of their hyponyms.\";         A textual example of the semantic relation is \"are cottage cheese\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['low-fat', 'non-fat', 'regular', 'whipped', 'creamed', 'small-curd', 'large-curd', 'salted', 'unsalted', 'flavored']"}
{"cat":"food","slot":"specialization","value":"bomber","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of bomber in terms of their hyponyms.\";         A textual example of the semantic relation is \"are bomber\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['pizza', 'burger', 'fries', 'sandwich', 'salad', 'soup', 'pasta', 'sushi', 'taco', 'curry']"}
{"cat":"food","slot":"specialization","value":"acorn","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of acorn in terms of their hyponyms.\";         A textual example of the semantic relation is \"are acorn\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['acorn', 'nut', 'seed', 'oak', 'tree', 'fruit', 'plant', 'vegetable', 'crop', 'harvest']"}
{"cat":"food","slot":"specialization","value":"wild emmer","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of wild emmer in terms of their hyponyms.\";         A textual example of the semantic relation is \"are wild emmer\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['wheat', 'grain', 'cereal', 'spelt', 'farro', 'kamut', 'einkorn', 'barley', 'rye', 'oats']"}
{"cat":"food","slot":"specialization","value":"gluten bread","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of gluten bread in terms of their hyponyms.\";         A textual example of the semantic relation is \"are gluten bread\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['rye', 'wheat', 'sourdough', 'pumpernickel', 'ciabatta', 'focaccia', 'baguette', 'bagel', 'pita', 'naan']"}
{"cat":"food","slot":"specialization","value":"Gouda cheese","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of Gouda cheese in terms of their hyponyms.\";         A textual example of the semantic relation is \"are Gouda cheese\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['Gouda', 'cheese', 'dairy', 'food', 'protein', 'fat', 'calcium', 'vitamin', 'mineral', 'nutrient']"}
{"cat":"food","slot":"specialization","value":"Swiss cheese","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of Swiss cheese in terms of their hyponyms.\";         A textual example of the semantic relation is \"are Swiss cheese\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['Emmentaler', 'Gruy\u00e8re', 'Appenzeller', 'T\u00eate de Moine', 'Sbrinz', 'Vacherin Fribourgeois', 'Schabziger', 'Jura', 'B\u00fcndner Gerstensuppe', 'Raclette']"}
{"cat":"food","slot":"specialization","value":"altar wine","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of altar wine in terms of their hyponyms.\";         A textual example of the semantic relation is \"are altar wine\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"wine\", \"altar wine\", \"communion wine\", \"sacramental wine\", \"eucharistic wine\", \"mass wine\", \"church wine\", \"liturgical wine\", \"holy wine\", \"consecrated wine\"]"}
{"cat":"food","slot":"specialization","value":"smoothie","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of smoothie in terms of their hyponyms.\";         A textual example of the semantic relation is \"are smoothie\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['strawberry', 'banana', 'mango', 'spinach', 'kale', 'blueberry', 'raspberry', 'peach', 'avocado', 'orange']"}
{"cat":"food","slot":"specialization","value":"nan","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of nan in terms of their hyponyms.\";         A textual example of the semantic relation is \"are nan\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['apple', 'banana', 'orange', 'pear', 'strawberry', 'grape', 'peach', 'cherry', 'plum', 'kiwi']"}
{"cat":"food","slot":"specialization","value":"decaffeinated coffee","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of decaffeinated coffee in terms of their hyponyms.\";         A textual example of the semantic relation is \"are decaffeinated coffee\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['americano', 'cafe au lait', 'cappuccino', 'espresso', 'latte', 'macchiato', 'mocha', 'ristretto', 'flat white', 'cortado']"}
{"cat":"food","slot":"specialization","value":"quandong","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of quandong in terms of their hyponyms.\";         A textual example of the semantic relation is \"are quandong\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['quandong', 'fruit', 'native fruit', 'bush tucker', 'Australian fruit', 'bush food', 'wild fruit', 'edible fruit', 'Australian native food', 'nutritious fruit']"}
{"cat":"food","slot":"specialization","value":"dessert wine","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of dessert wine in terms of their hyponyms.\";         A textual example of the semantic relation is \"are dessert wine\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"port\", \"sherry\", \"madeira\", \"marsala\", \"moscato\", \"sauternes\", \"tokaji\", \"ice wine\", \"late harvest\", \"noble rot\"]"}
{"cat":"food","slot":"specialization","value":"temple orange","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of temple orange in terms of their hyponyms.\";         A textual example of the semantic relation is \"are temple orange\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['orange', 'fruit', 'citrus', 'juice', 'vitamin', 'peel', 'pulp', 'seed', 'zest', 'rind']"}
{"cat":"food","slot":"specialization","value":"wood strawberry","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of wood strawberry in terms of their hyponyms.\";         A textual example of the semantic relation is \"are wood strawberry\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['strawberry', 'fruit', 'berry', 'food', 'snack', 'dessert', 'juice', 'jam', 'pie', 'smoothie']"}
{"cat":"food","slot":"specialization","value":"coffee substitute","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of coffee substitute in terms of their hyponyms.\";         A textual example of the semantic relation is \"are coffee substitute\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"chicory\", \"barley\", \"corn\", \"oats\", \"peas\", \"soybeans\", \"wheat\", \"carob\", \"dandelion\", \"chickpea\"]"}
{"cat":"food","slot":"specialization","value":"coffee royal","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of coffee royal in terms of their hyponyms.\";         A textual example of the semantic relation is \"are coffee royal\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['espresso', 'cappuccino', 'latte', 'mocha', 'americano', 'macchiato', 'frappuccino', 'flat white', 'cafe au lait', 'cafe con leche']"}
{"cat":"food","slot":"specialization","value":"lager","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of lager in terms of their hyponyms.\";         A textual example of the semantic relation is \"are lager\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"pilsner\", \"helles\", \"dortmunder\", \"bock\", \"marzen\", \"schwarzbier\", \"oktoberfest\", \"kellerbier\", \"rauchbier\", \"eisbock\"]"}
{"cat":"food","slot":"specialization","value":"false fruit","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of false fruit in terms of their hyponyms.\";         A textual example of the semantic relation is \"are false fruit\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['strawberry', 'raspberry', 'blackberry', 'blueberry', 'cranberry', 'mulberry', 'gooseberry', 'huckleberry', 'boysenberry', 'loganberry']"}
{"cat":"food","slot":"specialization","value":"three-decker","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of three-decker in terms of their hyponyms.\";         A textual example of the semantic relation is \"are three-decker\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['sandwich', 'bread', 'meat', 'cheese', 'lettuce', 'tomato', 'onion', 'pickle', 'mustard', 'mayonnaise']"}
{"cat":"food","slot":"specialization","value":"Parmesan","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of Parmesan in terms of their hyponyms.\";         A textual example of the semantic relation is \"are Parmesan\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['cheese', 'dairy', 'food', 'protein', 'milk', 'Italian', 'hard', 'grated', 'aged', 'salty']"}
{"cat":"food","slot":"specialization","value":"herb tea","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of herb tea in terms of their hyponyms.\";         A textual example of the semantic relation is \"are herb tea\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['peppermint', 'chamomile', 'lavender', 'lemon balm', 'rosehip', 'honeybush', 'rooibos', 'nettle', 'dandelion', 'fennel']"}
{"cat":"food","slot":"specialization","value":"soft drink","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of soft drink in terms of their hyponyms.\";         A textual example of the semantic relation is \"are soft drink\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['cola', 'soda', 'pop', 'lemonade', 'ginger ale', 'orange soda', 'root beer', 'sprite', 'fanta', 'dr. pepper']"}
{"cat":"food","slot":"specialization","value":"aggregate fruit","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of aggregate fruit in terms of their hyponyms.\";         A textual example of the semantic relation is \"are aggregate fruit\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['strawberry', 'raspberry', 'blackberry', 'blueberry', 'mulberry', 'loganberry', 'boysenberry', 'tayberry', 'youngberry', 'dewberry']"}
{"cat":"food","slot":"specialization","value":"torpedo","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of torpedo in terms of their hyponyms.\";         A textual example of the semantic relation is \"are torpedo\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['pizza', 'hamburger', 'sushi', 'tacos', 'pasta', 'curry', 'dumplings', 'salad', 'soup']"}
{"cat":"food","slot":"specialization","value":"common bean","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of common bean in terms of their hyponyms.\";         A textual example of the semantic relation is \"are common bean\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"black bean\", \"kidney bean\", \"navy bean\", \"pinto bean\", \"lima bean\", \"fava bean\", \"cannellini bean\", \"mung bean\", \"adzuki bean\", \"soybean\"]"}
{"cat":"food","slot":"specialization","value":"seckel","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of seckel in terms of their hyponyms.\";         A textual example of the semantic relation is \"are seckel\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['pear', 'fruit', 'seed', 'pome', 'apple', 'nectarine', 'apricot', 'plum', 'cherry', 'grape']"}
{"cat":"food","slot":"specialization","value":"Brie","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of Brie in terms of their hyponyms.\";         A textual example of the semantic relation is \"are Brie\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['Brie', 'Camembert', 'Cheddar', 'Gouda', 'Mozzarella', 'Parmesan', 'Ricotta', 'Swiss', 'Taleggio']"}
{"cat":"food","slot":"specialization","value":"rowanberry","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of rowanberry in terms of their hyponyms.\";         A textual example of the semantic relation is \"are rowanberry\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"berry\", \"fruit\", \"edible\", \"sweet\", \"tart\", \"small\", \"red\", \"vitamin-rich\", \"nutritious\", \"wild\"]"}
{"cat":"food","slot":"specialization","value":"Reuben","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of Reuben in terms of their hyponyms.\";         A textual example of the semantic relation is \"are Reuben\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['corned beef', 'swiss cheese', 'sauerkraut', 'rye bread', 'thousand island dressing', 'meat', 'cheese', 'bread', 'vegetables', 'condiments']"}
{"cat":"food","slot":"specialization","value":"mocha","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of mocha in terms of their hyponyms.\";         A textual example of the semantic relation is \"are mocha\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['chocolate', 'coffee', 'milk', 'whipped cream', 'cocoa', 'espresso', 'mocha powder', 'sugar', 'vanilla', 'hazelnut']"}
{"cat":"food","slot":"specialization","value":"prairie gourd","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of prairie gourd in terms of their hyponyms.\";         A textual example of the semantic relation is \"are prairie gourd\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['squash', 'cucumber', 'melon', 'gourd', 'pumpkin', 'zucchini', 'cantaloupe', 'watermelon', 'honeydew', 'corn']"}
{"cat":"food","slot":"specialization","value":"ricotta","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of ricotta in terms of their hyponyms.\";         A textual example of the semantic relation is \"are ricotta\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['ricotta', 'cheese', 'dairy', 'food', 'ingredient', 'protein', 'fat', 'curd', 'whey', 'milk']"}
{"cat":"food","slot":"specialization","value":"java","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of java in terms of their hyponyms.\";         A textual example of the semantic relation is \"are java\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['coffee', 'espresso', 'latte', 'cappuccino', 'mocha', 'americano', 'macchiato', 'frappuccino', 'cortado', 'flat white']"}
{"cat":"food","slot":"specialization","value":"gravy","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of gravy in terms of their hyponyms.\";         A textual example of the semantic relation is \"are gravy\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['beef gravy', 'chicken gravy', 'turkey gravy', 'pork gravy', 'vegetable gravy', 'mushroom gravy', 'onion gravy', 'red wine gravy', 'white wine gravy', 'brown gravy']"}
{"cat":"food","slot":"specialization","value":"sour bread","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of sour bread in terms of their hyponyms.\";         A textual example of the semantic relation is \"are sour bread\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['sourdough', 'ciabatta', 'baguette', 'pumpernickel', 'rye', 'naan', 'focaccia', 'matzo', 'bagel']"}
{"cat":"food","slot":"specialization","value":"drinking water","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of drinking water in terms of their hyponyms.\";         A textual example of the semantic relation is \"are drinking water\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"spring water\", \"mineral water\", \"distilled water\", \"purified water\", \"filtered water\", \"bottled water\", \"tap water\", \"well water\", \"rainwater\", \"reverse osmosis water\"]"}
{"cat":"food","slot":"specialization","value":"soybean","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of soybean in terms of their hyponyms.\";         A textual example of the semantic relation is \"are soybean\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"tofu\", \"soy milk\", \"soy sauce\", \"soybean oil\", \"edamame\", \"miso\", \"tempeh\", \"natto\", \"soy flour\", \"soy lecithin\"]"}
{"cat":"food","slot":"specialization","value":"unleavened bread","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of unleavened bread in terms of their hyponyms.\";         A textual example of the semantic relation is \"are unleavened bread\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['matzo', 'tortilla', 'chapati', 'naan', 'pita', 'roti', 'lavash', 'flatbread', 'cornbread', 'cracker']"}
{"cat":"food","slot":"specialization","value":"sparkling wine","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of sparkling wine in terms of their hyponyms.\";         A textual example of the semantic relation is \"are sparkling wine\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"champagne\", \"prosecco\", \"cava\", \"sekt\", \"cr\u00e9mant\", \"spumante\", \"asti\", \"lambrusco\", \"moscato\", \"p\u00e9t-nat\"]"}
{"cat":"food","slot":"specialization","value":"cuppa","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of cuppa in terms of their hyponyms.\";         A textual example of the semantic relation is \"are cuppa\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"coffee\", \"tea\", \"latte\", \"cappuccino\", \"espresso\", \"mocha\", \"macchiato\", \"americano\", \"flat white\", \"chai\"]"}
{"cat":"food","slot":"specialization","value":"tuna fish salad","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of tuna fish salad in terms of their hyponyms.\";         A textual example of the semantic relation is \"are tuna fish salad\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['tuna', 'salad', 'fish', 'mayonnaise', 'lettuce', 'tomato', 'onion', 'cucumber', 'pepper', 'olive']"}
{"cat":"food","slot":"specialization","value":"macaroni wheat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of macaroni wheat in terms of their hyponyms.\";         A textual example of the semantic relation is \"are macaroni wheat\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"macaroni\", \"spaghetti\", \"fusilli\", \"penne\", \"rigatoni\", \"linguine\", \"farfalle\", \"rotini\", \"orzo\", \"cavatappi\"]"}
{"cat":"food","slot":"specialization","value":"raisin bread","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of raisin bread in terms of their hyponyms.\";         A textual example of the semantic relation is \"are raisin bread\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['raisin', 'bread', 'loaf', 'sourdough', 'whole wheat', 'multigrain', 'rye', 'bagel', 'bun', 'roll']"}
{"cat":"food","slot":"specialization","value":"barmbrack","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of barmbrack in terms of their hyponyms.\";         A textual example of the semantic relation is \"are barmbrack\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"fruit\", \"raisin\", \"sultana\", \"currant\", \"nut\", \"peel\", \"flour\", \"yeast\", \"sugar\", \"tea\"]"}
{"cat":"food","slot":"specialization","value":"tomato juice","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of tomato juice in terms of their hyponyms.\";         A textual example of the semantic relation is \"are tomato juice\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['tomato', 'juice', 'drink', 'beverage', 'cocktail', 'smoothie', 'soup', 'puree', 'paste', 'sauce']"}
{"cat":"food","slot":"specialization","value":"Edam","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of Edam in terms of their hyponyms.\";         A textual example of the semantic relation is \"are Edam\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['cheese', 'dairy', 'protein', 'fat', 'calcium', 'vitamin', 'mineral', 'nutrient', 'milk', 'food']"}
{"cat":"food","slot":"specialization","value":"fruit drink","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of fruit drink in terms of their hyponyms.\";         A textual example of the semantic relation is \"are fruit drink\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"smoothie\", \"juice\", \"punch\", \"shake\", \"lemonade\", \"mojito\", \"sangria\", \"margarita\", \"cocktail\", \"mocktail\"]"}
{"cat":"food","slot":"specialization","value":"V-8 juice","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of V-8 juice in terms of their hyponyms.\";         A textual example of the semantic relation is \"are V-8 juice\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"tomato\", \"carrot\", \"celery\", \"beet\", \"parsley\", \"lettuce\", \"watercress\", \"spinach\", \"turnip\", \"cabbage\"]"}
{"cat":"food","slot":"specialization","value":"ice tea","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of ice tea in terms of their hyponyms.\";         A textual example of the semantic relation is \"are ice tea\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"lemon\", \"mint\", \"green\", \"black\", \"sweet\", \"unsweetened\", \"iced\", \"flavored\", \"cold\"]"}
{"cat":"food","slot":"specialization","value":"hydromel","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of hydromel in terms of their hyponyms.\";         A textual example of the semantic relation is \"are hydromel\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"mead\", \"honey wine\", \"honey beer\", \"melomel\", \"metheglin\", \"braggot\", \"cyser\", \"pyment\", \"hydromel\"]"}
{"cat":"food","slot":"specialization","value":"generic wine","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of generic wine in terms of their hyponyms.\";         A textual example of the semantic relation is \"are generic wine\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['chardonnay', 'cabernet', 'merlot', 'sauvignon', 'pinot', 'grigio', 'syrah', 'malbec', 'riesling', 'zinfandel']"}
{"cat":"food","slot":"specialization","value":"vermouth","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of vermouth in terms of their hyponyms.\";         A textual example of the semantic relation is \"are vermouth\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['dry vermouth', 'sweet vermouth', 'rosso vermouth', 'bianco vermouth', 'extra dry vermouth', 'blanc vermouth', 'ros\u00e9 vermouth', 'amber vermouth', 'red vermouth', 'white vermouth']"}
{"cat":"food","slot":"specialization","value":"white wine","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of white wine in terms of their hyponyms.\";         A textual example of the semantic relation is \"are white wine\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"Sauvignon Blanc\", \"Chardonnay\", \"Pinot Gris\", \"Riesling\", \"Viognier\", \"Gew\u00fcrztraminer\", \"Chenin Blanc\", \"Muscadet\", \"Vermentino\", \"Albari\u00f1o\"]"}
{"cat":"food","slot":"specialization","value":"jug wine","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of jug wine in terms of their hyponyms.\";         A textual example of the semantic relation is \"are jug wine\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['red', 'white', 'ros\u00e9', 'sweet', 'dry', 'fruity', 'oaky', 'smooth', 'full-bodied', 'light']"}
{"cat":"food","slot":"specialization","value":"berry","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of berry in terms of their hyponyms.\";         A textual example of the semantic relation is \"are berry\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['blueberry', 'strawberry', 'raspberry', 'blackberry', 'cranberry', 'gooseberry', 'huckleberry', 'mulberry', 'salmonberry', 'cloudberry']"}
{"cat":"food","slot":"specialization","value":"sub","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of sub in terms of their hyponyms.\";         A textual example of the semantic relation is \"are sub\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['apple', 'banana', 'orange', 'pear', 'grape', 'strawberry', 'cherry', 'blueberry', 'raspberry', 'kiwi']"}
{"cat":"food","slot":"specialization","value":"elk nut","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of elk nut in terms of their hyponyms.\";         A textual example of the semantic relation is \"are elk nut\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['fruit', 'nut', 'seed', 'kernel', 'legume', 'grain', 'berry', 'vegetable', 'root', 'tuber']"}
{"cat":"food","slot":"specialization","value":"light bread","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of light bread in terms of their hyponyms.\";         A textual example of the semantic relation is \"are light bread\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['baguette', 'ciabatta', 'focaccia', 'naan', 'pita', 'sourdough', 'tortilla', 'wrap', 'flatbread']"}
{"cat":"food","slot":"specialization","value":"zep","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of zep in terms of their hyponyms.\";         A textual example of the semantic relation is \"are zep\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['pizza', 'hamburger', 'sushi', 'taco', 'sandwich', 'salad', 'pasta', 'curry', 'stew']"}
{"cat":"food","slot":"specialization","value":"vintage","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of vintage in terms of their hyponyms.\";         A textual example of the semantic relation is \"are vintage\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"wine\", \"champagne\", \"port\", \"sherry\", \"madeira\", \"cognac\", \"armagnac\", \"calvados\", \"grappa\"]"}
{"cat":"food","slot":"specialization","value":"rose wine","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of rose wine in terms of their hyponyms.\";         A textual example of the semantic relation is \"are rose wine\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['cabernet', 'merlot', 'pinot noir', 'syrah', 'zinfandel', 'chardonnay', 'sauvignon blanc', 'riesling', 'viognier', 'malbec']"}
{"cat":"food","slot":"specialization","value":"sweet orange","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of sweet orange in terms of their hyponyms.\";         A textual example of the semantic relation is \"are sweet orange\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['tangerine', 'clementine', 'satsuma', 'mandarin', 'blood orange', 'navel orange', 'valencia orange', 'caracara orange', 'jaffa orange', 'sunburst tangerine']"}
{"cat":"food","slot":"specialization","value":"spike","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of spike in terms of their hyponyms.\";         A textual example of the semantic relation is \"are spike\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['spaghetti', 'pizza', 'taco', 'hamburger', 'hotdog', 'sushi', 'ramen', 'curry', 'pasta']"}
{"cat":"food","slot":"specialization","value":"farmer's cheese","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of farmer's cheese in terms of their hyponyms.\";         A textual example of the semantic relation is \"are farmer's cheese\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['pot cheese', 'cottage cheese', 'ricotta', 'quark', 'farmer cheese', 'fromage blanc', 'paneer', 'tvorog', 'queso fresco', 'queso blanco']"}
{"cat":"food","slot":"specialization","value":"Liederkranz","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of Liederkranz in terms of their hyponyms.\";         A textual example of the semantic relation is \"are Liederkranz\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['cheese', 'sandwich', 'bread', 'butter', 'ham', 'salami', 'pickles', 'mustard', 'mayonnaise', 'lettuce']"}
{"cat":"food","slot":"specialization","value":"pod","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of pod in terms of their hyponyms.\";         A textual example of the semantic relation is \"are pod\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['pea', 'bean', 'lentil', 'chickpea', 'soybean', 'lima bean', 'snow pea', 'snap pea', 'mung bean', 'fava bean']"}
{"cat":"food","slot":"specialization","value":"slaw","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of slaw in terms of their hyponyms.\";         A textual example of the semantic relation is \"are slaw\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['coleslaw', 'cabbage slaw', 'broccoli slaw', 'carrot slaw', 'red cabbage slaw', 'green cabbage slaw', 'savoy cabbage slaw', 'kohlrabi slaw', 'radish slaw', 'cucumber slaw']"}
{"cat":"food","slot":"specialization","value":"rye bread","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of rye bread in terms of their hyponyms.\";         A textual example of the semantic relation is \"are rye bread\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['pumpernickel', 'rye', 'sourdough', 'whole wheat', 'bread', 'crackers', 'bagels', 'buns', 'rolls', 'loaves']"}
{"cat":"food","slot":"specialization","value":"tuna salad","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of tuna salad in terms of their hyponyms.\";         A textual example of the semantic relation is \"are tuna salad\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['tuna', 'salad', 'mayonnaise', 'lettuce', 'tomato', 'onion', 'cucumber', 'carrot', 'cheese', 'croutons']"}
{"cat":"food","slot":"specialization","value":"roll","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of roll in terms of their hyponyms.\";         A textual example of the semantic relation is \"are roll\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"sushi\", \"spring roll\", \"cinnamon roll\", \"egg roll\", \"hot dog roll\", \"sausage roll\", \"cigar roll\", \"pizza roll\", \"candy roll\", \"bread roll\"]"}
{"cat":"food","slot":"specialization","value":"fruit crush","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of fruit crush in terms of their hyponyms.\";         A textual example of the semantic relation is \"are fruit crush\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['apple', 'banana', 'orange', 'grape', 'strawberry', 'peach', 'pineapple', 'mango', 'kiwi', 'watermelon']"}
{"cat":"food","slot":"specialization","value":"decaf","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of decaf in terms of their hyponyms.\";         A textual example of the semantic relation is \"are decaf\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['coffee', 'tea', 'cocoa', 'chocolate', 'soda', 'juice', 'water', 'milk', 'cream', 'syrup']"}
{"cat":"food","slot":"specialization","value":"Triticum aestivum","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of Triticum aestivum in terms of their hyponyms.\";         A textual example of the semantic relation is \"are Triticum aestivum\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['bread', 'pasta', 'cereal', 'crackers', 'pita', 'naan', 'matzo', 'tortillas', 'noodles', 'buns']"}
{"cat":"food","slot":"specialization","value":"draught beer","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of draught beer in terms of their hyponyms.\";         A textual example of the semantic relation is \"are draught beer\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"lager\", \"ale\", \"stout\", \"porter\", \"pilsner\", \"wheat beer\", \"IPA\", \"sour beer\", \"barley wine\", \"bitter\"]"}
{"cat":"food","slot":"specialization","value":"two-grain spelt","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of two-grain spelt in terms of their hyponyms.\";         A textual example of the semantic relation is \"are two-grain spelt\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['bread', 'pasta', 'cereal', 'crackers', 'biscuits', 'muffins', 'cookies', 'pancakes', 'waffles', 'porridge']"}
{"cat":"food","slot":"specialization","value":"Bordeaux","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of Bordeaux in terms of their hyponyms.\";         A textual example of the semantic relation is \"are Bordeaux\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['cabernet sauvignon', 'merlot', 'cabernet franc', 'malbec', 'petit verdot', 'sauvignon blanc', 'semillon', 'muscadelle', 'colombard', 'ugni blanc']"}
{"cat":"food","slot":"specialization","value":"hagberry","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of hagberry in terms of their hyponyms.\";         A textual example of the semantic relation is \"are hagberry\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['berry', 'fruit', 'food', 'edible', 'plant', 'organic', 'natural', 'healthy', 'sweet', 'tart']"}
{"cat":"food","slot":"specialization","value":"Chilean strawberry","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of Chilean strawberry in terms of their hyponyms.\";         A textual example of the semantic relation is \"are Chilean strawberry\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['Chilean strawberry', 'fruit', 'berry', 'small fruit', 'edible fruit', 'red fruit', 'sweet fruit', 'juicy fruit', 'nutritious fruit', 'healthy fruit']"}
{"cat":"food","slot":"specialization","value":"chocolate","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of chocolate in terms of their hyponyms.\";         A textual example of the semantic relation is \"are chocolate\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['dark', 'milk', 'white', 'bittersweet', 'semisweet', 'unsweetened', 'cocoa', 'couverture', 'compound', 'ganache']"}
{"cat":"food","slot":"specialization","value":"wedge","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of wedge in terms of their hyponyms.\";         A textual example of the semantic relation is \"are wedge\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['apple', 'banana', 'pear', 'orange', 'grape', 'strawberry', 'cherry', 'blueberry', 'raspberry', 'blackberry']"}
{"cat":"food","slot":"specialization","value":"drip coffee","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of drip coffee in terms of their hyponyms.\";         A textual example of the semantic relation is \"are drip coffee\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['coffee', 'drip coffee', 'brewed coffee', 'filter coffee', 'pour over coffee', 'caffeine', 'dark roast', 'medium roast', 'light roast', 'arabica']"}
{"cat":"food","slot":"specialization","value":"Triticum dicoccum dicoccoides","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of Triticum dicoccum dicoccoides in terms of their hyponyms.\";         A textual example of the semantic relation is \"are Triticum dicoccum dicoccoides\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['wheat', 'barley', 'rye', 'oats', 'corn', 'rice', 'quinoa', 'amaranth', 'sorghum', 'millet']"}
{"cat":"food","slot":"specialization","value":"Triticum dicoccum","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of Triticum dicoccum in terms of their hyponyms.\";         A textual example of the semantic relation is \"are Triticum dicoccum\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['wheat', 'bread', 'pasta', 'cereal', 'flour', 'crackers', 'cookies', 'cake', 'pizza', 'tortillas']"}
{"cat":"food","slot":"specialization","value":"Gala","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of Gala in terms of their hyponyms.\";         A textual example of the semantic relation is \"are Gala\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['apple', 'pear', 'banana', 'orange', 'grape', 'strawberry', 'cherry', 'kiwi', 'mango', 'papaya']"}
{"cat":"food","slot":"specialization","value":"sourdough bread","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of sourdough bread in terms of their hyponyms.\";         A textual example of the semantic relation is \"are sourdough bread\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['sourdough', 'bread', 'baguette', 'ciabatta', 'focaccia', 'pain de campagne', 'pain au levain', 'sourdough rye', 'sourdough whole wheat', 'sourdough white']"}
{"cat":"food","slot":"specialization","value":"Boston brown bread","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of Boston brown bread in terms of their hyponyms.\";         A textual example of the semantic relation is \"are Boston brown bread\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['bread', 'wheat', 'flour', 'yeast', 'salt', 'water', 'raisins', 'molasses', 'cornmeal', 'rye']"}
{"cat":"food","slot":"specialization","value":"wild wheat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of wild wheat in terms of their hyponyms.\";         A textual example of the semantic relation is \"are wild wheat\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['emmer', 'einkorn', 'spelt', 'durum', 'kamut', 'triticale', 'barley', 'rye', 'wheatgrass', 'quinoa']"}
{"cat":"food","slot":"specialization","value":"potion","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of potion in terms of their hyponyms.\";         A textual example of the semantic relation is \"are potion\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"soup\", \"stew\", \"broth\", \"stock\", \"consomm\u00e9\", \"bisque\", \"chowder\", \"gumbo\", \"bouillabaisse\", \"mulligatawny\"]"}
{"cat":"food","slot":"specialization","value":"fries","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of fries in terms of their hyponyms.\";         A textual example of the semantic relation is \"are fries\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['curly fries', 'crinkle-cut fries', 'steak fries', 'wavy fries', 'shoestring fries', 'sweet potato fries', 'tornado fries', 'cheese fries', 'chili cheese fries', 'loaded fries']"}
{"cat":"food","slot":"specialization","value":"herbal","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of herbal in terms of their hyponyms.\";         A textual example of the semantic relation is \"are herbal\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['basil', 'rosemary', 'thyme', 'oregano', 'sage', 'parsley', 'mint', 'dill', 'cilantro', 'chives']"}
{"cat":"food","slot":"specialization","value":"crabapple","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of crabapple in terms of their hyponyms.\";         A textual example of the semantic relation is \"are crabapple\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['apple', 'fruit', 'crabapple', 'tree', 'plant', 'orchard', 'garden', 'harvest', 'season', 'recipe']"}
{"cat":"food","slot":"specialization","value":"crab Louis","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of crab Louis in terms of their hyponyms.\";         A textual example of the semantic relation is \"are crab Louis\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"crab\", \"Louis\", \"salad\", \"dressing\", \"lettuce\", \"avocado\", \"egg\", \"tomato\", \"bacon\", \"shrimp\"]"}
{"cat":"food","slot":"specialization","value":"draft beer","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of draft beer in terms of their hyponyms.\";         A textual example of the semantic relation is \"are draft beer\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['lager', 'ale', 'stout', 'porter', 'pilsner', 'wheat beer', 'IPA', 'saison', 'Belgian beer', 'German beer']"}
{"cat":"food","slot":"specialization","value":"ade","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of ade in terms of their hyponyms.\";         A textual example of the semantic relation is \"are ade\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"apple\", \"banana\", \"orange\", \"pear\", \"grape\", \"strawberry\", \"blueberry\", \"raspberry\", \"blackberry\", \"cherry\"]"}
{"cat":"food","slot":"specialization","value":"buffalo nut","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of buffalo nut in terms of their hyponyms.\";         A textual example of the semantic relation is \"are buffalo nut\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"nut\", \"seed\", \"fruit\", \"grain\", \"legume\", \"bean\", \"pea\", \"lentil\", \"chickpea\", \"almond\"]"}
{"cat":"food","slot":"specialization","value":"Fuji","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of Fuji in terms of their hyponyms.\";         A textual example of the semantic relation is \"are Fuji\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['apple', 'pear', 'grape', 'cherry', 'banana', 'orange', 'lemon', 'mango', 'kiwi', 'peach']"}
{"cat":"food","slot":"specialization","value":"matzoh","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of matzoh in terms of their hyponyms.\";         A textual example of the semantic relation is \"are matzoh\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['unleavened bread', 'cracker', 'flatbread', 'matzo ball', 'matzo meal', 'matzo ball soup', 'matzo brei', 'matzo kugel', 'matzo farfel', 'matzo pizza']"}
{"cat":"food","slot":"specialization","value":"coffee","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of coffee in terms of their hyponyms.\";         A textual example of the semantic relation is \"are coffee\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"espresso\", \"latte\", \"cappuccino\", \"americano\", \"macchiato\", \"mocha\", \"frappuccino\", \"cortado\", \"flat white\", \"red eye\"]"}
{"cat":"food","slot":"specialization","value":"Dubonnet","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of Dubonnet in terms of their hyponyms.\";         A textual example of the semantic relation is \"are Dubonnet\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['apricot', 'cherry', 'grape', 'lemon', 'lime', 'mango', 'orange', 'peach', 'strawberry', 'raspberry']"}
{"cat":"food","slot":"specialization","value":"Riesling","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of Riesling in terms of their hyponyms.\";         A textual example of the semantic relation is \"are Riesling\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"dry\", \"semi-dry\", \"semi-sweet\", \"sweet\", \"late harvest\", \"ice wine\", \"sparkling\", \"blanc de blancs\", \"blanc de noirs\", \"trockenbeerenauslese\"]"}
{"cat":"food","slot":"specialization","value":"blue fig","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of blue fig in terms of their hyponyms.\";         A textual example of the semantic relation is \"are blue fig\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['blue fig', 'fig', 'fruit', 'edible', 'sweet', 'juicy', 'nutritious', 'vitamin-rich', 'fiber-rich']"}
{"cat":"food","slot":"specialization","value":"fruit salad","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of fruit salad in terms of their hyponyms.\";         A textual example of the semantic relation is \"are fruit salad\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"apple\", \"banana\", \"orange\", \"grape\", \"kiwi\", \"mango\", \"peach\", \"pineapple\", \"strawberry\"]"}
{"cat":"food","slot":"specialization","value":"gyro","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of gyro in terms of their hyponyms.\";         A textual example of the semantic relation is \"are gyro\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"lamb\", \"chicken\", \"beef\", \"pork\", \"vegetarian\", \"traditional\", \"modern\", \"authentic\", \"greek\", \"street\"]"}
{"cat":"food","slot":"specialization","value":"Muenster","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of Muenster in terms of their hyponyms.\";         A textual example of the semantic relation is \"are Muenster\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['cheese', 'dairy', 'food', 'protein', 'nutrition', 'fat', 'calcium', 'vitamin', 'milk']"}
{"cat":"food","slot":"specialization","value":"crouton","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of crouton in terms of their hyponyms.\";         A textual example of the semantic relation is \"are crouton\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['bread', 'toast', 'cracker', 'crumb', 'crust', 'biscuit', 'roll', 'bun', 'loaf', 'cake']"}
{"cat":"food","slot":"specialization","value":"lime juice","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of lime juice in terms of their hyponyms.\";         A textual example of the semantic relation is \"are lime juice\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"lime\", \"citrus\", \"juice\", \"sour\", \"tart\", \"acidic\", \"refreshing\", \"vitamin C\", \"green\"]"}
{"cat":"food","slot":"specialization","value":"cupper","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of cupper in terms of their hyponyms.\";         A textual example of the semantic relation is \"are cupper\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['apple', 'banana', 'orange', 'grape', 'peach', 'cherry', 'strawberry', 'kiwi', 'pineapple', 'mango']"}
{"cat":"food","slot":"specialization","value":"plonk","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of plonk in terms of their hyponyms.\";         A textual example of the semantic relation is \"are plonk\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"wine\", \"red wine\", \"white wine\", \"ros\u00e9\", \"sparkling wine\", \"champagne\", \"port\", \"sherry\", \"dessert wine\", \"fortified wine\"]"}
{"cat":"food","slot":"specialization","value":"seedpod","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of seedpod in terms of their hyponyms.\";         A textual example of the semantic relation is \"are seedpod\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['peas', 'beans', 'lentils', 'chickpeas', 'soybeans', 'peanuts', 'sesame seeds', 'sunflower seeds', 'pumpkin seeds', 'flaxseeds']"}
{"cat":"food","slot":"specialization","value":"schizocarp","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of schizocarp in terms of their hyponyms.\";         A textual example of the semantic relation is \"are schizocarp\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"carrot\", \"radish\", \"parsnip\", \"celery\", \"fennel\", \"dill\", \"cumin\", \"coriander\", \"caraway\", \"anise\"]"}
{"cat":"food","slot":"specialization","value":"quark","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of quark in terms of their hyponyms.\";         A textual example of the semantic relation is \"are quark\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['cheese', 'yogurt', 'butter', 'cream', 'sour cream', 'cottage cheese', 'ricotta', 'quark', 'mascarpone', 'creme fraiche']"}
{"cat":"food","slot":"specialization","value":"cambric tea","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of cambric tea in terms of their hyponyms.\";         A textual example of the semantic relation is \"are cambric tea\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['cambric', 'tea', 'beverage', 'drink', 'infusion', 'herbal', 'tannin', 'caffeine', 'flavor', 'aroma']"}
{"cat":"food","slot":"specialization","value":"whole wheat bread","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of whole wheat bread in terms of their hyponyms.\";         A textual example of the semantic relation is \"are whole wheat bread\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['whole wheat bread', 'wheat bread', 'bread', 'whole wheat', 'wheat', 'grain', 'cereal', 'baked good', 'food', 'carbohydrate']"}
{"cat":"food","slot":"specialization","value":"cafe au lait","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of cafe au lait in terms of their hyponyms.\";         A textual example of the semantic relation is \"are cafe au lait\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['coffee', 'milk', 'cream', 'sugar', 'chocolate', 'vanilla', 'cinnamon', 'honey', 'whipped cream', 'syrup']"}
{"cat":"food","slot":"specialization","value":"Gouda","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of Gouda in terms of their hyponyms.\";         A textual example of the semantic relation is \"are Gouda\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['cheese', 'dairy', 'protein', 'fat', 'calcium', 'vitamin', 'sodium', 'lactose', 'cholesterol']"}
{"cat":"food","slot":"specialization","value":"poor boy","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of poor boy in terms of their hyponyms.\";         A textual example of the semantic relation is \"are poor boy\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['sandwich', 'poor boy', 'sub', 'hoagie', 'grinder', 'hero', 'wedge', 'torpedo', 'bomber', 'wedge']"}
{"cat":"food","slot":"specialization","value":"white bread","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of white bread in terms of their hyponyms.\";         A textual example of the semantic relation is \"are white bread\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['baguette', 'ciabatta', 'focaccia', 'pita', 'sourdough', 'brioche', 'challah', 'naan', 'bagel', 'croissant']"}
{"cat":"food","slot":"specialization","value":"retsina","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of retsina in terms of their hyponyms.\";         A textual example of the semantic relation is \"are retsina\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['wine', 'greek wine', 'white wine', 'dry wine', 'red wine', 'sweet wine', 'semi-sweet wine', 'dessert wine', 'fortified wine', 'aperitif wine']"}
{"cat":"food","slot":"specialization","value":"coleslaw","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of coleslaw in terms of their hyponyms.\";         A textual example of the semantic relation is \"are coleslaw\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['cabbage', 'mayonnaise', 'carrots', 'vinegar', 'onions', 'pepper', 'sugar', 'salt', 'mustard']"}
{"cat":"food","slot":"specialization","value":"sacramental wine","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of sacramental wine in terms of their hyponyms.\";         A textual example of the semantic relation is \"are sacramental wine\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['chalice', 'communion', 'eucharist', 'mass', 'sacrament', 'altar', 'host', 'consecration', 'wafers', 'ritual']"}
{"cat":"food","slot":"specialization","value":"fruitlet","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of fruitlet in terms of their hyponyms.\";         A textual example of the semantic relation is \"are fruitlet\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['apple', 'pear', 'cherry', 'grape', 'plum', 'apricot', 'orange', 'lemon', 'lime', 'mango']"}
{"cat":"food","slot":"specialization","value":"instant coffee","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of instant coffee in terms of their hyponyms.\";         A textual example of the semantic relation is \"are instant coffee\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['Nescafe', 'Maxwell House', 'Folgers', 'Kenco', 'Taster's Choice', 'Jacobs', 'International Delight', 'Starbucks VIA', 'Mountain Chill']"}
{"cat":"food","slot":"specialization","value":"western","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of western in terms of their hyponyms.\";         A textual example of the semantic relation is \"are western\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['hamburger', 'pizza', 'fries', 'steak', 'hotdog', 'taco', 'chicken wings', 'ribs', 'salad', 'sandwich']"}
{"cat":"food","slot":"specialization","value":"chicken sandwich","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of chicken sandwich in terms of their hyponyms.\";         A textual example of the semantic relation is \"are chicken sandwich\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['chicken', 'sandwich', 'bread', 'lettuce', 'tomato', 'mayonnaise', 'cheese', 'pickles', 'onions', 'bacon']"}
{"cat":"food","slot":"specialization","value":"oenomel","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of oenomel in terms of their hyponyms.\";         A textual example of the semantic relation is \"are oenomel\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['apple', 'banana', 'cherry', 'grape', 'lemon', 'orange', 'pear', 'plum', 'strawberry']"}
{"cat":"food","slot":"specialization","value":"espresso","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of espresso in terms of their hyponyms.\";         A textual example of the semantic relation is \"are espresso\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['espresso', 'ristretto', 'doppio', 'caffeine', 'coffee', 'latte', 'macchiato', 'cappuccino', 'americano', 'mocha']"}
{"cat":"food","slot":"specialization","value":"brick cheese","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of brick cheese in terms of their hyponyms.\";         A textual example of the semantic relation is \"are brick cheese\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['brick cheese', 'cheddar', 'colby', 'gouda', 'havarti', 'monterey jack', 'pepper jack', 'provolone', 'swiss', 'white cheddar']"}
{"cat":"food","slot":"specialization","value":"eating apple","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of eating apple in terms of their hyponyms.\";         A textual example of the semantic relation is \"are eating apple\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['red', 'green', 'golden', 'granny', 'smith', 'fuji', 'gala', 'honeycrisp', 'braeburn', 'idared']"}
{"cat":"food","slot":"specialization","value":"Fragaria vesca","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of Fragaria vesca in terms of their hyponyms.\";         A textual example of the semantic relation is \"are Fragaria vesca\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['strawberry', 'wild strawberry', 'alpine strawberry', 'fraises des bois', 'Fragaria vesca', 'Fragaria', 'Rosaceae', 'fruit', 'berry', 'edible fruit']"}
{"cat":"food","slot":"specialization","value":"hoagie","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of hoagie in terms of their hyponyms.\";         A textual example of the semantic relation is \"are hoagie\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['meatball', 'salami', 'prosciutto', 'capicola', 'ham', 'roast beef', 'turkey', 'cheese', 'lettuce', 'tomato']"}
{"cat":"food","slot":"specialization","value":"bitter orange","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of bitter orange in terms of their hyponyms.\";         A textual example of the semantic relation is \"are bitter orange\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['citrus', 'fruit', 'orange', 'bitter orange', 'hyponym', 'classification', 'food', 'juice', 'peel', 'zest']"}
{"cat":"food","slot":"specialization","value":"cooking apple","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of cooking apple in terms of their hyponyms.\";         A textual example of the semantic relation is \"are cooking apple\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['Bramley', 'Cox', 'Granny Smith', 'Idared', 'Jonagold', 'Pink Lady', 'Rome Beauty', 'Winesap', 'York Imperial', 'Zestar']"}
{"cat":"food","slot":"specialization","value":"macon","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of macon in terms of their hyponyms.\";         A textual example of the semantic relation is \"are macon\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"steak\", \"hamburger\", \"pizza\", \"sushi\", \"taco\", \"salad\", \"sandwich\", \"curry\", \"stir-fry\"]"}
{"cat":"food","slot":"specialization","value":"simnel","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of simnel in terms of their hyponyms.\";         A textual example of the semantic relation is \"are simnel\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['cake', 'bread', 'fruit', 'spices', 'almonds', 'marzipan', 'sugar', 'eggs', 'butter', 'flour']"}
{"cat":"food","slot":"specialization","value":"wrap","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of wrap in terms of their hyponyms.\";         A textual example of the semantic relation is \"are wrap\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['tortilla', 'pita', 'naan', 'crepe', 'pancake', 'flatbread', 'roti', 'laffa', 'lavash', 'paratha']"}
{"cat":"food","slot":"specialization","value":"sour orange","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of sour orange in terms of their hyponyms.\";         A textual example of the semantic relation is \"are sour orange\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['lemon', 'lime', 'grapefruit', 'orange', 'citrus', 'fruit', 'juice', 'zest', 'pulp', 'peel']"}
{"cat":"food","slot":"specialization","value":"tabbouleh","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of tabbouleh in terms of their hyponyms.\";         A textual example of the semantic relation is \"are tabbouleh\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['parsley', 'bulgur', 'tomato', 'onion', 'garlic', 'lemon', 'olive oil', 'mint', 'cucumber']"}
{"cat":"food","slot":"specialization","value":"Cabernet Sauvignon","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of Cabernet Sauvignon in terms of their hyponyms.\";         A textual example of the semantic relation is \"are Cabernet Sauvignon\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['grape', 'wine', 'red wine', 'cabernet sauvignon', 'cab', 'merlot', 'syrah', 'malbec', 'pinot noir', 'zinfandel']"}
{"cat":"food","slot":"specialization","value":"stone fruit","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of stone fruit in terms of their hyponyms.\";         A textual example of the semantic relation is \"are stone fruit\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['apricot', 'peach', 'plum', 'nectarine', 'cherry', 'mango', 'lychee', 'avocado', 'olive', 'quince']"}
{"cat":"food","slot":"specialization","value":"grated cheese","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of grated cheese in terms of their hyponyms.\";         A textual example of the semantic relation is \"are grated cheese\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['parmesan', 'romano', 'asiago', 'pecorino', 'ricotta', 'mozzarella', 'cheddar', 'gruyere', 'swiss', 'provolone']"}
{"cat":"food","slot":"specialization","value":"Granny Smith","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of Granny Smith in terms of their hyponyms.\";         A textual example of the semantic relation is \"are Granny Smith\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['green', 'apple', 'fruit', 'produce', 'crisp', 'tart', 'juicy', 'healthy', 'snack', 'dessert']"}
{"cat":"food","slot":"specialization","value":"submarine","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of submarine in terms of their hyponyms.\";         A textual example of the semantic relation is \"are submarine\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"sandwich\", \"pizza\", \"hamburger\", \"taco\", \"sub\", \"salad\", \"soup\", \"wrap\", \"panini\", \"roll\"]"}
{"cat":"food","slot":"specialization","value":"molded salad","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of molded salad in terms of their hyponyms.\";         A textual example of the semantic relation is \"are molded salad\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['Jello', 'cranberry', 'molded', 'salad', 'fruit', 'gelatin', 'cabbage', 'vegetable', 'carrot', 'cucumber']"}
{"cat":"food","slot":"specialization","value":"Honeycrisp","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of Honeycrisp in terms of their hyponyms.\";         A textual example of the semantic relation is \"are Honeycrisp\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['apple', 'fruit', 'produce', 'crisp', 'sweet', 'juicy', 'healthy', 'snack', 'dessert', 'ingredient']"}
{"cat":"food","slot":"specialization","value":"Tokay","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of Tokay in terms of their hyponyms.\";         A textual example of the semantic relation is \"are Tokay\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['Tokay', 'wine', 'red wine', 'sweet wine', 'dessert wine', 'Hungarian wine', 'Furmint', 'H\u00e1rslevel\u0171', 'Z\u00e9ta', 'vineyard']"}
{"cat":"food","slot":"specialization","value":"bosc","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of bosc in terms of their hyponyms.\";         A textual example of the semantic relation is \"are bosc\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"apple\", \"pear\", \"plum\", \"cherry\", \"grape\", \"banana\", \"orange\", \"mango\", \"kiwi\", \"strawberry\"]"}
{"cat":"food","slot":"specialization","value":"yellow berry","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of yellow berry in terms of their hyponyms.\";         A textual example of the semantic relation is \"are yellow berry\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['banana', 'lemon', 'pineapple', 'mango', 'grapefruit', 'cantaloupe', 'papaya', 'orange', 'peach', 'nectarine']"}
{"cat":"food","slot":"specialization","value":"Burgundy","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of Burgundy in terms of their hyponyms.\";         A textual example of the semantic relation is \"are Burgundy\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"beef\", \"chicken\", \"fish\", \"pork\", \"veal\", \"lamb\", \"duck\", \"turkey\", \"goose\", \"quail\"]"}
{"cat":"food","slot":"specialization","value":"mashed potato","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of mashed potato in terms of their hyponyms.\";         A textual example of the semantic relation is \"are mashed potato\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['potato', 'mashed potato', 'boiled potato', 'baked potato', 'roasted potato', 'fried potato', 'hash brown', 'potato salad', 'potato soup', 'potato chips']"}
{"cat":"food","slot":"specialization","value":"hoagy","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of hoagy in terms of their hyponyms.\";         A textual example of the semantic relation is \"are hoagy\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['meat', 'bread', 'cheese', 'lettuce', 'tomato', 'onion', 'pepper', 'olive', 'pickle', 'mustard']"}
{"cat":"food","slot":"specialization","value":"open-face sandwich","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of open-face sandwich in terms of their hyponyms.\";         A textual example of the semantic relation is \"are open-face sandwich\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"croque monsieur\", \"tartine\", \"sm\u00f8rrebr\u00f8d\", \"bruschetta\", \"canap\u00e9\", \"toast\", \"focaccia\", \"panino\", \"tortilla\", \"flatbread\"]"}
{"cat":"food","slot":"specialization","value":"potato salad","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of potato salad in terms of their hyponyms.\";         A textual example of the semantic relation is \"are potato salad\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['potato salad', 'mayonnaise', 'mustard', 'celery', 'onion', 'pickles', 'bacon', 'cheese', 'egg', 'chicken']"}
{"cat":"food","slot":"specialization","value":"mate","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of mate in terms of their hyponyms.\";         A textual example of the semantic relation is \"are mate\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"apple\", \"banana\", \"orange\", \"pear\", \"grape\", \"strawberry\", \"blueberry\", \"raspberry\", \"blackberry\", \"cherry\"]"}
{"cat":"food","slot":"specialization","value":"coffee cappuccino","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of coffee cappuccino in terms of their hyponyms.\";         A textual example of the semantic relation is \"are coffee cappuccino\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['coffee', 'cappuccino', 'espresso', 'latte', 'mocha', 'americano', 'macchiato', 'frappuccino', 'cortado', 'cafe au lait']"}
{"cat":"food","slot":"specialization","value":"cream cheese","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of cream cheese in terms of their hyponyms.\";         A textual example of the semantic relation is \"are cream cheese\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['Neufchatel', 'Philadelphia', 'Boursin', 'Mascarpone', 'Ricotta', 'Cottage cheese', 'Farmer cheese', 'Cream cheese', 'Quark', 'Fromage blanc']"}
{"cat":"food","slot":"specialization","value":"bacon-lettuce-tomato sandwich","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of bacon-lettuce-tomato sandwich in terms of their hyponyms.\";         A textual example of the semantic relation is \"are bacon-lettuce-tomato sandwich\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['bacon', 'lettuce', 'tomato', 'sandwich', 'bread', 'mayonnaise', 'cheese', 'ham', 'pickles', 'onion']"}
{"cat":"food","slot":"specialization","value":"matzo","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of matzo in terms of their hyponyms.\";         A textual example of the semantic relation is \"are matzo\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"matzo\", \"matzah\", \"unleavened bread\", \"flatbread\", \"cracker\", \"bread\", \"baked goods\", \"kosher food\", \"jewish cuisine\", \"passover food\"]"}
{"cat":"food","slot":"specialization","value":"rosehip","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of rosehip in terms of their hyponyms.\";         A textual example of the semantic relation is \"are rosehip\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['rosehip', 'fruit', 'berry', 'edible', 'healthy', 'vitamin', 'fiber', 'juice', 'jam', 'tea']"}
{"cat":"food","slot":"specialization","value":"pot cheese","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of pot cheese in terms of their hyponyms.\";         A textual example of the semantic relation is \"are pot cheese\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['feta', 'ricotta', 'cottage cheese', 'quark', 'cream cheese', 'goat cheese', 'blue cheese', 'cheddar', 'parmesan', 'mozzarella']"}
{"cat":"food","slot":"specialization","value":"bleu","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of bleu in terms of their hyponyms.\";         A textual example of the semantic relation is \"are bleu\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['cheese', 'blue cheese', 'bleu cheese', 'gorgonzola', 'roquefort', 'stilton', 'cabrales', 'danish blue', 'maytag blue', 'blue brie']"}
{"cat":"food","slot":"specialization","value":"Italian sandwich","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of Italian sandwich in terms of their hyponyms.\";         A textual example of the semantic relation is \"are Italian sandwich\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"panini\", \"bruschetta\", \"focaccia\", \"tramezzino\", \"piadina\", \"calzone\", \"arancini\", \"crostini\", \"caprese\", \"mozzarella in carrozza\"]"}
{"cat":"food","slot":"specialization","value":"buckthorn berry","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of buckthorn berry in terms of their hyponyms.\";         A textual example of the semantic relation is \"are buckthorn berry\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['berry', 'fruit', 'plant', 'edible', 'organic', 'wild', 'seasonal', 'nutritious', 'natural']"}
{"cat":"food","slot":"specialization","value":"baked potato","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of baked potato in terms of their hyponyms.\";         A textual example of the semantic relation is \"are baked potato\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['baked potato', 'jacket potato', 'roasted potato', 'mashed potato', 'potato salad', 'potato soup', 'potato chips', 'potato wedges', 'potato fries', 'potato skins']"}
{"cat":"food","slot":"specialization","value":"varietal wine","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of varietal wine in terms of their hyponyms.\";         A textual example of the semantic relation is \"are varietal wine\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['Cabernet Sauvignon', 'Chardonnay', 'Merlot', 'Pinot Noir', 'Sauvignon Blanc', 'Riesling', 'Syrah', 'Zinfandel', 'Pinot Grigio', 'Chenin Blanc']"}
{"cat":"food","slot":"specialization","value":"Fragaria chiloensis","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of Fragaria chiloensis in terms of their hyponyms.\";         A textual example of the semantic relation is \"are Fragaria chiloensis\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['strawberry', 'berry', 'fruit', 'plant', 'seed', 'leaf', 'flower', 'vegetable', 'organic', 'fresh']"}
{"cat":"food","slot":"specialization","value":"whole meal bread","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of whole meal bread in terms of their hyponyms.\";         A textual example of the semantic relation is \"are whole meal bread\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['whole wheat bread', 'rye bread', 'sourdough bread', 'pumpernickel bread', 'multigrain bread', 'oatmeal bread', 'barley bread', 'spelt bread', 'Ezekiel bread', 'sprouted grain bread']"}
{"cat":"food","slot":"specialization","value":"Merlot","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of Merlot in terms of their hyponyms.\";         A textual example of the semantic relation is \"are Merlot\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['grape', 'wine', 'red wine', 'cabernet sauvignon', 'pinot noir', 'syrah', 'malbec', 'zinfandel', 'merlot', 'cabernet franc']"}
{"cat":"food","slot":"specialization","value":"herbal tea","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of herbal tea in terms of their hyponyms.\";         A textual example of the semantic relation is \"are herbal tea\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['chamomile', 'peppermint', 'ginger', 'lemon', 'lavender', 'rosehip', 'honeybush', 'rooibos', 'yarrow']"}
{"cat":"food","slot":"specialization","value":"cheddar","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of cheddar in terms of their hyponyms.\";         A textual example of the semantic relation is \"are cheddar\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['sharp', 'mild', 'extra', 'old', 'white', 'smoked', 'reduced', 'fat', 'free', 'sliced']"}
{"cat":"food","slot":"specialization","value":"salt-rising bread","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of salt-rising bread in terms of their hyponyms.\";         A textual example of the semantic relation is \"are salt-rising bread\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['salt-rising bread', 'sourdough bread', 'yeast bread', 'flatbread', 'cornbread', 'rye bread', 'pita bread', 'naan', 'focaccia', 'baguette']"}
{"cat":"food","slot":"specialization","value":"garden strawberry","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of garden strawberry in terms of their hyponyms.\";         A textual example of the semantic relation is \"are garden strawberry\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['fruit', 'berry', 'strawberry', 'garden strawberry', 'edible fruit', 'red fruit', 'sweet fruit', 'juicy fruit', 'summer fruit', 'dessert fruit']"}
{"cat":"food","slot":"specialization","value":"herring salad","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of herring salad in terms of their hyponyms.\";         A textual example of the semantic relation is \"are herring salad\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"herring\", \"salad\", \"fish\", \"seafood\", \"appetizer\", \"dish\", \"meal\", \"protein\", \"nutrition\", \"food\"]"}
{"cat":"food","slot":"specialization","value":"juniper berry","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of juniper berry in terms of their hyponyms.\";         A textual example of the semantic relation is \"are juniper berry\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['juniper berry', 'fruit', 'berry', 'food', 'ingredient', 'spice', 'condiment', 'seasoning', 'dried fruit', 'culinary']"}
{"cat":"food","slot":"specialization","value":"Seville orange","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of Seville orange in terms of their hyponyms.\";         A textual example of the semantic relation is \"are Seville orange\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['Seville orange', 'orange', 'citrus fruit', 'fruit', 'juice', 'jam', 'marmalade', 'syrup', 'candy', 'dessert']"}
{"cat":"food","slot":"specialization","value":"Irish coffee","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of Irish coffee in terms of their hyponyms.\";         A textual example of the semantic relation is \"are Irish coffee\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"Irish coffee\", \"coffee\", \"whiskey\", \"sugar\", \"cream\", \"hot drink\", \"alcoholic beverage\", \"dessert\", \"caffeine\", \"beverage\"]"}
{"cat":"food","slot":"specialization","value":"Golden Delicious","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of Golden Delicious in terms of their hyponyms.\";         A textual example of the semantic relation is \"are Golden Delicious\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['Golden Delicious', 'apple', 'fruit', 'produce', 'snack', 'dessert', 'cider', 'pie', 'crisp', 'compote']"}
{"cat":"food","slot":"specialization","value":"American cheese","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of American cheese in terms of their hyponyms.\";         A textual example of the semantic relation is \"are American cheese\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['cheddar', 'colby', 'monterey jack', 'swiss', 'american', 'gouda', 'pepper jack', 'provolone', 'blue cheese']"}
{"cat":"food","slot":"specialization","value":"Triticum durum","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of Triticum durum in terms of their hyponyms.\";         A textual example of the semantic relation is \"are Triticum durum\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['durum wheat', 'semolina', 'couscous', 'pasta', 'bulgur', 'farro', 'spaghetti', 'macaroni', 'lasagna', 'ravioli']"}
{"cat":"food","slot":"specialization","value":"fizz","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of fizz in terms of their hyponyms.\";         A textual example of the semantic relation is \"are fizz\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"soda\", \"pop\", \"carbonated water\", \"sparkling water\", \"tonic water\", \"club soda\", \"seltzer\", \"mineral water\", \"soft drink\", \"fizzy drink\"]"}
{"cat":"food","slot":"specialization","value":"chevre","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of chevre in terms of their hyponyms.\";         A textual example of the semantic relation is \"are chevre\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['chevre', 'goat cheese', 'ch\u00e8vre', 'cheese', 'goat milk', 'dairy product', 'feta', 'cheesecake', 'ricotta', 'cottage cheese']"}
{"cat":"food","slot":"specialization","value":"anadama bread","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of anadama bread in terms of their hyponyms.\";         A textual example of the semantic relation is \"are anadama bread\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"cornmeal\", \"rye\", \"wheat\", \"oats\", \"barley\", \"buckwheat\", \"millet\", \"quinoa\", \"amaranth\", \"teff\"]"}
{"cat":"food","slot":"specialization","value":"cyder","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of cyder in terms of their hyponyms.\";         A textual example of the semantic relation is \"are cyder\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['apple', 'pear', 'grape', 'strawberry', 'raspberry', 'blackberry', 'cherry', 'plum', 'apricot', 'quince']"}
{"cat":"food","slot":"specialization","value":"California wine","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of California wine in terms of their hyponyms.\";         A textual example of the semantic relation is \"are California wine\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"Cabernet Sauvignon\", \"Chardonnay\", \"Pinot Noir\", \"Merlot\", \"Sauvignon Blanc\", \"Zinfandel\", \"Syrah\", \"Petite Sirah\", \"Grenache\", \"Viognier\"]"}
{"cat":"food","slot":"specialization","value":"generic","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of generic in terms of their hyponyms.\";         A textual example of the semantic relation is \"are generic\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['apple', 'banana', 'carrot', 'chicken', 'egg', 'lettuce', 'milk', 'potato', 'rice', 'tomato']"}
{"cat":"food","slot":"specialization","value":"Bordeaux wine","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of Bordeaux wine in terms of their hyponyms.\";         A textual example of the semantic relation is \"are Bordeaux wine\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['Cabernet Sauvignon', 'Merlot', 'Cabernet Franc', 'Petit Verdot', 'Malbec', 'Sauvignon Blanc', 'S\u00e9millon', 'Muscadelle', 'Colombard', 'Ugni Blanc']"}
{"cat":"food","slot":"specialization","value":"bartlett pear","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of bartlett pear in terms of their hyponyms.\";         A textual example of the semantic relation is \"are bartlett pear\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"pear\", \"fruit\", \"bartlett pear\", \"green pear\", \"yellow pear\", \"ripe pear\", \"juicy pear\", \"sweet pear\", \"tart pear\", \"crisp pear\"]"}
{"cat":"food","slot":"specialization","value":"marasca","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of marasca in terms of their hyponyms.\";         A textual example of the semantic relation is \"are marasca\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['cherry', 'sour cherry', 'fruit', 'red fruit', 'stone fruit', 'summer fruit', 'pie cherry', 'tart cherry', 'Morello cherry', 'Montmorency cherry']"}
{"cat":"food","slot":"specialization","value":"Host","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of Host in terms of their hyponyms.\";         A textual example of the semantic relation is \"are Host\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['bread', 'cheese', 'chicken', 'pizza', 'rice', 'soup', 'steak', 'vegetables', 'wine']"}
{"cat":"food","slot":"specialization","value":"accessory fruit","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of accessory fruit in terms of their hyponyms.\";         A textual example of the semantic relation is \"are accessory fruit\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['apple', 'pear', 'strawberry', 'blueberry', 'raspberry', 'blackberry', 'cherry', 'watermelon', 'grape', 'banana']"}
{"cat":"food","slot":"specialization","value":"hot chocolate","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of hot chocolate in terms of their hyponyms.\";         A textual example of the semantic relation is \"are hot chocolate\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['hot chocolate', 'cocoa', 'drinking chocolate', 'chocolate beverage', 'cocoa drink', 'chocolate drink', 'hot cocoa', 'chocolatey drink', 'chocolatey beverage', 'hot chocolate beverage']"}
{"cat":"food","slot":"specialization","value":"anjou","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of anjou in terms of their hyponyms.\";         A textual example of the semantic relation is \"are anjou\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['fruit', 'pear', 'sweet', 'juicy', 'ripe', 'green', 'yellow', 'red', 'soft', 'hard']"}
{"cat":"food","slot":"specialization","value":"wild cherry","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of wild cherry in terms of their hyponyms.\";         A textual example of the semantic relation is \"are wild cherry\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['wild cherry', 'sour cherry', 'tart cherry', 'black cherry', 'red cherry', 'yellow cherry', 'white cherry', 'cherry pie', 'cherry jam', 'cherry juice']"}
{"cat":"food","slot":"specialization","value":"cafe noir","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of cafe noir in terms of their hyponyms.\";         A textual example of the semantic relation is \"are cafe noir\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['coffee', 'espresso', 'latte', 'cappuccino', 'americano', 'mocha', 'frappuccino', 'macchiato', 'cortado', 'flat white']"}
{"cat":"food","slot":"specialization","value":"bartlett","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of bartlett in terms of their hyponyms.\";         A textual example of the semantic relation is \"are bartlett\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['apple', 'pear', 'banana', 'orange', 'grape', 'cherry', 'strawberry', 'blueberry', 'raspberry', 'blackberry']"}
{"cat":"food","slot":"specialization","value":"tabooli","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of tabooli in terms of their hyponyms.\";         A textual example of the semantic relation is \"are tabooli\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"hummus\", \"baba ganoush\", \"tabbouleh\", \"falafel\", \"shawarma\", \"kebab\", \"gyro\", \"pita\", \"tahini\"]"}
{"cat":"food","slot":"specialization","value":"achene","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of achene in terms of their hyponyms.\";         A textual example of the semantic relation is \"are achene\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['peanut', 'sunflower seed', 'cranberry', 'strawberry', 'raspberry', 'blueberry', 'blackberry', 'hazelnut', 'chestnut', 'acorn']"}
{"cat":"food","slot":"specialization","value":"wild strawberry","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of wild strawberry in terms of their hyponyms.\";         A textual example of the semantic relation is \"are wild strawberry\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['strawberry', 'fruit', 'berry', 'wild strawberry', 'wild fruit', 'wild berry', 'edible fruit', 'edible berry', 'red fruit', 'red berry']"}
{"cat":"food","slot":"specialization","value":"cappuccino","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of cappuccino in terms of their hyponyms.\";         A textual example of the semantic relation is \"are cappuccino\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['cappuccino', 'coffee', 'espresso', 'milk', 'froth', 'chocolate', 'sugar', 'whipped cream', 'mocha', 'latte']"}
{"cat":"food","slot":"specialization","value":"farm cheese","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of farm cheese in terms of their hyponyms.\";         A textual example of the semantic relation is \"are farm cheese\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"cheddar\", \"gouda\", \"parmesan\", \"swiss\", \"blue cheese\", \"feta\", \"brie\", \"camembert\", \"goat cheese\", \"gruyere\"]"}
{"cat":"food","slot":"specialization","value":"spelt","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of spelt in terms of their hyponyms.\";         A textual example of the semantic relation is \"are spelt\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['spelt', 'wheat', 'grain', 'cereal', 'bread', 'pasta', 'flour', 'bran', 'germ', 'groats']"}
{"cat":"food","slot":"specialization","value":"Cripps Pink","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of Cripps Pink in terms of their hyponyms.\";         A textual example of the semantic relation is \"are Cripps Pink\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['apple', 'fruit', 'produce', 'snack', 'dessert', 'juice', 'cider', 'pie', 'compote', 'jam']"}
{"cat":"food","slot":"specialization","value":"club sandwich","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of club sandwich in terms of their hyponyms.\";         A textual example of the semantic relation is \"are club sandwich\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['club sandwich', 'chicken club sandwich', 'turkey club sandwich', 'bacon club sandwich', 'ham club sandwich', 'vegetable club sandwich', 'roast beef club sandwich', 'grilled cheese club sandwich', 'grilled chicken club sandwich', 'avocado club sandwich']"}
{"cat":"food","slot":"specialization","value":"cheddar cheese","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of cheddar cheese in terms of their hyponyms.\";         A textual example of the semantic relation is \"are cheddar cheese\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"mild cheddar\", \"medium cheddar\", \"sharp cheddar\", \"extra sharp cheddar\", \"white cheddar\", \"smoked cheddar\", \"cheddar with herbs\", \"cheddar with onion\", \"cheddar with garlic\", \"cheddar with jalape\u00f1o\"]"}
{"cat":"food","slot":"specialization","value":"BLT","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of BLT in terms of their hyponyms.\";         A textual example of the semantic relation is \"are BLT\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['bacon', 'lettuce', 'tomato', 'bread', 'mayonnaise', 'avocado', 'cheese', 'ham', 'egg', 'spinach']"}
{"cat":"food","slot":"specialization","value":"fortified wine","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of fortified wine in terms of their hyponyms.\";         A textual example of the semantic relation is \"are fortified wine\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['sherry', 'port', 'madeira', 'marsala', 'vermouth', 'muscat', 'malaga', 'tokay', 'cognac', 'arrack']"}
{"cat":"food","slot":"specialization","value":"triple-decker","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of triple-decker in terms of their hyponyms.\";         A textual example of the semantic relation is \"are triple-decker\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"club sandwich\", \"Dagwood\", \"Reuben\", \"croque-monsieur\", \"monte cristo\", \"b\u00e1nh m\u00ec\", \"bacon, lettuce, and tomato\", \"chicken parmigiana\", \"tuna melt\"]"}
{"cat":"food","slot":"specialization","value":"triple creme","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of triple creme in terms of their hyponyms.\";         A textual example of the semantic relation is \"are triple creme\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"brie\", \"camembert\", \"chaumes\", \"coulommiers\", \"crottin de chavignol\", \"l'edel de claye\", \"l'edel de claye\", \"pave d'auge\", \"pave d'auge\", \"saint-nectaire\"]"}
{"cat":"food","slot":"specialization","value":"pseudocarp","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of pseudocarp in terms of their hyponyms.\";         A textual example of the semantic relation is \"are pseudocarp\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['apple', 'banana', 'cherry', 'grape', 'kiwi', 'lemon', 'mango', 'orange', 'pear', 'watermelon']"}
{"cat":"food","slot":"specialization","value":"brown rice","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of brown rice in terms of their hyponyms.\";         A textual example of the semantic relation is \"are brown rice\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"brown rice\", \"short grain brown rice\", \"medium grain brown rice\", \"long grain brown rice\", \"basmati brown rice\", \"jasmine brown rice\", \"red rice\", \"black rice\", \"wild rice\", \"forbidden rice\"]"}
{"cat":"food","slot":"specialization","value":"carrot juice","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of carrot juice in terms of their hyponyms.\";         A textual example of the semantic relation is \"are carrot juice\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"carrot juice\", \"vegetable juice\", \"orange juice\", \"fruit juice\", \"beetroot juice\", \"green juice\", \"detox juice\", \"healthy drink\", \"organic juice\", \"natural beverage\"]"}
{"cat":"food","slot":"specialization","value":"Turkish coffee","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of Turkish coffee in terms of their hyponyms.\";         A textual example of the semantic relation is \"are Turkish coffee\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['Turkish coffee', 'Kahve', 'T\u00fcrk Kahvesi', 'Turkish brew', 'Turkish delight', 'Turkish delight coffee', 'Turkish delight drink', 'Turkish delight beverage', 'Turkish delight brew', 'Turkish delight coffee drink']"}
{"cat":"food","slot":"specialization","value":"near beer","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of near beer in terms of their hyponyms.\";         A textual example of the semantic relation is \"are near beer\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"non-alcoholic beer\", \"low-alcohol beer\", \"de-alcoholized beer\", \"alcohol-free beer\", \"malt beverage\", \"near beer\", \"small beer\", \"temperance beer\", \"cereal beverage\", \"soft drink\"]"}
{"cat":"food","slot":"specialization","value":"onion bread","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of onion bread in terms of their hyponyms.\";         A textual example of the semantic relation is \"are onion bread\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['onion', 'bread', 'garlic', 'sourdough', 'rye', 'wheat', 'baguette', 'focaccia', 'ciabatta', 'pumpernickel']"}
{"cat":"food","slot":"specialization","value":"loaf of bread","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of loaf of bread in terms of their hyponyms.\";         A textual example of the semantic relation is \"are loaf of bread\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"white bread\", \"whole wheat bread\", \"rye bread\", \"sourdough bread\", \"french bread\", \"italian bread\", \"pumpernickel bread\", \"multigrain bread\", \"bread roll\", \"baguette\"]"}
{"cat":"food","slot":"specialization","value":"caraway seed bread","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of caraway seed bread in terms of their hyponyms.\";         A textual example of the semantic relation is \"are caraway seed bread\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"rye\", \"sourdough\", \"pumpernickel\", \"multigrain\", \"whole wheat\", \"ciabatta\", \"focaccia\", \"naan\", \"challah\", \"baguette\"]"}
{"cat":"food","slot":"specialization","value":"paddy","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of paddy in terms of their hyponyms.\";         A textual example of the semantic relation is \"are paddy\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"rice\", \"paddy\", \"grain\", \"cereal\", \"staple\", \"harvest\", \"crop\", \"food\", \"agriculture\", \"farming\"]"}
{"cat":"food","slot":"specialization","value":"polished rice","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of polished rice in terms of their hyponyms.\";         A textual example of the semantic relation is \"are polished rice\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['japonica', 'indica', 'white', 'brown', 'red', 'black', 'wild', 'glutinous', 'non-glutinous', 'medium-grain']"}
{"cat":"food","slot":"specialization","value":"iced tea","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of iced tea in terms of their hyponyms.\";         A textual example of the semantic relation is \"are iced tea\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"lemonade\", \"sweet tea\", \"green tea\", \"black tea\", \"peach tea\", \"raspberry tea\", \"mango tea\", \"pomegranate tea\", \"strawberry tea\", \"apple tea\"]"}
{"cat":"food","slot":"specialization","value":"dark bread","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of dark bread in terms of their hyponyms.\";         A textual example of the semantic relation is \"are dark bread\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['pumpernickel', 'rye', 'whole wheat', 'sourdough', 'focaccia', 'pita', 'naan', 'ciabatta', 'baguette', 'brown bread']"}
{"cat":"food","slot":"specialization","value":"hero","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of hero in terms of their hyponyms.\";         A textual example of the semantic relation is \"are hero\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['pizza', 'sushi', 'taco', 'burger', 'salad', 'pasta', 'curry', 'steak', 'sandwich', 'soup']"}
{"cat":"food","slot":"specialization","value":"soya","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of soya in terms of their hyponyms.\";         A textual example of the semantic relation is \"are soya\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['tofu', 'soy sauce', 'soy milk', 'edamame', 'tempeh', 'miso', 'soybean oil', 'soy flour', 'soy nuts', 'soy protein']"}
{"cat":"food","slot":"specialization","value":"lemon juice","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of lemon juice in terms of their hyponyms.\";         A textual example of the semantic relation is \"are lemon juice\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['lemon juice', 'citrus juice', 'fruit juice', 'sour juice', 'natural juice', 'refreshing drink', 'vitamin C source', 'culinary ingredient', 'flavoring agent', 'preservative']"}
{"cat":"food","slot":"specialization","value":"string cheese","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of string cheese in terms of their hyponyms.\";         A textual example of the semantic relation is \"are string cheese\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['mozzarella', 'provolone', 'cheddar', 'parmesan', 'swiss', 'pepper jack', 'asiago', 'feta', 'goat cheese', 'ricotta']"}
{"cat":"food","slot":"specialization","value":"hotdog","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of hotdog in terms of their hyponyms.\";         A textual example of the semantic relation is \"are hotdog\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['hotdog', 'sausage', 'wiener', 'frankfurter', 'bratwurst', 'kielbasa', 'chorizo', 'andouille', 'knackwurst', 'veggie dog']"}
{"cat":"food","slot":"specialization","value":"bap","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of bap in terms of their hyponyms.\";         A textual example of the semantic relation is \"are bap\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['bread', 'bun', 'roll', 'bagel', 'croissant', 'muffin', 'pita', 'naan', 'tortilla', 'flatbread']"}
{"cat":"food","slot":"specialization","value":"processed cheese","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of processed cheese in terms of their hyponyms.\";         A textual example of the semantic relation is \"are processed cheese\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"cheddar\", \"swiss\", \"american\", \"mozzarella\", \"parmesan\", \"gouda\", \"edam\", \"provolone\", \"gruyere\"]"}
{"cat":"food","slot":"specialization","value":"hard wheat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of hard wheat in terms of their hyponyms.\";         A textual example of the semantic relation is \"are hard wheat\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['durum', 'semolina', 'pasta', 'couscous', 'bulgur', 'kamut', 'spelt', 'emmer', 'farro']"}
{"cat":"food","slot":"specialization","value":"hero sandwich","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of hero sandwich in terms of their hyponyms.\";         A textual example of the semantic relation is \"are hero sandwich\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['Italian', 'submarine', 'club', 'turkey', 'ham', 'roast beef', 'chicken', 'veggie', 'meatball', 'Philly cheesesteak']"}
{"cat":"food","slot":"specialization","value":"Burgundy wine","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of Burgundy wine in terms of their hyponyms.\";         A textual example of the semantic relation is \"are Burgundy wine\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['Pinot Noir', 'Chardonnay', 'Aligot\u00e9', 'Gamay', 'Sauvignon Blanc', 'Cabernet Sauvignon', 'Merlot', 'Syrah', 'Pinot Blanc', 'Pinot Gris']"}
{"cat":"food","slot":"specialization","value":"cracked-wheat bread","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of cracked-wheat bread in terms of their hyponyms.\";         A textual example of the semantic relation is \"are cracked-wheat bread\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['cracked-wheat bread', 'cracked-wheat loaf', 'cracked-wheat roll', 'cracked-wheat bun', 'cracked-wheat bagel', 'cracked-wheat muffin', 'cracked-wheat pancake', 'cracked-wheat waffle', 'cracked-wheat p"}
{"cat":"food","slot":"specialization","value":"hand cheese","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of hand cheese in terms of their hyponyms.\";         A textual example of the semantic relation is \"are hand cheese\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['hand cheese', 'cheese', 'dairy product', 'food', 'protein', 'fat', 'carbohydrate', 'salt', 'flavor', 'texture']"}
{"cat":"food","slot":"specialization","value":"Cuban sandwich","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of Cuban sandwich in terms of their hyponyms.\";         A textual example of the semantic relation is \"are Cuban sandwich\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['Cuban_sandwich', 'sandwich', 'bread', 'meat', 'cheese', 'pickles', 'mustard', 'ham', 'pork', 'roast']"}
{"cat":"food","slot":"specialization","value":"ice coffee","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of ice coffee in terms of their hyponyms.\";         A textual example of the semantic relation is \"are ice coffee\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['iced coffee', 'frappuccino', 'cold brew', 'iced latte', 'iced mocha', 'iced americano', 'iced cappuccino', 'iced macchiato', 'iced espresso', 'iced caramel macchiato']"}
{"cat":"food","slot":"specialization","value":"hot dog","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of hot dog in terms of their hyponyms.\";         A textual example of the semantic relation is \"are hot dog\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['wiener', 'frankfurter', 'sausage', 'bratwurst', 'kielbasa', 'bologna', 'salami', 'pepperoni', 'chicken dog', 'veggie dog']"}
{"cat":"food","slot":"specialization","value":"pyxidium","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of pyxidium in terms of their hyponyms.\";         A textual example of the semantic relation is \"are pyxidium\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['apple', 'banana', 'cherry', 'grape', 'lemon', 'mango', 'orange', 'pear', 'strawberry']"}
{"cat":"food","slot":"specialization","value":"sun tea","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of sun tea in terms of their hyponyms.\";         A textual example of the semantic relation is \"are sun tea\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['iced', 'sweetened', 'brewed', 'flavored', 'infused', 'lemon', 'mint', 'herbal', 'fruity', 'spiced']"}
{"cat":"food","slot":"specialization","value":"demitasse","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of demitasse in terms of their hyponyms.\";         A textual example of the semantic relation is \"are demitasse\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"espresso\", \"latte\", \"cappuccino\", \"macchiato\", \"mocha\", \"americano\", \"frappuccino\", \"cortado\", \"flat white\", \"red eye\"]"}
{"cat":"food","slot":"specialization","value":"Limburger","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of Limburger in terms of their hyponyms.\";         A textual example of the semantic relation is \"are Limburger\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['cheese', 'dairy', 'protein', 'fat', 'calcium', 'lactose', 'milk', 'curd', 'whey', 'rennet']"}
{"cat":"food","slot":"specialization","value":"Armerican cheddar","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of Armerican cheddar in terms of their hyponyms.\";         A textual example of the semantic relation is \"are Armerican cheddar\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['cheddar', 'cheese', 'dairy', 'food', 'protein', 'fat', 'calcium', 'nutrient', 'ingredient', 'product']"}
{"cat":"food","slot":"specialization","value":"table wine","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of table wine in terms of their hyponyms.\";         A textual example of the semantic relation is \"are table wine\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"Chardonnay\", \"Pinot Gris\", \"Riesling\", \"Sauvignon Blanc\", \"Cabernet Sauvignon\", \"Merlot\", \"Pinot Noir\", \"Syrah\", \"Zinfandel\", \"Chianti\"]"}
{"cat":"food","slot":"specialization","value":"pyxis","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of pyxis in terms of their hyponyms.\";         A textual example of the semantic relation is \"are pyxis\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['pizza', 'sushi', 'hamburger', 'taco', 'salad', 'pasta', 'curry', 'dumplings', 'soup', 'ice cream']"}
{"cat":"food","slot":"specialization","value":"wish-wash","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of wish-wash in terms of their hyponyms.\";         A textual example of the semantic relation is \"are wish-wash\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['salad', 'soup', 'stew', 'curry', 'stir-fry', 'omelette', 'quiche', 'sandwich', 'wrap', 'smoothie']"}
{"cat":"food","slot":"specialization","value":"cafe royale","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of cafe royale in terms of their hyponyms.\";         A textual example of the semantic relation is \"are cafe royale\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"coffee\", \"tea\", \"sandwich\", \"pastry\", \"cake\", \"muffin\", \"scone\", \"croissant\", \"panini\", \"quiche\"]"}
{"cat":"food","slot":"specialization","value":"Fragaria virginiana","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of Fragaria virginiana in terms of their hyponyms.\";         A textual example of the semantic relation is \"are Fragaria virginiana\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['strawberry', 'berry', 'fruit', 'plant', 'edible', 'sweet', 'red', 'juicy', 'summer', 'garden']"}
{"cat":"food","slot":"specialization","value":"red wine","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of red wine in terms of their hyponyms.\";         A textual example of the semantic relation is \"are red wine\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['merlot', 'cabernet sauvignon', 'pinot noir', 'syrah', 'zinfandel', 'malbec', 'barbera', 'grenache', 'chianti', 'rioja']"}
{"cat":"food","slot":"specialization","value":"goat cheese","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of goat cheese in terms of their hyponyms.\";         A textual example of the semantic relation is \"are goat cheese\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['chevre', 'cabecou', 'crottin de chavignol', 'picodon', 'pouligny-saint-pierre', 'saint-marcellin', 'valencay', 'chevrotin', 'brocciu', 'cabri']"}
{"cat":"food","slot":"specialization","value":"Triticum spelta","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of Triticum spelta in terms of their hyponyms.\";         A textual example of the semantic relation is \"are Triticum spelta\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['spelt', 'spelt flour', 'spelt bread', 'spelt pasta', 'spelt flakes', 'spelt cereal', 'spelt noodles', 'spelt crackers', 'spelt cookies', 'spelt cakes']"}
{"cat":"food","slot":"specialization","value":"Triticum aestivum spelta","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of Triticum aestivum spelta in terms of their hyponyms.\";         A textual example of the semantic relation is \"are Triticum aestivum spelta\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"spelt\", \"spelt flour\", \"spelt bread\", \"spelt pasta\", \"spelt flakes\", \"spelt cereal\", \"spelt crackers\", \"spelt cookies\", \"spelt cakes\", \"spelt pancakes\"]"}
{"cat":"food","slot":"specialization","value":"pretzel","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of pretzel in terms of their hyponyms.\";         A textual example of the semantic relation is \"are pretzel\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['soft pretzel', 'hard pretzel', 'pretzel sticks', 'pretzel bites', 'pretzel nuggets', 'pretzel twists', 'pretzel knots', 'pretzel rings', 'pretzel logs', 'pretzel rods']"}
{"cat":"food","slot":"specialization","value":"cappuccino coffee","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of cappuccino coffee in terms of their hyponyms.\";         A textual example of the semantic relation is \"are cappuccino coffee\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['cappuccino', 'espresso', 'milk', 'foam', 'coffee', 'latte', 'mocha', 'americano', 'macchiato', 'frappuccino']"}
{"cat":"food","slot":"specialization","value":"multiple fruit","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of multiple fruit in terms of their hyponyms.\";         A textual example of the semantic relation is \"are multiple fruit\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"banana\", \"apple\", \"orange\", \"grape\", \"peach\", \"mango\", \"kiwi\", \"pineapple\", \"strawberry\"]"}
{"cat":"food","slot":"specialization","value":"tunaburger","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of tunaburger in terms of their hyponyms.\";         A textual example of the semantic relation is \"are tunaburger\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['tuna', 'fish', 'seafood', 'meat', 'protein', 'sandwich', 'burger', 'fast food', 'food', 'edible']"}
{"cat":"food","slot":"specialization","value":"capitulum","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of capitulum in terms of their hyponyms.\";         A textual example of the semantic relation is \"are capitulum\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['lettuce', 'cabbage', 'broccoli', 'cauliflower', 'kale', 'brussels sprouts', 'collard greens', 'arugula', 'endive', 'radicchio']"}
{"cat":"food","slot":"specialization","value":"salmagundi","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of salmagundi in terms of their hyponyms.\";         A textual example of the semantic relation is \"are salmagundi\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['salad', 'soup', 'stew', 'casserole', 'stir-fry', 'curry', 'chili', 'pizza', 'omelette', 'paella']"}
{"cat":"food","slot":"specialization","value":"butty","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of butty in terms of their hyponyms.\";         A textual example of the semantic relation is \"are butty\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['sandwich', 'bacon', 'cheese', 'lettuce', 'tomato', 'ham', 'tuna', 'chicken', 'salad', 'egg']"}
{"cat":"food","slot":"specialization","value":"cracker","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of cracker in terms of their hyponyms.\";         A textual example of the semantic relation is \"are cracker\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['water', 'salt', 'flour', 'butter', 'sugar', 'yeast', 'cheese', 'corn', 'oats', 'wheat']"}
{"cat":"food","slot":"specialization","value":"English muffin","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of English muffin in terms of their hyponyms.\";         A textual example of the semantic relation is \"are English muffin\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['muffin', 'bread', 'baked good', 'breakfast food', 'quick bread', 'yeast bread', 'sourdough bread', 'sweet bread', 'tea cake', 'crumpet']"}
{"cat":"food","slot":"specialization","value":"May apple","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of May apple in terms of their hyponyms.\";         A textual example of the semantic relation is \"are May apple\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['apple', 'fruit', 'plant', 'vegetable', 'produce', 'organic', 'healthy', 'nutritious', 'edible', 'tasty']"}
{"cat":"food","slot":"specialization","value":"Pinot Noir","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of Pinot Noir in terms of their hyponyms.\";         A textual example of the semantic relation is \"are Pinot Noir\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['Pinot Noir', 'red wine', 'wine', 'grapes', 'alcoholic beverage', 'beverage', 'food', 'drink', 'fermented grape juice', 'French wine']"}
{"cat":"food","slot":"specialization","value":"crab apple","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of crab apple in terms of their hyponyms.\";         A textual example of the semantic relation is \"are crab apple\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['apple', 'crab apple', 'fruit', 'edible', 'sweet', 'tart', 'juicy', 'crunchy', 'red', 'green']"}
{"cat":"food","slot":"specialization","value":"Virginia strawberry","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of Virginia strawberry in terms of their hyponyms.\";         A textual example of the semantic relation is \"are Virginia strawberry\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['strawberry', 'fruit', 'berry', 'food', 'produce', 'snack', 'dessert', 'juice', 'jam', 'pie']"}
{"cat":"food","slot":"specialization","value":"ale","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of ale in terms of their hyponyms.\";         A textual example of the semantic relation is \"are ale\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['pale ale', 'IPA', 'stout', 'porter', 'wheat beer', 'lager', 'pilsner', 'saison', 'barleywine', 'sour beer']"}
{"cat":"food","slot":"specialization","value":"mozzarella","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of mozzarella in terms of their hyponyms.\";         A textual example of the semantic relation is \"are mozzarella\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"cheese\", \"dairy product\", \"Italian food\", \"pizza topping\", \"fresh cheese\", \"string cheese\", \"mozzarella di bufala\", \"low-moisture mozzarella\", \"smoked mozzarella\", \"mozzarella fior di latte\"]"}
{"cat":"food","slot":"specialization","value":"cultivated strawberry","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of cultivated strawberry in terms of their hyponyms.\";         A textual example of the semantic relation is \"are cultivated strawberry\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['Elsanta', 'Albion', 'Chandler', 'Sweet Charlie', 'Darselect', 'Eros', 'Gaviota', 'Selva', 'Camarosa', 'Candonga']"}
{"cat":"food","slot":"specialization","value":"durum","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of durum in terms of their hyponyms.\";         A textual example of the semantic relation is \"are durum\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['pasta', 'couscous', 'bulgur', 'tabbouleh', 'kibbeh', 'manti', 'kufte', 'borek', 'baklava', 'kunafa']"}
{"cat":"food","slot":"specialization","value":"ginger beer","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of ginger beer in terms of their hyponyms.\";         A textual example of the semantic relation is \"are ginger beer\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"ginger\", \"beer\", \"ale\", \"lager\", \"stout\", \"pilsner\", \"porter\", \"sour\", \"sweet\", \"spicy\"]"}
{"cat":"food","slot":"specialization","value":"fruit juice","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of fruit juice in terms of their hyponyms.\";         A textual example of the semantic relation is \"are fruit juice\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"apple\", \"grape\", \"orange\", \"pineapple\", \"strawberry\", \"banana\", \"cherry\", \"watermelon\", \"kiwi\", \"mango\"]"}
{"cat":"food","slot":"specialization","value":"tea","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of tea in terms of their hyponyms.\";         A textual example of the semantic relation is \"are tea\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['black', 'green', 'white', 'oolong', 'pu-erh', 'herbal', 'chai', 'matcha', 'rooibos', 'kombucha']"}
{"cat":"food","slot":"specialization","value":"soft wheat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of soft wheat in terms of their hyponyms.\";         A textual example of the semantic relation is \"are soft wheat\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['bread', 'pasta', 'cakes', 'cookies', 'muffins', 'pancakes', 'tortillas', 'rolls', 'buns', 'croissants']"}
{"cat":"food","slot":"specialization","value":"scarlet strawberry","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of scarlet strawberry in terms of their hyponyms.\";         A textual example of the semantic relation is \"are scarlet strawberry\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['strawberry', 'fruit', 'berry', 'produce', 'red fruit', 'edible fruit', 'garden strawberry', 'Fragaria', 'dessert', 'healthy snack']"}
{"cat":"food","slot":"specialization","value":"Uruguay potato","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of Uruguay potato in terms of their hyponyms.\";         A textual example of the semantic relation is \"are Uruguay potato\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['Uruguay potato', 'white potato', 'purple potato', 'red potato', 'yellow potato', 'sweet potato', 'fingerling potato', 'new potato', 'petite potato', 'baby potato']"}
{"cat":"food","slot":"specialization","value":"naan","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of naan in terms of their hyponyms.\";         A textual example of the semantic relation is \"are naan\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['garlic', 'butter', 'cheese', 'kebab', 'chicken', 'onion', 'spinach', 'paneer', 'lamb', 'beef']"}
{"cat":"food","slot":"specialization","value":"seckel pear","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of seckel pear in terms of their hyponyms.\";         A textual example of the semantic relation is \"are seckel pear\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['pear', 'fruit', 'food', 'produce', 'organic', 'sweet', 'juicy', 'healthy', 'seasonal', 'delicious']"}
{"cat":"food","slot":"specialization","value":"western sandwich","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of western sandwich in terms of their hyponyms.\";         A textual example of the semantic relation is \"are western sandwich\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['hamburger', 'cheeseburger', 'grilled cheese', 'BLT', 'club sandwich', 'reuben', 'tuna melt', 'turkey club', 'chicken salad', 'veggie burger']"}
{"cat":"food","slot":"howToUse","value":"peel","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the actions or states required to operate, employ, interact with or perceive the existence of peel.\";         A textual example of the semantic relation is \"can be used for peel\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['banana', 'orange', 'apple', 'grapefruit', 'kiwi', 'mango', 'potato', 'carrot', 'onion']"}
{"cat":"food","slot":"howToUse","value":"yield","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the actions or states required to operate, employ, interact with or perceive the existence of yield.\";         A textual example of the semantic relation is \"can be used for yield\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['harvest', 'gather', 'reap', 'collect', 'pick', 'pluck', 'cull', 'gather', 'accumulate', 'amass']"}
{"cat":"food","slot":"howToUse","value":"yield","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the actions or states required to operate, employ, interact with or perceive the existence of yield.\";         A textual example of the semantic relation is \"can be used for yield\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['harvest', 'gather', 'reap', 'collect', 'pick', 'pluck', 'cull', 'gather', 'accumulate', 'amass']"}
{"cat":"food","slot":"howToUse","value":"toast","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the actions or states required to operate, employ, interact with or perceive the existence of toast.\";         A textual example of the semantic relation is \"can be used for toast\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['bread', 'butter', 'jam', 'knife', 'toaster', 'electricity', 'oven', 'plate', 'spread', 'slicer']"}
{"cat":"food","slot":"howToUse","value":"shuck","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the actions or states required to operate, employ, interact with or perceive the existence of shuck.\";         A textual example of the semantic relation is \"can be used for shuck\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['knife', 'fork', 'spoon', 'shell', 'corn', 'oyster', 'clam', 'pea', 'bean', 'corncob']"}
{"cat":"food","slot":"part","value":"water","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the constitutive parts of water.\";         A textual example of the semantic relation is \"can have water\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"apple\", \"banana\", \"orange\", \"grape\", \"strawberry\", \"pear\", \"cherry\", \"blueberry\", \"kiwi\"]"}
{"cat":"food","slot":"part","value":"pastry","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the constitutive parts of pastry.\";         A textual example of the semantic relation is \"can have pastry\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['dough', 'flour', 'sugar', 'eggs', 'butter', 'milk', 'yeast', 'salt', 'fruit', 'chocolate']"}
{"cat":"food","slot":"place","value":"bottle","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the entities in which bottle can be experienced, found or perceived.\";         A textual example of the semantic relation is \"can be found or used in bottles\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['wine', 'beer', 'milk', 'juice', 'vinegar', 'oil', 'sauce', 'honey', 'soda', 'water']"}
{"cat":"food","slot":"generalization","value":"gourd","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of gourd related to hypernyms.\";         A textual example of the semantic relation is \"are gourd\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"pumpkin\", \"squash\", \"melon\", \"cucumber\", \"zucchini\", \"gourd\", \"cantaloupe\", \"watermelon\", \"honeydew\", \"pumpkin\"]"}
{"cat":"food","slot":"accessory","value":"cereal","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All those objects that may have to do with cereal. The constraint is that there must be a physical contact and that the use of such object is strictly necessary for cereal.\";         A textual example of the semantic relation is \"are related with cereal\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['spoon', 'bowl', 'cereal box', 'milk jug', 'cereal dispenser', 'cereal bar', 'cereal cup', 'cereal scoop', 'cereal bag', 'cereal container']"}
{"cat":"food","slot":"product","value":"wheat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All types of entity that can be derived from wheat through its processing or through natural processes.\";         A textual example of the semantic relation is \"can produce wheat\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"bread\", \"pasta\", \"cereal\", \"flour\", \"crackers\", \"cakes\", \"cookies\", \"pizza\", \"tortillas\", \"noodles\"]"}
{"cat":"food","slot":"specialization","value":"wheat berry","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of wheat berry in terms of their hyponyms.\";         A textual example of the semantic relation is \"are wheat berry\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['durum', 'hard', 'soft', 'red', 'white', 'bread', 'pastry', 'semolina', 'bulgur', 'couscous']"}
{"cat":"food","slot":"specialization","value":"corn","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of corn in terms of their hyponyms.\";         A textual example of the semantic relation is \"are corn\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"corn\", \"maize\", \"popcorn\", \"cornmeal\", \"cornstarch\", \"hominy\", \"grits\", \"corn syrup\", \"corn oil\", \"corn flour\"]"}
{"cat":"food","slot":"product","value":"peel","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All types of entity that can be derived from peel through its processing or through natural processes.\";         A textual example of the semantic relation is \"can produce peel\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['orange', 'apple', 'banana', 'potato', 'onion', 'carrot', 'cucumber', 'peach', 'grapefruit', 'lemon']"}
{"cat":"food","slot":"part","value":"flour","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the constitutive parts of flour.\";         A textual example of the semantic relation is \"can have flour\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"wheat\", \"grain\", \"starch\", \"gluten\", \"protein\", \"fiber\", \"minerals\", \"vitamins\", \"carbohydrates\", \"fat\"]"}
{"cat":"food","slot":"product","value":"orchard","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All types of entity that can be derived from orchard through its processing or through natural processes.\";         A textual example of the semantic relation is \"can produce orchard\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['apple', 'pear', 'cherry', 'apricot', 'plum', 'grape', 'orange', 'lemon', 'lime', 'fig']"}
{"cat":"food","slot":"product","value":"cereal","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All types of entity that can be derived from cereal through its processing or through natural processes.\";         A textual example of the semantic relation is \"can produce cereal\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['bread', 'pasta', 'cereal', 'cornmeal', 'flour', 'oatmeal', 'malt', 'beer', 'whiskey', 'vodka']"}
{"cat":"food","slot":"specialization","value":"rice","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of rice in terms of their hyponyms.\";         A textual example of the semantic relation is \"are rice\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['basmati', 'jasmine', 'arborio', 'brown', 'wild', 'sticky', 'sushi', 'black', 'red', 'white']"}
{"cat":"food","slot":"specialization","value":"gourd","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of gourd in terms of their hyponyms.\";         A textual example of the semantic relation is \"are gourd\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['pumpkin', 'squash', 'cucumber', 'melon', 'gourd', 'zucchini', 'cantaloupe', 'watermelon', 'honeydew', 'courgette']"}
{"cat":"food","slot":"specialization","value":"cooler","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of cooler in terms of their hyponyms.\";         A textual example of the semantic relation is \"are cooler\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"pizza\", \"ice cream\", \"sandwich\", \"salad\", \"sushi\", \"fruit\", \"cheese\", \"meat\", \"vegetables\", \"bread\"]"}
{"cat":"food","slot":"specialization","value":"varietal","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of varietal in terms of their hyponyms.\";         A textual example of the semantic relation is \"are varietal\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['apple', 'banana', 'cherry', 'grape', 'lemon', 'mango', 'orange', 'peach', 'strawberry']"}
{"cat":"food","slot":"specialization","value":"sweet corn","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of sweet corn in terms of their hyponyms.\";         A textual example of the semantic relation is \"are sweet corn\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"corn\", \"maize\", \"sweet corn\", \"corn on the cob\", \"popcorn\", \"cornmeal\", \"cornstarch\", \"hominy\", \"polenta\", \"grits\"]"}
{"cat":"food","slot":"specialization","value":"toast","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of toast in terms of their hyponyms.\";         A textual example of the semantic relation is \"are toast\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['butter', 'jam', 'honey', 'cheese', 'cinnamon', 'peanut butter', 'avocado', 'nutella', 'bacon', 'cream cheese']"}
{"cat":"food","slot":"specialization","value":"burger","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of burger in terms of their hyponyms.\";         A textual example of the semantic relation is \"are burger\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['cheeseburger', 'hamburger', 'beefburger', 'veggieburger', 'baconburger', 'chickenburger', 'turkeyburger', 'salmonburger', 'shrimpburger', 'lobsterburger']"}
{"cat":"food","slot":"specialization","value":"green corn","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of green corn in terms of their hyponyms.\";         A textual example of the semantic relation is \"are green corn\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['green corn', 'maize', 'corn on the cob', 'sweet corn', 'corn kernels', 'cornmeal', 'cornstarch', 'corn syrup', 'corn oil', 'corn flour']"}
{"cat":"food","slot":"specialization","value":"loaf","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of loaf in terms of their hyponyms.\";         A textual example of the semantic relation is \"are loaf\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['bread', 'loaf', 'baguette', 'sourdough', 'rye', 'whole wheat', 'white', 'pumpernickel', 'focaccia', 'ciabatta']"}
{"cat":"food","slot":"howToUse","value":"butter","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the actions or states required to operate, employ, interact with or perceive the existence of butter.\";         A textual example of the semantic relation is \"can be used for butter\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"bread\", \"toast\", \"pancakes\", \"waffles\", \"corn\", \"potatoes\", \"pasta\", \"vegetables\", \"fruit\", \"meat\"]"}
{"cat":"food","slot":"specialization","value":"wheat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of wheat in terms of their hyponyms.\";         A textual example of the semantic relation is \"are wheat\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"bread\", \"cereal\", \"flour\", \"pasta\", \"noodles\", \"crackers\", \"biscuit\", \"tortilla\", \"pita\", \"naan\"]"}
{"cat":"food","slot":"specialization","value":"intoxicant","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of intoxicant in terms of their hyponyms.\";         A textual example of the semantic relation is \"are intoxicant\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['alcohol', 'beer', 'wine', 'spirits', 'liquor', 'cider', 'malt', 'ale', 'stout', 'lager']"}
{"cat":"food","slot":"specialization","value":"inebriant","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of inebriant in terms of their hyponyms.\";         A textual example of the semantic relation is \"are inebriant\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['beer', 'wine', 'champagne', 'vodka', 'rum', 'tequila', 'whiskey', 'gin', 'brandy', 'liqueur']"}
{"cat":"food","slot":"specialization","value":"alcoholic drink","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of alcoholic drink in terms of their hyponyms.\";         A textual example of the semantic relation is \"are alcoholic drink\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"beer\", \"wine\", \"liquor\", \"cocktail\", \"martini\", \"margarita\", \"whiskey\", \"vodka\", \"rum\", \"gin\"]"}
{"cat":"food","slot":"specialization","value":"alcohol","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of alcohol in terms of their hyponyms.\";         A textual example of the semantic relation is \"are alcohol\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['beer', 'wine', 'vodka', 'whiskey', 'rum', 'tequila', 'gin', 'brandy', 'liqueur']"}
{"cat":"food","slot":"specialization","value":"alcoholic beverage","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of alcoholic beverage in terms of their hyponyms.\";         A textual example of the semantic relation is \"are alcoholic beverage\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"beer\", \"wine\", \"whiskey\", \"vodka\", \"rum\", \"tequila\", \"gin\", \"brandy\", \"liqueur\"]"}
{"cat":"food","slot":"place","value":"salad","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"All the entities in which salad can be experienced, found or perceived.\";         A textual example of the semantic relation is \"can be found or used in salads\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['lettuce', 'tomato', 'cucumber', 'carrot', 'onion', 'olive', 'cheese', 'dressing', 'croutons', 'avocado']"}
{"cat":"food","slot":"specialization","value":"milk","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of milk in terms of their hyponyms.\";         A textual example of the semantic relation is \"are milk\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"whole milk\", \"skim milk\", \"low-fat milk\", \"non-fat milk\", \"lactose-free milk\", \"organic milk\", \"raw milk\", \"goat milk\", \"sheep milk\", \"buffalo milk\"]"}
{"cat":"food","slot":"generalization","value":"root","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of root related to hypernyms.\";         A textual example of the semantic relation is \"are root\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['apple', 'banana', 'carrot', 'potato', 'onion', 'garlic', 'ginger', 'radish', 'turnip']"}
{"cat":"food","slot":"specialization","value":"rose","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of rose in terms of their hyponyms.\";         A textual example of the semantic relation is \"are rose\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"apple\", \"banana\", \"bread\", \"cake\", \"cheese\", \"chicken\", \"egg\", \"fish\", \"hamburger\", \"ice cream\"]"}
{"cat":"food","slot":"specialization","value":"edible fruit","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of edible fruit in terms of their hyponyms.\";         A textual example of the semantic relation is \"are edible fruit\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['apple', 'banana', 'grape', 'orange', 'pear', 'pineapple', 'strawberry', 'watermelon', 'kiwi']"}
{"cat":"food","slot":"specialization","value":"popcorn","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of popcorn in terms of their hyponyms.\";         A textual example of the semantic relation is \"are popcorn\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['popcorn', 'kettle corn', 'caramel corn', 'cheese popcorn', 'butter popcorn', 'sweet popcorn', 'salty popcorn', 'white popcorn', 'yellow popcorn', 'red popcorn']"}
{"cat":"food","slot":"specialization","value":"pome","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of pome in terms of their hyponyms.\";         A textual example of the semantic relation is \"are pome\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['apple', 'pear', 'quince', 'loquat', 'medlar', 'hawthorn', 'serviceberry', 'rowan', 'mountain ash']"}
{"cat":"food","slot":"specialization","value":"cider","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of cider in terms of their hyponyms.\";         A textual example of the semantic relation is \"are cider\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"dry\", \"sweet\", \"sparkling\", \"still\", \"hard\", \"soft\", \"apple\", \"pear\", \"fruit\", \"alcoholic\"]"}
{"cat":"food","slot":"specialization","value":"seed","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"food\";         The returned words must satisfy the semantic relation \"Classification of seed in terms of their hyponyms.\";         A textual example of the semantic relation is \"are seed\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['sunflower', 'pumpkin', 'flax', 'sesame', 'mustard', 'poppy', 'cumin', 'coriander', 'caraway', 'dill']"}
{"cat":"vehicles","slot":"time","value":"holiday","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the entries which link holiday with the time flow or with specific moments of time.\";         A textual example of the semantic relation is \"can be consumed or used during holiday\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'bus', 'train', 'plane', 'boat', 'bicycle', 'motorcycle', 'scooter', 'truck', 'taxi']"}
{"cat":"vehicles","slot":"accessory","value":"cargo trailer","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All those objects that may have to do with cargo trailer. The constraint is that there must be a physical contact and that the use of such object is strictly necessary for cargo trailer.\";         A textual example of the semantic relation is \"are related with cargo trailer\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['truck', 'trailer', 'caravan', 'van', 'lorry', 'tow truck', 'semi-trailer', 'pickup', 'hauler', 'towing vehicle']"}
{"cat":"vehicles","slot":"accessory","value":"mower","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All those objects that may have to do with mower. The constraint is that there must be a physical contact and that the use of such object is strictly necessary for mower.\";         A textual example of the semantic relation is \"are related with mower\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['lawn', 'grass', 'blade', 'engine', 'tire', 'steering wheel', 'seat', 'fuel', 'handle', 'deck']"}
{"cat":"vehicles","slot":"accessory","value":"scraper","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All those objects that may have to do with scraper. The constraint is that there must be a physical contact and that the use of such object is strictly necessary for scraper.\";         A textual example of the semantic relation is \"are related with scraper\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['truck', 'trailer', 'bulldozer', 'excavator', 'loader', 'crane', 'forklift', 'tractor', 'backhoe', 'digger']"}
{"cat":"vehicles","slot":"accessory","value":"trailer","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All those objects that may have to do with trailer. The constraint is that there must be a physical contact and that the use of such object is strictly necessary for trailer.\";         A textual example of the semantic relation is \"are related with trailer\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['truck', 'caravan', 'camper', 'motorhome', 'trailer hitch', 'tow bar', 'towing vehicle', 'tow rope', 'towing system', 'towing mirror']"}
{"cat":"vehicles","slot":"accessory","value":"seeder","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All those objects that may have to do with seeder. The constraint is that there must be a physical contact and that the use of such object is strictly necessary for seeder.\";         A textual example of the semantic relation is \"are related with seeder\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['tractor', 'combine', 'planter', 'sprayer', 'tillage', 'harvester', 'drone', 'truck', 'grain cart', 'trailer']"}
{"cat":"vehicles","slot":"accessory","value":"plough","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All those objects that may have to do with plough. The constraint is that there must be a physical contact and that the use of such object is strictly necessary for plough.\";         A textual example of the semantic relation is \"are related with plough\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"tractor\", \"plough\", \"combine\", \"harvester\", \"truck\", \"trailer\", \"tiller\", \"seeder\", \"harrow\", \"sprayer\"]"}
{"cat":"vehicles","slot":"content","value":"luggage","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the entities which might be contained within luggage, without being constitutive parts of it.\";         A textual example of the semantic relation is \"contain luggage\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'truck', 'van', 'bus', 'train', 'airplane', 'ship', 'boat', 'bike', 'motorcycle']"}
{"cat":"vehicles","slot":"content","value":"goods","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the entities which might be contained within goods, without being constitutive parts of it.\";         A textual example of the semantic relation is \"contain goodss\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['truck', 'van', 'car', 'bus', 'train', 'ship', 'airplane', 'motorcycle', 'bicycle', 'scooter']"}
{"cat":"vehicles","slot":"shape","value":"long","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Form of long.\";         A textual example of the semantic relation is \"can be long\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['train', 'ship', 'airplane', 'bus', 'limousine', 'truck', 'cruise ship', 'yacht', 'motorcycle', 'car']"}
{"cat":"vehicles","slot":"shape","value":"elongated","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Form of elongated.\";         A textual example of the semantic relation is \"can be elongated\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'bus', 'train', 'truck', 'van', 'motorcycle', 'bicycle', 'airplane', 'boat', 'submarine']"}
{"cat":"vehicles","slot":"efficiency","value":"streamlined","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Positive (efficiency) or negative (inefficiency) features of streamlined related to their function.\";         A textual example of the semantic relation is \"can be streamlined\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['sleek', 'aerodynamic', 'smooth', 'curved', 'fast', 'efficient', 'low-drag', 'modern', 'innovative', 'stylish']"}
{"cat":"vehicles","slot":"efficiency","value":"sinkable","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Positive (efficiency) or negative (inefficiency) features of sinkable related to their function.\";         A textual example of the semantic relation is \"can be sinkable\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['fast', 'slow', 'maneuverable', 'unmaneuverable', 'safe', 'unsafe', 'reliable', 'unreliable', 'efficient', 'inefficient']"}
{"cat":"vehicles","slot":"efficiency","value":"polluting","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Positive (efficiency) or negative (inefficiency) features of polluting related to their function.\";         A textual example of the semantic relation is \"can be polluting\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"electric car\", \"hybrid car\", \"public transport\", \"bike\", \"walking\", \"carpooling\", \"solar-powered vehicle\", \"hydrogen fuel cell vehicle\", \"electric scooter\", \"electric bus\"]"}
{"cat":"vehicles","slot":"efficiency","value":"aerodynamic","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Positive (efficiency) or negative (inefficiency) features of aerodynamic related to their function.\";         A textual example of the semantic relation is \"can be aerodynamic\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['aerodynamic', 'streamlined', 'sleek', 'aerodynamically designed', 'wind-tunnel tested', 'drag-reducing', 'airflow optimized', 'low-drag', 'air resistance minimized', 'efficient']"}
{"cat":"vehicles","slot":"size","value":"large","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Size of large.\";         A textual example of the semantic relation is \"can be large\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['ship', 'aircraft', 'cruise liner', 'train', 'bus', 'truck', 'tanker', 'yacht', 'submarine', 'airliner']"}
{"cat":"vehicles","slot":"size","value":"big","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Size of big.\";         A textual example of the semantic relation is \"can be big\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['airplane', 'bus', 'cruise ship', 'train', 'truck', 'van', 'yacht', 'limousine', 'motorhome']"}
{"cat":"vehicles","slot":"supply","value":"diesel","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"The power mode that allows the functioning of diesel.\";         A textual example of the semantic relation is \"use diesel\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['diesel', 'engine', 'fuel', 'tank', 'pump', 'injector', 'combustion', 'turbocharger', 'exhaust', 'system']"}
{"cat":"vehicles","slot":"supply","value":"electricity","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"The power mode that allows the functioning of electricity.\";         A textual example of the semantic relation is \"use electricity\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['electric car', 'electric vehicle', 'EV', 'hybrid car', 'plug-in hybrid', 'electric bus', 'electric truck', 'electric motorcycle', 'electric bicycle', 'electric scooter']"}
{"cat":"vehicles","slot":"supply","value":"kerosene","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"The power mode that allows the functioning of kerosene.\";         A textual example of the semantic relation is \"use kerosene\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['jet', 'airplane', 'aircraft', 'boeing', 'airbus', 'turboprop', 'helicopter', 'rocket', 'spacecraft', 'missile']"}
{"cat":"vehicles","slot":"supply","value":"fuel","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"The power mode that allows the functioning of fuel.\";         A textual example of the semantic relation is \"use fuel\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'truck', 'bus', 'motorcycle', 'airplane', 'train', 'boat', 'submarine', 'tank', 'scooter']"}
{"cat":"vehicles","slot":"supply","value":"power","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"The power mode that allows the functioning of power.\";         A textual example of the semantic relation is \"use power\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'bus', 'train', 'airplane', 'boat', 'motorcycle', 'truck', 'bicycle', 'scooter', 'skateboard']"}
{"cat":"vehicles","slot":"supply","value":"gasoline","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"The power mode that allows the functioning of gasoline.\";         A textual example of the semantic relation is \"use gasoline\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'truck', 'motorcycle', 'bus', 'van', 'SUV', 'convertible', 'sedan', 'coupe', 'hatchback']"}
{"cat":"vehicles","slot":"supply","value":"gas","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"The power mode that allows the functioning of gas.\";         A textual example of the semantic relation is \"use gas\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'truck', 'bus', 'motorcycle', 'SUV', 'van', 'boat', 'airplane', 'train', 'bike']"}
{"cat":"vehicles","slot":"shape","value":"aerodynamic","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Form of aerodynamic.\";         A textual example of the semantic relation is \"can be aerodynamic\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['airplane', 'jet', 'helicopter', 'glider', 'sailplane', 'rocket', 'missile', 'bullet train', 'race car', 'sports car']"}
{"cat":"vehicles","slot":"sound","value":"noisy","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the entries with which the sound of noisy can be described.\";         A textual example of the semantic relation is \"sound noisy\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['train', 'motorcycle', 'airplane', 'bus', 'truck', 'car', 'boat', 'helicopter', 'jet', 'submarine']"}
{"cat":"vehicles","slot":"sound","value":"loud","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the entries with which the sound of loud can be described.\";         A textual example of the semantic relation is \"sound loud\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['airplane', 'train', 'motorcycle', 'bus', 'truck', 'car', 'boat', 'helicopter', 'ship', 'submarine']"}
{"cat":"vehicles","slot":"sound","value":"rumbling","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the entries with which the sound of rumbling can be described.\";         A textual example of the semantic relation is \"sound rumbling\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['train', 'truck', 'bus', 'airplane', 'tank', 'bulldozer', 'motorcycle', 'cruise ship', 'submarine']"}
{"cat":"vehicles","slot":"sound","value":"throbbing","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the entries with which the sound of throbbing can be described.\";         A textual example of the semantic relation is \"can throbbing\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['motorcycle', 'car', 'truck', 'bus', 'train', 'airplane', 'boat', 'helicopter', 'scooter', 'tractor']"}
{"cat":"vehicles","slot":"sound","value":"silent","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the entries with which the sound of silent can be described.\";         A textual example of the semantic relation is \"sound silent\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'bus', 'train', 'bike', 'motorcycle', 'truck', 'van', 'airplane', 'helicopter', 'ship']"}
{"cat":"vehicles","slot":"sound","value":"rumbling","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the entries with which the sound of rumbling can be described.\";         A textual example of the semantic relation is \"can rumbling\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['train', 'truck', 'bus', 'motorcycle', 'tractor', 'airplane', 'boat', 'car', 'submarine', 'helicopter']"}
{"cat":"vehicles","slot":"sound","value":"heavy","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the entries with which the sound of heavy can be described.\";         A textual example of the semantic relation is \"sound heavy\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['tank', 'cargo ship', 'aircraft carrier', 'battleship', 'submarine', 'train', 'cruise liner', 'oil tanker', 'bulk carrier', 'container ship']"}
{"cat":"vehicles","slot":"movement","value":"fast","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Terms that describe the type and speed of movement.\";         A textual example of the semantic relation is \"are fast\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'motorcycle', 'plane', 'train', 'rocket', 'jet', 'sports car', 'racing car', 'speedboat']"}
{"cat":"vehicles","slot":"movement","value":"crash","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Terms that describe the type and speed of movement.\";         A textual example of the semantic relation is \"can crash\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'motorcycle', 'bicycle', 'truck', 'bus', 'train', 'airplane', 'boat', 'helicopter', 'rocket']"}
{"cat":"vehicles","slot":"movement","value":"landing","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Terms that describe the type and speed of movement.\";         A textual example of the semantic relation is \"can landing\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['jet', 'rocket', 'bullet', 'missile', 'aircraft', 'spaceship', 'train', 'car', 'motorcycle', 'bicycle']"}
{"cat":"vehicles","slot":"movement","value":"fly","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Terms that describe the type and speed of movement.\";         A textual example of the semantic relation is \"can fly\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['airplane', 'helicopter', 'rocket', 'jet', 'spaceship', 'car', 'train', 'boat', 'bicycle', 'motorcycle']"}
{"cat":"vehicles","slot":"movement","value":"take-off","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Terms that describe the type and speed of movement.\";         A textual example of the semantic relation is \"can take-off\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['jet', 'rocket', 'helicopter', 'hovercraft', 'motorcycle', 'scooter', 'skateboard', 'bicycle', 'car', 'truck']"}
{"cat":"vehicles","slot":"movement","value":"sail","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Terms that describe the type and speed of movement.\";         A textual example of the semantic relation is \"can sail\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['sailboat', 'yacht', 'speedboat', 'cruise ship', 'ferry', 'hovercraft', 'jet ski', 'catamaran', 'trimaran', 'motorboat']"}
{"cat":"vehicles","slot":"movement","value":"float","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Terms that describe the type and speed of movement.\";         A textual example of the semantic relation is \"can float\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['boat', 'ship', 'airplane', 'helicopter', 'hovercraft', 'submarine', 'sailboat', 'yacht', 'cruise ship', 'speedboat']"}
{"cat":"vehicles","slot":"movement","value":"slow","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Terms that describe the type and speed of movement.\";         A textual example of the semantic relation is \"are slow\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"bike\", \"scooter\", \"moped\", \"tractor\", \"golf cart\", \"rickshaw\", \"horse carriage\", \"segway\", \"skateboard\", \"snowmobile\"]"}
{"cat":"vehicles","slot":"movement","value":"hover","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Terms that describe the type and speed of movement.\";         A textual example of the semantic relation is \"can hover\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"hovercraft\", \"jet\", \"rocket\", \"hoverboard\", \"drone\", \"hoverbike\", \"airship\", \"helicopter\", \"gyrocopter\", \"paraglider\"]"}
{"cat":"vehicles","slot":"movement","value":"trip","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Terms that describe the type and speed of movement.\";         A textual example of the semantic relation is \"can trip\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'bus', 'train', 'bicycle', 'motorcycle', 'truck', 'boat', 'airplane', 'helicopter', 'rocket']"}
{"cat":"vehicles","slot":"movement","value":"hover","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Terms that describe the type and speed of movement.\";         A textual example of the semantic relation is \"can hover\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"hovercraft\", \"jet\", \"rocket\", \"hoverboard\", \"drone\", \"hoverbike\", \"airship\", \"helicopter\", \"gyrocopter\", \"paraglider\"]"}
{"cat":"vehicles","slot":"movement","value":"westbound","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Terms that describe the type and speed of movement.\";         A textual example of the semantic relation is \"are westbound\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'truck', 'bus', 'train', 'plane', 'boat', 'motorcycle', 'bicycle', 'scooter', 'skateboard']"}
{"cat":"vehicles","slot":"movement","value":"southbound","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Terms that describe the type and speed of movement.\";         A textual example of the semantic relation is \"are southbound\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'truck', 'motorcycle', 'bus', 'train', 'airplane', 'ship', 'boat', 'bicycle', 'skateboard']"}
{"cat":"vehicles","slot":"movement","value":"sailing","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Terms that describe the type and speed of movement.\";         A textual example of the semantic relation is \"can sailing\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['sailboat', 'yacht', 'cruise ship', 'speedboat', 'motorboat', 'ferry', 'steamship', 'cargo ship', 'tugboat', 'catamaran']"}
{"cat":"vehicles","slot":"purpose","value":"travelling","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All of the purposes for which travelling is interacted with.\";         A textual example of the semantic relation is \"are used for travelling\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'bus', 'train', 'airplane', 'bike', 'boat', 'truck', 'motorcycle', 'taxi', 'subway']"}
{"cat":"vehicles","slot":"purpose","value":"move","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All of the purposes for which move is interacted with.\";         A textual example of the semantic relation is \"are used for move\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'bus', 'train', 'plane', 'bicycle', 'motorcycle', 'boat', 'truck', 'van', 'taxi']"}
{"cat":"vehicles","slot":"purpose","value":"sport","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All of the purposes for which sport is interacted with.\";         A textual example of the semantic relation is \"are used for sport\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"bicycle\", \"motorcycle\", \"skateboard\", \"snowboard\", \"surfboard\", \"kayak\", \"canoe\", \"rowboat\", \"sailboat\", \"jet ski\"]"}
{"cat":"vehicles","slot":"purpose","value":"mission","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All of the purposes for which mission is interacted with.\";         A textual example of the semantic relation is \"are used for mission\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"rocket\", \"spaceship\", \"spacecraft\", \"satellite\", \"probe\", \"lander\", \"orbiter\", \"telescope\", \"shuttle\", \"capsule\"]"}
{"cat":"vehicles","slot":"purpose","value":"fitness","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All of the purposes for which fitness is interacted with.\";         A textual example of the semantic relation is \"are used for fitness\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['bicycle', 'rowboat', 'kayak', 'canoe', 'stand-up paddleboard', 'skateboard', 'rollerblades', 'scooter', 'tricycle', 'unicycle']"}
{"cat":"vehicles","slot":"purpose","value":"fishing","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All of the purposes for which fishing is interacted with.\";         A textual example of the semantic relation is \"are used for fishing\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['boat', 'ship', 'yacht', 'canoe', 'kayak', 'fishing boat', 'fishing vessel', 'fishing kayak', 'fishing canoe', 'fishing ship']"}
{"cat":"vehicles","slot":"purpose","value":"transit","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All of the purposes for which transit is interacted with.\";         A textual example of the semantic relation is \"are used for transit\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'bus', 'train', 'plane', 'truck', 'bicycle', 'motorcycle', 'boat', 'subway', 'taxi']"}
{"cat":"vehicles","slot":"purpose","value":"drag","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All of the purposes for which drag is interacted with.\";         A textual example of the semantic relation is \"are used to drag\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'truck', 'bus', 'motorcycle', 'bicycle', 'train', 'boat', 'airplane', 'helicopter', 'rocket']"}
{"cat":"vehicles","slot":"purpose","value":"transport","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All of the purposes for which transport is interacted with.\";         A textual example of the semantic relation is \"are used to transport\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"car\", \"bus\", \"train\", \"plane\", \"ship\", \"bicycle\", \"motorcycle\", \"truck\", \"taxi\", \"subway\"]"}
{"cat":"vehicles","slot":"purpose","value":"commuter","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All of the purposes for which commuter is interacted with.\";         A textual example of the semantic relation is \"are used for commuter\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'bus', 'train', 'subway', 'bicycle', 'motorcycle', 'taxi', 'tram', 'ferry', 'airplane']"}
{"cat":"vehicles","slot":"purpose","value":"luxury","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All of the purposes for which luxury is interacted with.\";         A textual example of the semantic relation is \"are used for luxury\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['yacht', 'limousine', 'private jet', 'sports car', 'Rolls-Royce', 'Bentley', 'Cadillac', 'Lamborghini', 'Ferrari', 'Aston Martin']"}
{"cat":"vehicles","slot":"purpose","value":"race","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All of the purposes for which race is interacted with.\";         A textual example of the semantic relation is \"are used for race\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'motorcycle', 'bike', 'truck', 'bus', 'train', 'airplane', 'helicopter', 'boat', 'ship']"}
{"cat":"vehicles","slot":"purpose","value":"parking","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All of the purposes for which parking is interacted with.\";         A textual example of the semantic relation is \"are used to parking\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'truck', 'van', 'bus', 'motorcycle', 'bicycle', 'boat', 'airplane', 'train', 'spaceship']"}
{"cat":"vehicles","slot":"purpose","value":"ride","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All of the purposes for which ride is interacted with.\";         A textual example of the semantic relation is \"are used for ride\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"car\", \"bus\", \"train\", \"bicycle\", \"motorcycle\", \"truck\", \"boat\", \"plane\", \"subway\", \"taxi\"]"}
{"cat":"vehicles","slot":"purpose","value":"travel","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All of the purposes for which travel is interacted with.\";         A textual example of the semantic relation is \"are used for travel\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'bus', 'train', 'plane', 'ship', 'bicycle', 'motorcycle', 'truck', 'taxi', 'subway']"}
{"cat":"vehicles","slot":"purpose","value":"agriculture","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All of the purposes for which agriculture is interacted with.\";         A textual example of the semantic relation is \"are used for agriculture\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['tractor', 'combine', 'sprayer', 'plow', 'harvester', 'seeder', 'irrigation system', 'baler', 'grain cart', 'farm truck']"}
{"cat":"vehicles","slot":"purpose","value":"travel","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All of the purposes for which travel is interacted with.\";         A textual example of the semantic relation is \"are used to travel\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"car\", \"bus\", \"train\", \"airplane\", \"bicycle\", \"motorcycle\", \"boat\", \"ship\", \"truck\", \"van\"]"}
{"cat":"vehicles","slot":"purpose","value":"ride","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All of the purposes for which ride is interacted with.\";         A textual example of the semantic relation is \"are used to ride\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'motorcycle', 'bicycle', 'bus', 'train', 'truck', 'boat', 'airplane', 'scooter', 'horse']"}
{"cat":"vehicles","slot":"place","value":"road","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the entities in which road can be experienced, found or perceived.\";         A textual example of the semantic relation is \"can be found or used in roads\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'truck', 'bus', 'motorcycle', 'bicycle', 'scooter', 'taxi', 'van', 'limousine', 'SUV']"}
{"cat":"vehicles","slot":"place","value":"airport","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the entities in which airport can be experienced, found or perceived.\";         A textual example of the semantic relation is \"can be found or used in airports\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['airplane', 'jet', 'helicopter', 'tug', 'forklift', 'airport shuttle', 'airport bus', 'cargo plane', 'airport taxi', 'airport limousine']"}
{"cat":"vehicles","slot":"place","value":"country","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the entities in which country can be experienced, found or perceived.\";         A textual example of the semantic relation is \"can be found or used in countries\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'bus', 'train', 'airplane', 'bicycle', 'motorcycle', 'truck', 'boat', 'submarine', 'spaceship']"}
{"cat":"vehicles","slot":"place","value":"sky","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the entities in which sky can be experienced, found or perceived.\";         A textual example of the semantic relation is \"can be found or used in skies\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['airplane', 'helicopter', 'hot air balloon', 'glider', 'hang glider', 'parachute', 'blimp', 'satellite', 'space shuttle', 'rocket']"}
{"cat":"vehicles","slot":"place","value":"air","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the entities in which air can be experienced, found or perceived.\";         A textual example of the semantic relation is \"can be found or used in airs\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['airplane', 'helicopter', 'hot air balloon', 'glider', 'blimp', 'parachute', 'hang glider', 'jet', 'drone', 'rocket']"}
{"cat":"vehicles","slot":"place","value":"rural area","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the entities in which rural area can be experienced, found or perceived.\";         A textual example of the semantic relation is \"can be found or used in rural areas\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['tractor', 'pickup truck', 'ATV', 'horse', 'bicycle', 'farm equipment', 'hay wagon', 'motorcycle', 'grain truck', 'livestock trailer']"}
{"cat":"vehicles","slot":"place","value":"cycle path","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the entities in which cycle path can be experienced, found or perceived.\";         A textual example of the semantic relation is \"can be found or used in cycle paths\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"bicycle\", \"motorcycle\", \"scooter\", \"unicycle\", \"tricycle\", \"quadracycle\", \"tandem\", \"segway\", \"skateboard\", \"rollerblades\"]"}
{"cat":"vehicles","slot":"place","value":"garage","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the entities in which garage can be experienced, found or perceived.\";         A textual example of the semantic relation is \"can be found or used in garages\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'truck', 'motorcycle', 'bicycle', 'scooter', 'van', 'bus', 'SUV', 'boat', 'aircraft']"}
{"cat":"vehicles","slot":"place","value":"sea","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the entities in which sea can be experienced, found or perceived.\";         A textual example of the semantic relation is \"can be found or used in seas\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['ship', 'boat', 'cruise ship', 'yacht', 'submarine', 'sailboat', 'ferry', 'warship', 'tugboat', 'fishing boat']"}
{"cat":"vehicles","slot":"place","value":"waterway","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the entities in which waterway can be experienced, found or perceived.\";         A textual example of the semantic relation is \"can be found or used in waterways\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['boat', 'ship', 'yacht', 'cruise', 'ferry', 'kayak', 'canoe', 'sailboat', 'steamboat', 'gondola']"}
{"cat":"vehicles","slot":"place","value":"traffic","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the entities in which traffic can be experienced, found or perceived.\";         A textual example of the semantic relation is \"can be found or used in traffics\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'bus', 'train', 'truck', 'bike', 'motorcycle', 'plane', 'ship', 'boat', 'taxi']"}
{"cat":"vehicles","slot":"place","value":"motorway","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the entities in which motorway can be experienced, found or perceived.\";         A textual example of the semantic relation is \"can be found or used in motorways\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'truck', 'bus', 'motorcycle', 'van', 'SUV', 'limousine', 'taxi', 'ambulance', 'police car']"}
{"cat":"vehicles","slot":"place","value":"park","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the entities in which park can be experienced, found or perceived.\";         A textual example of the semantic relation is \"can be found or used in parks\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['bicycle', 'skateboard', 'rollerblades', 'scooter', 'wheelchair', 'stroller', 'tricycle', 'unicycle', 'quadracycle', 'segway']"}
{"cat":"vehicles","slot":"place","value":"rental","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the entities in which rental can be experienced, found or perceived.\";         A textual example of the semantic relation is \"can be found or used in rentals\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"car\", \"truck\", \"van\", \"SUV\", \"motorcycle\", \"boat\", \"yacht\", \"airplane\", \"helicopter\", \"scooter\"]"}
{"cat":"vehicles","slot":"place","value":"depot","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the entities in which depot can be experienced, found or perceived.\";         A textual example of the semantic relation is \"can be found or used in depots\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"truck\", \"train\", \"bus\", \"car\", \"van\", \"motorcycle\", \"bicycle\", \"boat\", \"airplane\", \"helicopter\"]"}
{"cat":"vehicles","slot":"place","value":"shipyard","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the entities in which shipyard can be experienced, found or perceived.\";         A textual example of the semantic relation is \"can be found or used in shipyards\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"ship\", \"boat\", \"yacht\", \"cargo ship\", \"tugboat\", \"cruise ship\", \"submarine\", \"warship\", \"sailboat\", \"fishing boat\"]"}
{"cat":"vehicles","slot":"place","value":"terminal","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the entities in which terminal can be experienced, found or perceived.\";         A textual example of the semantic relation is \"can be found or used in terminals\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['bus', 'train', 'taxi', 'plane', 'ferry', 'tram', 'subway', 'car', 'limousine', 'bicycle']"}
{"cat":"vehicles","slot":"place","value":"route","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the entities in which route can be experienced, found or perceived.\";         A textual example of the semantic relation is \"can be found or used in routes\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"car\", \"bus\", \"train\", \"bike\", \"motorcycle\", \"boat\", \"airplane\", \"truck\", \"taxi\", \"subway\"]"}
{"cat":"vehicles","slot":"place","value":"terminal","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the entities in which terminal can be experienced, found or perceived.\";         A textual example of the semantic relation is \"can be found or used in terminals\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['bus', 'train', 'taxi', 'plane', 'ferry', 'tram', 'subway', 'car', 'limousine', 'bicycle']"}
{"cat":"vehicles","slot":"place","value":"dry dock","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the entities in which dry dock can be experienced, found or perceived.\";         A textual example of the semantic relation is \"can be found or used in dry docks\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"ship\", \"boat\", \"yacht\", \"submarine\", \"cruise liner\", \"warship\", \"tanker\", \"frigate\", \"destroyer\", \"aircraft carrier\"]"}
{"cat":"vehicles","slot":"place","value":"parking","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the entities in which parking can be experienced, found or perceived.\";         A textual example of the semantic relation is \"can be found or used in parkings\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'truck', 'bus', 'motorcycle', 'bicycle', 'scooter', 'van', 'SUV', 'limousine', 'taxi']"}
{"cat":"vehicles","slot":"place","value":"station","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the entities in which station can be experienced, found or perceived.\";         A textual example of the semantic relation is \"can be found or used in stations\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['train', 'bus', 'tram', 'subway', 'taxi', 'car', 'motorcycle', 'bicycle', 'scooter', 'ferry']"}
{"cat":"vehicles","slot":"material","value":"metal","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Material of which metal is composed.\";         A textual example of the semantic relation is \"can be made of metal\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'truck', 'motorcycle', 'airplane', 'train', 'bus', 'boat', 'bicycle', 'scooter', 'skateboard']"}
{"cat":"vehicles","slot":"material","value":"plastic","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Material of which plastic is composed.\";         A textual example of the semantic relation is \"can be made of plastic\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'truck', 'bus', 'motorcycle', 'bicycle', 'boat', 'airplane', 'helicopter', 'train', 'subway']"}
{"cat":"vehicles","slot":"material","value":"rubber","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Material of which rubber is composed.\";         A textual example of the semantic relation is \"can be made of rubber\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['tire', 'wheel', 'bicycle', 'car', 'truck', 'bus', 'motorcycle', 'airplane', 'boat', 'train']"}
{"cat":"vehicles","slot":"material","value":"glass","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Material of which glass is composed.\";         A textual example of the semantic relation is \"can be made of glass\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'bus', 'train', 'airplane', 'boat', 'motorcycle', 'truck', 'bicycle', 'scooter', 'skateboard']"}
{"cat":"vehicles","slot":"material","value":"aluminium","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Material of which aluminium is composed.\";         A textual example of the semantic relation is \"can be made of aluminium\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"car\", \"truck\", \"bus\", \"train\", \"plane\", \"boat\", \"motorcycle\", \"bicycle\", \"scooter\", \"skateboard\"]"}
{"cat":"vehicles","slot":"material","value":"steel","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Material of which steel is composed.\";         A textual example of the semantic relation is \"can be made of steel\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'truck', 'motorcycle', 'bicycle', 'boat', 'ship', 'train', 'airplane', 'helicopter', 'rocket']"}
{"cat":"vehicles","slot":"material","value":"wood","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Material of which wood is composed.\";         A textual example of the semantic relation is \"can be made of wood\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"canoe\", \"rowboat\", \"sailboat\", \"dory\", \"skiff\", \"longboat\", \"yacht\", \"sloop\", \"schooner\", \"kayak\"]"}
{"cat":"vehicles","slot":"user","value":"people","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the kinds of living beings which are able to operate, employ, interact with or perceive people.\";         A textual example of the semantic relation is \"are used by peoples\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'bus', 'train', 'plane', 'boat', 'bicycle', 'motorcycle', 'truck', 'van', 'taxi']"}
{"cat":"vehicles","slot":"user","value":"army","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the kinds of living beings which are able to operate, employ, interact with or perceive army.\";         A textual example of the semantic relation is \"are used by armies\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['tank', 'helicopter', 'aircraft', 'truck', 'jeep', 'submarine', 'battleship', 'missile', 'drone', 'armored vehicle']"}
{"cat":"vehicles","slot":"user","value":"driver","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the kinds of living beings which are able to operate, employ, interact with or perceive driver.\";         A textual example of the semantic relation is \"are used by drivers\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'truck', 'bus', 'motorcycle', 'bicycle', 'airplane', 'boat', 'train', 'subway', 'scooter']"}
{"cat":"vehicles","slot":"user","value":"co-pilot","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the kinds of living beings which are able to operate, employ, interact with or perceive co-pilot.\";         A textual example of the semantic relation is \"are used by co-pilots\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['aircraft', 'helicopter', 'jet', 'airplane', 'spacecraft', 'boat', 'ship', 'submarine', 'car', 'truck']"}
{"cat":"vehicles","slot":"user","value":"cyclist","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the kinds of living beings which are able to operate, employ, interact with or perceive cyclist.\";         A textual example of the semantic relation is \"are used by cyclists\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"bicycle\", \"motorcycle\", \"scooter\", \"car\", \"truck\", \"bus\", \"train\", \"plane\", \"boat\", \"submarine\"]"}
{"cat":"vehicles","slot":"user","value":"person","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the kinds of living beings which are able to operate, employ, interact with or perceive person.\";         A textual example of the semantic relation is \"are used by people\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'truck', 'bus', 'train', 'airplane', 'motorcycle', 'bicycle', 'boat', 'ship', 'submarine']"}
{"cat":"vehicles","slot":"user","value":"sailor","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the kinds of living beings which are able to operate, employ, interact with or perceive sailor.\";         A textual example of the semantic relation is \"are used by sailors\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['ship', 'boat', 'yacht', 'sailboat', 'schooner', 'cutter', 'ketch', 'sloop', 'catamaran', 'trimaran']"}
{"cat":"vehicles","slot":"user","value":"officer","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the kinds of living beings which are able to operate, employ, interact with or perceive officer.\";         A textual example of the semantic relation is \"are used by officers\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['police car', 'patrol car', 'squad car', 'cruiser', 'motorcycle', 'helicopter', 'airplane', 'boat', 'bicycle', 'horse']"}
{"cat":"vehicles","slot":"user","value":"farmer","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the kinds of living beings which are able to operate, employ, interact with or perceive farmer.\";         A textual example of the semantic relation is \"are used by farmers\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['tractor', 'combine', 'plow', 'harvester', 'baler', 'sprayer', 'tillage', 'seed drill', 'irrigation system', 'grain cart']"}
{"cat":"vehicles","slot":"user","value":"holidaymaker","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the kinds of living beings which are able to operate, employ, interact with or perceive holidaymaker.\";         A textual example of the semantic relation is \"are used by holidaymakers\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'bus', 'train', 'plane', 'boat', 'bike', 'taxi', 'cruise ship', 'campervan', 'motorcycle']"}
{"cat":"vehicles","slot":"user","value":"helmsman","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the kinds of living beings which are able to operate, employ, interact with or perceive helmsman.\";         A textual example of the semantic relation is \"are used by helmsmen\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"ship\", \"boat\", \"yacht\", \"sailboat\", \"cruise ship\", \"ferry\", \"tugboat\", \"submarine\", \"aircraft carrier\", \"destroyer\"]"}
{"cat":"vehicles","slot":"user","value":"businessman","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the kinds of living beings which are able to operate, employ, interact with or perceive businessman.\";         A textual example of the semantic relation is \"are used by businessmen\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['limousine', 'sedan', 'SUV', 'minivan', 'electric car', 'hybrid car', 'sports car', 'luxury car', 'convertible', 'coupe']"}
{"cat":"vehicles","slot":"user","value":"taxi driver","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the kinds of living beings which are able to operate, employ, interact with or perceive taxi driver.\";         A textual example of the semantic relation is \"are used by taxi drivers\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['taxi', 'car', 'van', 'limousine', 'motorcycle', 'bus', 'truck', 'bicycle', 'scooter', 'train']"}
{"cat":"vehicles","slot":"user","value":"captain","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the kinds of living beings which are able to operate, employ, interact with or perceive captain.\";         A textual example of the semantic relation is \"are used by captains\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"ship\", \"boat\", \"yacht\", \"cruise liner\", \"aircraft carrier\", \"submarine\", \"helicopter\", \"hot air balloon\", \"sailboat\", \"hovercraft\"]"}
{"cat":"vehicles","slot":"user","value":"hostess","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the kinds of living beings which are able to operate, employ, interact with or perceive hostess.\";         A textual example of the semantic relation is \"are used by hostesses\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'bus', 'train', 'plane', 'boat', 'truck', 'motorcycle', 'bicycle', 'taxi', 'limousine']"}
{"cat":"vehicles","slot":"user","value":"cruise","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the kinds of living beings which are able to operate, employ, interact with or perceive cruise.\";         A textual example of the semantic relation is \"are used by cruises\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['ship', 'boat', 'yacht', 'cruise liner', 'ferry', 'sailboat', 'steamship', 'motorboat', 'submarine', 'cargo ship']"}
{"cat":"vehicles","slot":"user","value":"steward","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the kinds of living beings which are able to operate, employ, interact with or perceive steward.\";         A textual example of the semantic relation is \"are used by stewards\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['airplane', 'bus', 'car', 'motorcycle', 'train', 'truck', 'boat', 'ship', 'yacht', 'helicopter']"}
{"cat":"vehicles","slot":"user","value":"corps","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the kinds of living beings which are able to operate, employ, interact with or perceive corps.\";         A textual example of the semantic relation is \"are used by corps\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'truck', 'bus', 'train', 'airplane', 'boat', 'motorcycle', 'bicycle', 'scooter', 'tank']"}
{"cat":"vehicles","slot":"user","value":"pedestrian","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the kinds of living beings which are able to operate, employ, interact with or perceive pedestrian.\";         A textual example of the semantic relation is \"are used by pedestrians\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'truck', 'bus', 'motorcycle', 'bicycle', 'skateboard', 'scooter', 'wheelchair', 'rickshaw', 'unicycle']"}
{"cat":"vehicles","slot":"user","value":"squadron","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the kinds of living beings which are able to operate, employ, interact with or perceive squadron.\";         A textual example of the semantic relation is \"are used by squadrons\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['aircraft', 'helicopter', 'jet', 'tank', 'submarine', 'ship', 'truck', 'car', 'motorcycle', 'bicycle']"}
{"cat":"vehicles","slot":"user","value":"navy","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the kinds of living beings which are able to operate, employ, interact with or perceive navy.\";         A textual example of the semantic relation is \"are used by navies\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['submarine', 'aircraft carrier', 'destroyer', 'frigate', 'corvette', 'patrol boat', 'amphibious assault ship', 'mine countermeasures vessel', 'hydrofoil']"}
{"cat":"vehicles","slot":"user","value":"pedestrian","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the kinds of living beings which are able to operate, employ, interact with or perceive pedestrian.\";         A textual example of the semantic relation is \"are used by pedestrians\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'truck', 'bus', 'motorcycle', 'bicycle', 'skateboard', 'scooter', 'wheelchair', 'rickshaw', 'unicycle']"}
{"cat":"vehicles","slot":"place","value":"farm","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the entities in which farm can be experienced, found or perceived.\";         A textual example of the semantic relation is \"can be found or used in farms\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['tractor', 'combine harvester', 'plow', 'farm truck', 'grain cart', 'sprayer', 'tillage equipment', 'hay baler', 'irrigation system', 'livestock trailer']"}
{"cat":"vehicles","slot":"purpose","value":"rental","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All of the purposes for which rental is interacted with.\";         A textual example of the semantic relation is \"are used for rental\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"car\", \"van\", \"truck\", \"SUV\", \"motorcycle\", \"boat\", \"jet ski\", \"RV\", \"bicycle\", \"scooter\"]"}
{"cat":"vehicles","slot":"user","value":"passenger","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the kinds of living beings which are able to operate, employ, interact with or perceive passenger.\";         A textual example of the semantic relation is \"are used by passengers\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'bus', 'train', 'airplane', 'boat', 'motorcycle', 'bicycle', 'truck', 'taxi', 'subway']"}
{"cat":"vehicles","slot":"user","value":"pilot","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the kinds of living beings which are able to operate, employ, interact with or perceive pilot.\";         A textual example of the semantic relation is \"are used by pilots\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['aircraft', 'spaceship', 'helicopter', 'fighter jet', 'rocket', 'submarine', 'tank', 'car', 'bus', 'train']"}
{"cat":"vehicles","slot":"movement","value":"dock","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Terms that describe the type and speed of movement.\";         A textual example of the semantic relation is \"can dock\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['ship', 'boat', 'airplane', 'car', 'train', 'bus', 'motorcycle', 'bicycle', 'truck', 'scooter']"}
{"cat":"vehicles","slot":"purpose","value":"transport","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All of the purposes for which transport is interacted with.\";         A textual example of the semantic relation is \"are used for transport\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'bus', 'train', 'airplane', 'bicycle', 'motorcycle', 'boat', 'truck', 'taxi', 'subway']"}
{"cat":"vehicles","slot":"purpose","value":"dock","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All of the purposes for which dock is interacted with.\";         A textual example of the semantic relation is \"are used for dock\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"ship\", \"boat\", \"cargo\", \"container\", \"harbor\", \"port\", \"vessel\", \"watercraft\", \"yacht\", \"barge\"]"}
{"cat":"vehicles","slot":"generalization","value":"vehicle","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of vehicle related to hypernyms.\";         A textual example of the semantic relation is \"are vehicle\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'truck', 'bus', 'motorcycle', 'bicycle', 'boat', 'ship', 'train', 'airplane', 'helicopter']"}
{"cat":"vehicles","slot":"generalization","value":"transportation","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of transportation related to hypernyms.\";         A textual example of the semantic relation is \"are transportation\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'bus', 'truck', 'train', 'plane', 'boat', 'motorcycle', 'bicycle', 'scooter', 'van']"}
{"cat":"vehicles","slot":"generalization","value":"container","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of container related to hypernyms.\";         A textual example of the semantic relation is \"are container\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"car\", \"truck\", \"bus\", \"train\", \"plane\", \"ship\", \"motorcycle\", \"bicycle\", \"scooter\", \"unicycle\"]"}
{"cat":"vehicles","slot":"generalization","value":"conveyance","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of conveyance related to hypernyms.\";         A textual example of the semantic relation is \"are conveyance\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'bus', 'train', 'airplane', 'truck', 'motorcycle', 'bicycle', 'boat', 'submarine', 'spaceship']"}
{"cat":"vehicles","slot":"generalization","value":"instrumentation","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of instrumentation related to hypernyms.\";         A textual example of the semantic relation is \"are instrumentation\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'truck', 'bus', 'train', 'airplane', 'helicopter', 'boat', 'ship', 'motorcycle', 'bicycle']"}
{"cat":"vehicles","slot":"generalization","value":"instrumentality","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of instrumentality related to hypernyms.\";         A textual example of the semantic relation is \"are instrumentality\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'truck', 'bus', 'motorcycle', 'bicycle', 'boat', 'airplane', 'train', 'subway', 'helicopter']"}
{"cat":"vehicles","slot":"generalization","value":"self-propelled vehicle","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of self-propelled vehicle related to hypernyms.\";         A textual example of the semantic relation is \"are self-propelled vehicle\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'bus', 'truck', 'motorcycle', 'bicycle', 'boat', 'ship', 'train', 'airplane', 'helicopter']"}
{"cat":"vehicles","slot":"generalization","value":"automotive vehicle","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of automotive vehicle related to hypernyms.\";         A textual example of the semantic relation is \"are automotive vehicle\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'truck', 'bus', 'van', 'SUV', 'sedan', 'convertible', 'hatchback', 'minivan', 'coupe']"}
{"cat":"vehicles","slot":"generalization","value":"motor vehicle","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of motor vehicle related to hypernyms.\";         A textual example of the semantic relation is \"are motor vehicle\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'truck', 'van', 'SUV', 'motorcycle', 'bus', 'train', 'airplane', 'boat', 'ship']"}
{"cat":"vehicles","slot":"generalization","value":"garden tool","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of garden tool related to hypernyms.\";         A textual example of the semantic relation is \"are garden tool\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'truck', 'bus', 'train', 'plane', 'boat', 'motorcycle', 'bicycle', 'scooter', 'unicycle']"}
{"cat":"vehicles","slot":"generalization","value":"artifact","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of artifact related to hypernyms.\";         A textual example of the semantic relation is \"are artifact\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'truck', 'bus', 'train', 'airplane', 'boat', 'motorcycle', 'bicycle', 'scooter', 'submarine']"}
{"cat":"vehicles","slot":"generalization","value":"artefact","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of artefact related to hypernyms.\";         A textual example of the semantic relation is \"are artefact\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'bus', 'truck', 'motorcycle', 'bicycle', 'train', 'airplane', 'boat', 'ship', 'submarine']"}
{"cat":"vehicles","slot":"generalization","value":"bike","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of bike related to hypernyms.\";         A textual example of the semantic relation is \"are bike\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['motorcycle', 'bicycle', 'mountain bike', 'road bike', 'cruiser', 'racing bike', 'touring bike', 'folding bike', 'tandem bike']"}
{"cat":"vehicles","slot":"generalization","value":"plane","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of plane related to hypernyms.\";         A textual example of the semantic relation is \"are plane\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['jet', 'aircraft', 'airliner', 'airplane', 'boeing', 'plane', 'helicopter', 'glider', 'drone', 'seaplane']"}
{"cat":"vehicles","slot":"generalization","value":"tool","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of tool related to hypernyms.\";         A textual example of the semantic relation is \"are tool\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'truck', 'bus', 'train', 'plane', 'boat', 'motorcycle', 'bicycle', 'scooter', 'unicycle']"}
{"cat":"vehicles","slot":"generalization","value":"bicycle","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of bicycle related to hypernyms.\";         A textual example of the semantic relation is \"are bicycle\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['bike', 'cycle', 'wheel', 'pedal', 'frame', 'handlebar', 'seat', 'chain', 'tire', 'spoke']"}
{"cat":"vehicles","slot":"generalization","value":"auto","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of auto related to hypernyms.\";         A textual example of the semantic relation is \"are auto\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'truck', 'bus', 'van', 'motorcycle', 'bicycle', 'airplane', 'boat', 'train', 'subway']"}
{"cat":"vehicles","slot":"generalization","value":"lawn tool","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of lawn tool related to hypernyms.\";         A textual example of the semantic relation is \"are lawn tool\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'truck', 'van', 'SUV', 'motorcycle', 'bicycle', 'bus', 'train', 'boat', 'airplane']"}
{"cat":"vehicles","slot":"generalization","value":"implement","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of implement related to hypernyms.\";         A textual example of the semantic relation is \"are implement\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'bus', 'truck', 'motorcycle', 'bicycle', 'train', 'boat', 'airplane', 'helicopter', 'submarine']"}
{"cat":"vehicles","slot":"generalization","value":"machine","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of machine related to hypernyms.\";         A textual example of the semantic relation is \"are machine\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"car\", \"bus\", \"train\", \"airplane\", \"boat\", \"motorcycle\", \"truck\", \"bicycle\", \"scooter\", \"skateboard\"]"}
{"cat":"vehicles","slot":"generalization","value":"car","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of car related to hypernyms.\";         A textual example of the semantic relation is \"are car\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'sedan', 'SUV', 'truck', 'minivan', 'hatchback', 'convertible', 'coupe', 'wagon', 'limousine']"}
{"cat":"vehicles","slot":"generalization","value":"cycle","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of cycle related to hypernyms.\";         A textual example of the semantic relation is \"are cycle\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['bicycle', 'motorcycle', 'unicycle', 'tricycle', 'quadracycle', 'tandem', 'recumbent', 'velocipede', 'penny-farthing', 'dandy horse']"}
{"cat":"vehicles","slot":"generalization","value":"automobile","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of automobile related to hypernyms.\";         A textual example of the semantic relation is \"are automobile\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'truck', 'van', 'sedan', 'SUV', 'hatchback', 'coupe', 'convertible', 'minivan', 'pickup']"}
{"cat":"vehicles","slot":"generalization","value":"motorcar","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of motorcar related to hypernyms.\";         A textual example of the semantic relation is \"are motorcar\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'truck', 'van', 'bus', 'SUV', 'sedan', 'hatchback', 'convertible', 'coupe', 'minivan']"}
{"cat":"vehicles","slot":"generalization","value":"airplane","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of airplane related to hypernyms.\";         A textual example of the semantic relation is \"are airplane\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['aircraft', 'plane', 'airliner', 'jet', 'boeing', 'airbus', 'passenger', 'wing', 'engine', 'cockpit']"}
{"cat":"vehicles","slot":"generalization","value":"aeroplane","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of aeroplane related to hypernyms.\";         A textual example of the semantic relation is \"are aeroplane\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['airplane', 'jet', 'aircraft', 'plane', 'aviation', 'flight', 'wing', 'propeller', 'cockpit', 'runway']"}
{"cat":"vehicles","slot":"generalization","value":"public transport","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of public transport related to hypernyms.\";         A textual example of the semantic relation is \"are public transport\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['train', 'bus', 'tram', 'subway', 'metro', 'ferry', 'cable car', 'monorail', 'trolleybus', 'streetcar']"}
{"cat":"vehicles","slot":"generalization","value":"wheeled vehicle","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of wheeled vehicle related to hypernyms.\";         A textual example of the semantic relation is \"are wheeled vehicle\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'truck', 'bus', 'motorcycle', 'bicycle', 'van', 'SUV', 'sedan', 'limousine', 'train']"}
{"cat":"vehicles","slot":"generalization","value":"craft","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of craft related to hypernyms.\";         A textual example of the semantic relation is \"are craft\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'truck', 'bus', 'train', 'airplane', 'boat', 'ship', 'motorcycle', 'bicycle', 'scooter']"}
{"cat":"vehicles","slot":"colorPattern","value":"grey","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the features that refer to the color or texture of grey.\";         A textual example of the semantic relation is \"can be grey\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"car\", \"truck\", \"bus\", \"train\", \"airplane\", \"ship\", \"motorcycle\", \"bicycle\", \"scooter\", \"skateboard\"]"}
{"cat":"vehicles","slot":"colorPattern","value":"grey","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the features that refer to the color or texture of grey.\";         A textual example of the semantic relation is \"can be grey\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"car\", \"truck\", \"bus\", \"train\", \"airplane\", \"ship\", \"motorcycle\", \"bicycle\", \"scooter\", \"skateboard\"]"}
{"cat":"vehicles","slot":"colorPattern","value":"black","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the features that refer to the color or texture of black.\";         A textual example of the semantic relation is \"can be black\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'bike', 'truck', 'motorcycle', 'bus', 'train', 'airplane', 'boat', 'helicopter', 'scooter']"}
{"cat":"vehicles","slot":"colorPattern","value":"black","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the features that refer to the color or texture of black.\";         A textual example of the semantic relation is \"can be black\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'bike', 'truck', 'motorcycle', 'bus', 'train', 'airplane', 'boat', 'helicopter', 'scooter']"}
{"cat":"vehicles","slot":"colorPattern","value":"red","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the features that refer to the color or texture of red.\";         A textual example of the semantic relation is \"can be red\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'truck', 'motorcycle', 'bus', 'train', 'airplane', 'helicopter', 'boat', 'bicycle', 'scooter']"}
{"cat":"vehicles","slot":"colorPattern","value":"red","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the features that refer to the color or texture of red.\";         A textual example of the semantic relation is \"can be red\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'truck', 'motorcycle', 'bus', 'train', 'airplane', 'helicopter', 'boat', 'bicycle', 'scooter']"}
{"cat":"vehicles","slot":"colorPattern","value":"white","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the features that refer to the color or texture of white.\";         A textual example of the semantic relation is \"can be white\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'bus', 'train', 'truck', 'boat', 'plane', 'bike', 'scooter', 'van', 'motorcycle']"}
{"cat":"vehicles","slot":"colorPattern","value":"white","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the features that refer to the color or texture of white.\";         A textual example of the semantic relation is \"can be white\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'bus', 'train', 'truck', 'boat', 'plane', 'bike', 'scooter', 'van', 'motorcycle']"}
{"cat":"vehicles","slot":"colorPattern","value":"blue","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the features that refer to the color or texture of blue.\";         A textual example of the semantic relation is \"can be blue\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'bike', 'boat', 'airplane', 'bus', 'train', 'truck', 'motorcycle', 'helicopter', 'submarine']"}
{"cat":"vehicles","slot":"colorPattern","value":"blue","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the features that refer to the color or texture of blue.\";         A textual example of the semantic relation is \"can be blue\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'bike', 'boat', 'airplane', 'bus', 'train', 'truck', 'motorcycle', 'helicopter', 'submarine']"}
{"cat":"vehicles","slot":"colorPattern","value":"glossy","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the features that refer to the color or texture of glossy.\";         A textual example of the semantic relation is \"can be glossy\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'truck', 'bus', 'motorcycle', 'bicycle', 'boat', 'plane', 'train', 'helicopter', 'scooter']"}
{"cat":"vehicles","slot":"colorPattern","value":"silver","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the features that refer to the color or texture of silver.\";         A textual example of the semantic relation is \"can be silver\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'bus', 'train', 'airplane', 'boat', 'motorcycle', 'truck', 'bicycle', 'scooter', 'skateboard']"}
{"cat":"vehicles","slot":"colorPattern","value":"shiny","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the features that refer to the color or texture of shiny.\";         A textual example of the semantic relation is \"can be shiny\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'bus', 'truck', 'motorcycle', 'bicycle', 'boat', 'airplane', 'train', 'helicopter', 'rocket']"}
{"cat":"vehicles","slot":"colorPattern","value":"silver","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the features that refer to the color or texture of silver.\";         A textual example of the semantic relation is \"can be silver\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'bus', 'train', 'airplane', 'boat', 'motorcycle', 'truck', 'bicycle', 'scooter', 'skateboard']"}
{"cat":"vehicles","slot":"colorPattern","value":"green","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the features that refer to the color or texture of green.\";         A textual example of the semantic relation is \"can be green\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'truck', 'bus', 'train', 'bike', 'motorcycle', 'boat', 'airplane', 'helicopter', 'submarine']"}
{"cat":"vehicles","slot":"colorPattern","value":"green","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the features that refer to the color or texture of green.\";         A textual example of the semantic relation is \"can be green\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'truck', 'bus', 'train', 'bike', 'motorcycle', 'boat', 'airplane', 'helicopter', 'submarine']"}
{"cat":"vehicles","slot":"generalization","value":"vessel","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of vessel related to hypernyms.\";         A textual example of the semantic relation is \"are vessel\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'truck', 'bus', 'van', 'boat', 'ship', 'train', 'airplane', 'motorcycle', 'bicycle']"}
{"cat":"vehicles","slot":"part","value":"brake","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of brake.\";         A textual example of the semantic relation is \"can have brake\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'truck', 'bus', 'motorcycle', 'bicycle', 'train', 'airplane', 'boat', 'scooter', 'skateboard']"}
{"cat":"vehicles","slot":"part","value":"light","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of light.\";         A textual example of the semantic relation is \"can have light\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'truck', 'bus', 'motorcycle', 'bicycle', 'train', 'airplane', 'boat', 'helicopter', 'scooter']"}
{"cat":"vehicles","slot":"part","value":"engine","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of engine.\";         A textual example of the semantic relation is \"can have engine\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'truck', 'motorcycle', 'bus', 'van', 'SUV', 'sedan', 'minivan', 'pickup', 'convertible']"}
{"cat":"vehicles","slot":"part","value":"door","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of door.\";         A textual example of the semantic relation is \"can have door\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'bus', 'truck', 'train', 'plane', 'boat', 'bike', 'motorcycle', 'scooter', 'van']"}
{"cat":"vehicles","slot":"part","value":"seat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of seat.\";         A textual example of the semantic relation is \"can have seat\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'bus', 'train', 'airplane', 'boat', 'motorcycle', 'bicycle', 'scooter', 'truck', 'van']"}
{"cat":"vehicles","slot":"part","value":"window","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of window.\";         A textual example of the semantic relation is \"can have window\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'bus', 'train', 'airplane', 'boat', 'motorcycle', 'truck', 'van', 'helicopter', 'submarine']"}
{"cat":"vehicles","slot":"part","value":"bonnet","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of bonnet.\";         A textual example of the semantic relation is \"can have bonnet\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'truck', 'van', 'SUV', 'sedan', 'hatchback', 'convertible', 'coupe', 'minivan', 'pickup']"}
{"cat":"vehicles","slot":"part","value":"rudder","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of rudder.\";         A textual example of the semantic relation is \"can have rudder\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['boat', 'ship', 'yacht', 'submarine', 'airplane', 'helicopter', 'sailboat', 'cruise liner', 'hovercraft', 'sled']"}
{"cat":"vehicles","slot":"part","value":"cowling","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of cowling.\";         A textual example of the semantic relation is \"can have cowling\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['airplane', 'helicopter', 'jet', 'rocket', 'spaceship', 'submarine', 'tank', 'train', 'truck', 'yacht']"}
{"cat":"vehicles","slot":"part","value":"hood","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of hood.\";         A textual example of the semantic relation is \"can have hood\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"car\", \"truck\", \"van\", \"SUV\", \"sedan\", \"convertible\", \"sports car\", \"minivan\", \"hatchback\"]"}
{"cat":"vehicles","slot":"part","value":"tire","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of tire.\";         A textual example of the semantic relation is \"can have tire\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'truck', 'bus', 'motorcycle', 'bicycle', 'scooter', 'van', 'SUV', 'jeep', 'tractor']"}
{"cat":"vehicles","slot":"part","value":"fender","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of fender.\";         A textual example of the semantic relation is \"can have fender\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'truck', 'motorcycle', 'bicycle', 'bus', 'van', 'SUV', 'sedan', 'convertible', 'limousine']"}
{"cat":"vehicles","slot":"part","value":"accelerator","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of accelerator.\";         A textual example of the semantic relation is \"can have accelerator\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'motorcycle', 'bicycle', 'truck', 'bus', 'train', 'boat', 'airplane', 'helicopter', 'scooter']"}
{"cat":"vehicles","slot":"part","value":"cowl","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of cowl.\";         A textual example of the semantic relation is \"can have cowl\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'truck', 'bus', 'motorcycle', 'bicycle', 'train', 'plane', 'boat', 'yacht', 'submarine']"}
{"cat":"vehicles","slot":"part","value":"frame","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of frame.\";         A textual example of the semantic relation is \"can have frame\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'truck', 'motorcycle', 'bus', 'van', 'bicycle', 'airplane', 'boat', 'train', 'subway']"}
{"cat":"vehicles","slot":"part","value":"windshield","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of windshield.\";         A textual example of the semantic relation is \"can have windshield\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'truck', 'bus', 'van', 'SUV', 'motorcycle', 'airplane', 'train', 'boat', 'scooter']"}
{"cat":"vehicles","slot":"part","value":"tail","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of tail.\";         A textual example of the semantic relation is \"can have tail\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['airplane', 'boat', 'car', 'helicopter', 'jet', 'motorcycle', 'rocket', 'ship', 'submarine']"}
{"cat":"vehicles","slot":"part","value":"propeller","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of propeller.\";         A textual example of the semantic relation is \"can have propeller\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['airplane', 'helicopter', 'drone', 'hovercraft', 'seaplane', 'jet', 'propeller-driven aircraft', 'motorboat', 'sailboat', 'submarine']"}
{"cat":"vehicles","slot":"part","value":"gear","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of gear.\";         A textual example of the semantic relation is \"can have gear\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'motorcycle', 'truck', 'bus', 'van', 'airplane', 'helicopter', 'boat', 'train', 'bicycle']"}
{"cat":"vehicles","slot":"part","value":"tube","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of tube.\";         A textual example of the semantic relation is \"can have tube\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'truck', 'bus', 'motorcycle', 'bicycle', 'airplane', 'helicopter', 'boat', 'submarine', 'train']"}
{"cat":"vehicles","slot":"part","value":"bumper","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of bumper.\";         A textual example of the semantic relation is \"can have bumper\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'truck', 'van', 'SUV', 'motorcycle', 'bus', 'train', 'boat', 'airplane', 'helicopter']"}
{"cat":"vehicles","slot":"part","value":"wing","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of wing.\";         A textual example of the semantic relation is \"can have wing\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['airplane', 'aircraft', 'jet', 'helicopter', 'glider', 'drone', 'rocket', 'missile', 'spacecraft', 'satellite']"}
{"cat":"vehicles","slot":"part","value":"crew","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of crew.\";         A textual example of the semantic relation is \"can have crew\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['airplane', 'helicopter', 'submarine', 'spaceship', 'train', 'cruise ship', 'battleship', 'tank', 'hot air balloon', 'yacht']"}
{"cat":"vehicles","slot":"part","value":"fin","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of fin.\";         A textual example of the semantic relation is \"can have fin\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'truck', 'bus', 'motorcycle', 'bicycle', 'boat', 'airplane', 'train', 'submarine', 'spacecraft']"}
{"cat":"vehicles","slot":"part","value":"windshield wiper","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of windshield wiper.\";         A textual example of the semantic relation is \"can have windshield wiper\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['windshield', 'wiper', 'blade', 'arm', 'motor', 'linkage', 'sprayer', 'reservoir', 'switch', 'control']"}
{"cat":"vehicles","slot":"part","value":"battery","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of battery.\";         A textual example of the semantic relation is \"can have battery\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'truck', 'bus', 'motorcycle', 'bicycle', 'boat', 'train', 'airplane', 'helicopter', 'rocket']"}
{"cat":"vehicles","slot":"part","value":"windlass","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of windlass.\";         A textual example of the semantic relation is \"can have windlass\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'truck', 'bus', 'train', 'plane', 'boat', 'motorcycle', 'bicycle', 'scooter', 'tractor']"}
{"cat":"vehicles","slot":"part","value":"grille","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of grille.\";         A textual example of the semantic relation is \"can have grille\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'truck', 'van', 'SUV', 'sedan', 'convertible', 'hatchback', 'minivan', 'pickup', 'crossover']"}
{"cat":"vehicles","slot":"part","value":"coachwork","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of coachwork.\";         A textual example of the semantic relation is \"can have coachwork\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"car\", \"truck\", \"bus\", \"van\", \"SUV\", \"sedan\", \"minivan\", \"pickup\", \"motorcycle\", \"bicycle\"]"}
{"cat":"vehicles","slot":"part","value":"rear window","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of rear window.\";         A textual example of the semantic relation is \"can have rear window\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'truck', 'bus', 'van', 'SUV', 'sedan', 'hatchback', 'wagon', 'minivan', 'crossover']"}
{"cat":"vehicles","slot":"part","value":"mast","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of mast.\";         A textual example of the semantic relation is \"can have mast\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'truck', 'bus', 'train', 'airplane', 'boat', 'ship', 'motorcycle', 'bicycle', 'scooter']"}
{"cat":"vehicles","slot":"part","value":"after part","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of after part.\";         A textual example of the semantic relation is \"can have after part\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'truck', 'bus', 'motorcycle', 'bicycle', 'boat', 'ship', 'airplane', 'helicopter', 'train']"}
{"cat":"vehicles","slot":"part","value":"car window","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of car window.\";         A textual example of the semantic relation is \"can have car window\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['windshield', 'side window', 'rear window', 'window frame', 'window glass', 'window seal', 'window regulator', 'window motor', 'window switch', 'window wiper']"}
{"cat":"vehicles","slot":"part","value":"anti-sway bar","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of anti-sway bar.\";         A textual example of the semantic relation is \"can have anti-sway bar\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'truck', 'van', 'SUV', 'bus', 'motorcycle', 'bicycle', 'scooter', 'boat', 'train']"}
{"cat":"vehicles","slot":"part","value":"bilge well","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of bilge well.\";         A textual example of the semantic relation is \"can have bilge well\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"boat\", \"ship\", \"yacht\", \"cruiser\", \"trawler\", \"frigate\", \"destroyer\", \"submarine\", \"aircraft carrier\", \"ocean liner\"]"}
{"cat":"vehicles","slot":"part","value":"petrol engine","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of petrol engine.\";         A textual example of the semantic relation is \"can have petrol engine\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'truck', 'motorcycle', 'bus', 'van', 'SUV', 'boat', 'airplane', 'helicopter', 'train']"}
{"cat":"vehicles","slot":"part","value":"interior","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of interior.\";         A textual example of the semantic relation is \"can have interior\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"car\", \"van\", \"truck\", \"bus\", \"motorcycle\", \"bicycle\", \"boat\", \"train\", \"airplane\", \"helicopter\"]"}
{"cat":"vehicles","slot":"part","value":"top","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of top.\";         A textual example of the semantic relation is \"can have top\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['convertible', 'roadster', 'cabriolet', 'targa', 'spider', 'phaeton', 'landaulet', 'sedanca', 'touring', 'drophead']"}
{"cat":"vehicles","slot":"part","value":"superstructure","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of superstructure.\";         A textual example of the semantic relation is \"can have superstructure\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'truck', 'bus', 'train', 'boat', 'ship', 'airplane', 'helicopter', 'motorcycle', 'bicycle']"}
{"cat":"vehicles","slot":"part","value":"fuselage","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of fuselage.\";         A textual example of the semantic relation is \"can have fuselage\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['airplane', 'helicopter', 'spacecraft', 'rocket', 'drone', 'submarine', 'boat', 'ship', 'train', 'bus']"}
{"cat":"vehicles","slot":"part","value":"fo'c'sle","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of fo'c'sle.\";         A textual example of the semantic relation is \"can have fo'c'sle\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"ship\", \"boat\", \"vessel\", \"yacht\", \"cruiser\", \"liner\", \"steamer\", \"frigate\", \"sloop\", \"schooner\"]"}
{"cat":"vehicles","slot":"part","value":"gyrostabiliser","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of gyrostabiliser.\";         A textual example of the semantic relation is \"can have gyrostabiliser\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['motorcycle', 'bicycle', 'car', 'truck', 'bus', 'train', 'boat', 'ship', 'airplane', 'helicopter']"}
{"cat":"vehicles","slot":"part","value":"chain guard","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of chain guard.\";         A textual example of the semantic relation is \"can have chain guard\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['bicycle', 'motorcycle', 'scooter', 'moped', 'snowmobile', 'ATV', 'dirt bike', 'mountain bike', 'tandem bike']"}
{"cat":"vehicles","slot":"part","value":"throttle","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of throttle.\";         A textual example of the semantic relation is \"can have throttle\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'motorcycle', 'truck', 'bus', 'train', 'airplane', 'boat', 'helicopter', 'scooter', 'bicycle']"}
{"cat":"vehicles","slot":"part","value":"horn","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of horn.\";         A textual example of the semantic relation is \"can have horn\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'truck', 'bus', 'motorcycle', 'bicycle', 'train', 'boat', 'airplane', 'helicopter', 'submarine']"}
{"cat":"vehicles","slot":"part","value":"axle","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of axle.\";         A textual example of the semantic relation is \"can have axle\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'truck', 'bus', 'train', 'motorcycle', 'bicycle', 'scooter', 'wagon', 'cart', 'van']"}
{"cat":"vehicles","slot":"part","value":"log","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of log.\";         A textual example of the semantic relation is \"can have log\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'truck', 'bus', 'motorcycle', 'bicycle', 'train', 'boat', 'plane', 'helicopter', 'submarine']"}
{"cat":"vehicles","slot":"part","value":"radiator grille","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of radiator grille.\";         A textual example of the semantic relation is \"can have radiator grille\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'truck', 'van', 'SUV', 'sedan', 'hatchback', 'coupe', 'convertible', 'minivan', 'pickup']"}
{"cat":"vehicles","slot":"part","value":"hull","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of hull.\";         A textual example of the semantic relation is \"can have hull\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['ship', 'boat', 'yacht', 'submarine', 'cruise', 'liner', 'tanker', 'frigate', 'destroyer', 'carrier']"}
{"cat":"vehicles","slot":"part","value":"cargo deck","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of cargo deck.\";         A textual example of the semantic relation is \"can have cargo deck\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['container ship', 'barge', 'cargo ship', 'tanker', 'bulk carrier', 'ro-ro ship', 'container vessel', 'freighter', 'oil tanker', 'general cargo ship']"}
{"cat":"vehicles","slot":"part","value":"automobile engine","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of automobile engine.\";         A textual example of the semantic relation is \"can have automobile engine\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['piston', 'crankshaft', 'connecting rod', 'cylinder', 'valve', 'camshaft', 'spark plug', 'fuel injector', 'oil pump', 'water pump']"}
{"cat":"vehicles","slot":"part","value":"gasoline engine","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of gasoline engine.\";         A textual example of the semantic relation is \"can have gasoline engine\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'truck', 'motorcycle', 'van', 'bus', 'boat', 'airplane', 'helicopter', 'lawnmower', 'snowmobile']"}
{"cat":"vehicles","slot":"part","value":"dynamo","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of dynamo.\";         A textual example of the semantic relation is \"can have dynamo\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'truck', 'bus', 'motorcycle', 'bicycle', 'boat', 'train', 'airplane', 'helicopter', 'scooter']"}
{"cat":"vehicles","slot":"part","value":"sheet","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of sheet.\";         A textual example of the semantic relation is \"can have sheet\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'truck', 'bus', 'train', 'boat', 'ship', 'airplane', 'helicopter', 'motorcycle', 'bicycle']"}
{"cat":"vehicles","slot":"part","value":"fuel pod","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of fuel pod.\";         A textual example of the semantic relation is \"can have fuel pod\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['spacecraft', 'rocket', 'airplane', 'helicopter', 'ship', 'submarine', 'car', 'truck', 'bus', 'train']"}
{"cat":"vehicles","slot":"part","value":"bilge pump","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of bilge pump.\";         A textual example of the semantic relation is \"can have bilge pump\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['boat', 'ship', 'yacht', 'cruiser', 'sailboat', 'motorboat', 'submarine', 'fishing boat', 'catamaran', 'trimaran']"}
{"cat":"vehicles","slot":"part","value":"escape hatch","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of escape hatch.\";         A textual example of the semantic relation is \"can have escape hatch\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"airplane\", \"spaceship\", \"submarine\", \"helicopter\", \"boat\", \"train\", \"car\", \"bus\", \"truck\", \"motorcycle\"]"}
{"cat":"vehicles","slot":"part","value":"tack","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of tack.\";         A textual example of the semantic relation is \"can have tack\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['horse', 'saddle', 'bridle', 'stirrup', 'reins', 'bit', 'girth', 'surcingle', 'martingale', 'breastplate']"}
{"cat":"vehicles","slot":"part","value":"funnel","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of funnel.\";         A textual example of the semantic relation is \"can have funnel\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"car\", \"truck\", \"bus\", \"train\", \"boat\", \"ship\", \"airplane\", \"helicopter\", \"motorcycle\", \"bicycle\"]"}
{"cat":"vehicles","slot":"part","value":"ridge rope","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of ridge rope.\";         A textual example of the semantic relation is \"can have ridge rope\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['mountain bike', 'road bike', 'touring bike', 'cyclocross bike', 'tandem bike', 'recumbent bike', 'folding bike', 'cargo bike', 'electric bike']"}
{"cat":"vehicles","slot":"part","value":"cookhouse","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of cookhouse.\";         A textual example of the semantic relation is \"can have cookhouse\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"car\", \"truck\", \"bus\", \"train\", \"boat\", \"airplane\", \"motorcycle\", \"bicycle\", \"scooter\", \"skateboard\"]"}
{"cat":"vehicles","slot":"part","value":"gas pedal","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of gas pedal.\";         A textual example of the semantic relation is \"can have gas pedal\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'truck', 'bus', 'motorcycle', 'bicycle', 'boat', 'train', 'airplane', 'helicopter', 'scooter']"}
{"cat":"vehicles","slot":"part","value":"sunroof","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of sunroof.\";         A textual example of the semantic relation is \"can have sunroof\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'truck', 'SUV', 'van', 'sedan', 'convertible', 'hatchback', 'minivan', 'coupe', 'wagon']"}
{"cat":"vehicles","slot":"part","value":"mainsheet","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of mainsheet.\";         A textual example of the semantic relation is \"can have mainsheet\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['sailboat', 'catamaran', 'yacht', 'dinghy', 'sloop', 'schooner', 'ketch', 'cutter', 'sailing vessel', 'sailing ship']"}
{"cat":"vehicles","slot":"part","value":"bunk","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of bunk.\";         A textual example of the semantic relation is \"can have bunk\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['truck', 'bus', 'train', 'airplane', 'ship', 'yacht', 'motorcycle', 'car', 'van', 'SUV']"}
{"cat":"vehicles","slot":"part","value":"screw","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of screw.\";         A textual example of the semantic relation is \"can have screw\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"car\", \"bus\", \"truck\", \"motorcycle\", \"bicycle\", \"airplane\", \"boat\", \"train\", \"subway\", \"scooter\"]"}
{"cat":"vehicles","slot":"part","value":"turbine","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of turbine.\";         A textual example of the semantic relation is \"can have turbine\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'plane', 'train', 'boat', 'motorcycle', 'bus', 'truck', 'helicopter', 'submarine', 'scooter']"}
{"cat":"vehicles","slot":"part","value":"gearbox","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of gearbox.\";         A textual example of the semantic relation is \"can have gearbox\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'truck', 'motorcycle', 'bus', 'van', 'SUV', 'sedan', 'hatchback', 'wagon', 'convertible']"}
{"cat":"vehicles","slot":"part","value":"high gear","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of high gear.\";         A textual example of the semantic relation is \"can have high gear\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'truck', 'motorcycle', 'bicycle', 'bus', 'train', 'airplane', 'boat', 'helicopter', 'rocket']"}
{"cat":"vehicles","slot":"part","value":"buffer","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of buffer.\";         A textual example of the semantic relation is \"can have buffer\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'truck', 'bus', 'motorcycle', 'bicycle', 'train', 'plane', 'boat', 'submarine', 'scooter']"}
{"cat":"vehicles","slot":"part","value":"anchor","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of anchor.\";         A textual example of the semantic relation is \"can have anchor\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'bus', 'truck', 'motorcycle', 'bicycle', 'airplane', 'boat', 'train', 'subway', 'helicopter']"}
{"cat":"vehicles","slot":"part","value":"third gear","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of third gear.\";         A textual example of the semantic relation is \"can have third gear\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['automobile', 'car', 'truck', 'motorcycle', 'bicycle', 'scooter', 'bus', 'train', 'boat', 'airplane']"}
{"cat":"vehicles","slot":"part","value":"first gear","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of first gear.\";         A textual example of the semantic relation is \"can have first gear\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'motorcycle', 'truck', 'bus', 'bicycle', 'scooter', 'train', 'boat', 'airplane']"}
{"cat":"vehicles","slot":"part","value":"sprocket wheel","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of sprocket wheel.\";         A textual example of the semantic relation is \"can have sprocket wheel\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['bicycle', 'motorcycle', 'car', 'truck', 'bus', 'train', 'airplane', 'boat', 'ship', 'submarine']"}
{"cat":"vehicles","slot":"part","value":"reverse","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of reverse.\";         A textual example of the semantic relation is \"can have reverse\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"car\", \"truck\", \"bus\", \"van\", \"motorcycle\", \"bicycle\", \"boat\", \"train\", \"airplane\", \"helicopter\"]"}
{"cat":"vehicles","slot":"part","value":"glove compartment","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of glove compartment.\";         A textual example of the semantic relation is \"can have glove compartment\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'truck', 'van', 'SUV', 'sedan', 'hatchback', 'minivan', 'pickup', 'convertible', 'coupe']"}
{"cat":"vehicles","slot":"part","value":"topside","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of topside.\";         A textual example of the semantic relation is \"can have topside\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'bus', 'truck', 'van', 'motorcycle', 'bicycle', 'airplane', 'helicopter', 'boat', 'train']"}
{"cat":"vehicles","slot":"part","value":"skeletal frame","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of skeletal frame.\";         A textual example of the semantic relation is \"can have skeletal frame\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'truck', 'bus', 'train', 'airplane', 'motorcycle', 'bicycle', 'scooter', 'boat', 'ship']"}
{"cat":"vehicles","slot":"part","value":"drogue","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of drogue.\";         A textual example of the semantic relation is \"can have drogue\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['airplane', 'helicopter', 'parachute', 'glider', 'hot air balloon', 'sailboat', 'yacht', 'catamaran', 'trimaran', 'hovercraft']"}
{"cat":"vehicles","slot":"part","value":"stabilizer bar","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of stabilizer bar.\";         A textual example of the semantic relation is \"can have stabilizer bar\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'truck', 'SUV', 'van', 'motorcycle', 'bus', 'train', 'boat', 'airplane', 'helicopter']"}
{"cat":"vehicles","slot":"part","value":"auto accessory","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of auto accessory.\";         A textual example of the semantic relation is \"can have auto accessory\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"car\", \"truck\", \"van\", \"motorcycle\", \"bicycle\", \"bus\", \"train\", \"airplane\", \"boat\", \"helicopter\"]"}
{"cat":"vehicles","slot":"part","value":"box","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of box.\";         A textual example of the semantic relation is \"can have box\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'truck', 'van', 'bus', 'train', 'airplane', 'helicopter', 'boat', 'ship', 'submarine']"}
{"cat":"vehicles","slot":"part","value":"handlebar","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of handlebar.\";         A textual example of the semantic relation is \"can have handlebar\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"bicycle\", \"motorcycle\", \"scooter\", \"moped\", \"unicycle\", \"tricycle\", \"quadracycle\", \"tandem bicycle\", \"penny-farthing\", \"chopper\"]"}
{"cat":"vehicles","slot":"part","value":"radio","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of radio.\";         A textual example of the semantic relation is \"can have radio\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'truck', 'bus', 'motorcycle', 'bicycle', 'boat', 'train', 'airplane', 'helicopter', 'rocket']"}
{"cat":"vehicles","slot":"part","value":"poop","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of poop.\";         A textual example of the semantic relation is \"can have poop\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'bus', 'truck', 'train', 'boat', 'plane', 'motorcycle', 'bicycle', 'scooter', 'skateboard']"}
{"cat":"vehicles","slot":"part","value":"rope","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of rope.\";         A textual example of the semantic relation is \"can have rope\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"car\", \"truck\", \"bus\", \"train\", \"boat\", \"airplane\", \"motorcycle\", \"bicycle\", \"scooter\", \"skateboard\"]"}
{"cat":"vehicles","slot":"part","value":"bicycle wheel","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of bicycle wheel.\";         A textual example of the semantic relation is \"can have bicycle wheel\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['rim', 'spokes', 'hub', 'tire', 'valve', 'tube', 'axle', 'bearings', 'quick release', 'skewer']"}
{"cat":"vehicles","slot":"part","value":"riding bitt","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of riding bitt.\";         A textual example of the semantic relation is \"can have riding bitt\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['horse', 'saddle', 'bridle', 'reins', 'stirrups', 'girth', 'bit', 'headstall', 'cantle', 'pommel']"}
{"cat":"vehicles","slot":"part","value":"keel","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of keel.\";         A textual example of the semantic relation is \"can have keel\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['boat', 'ship', 'yacht', 'sailboat', 'catamaran', 'submarine', 'steamboat', 'paddleboat', 'cruise ship', 'fishing boat']"}
{"cat":"vehicles","slot":"part","value":"car mirror","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of car mirror.\";         A textual example of the semantic relation is \"can have car mirror\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'mirror', 'vehicle', 'automobile', 'transportation', 'road', 'driver', 'passenger', 'headlight', 'bumper']"}
{"cat":"vehicles","slot":"part","value":"floorboard","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of floorboard.\";         A textual example of the semantic relation is \"can have floorboard\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'truck', 'van', 'bus', 'train', 'airplane', 'motorcycle', 'bicycle', 'boat', 'yacht']"}
{"cat":"vehicles","slot":"part","value":"low","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of low.\";         A textual example of the semantic relation is \"can have low\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'truck', 'bus', 'motorcycle', 'bicycle', 'scooter', 'train', 'boat', 'airplane', 'helicopter']"}
{"cat":"vehicles","slot":"part","value":"air bag","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of air bag.\";         A textual example of the semantic relation is \"can have air bag\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'truck', 'bus', 'motorcycle', 'van', 'SUV', 'sedan', 'hatchback', 'convertible', 'minivan']"}
{"cat":"vehicles","slot":"part","value":"steering wheel","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of steering wheel.\";         A textual example of the semantic relation is \"can have steering wheel\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'truck', 'bus', 'van', 'SUV', 'motorcycle', 'boat', 'airplane', 'train', 'bicycle']"}
{"cat":"vehicles","slot":"part","value":"car seat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of car seat.\";         A textual example of the semantic relation is \"can have car seat\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"seat\", \"cushion\", \"backrest\", \"headrest\", \"armrest\", \"lumbar support\", \"recliner\", \"adjuster\", \"heater\", \"cooler\"]"}
{"cat":"vehicles","slot":"part","value":"cargo hold","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of cargo hold.\";         A textual example of the semantic relation is \"can have cargo hold\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['container', 'cargo', 'ship', 'truck', 'van', 'aircraft', 'train', 'boat', 'yacht', 'submarine']"}
{"cat":"vehicles","slot":"part","value":"landing gear","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of landing gear.\";         A textual example of the semantic relation is \"can have landing gear\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"aircraft\", \"airplane\", \"helicopter\", \"glider\", \"spacecraft\", \"rocket\", \"drone\", \"satellite\", \"balloon\", \"blimp\"]"}
{"cat":"vehicles","slot":"part","value":"number plate","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of number plate.\";         A textual example of the semantic relation is \"can have number plate\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'truck', 'bus', 'motorcycle', 'van', 'SUV', 'limousine', 'sedan', 'convertible']"}
{"cat":"vehicles","slot":"part","value":"running board","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of running board.\";         A textual example of the semantic relation is \"can have running board\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'truck', 'van', 'SUV', 'minivan', 'pickup', 'sedan', 'hatchback', 'crossover', 'jeep']"}
{"cat":"vehicles","slot":"part","value":"mudguard","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of mudguard.\";         A textual example of the semantic relation is \"can have mudguard\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'truck', 'motorcycle', 'bicycle', 'bus', 'van', 'SUV', 'sedan', 'jeep', 'minivan']"}
{"cat":"vehicles","slot":"part","value":"sprocket","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of sprocket.\";         A textual example of the semantic relation is \"can have sprocket\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['motorcycle', 'bicycle', 'scooter', 'go-kart', 'ATV', 'snowmobile', 'dirt bike', 'mountain bike', 'tandem bicycle']"}
{"cat":"vehicles","slot":"part","value":"gun","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of gun.\";         A textual example of the semantic relation is \"can have gun\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'truck', 'motorcycle', 'bus', 'train', 'airplane', 'boat', 'bicycle', 'scooter', 'van']"}
{"cat":"vehicles","slot":"part","value":"hold","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of hold.\";         A textual example of the semantic relation is \"can have hold\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'truck', 'bus', 'train', 'plane', 'boat', 'motorcycle', 'bicycle', 'scooter', 'skateboard']"}
{"cat":"vehicles","slot":"part","value":"nose","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of nose.\";         A textual example of the semantic relation is \"can have nose\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'truck', 'bus', 'motorcycle', 'bicycle', 'train', 'boat', 'plane', 'helicopter', 'spaceship']"}
{"cat":"vehicles","slot":"part","value":"spoke","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of spoke.\";         A textual example of the semantic relation is \"can have spoke\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['bicycle', 'unicycle', 'tricycle', 'quadracycle', 'motorcycle', 'scooter', 'wheelchair', 'cart', 'carriage', 'wagon']"}
{"cat":"vehicles","slot":"part","value":"saddle","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of saddle.\";         A textual example of the semantic relation is \"can have saddle\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['horse', 'bicycle', 'motorcycle', 'unicycle', 'tricycle', 'quadracycle', 'scooter', 'moped', 'trike', 'tandem']"}
{"cat":"vehicles","slot":"part","value":"basket","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of basket.\";         A textual example of the semantic relation is \"can have basket\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'truck', 'bus', 'train', 'bike', 'motorcycle', 'boat', 'plane', 'helicopter', 'scooter']"}
{"cat":"vehicles","slot":"part","value":"handle","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of handle.\";         A textual example of the semantic relation is \"can have handle\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"car\", \"bike\", \"motorcycle\", \"truck\", \"bus\", \"train\", \"boat\", \"plane\", \"helicopter\", \"submarine\"]"}
{"cat":"vehicles","slot":"part","value":"high","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of high.\";         A textual example of the semantic relation is \"can have high\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'truck', 'bus', 'train', 'airplane', 'helicopter', 'boat', 'ship', 'submarine', 'motorcycle']"}
{"cat":"vehicles","slot":"part","value":"antenna","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of antenna.\";         A textual example of the semantic relation is \"can have antenna\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'truck', 'bus', 'motorcycle', 'airplane', 'helicopter', 'ship', 'train', 'submarine', 'spacecraft']"}
{"cat":"vehicles","slot":"part","value":"ratlin","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of ratlin.\";         A textual example of the semantic relation is \"can have ratlin\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"ship\", \"boat\", \"sailboat\", \"yacht\", \"schooner\", \"frigate\", \"galleon\", \"cutter\", \"sloop\", \"brig\"]"}
{"cat":"vehicles","slot":"part","value":"deck","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of deck.\";         A textual example of the semantic relation is \"can have deck\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['ship', 'boat', 'yacht', 'cruise ship', 'ferry', 'sailboat', 'catamaran', 'trimaran', 'houseboat', 'paddle steamer']"}
{"cat":"vehicles","slot":"part","value":"pod","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of pod.\";         A textual example of the semantic relation is \"can have pod\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'truck', 'bus', 'train', 'boat', 'airplane', 'helicopter', 'motorcycle', 'bicycle', 'unicycle']"}
{"cat":"vehicles","slot":"part","value":"cockpit","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of cockpit.\";         A textual example of the semantic relation is \"can have cockpit\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['airplane', 'jet', 'helicopter', 'spaceship', 'rocket', 'submarine', 'car', 'motorcycle', 'train', 'boat']"}
{"cat":"vehicles","slot":"part","value":"mirror","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of mirror.\";         A textual example of the semantic relation is \"can have mirror\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'truck', 'bus', 'motorcycle', 'bicycle', 'airplane', 'train', 'boat', 'helicopter', 'scooter']"}
{"cat":"vehicles","slot":"part","value":"taillight","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of taillight.\";         A textual example of the semantic relation is \"can have taillight\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'truck', 'bus', 'motorcycle', 'van', 'SUV', 'sedan', 'hatchback', 'coupe']"}
{"cat":"vehicles","slot":"part","value":"wiper","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of wiper.\";         A textual example of the semantic relation is \"can have wiper\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'truck', 'van', 'bus', 'train', 'airplane', 'boat', 'motorcycle', 'bicycle', 'scooter']"}
{"cat":"vehicles","slot":"part","value":"dashboard","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of dashboard.\";         A textual example of the semantic relation is \"can have dashboard\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'truck', 'van', 'bus', 'motorcycle', 'airplane', 'train', 'boat', 'submarine', 'helicopter']"}
{"cat":"vehicles","slot":"part","value":"ratline","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of ratline.\";         A textual example of the semantic relation is \"can have ratline\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['ship', 'boat', 'vessel', 'yacht', 'sailboat', 'warship', 'cruiser', 'steamship', 'frigate', 'galleon']"}
{"cat":"vehicles","slot":"part","value":"railing","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of railing.\";         A textual example of the semantic relation is \"can have railing\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['train', 'tram', 'subway', 'metro', 'monorail', 'cable car', 'funicular', 'gondola lift', 'suspension bridge', 'ferry']"}
{"cat":"vehicles","slot":"part","value":"headlight","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of headlight.\";         A textual example of the semantic relation is \"can have headlight\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'truck', 'bus', 'motorcycle', 'bicycle', 'train', 'airplane', 'boat', 'scooter', 'van']"}
{"cat":"vehicles","slot":"part","value":"cabin","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of cabin.\";         A textual example of the semantic relation is \"can have cabin\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'truck', 'bus', 'train', 'airplane', 'ship', 'motorcycle', 'bicycle', 'scooter', 'van']"}
{"cat":"vehicles","slot":"part","value":"low gear","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of low gear.\";         A textual example of the semantic relation is \"can have low gear\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'truck', 'motorcycle', 'bike', 'bus', 'train', 'boat', 'airplane', 'helicopter', 'scooter']"}
{"cat":"vehicles","slot":"part","value":"underframe","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of underframe.\";         A textual example of the semantic relation is \"can have underframe\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['train', 'truck', 'bus', 'car', 'motorcycle', 'bicycle', 'boat', 'ship', 'airplane', 'helicopter']"}
{"cat":"vehicles","slot":"part","value":"winch","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of winch.\";         A textual example of the semantic relation is \"can have winch\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['truck', 'jeep', 'SUV', 'off-road vehicle', 'ATV', 'boat', 'ship', 'yacht', 'aircraft']"}
{"cat":"vehicles","slot":"part","value":"sunshine-roof","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of sunshine-roof.\";         A textual example of the semantic relation is \"can have sunshine-roof\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'van', 'SUV', 'minivan', 'sedan', 'convertible', 'truck', 'pickup', 'hatchback', 'crossover']"}
{"cat":"vehicles","slot":"part","value":"bulwark","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of bulwark.\";         A textual example of the semantic relation is \"can have bulwark\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"car\", \"truck\", \"bus\", \"train\", \"boat\", \"ship\", \"airplane\", \"helicopter\", \"motorcycle\", \"bicycle\"]"}
{"cat":"vehicles","slot":"part","value":"pedal","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of pedal.\";         A textual example of the semantic relation is \"can have pedal\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['bicycle', 'motorcycle', 'car', 'truck', 'bus', 'van', 'scooter', 'moped', 'rickshaw']"}
{"cat":"vehicles","slot":"part","value":"screw propeller","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of screw propeller.\";         A textual example of the semantic relation is \"can have screw propeller\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['ship', 'boat', 'submarine', 'aircraft', 'helicopter', 'drone', 'rocket', 'satellite', 'hovercraft', 'airship']"}
{"cat":"vehicles","slot":"part","value":"reverse gear","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of reverse gear.\";         A textual example of the semantic relation is \"can have reverse gear\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'truck', 'bus', 'van', 'SUV', 'motorcycle', 'bicycle', 'boat', 'train', 'airplane']"}
{"cat":"vehicles","slot":"part","value":"skeleton","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of skeleton.\";         A textual example of the semantic relation is \"can have skeleton\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'motorcycle', 'truck', 'bus', 'train', 'airplane', 'boat', 'submarine', 'helicopter', 'scooter']"}
{"cat":"vehicles","slot":"part","value":"chain","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of chain.\";         A textual example of the semantic relation is \"can have chain\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['bicycle', 'motorcycle', 'scooter', 'moped', 'quadracycle', 'tricycle', 'unicycle', 'tandem', 'penny-farthing']"}
{"cat":"vehicles","slot":"part","value":"radar dome","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of radar dome.\";         A textual example of the semantic relation is \"can have radar dome\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['aircraft', 'fighter', 'jet', 'bomber', 'helicopter', 'drone', 'ship', 'submarine', 'tank', 'car']"}
{"cat":"vehicles","slot":"part","value":"roof","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of roof.\";         A textual example of the semantic relation is \"can have roof\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'truck', 'van', 'bus', 'SUV', 'sedan', 'convertible', 'hatchback', 'minivan', 'pickup']"}
{"cat":"vehicles","slot":"part","value":"seat belt","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of seat belt.\";         A textual example of the semantic relation is \"can have seat belt\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'bus', 'truck', 'van', 'airplane', 'train', 'boat', 'motorcycle', 'bicycle', 'scooter']"}
{"cat":"vehicles","slot":"part","value":"black box","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of black box.\";         A textual example of the semantic relation is \"can have black box\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['airplane', 'helicopter', 'car', 'truck', 'bus', 'train', 'boat', 'submarine', 'motorcycle', 'bicycle']"}
{"cat":"vehicles","slot":"part","value":"lubber's hole","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of lubber's hole.\";         A textual example of the semantic relation is \"can have lubber's hole\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['ship', 'boat', 'vessel', 'yacht', 'cruise', 'sailboat', 'steamboat', 'submarine', 'aircraft', 'spacecraft']"}
{"cat":"vehicles","slot":"part","value":"engine room","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of engine room.\";         A textual example of the semantic relation is \"can have engine room\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['ship', 'boat', 'yacht', 'cruise', 'liner', 'steamship', 'frigate', 'destroyer', 'submarine', 'aircraft']"}
{"cat":"vehicles","slot":"part","value":"quarter","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of quarter.\";         A textual example of the semantic relation is \"can have quarter\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'truck', 'bus', 'motorcycle', 'bicycle', 'boat', 'train', 'airplane', 'helicopter', 'spaceship']"}
{"cat":"vehicles","slot":"part","value":"porthole","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of porthole.\";         A textual example of the semantic relation is \"can have porthole\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"ship\", \"boat\", \"yacht\", \"cruise liner\", \"submarine\", \"aircraft\", \"airplane\", \"helicopter\", \"spaceship\", \"rocket\"]"}
{"cat":"vehicles","slot":"part","value":"car door","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of car door.\";         A textual example of the semantic relation is \"can have car door\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['door', 'handle', 'lock', 'window', 'mirror', 'seal', 'frame', 'panel', 'hinge', 'latch']"}
{"cat":"vehicles","slot":"part","value":"radome","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of radome.\";         A textual example of the semantic relation is \"can have radome\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['aircraft', 'airplane', 'jet', 'fighter', 'helicopter', 'drone', 'missile', 'satellite', 'spacecraft', 'rocket']"}
{"cat":"vehicles","slot":"part","value":"spar","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of spar.\";         A textual example of the semantic relation is \"can have spar\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['airplane', 'helicopter', 'spacecraft', 'glider', 'rocket', 'satellite', 'drone', 'hot air balloon', 'blimp', 'hang glider']"}
{"cat":"vehicles","slot":"part","value":"ship's galley","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of ship's galley.\";         A textual example of the semantic relation is \"can have ship's galley\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['ship', 'galley', 'kitchen', 'cooking', 'food', 'stove', 'oven', 'refrigerator', 'dishwasher', 'utensils']"}
{"cat":"vehicles","slot":"part","value":"oil","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of oil.\";         A textual example of the semantic relation is \"can have oil\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['engine', 'motor', 'transmission', 'gearbox', 'differential', 'hydraulic system', 'compressor', 'turbine', 'pump', 'generator']"}
{"cat":"vehicles","slot":"part","value":"coaster brake","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of coaster brake.\";         A textual example of the semantic relation is \"can have coaster brake\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['bicycle', 'tricycle', 'unicycle', 'scooter', 'skateboard', 'roller skates', 'rollerblades', 'kick scooter', 'penny-farthing', 'tandem bicycle']"}
{"cat":"vehicles","slot":"part","value":"caboose","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of caboose.\";         A textual example of the semantic relation is \"can have caboose\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['train', 'railway', 'locomotive', 'engine', 'cab', 'carriage', 'wagon', 'freight', 'transport', 'cargo']"}
{"cat":"vehicles","slot":"part","value":"davit","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of davit.\";         A textual example of the semantic relation is \"can have davit\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['boat', 'ship', 'yacht', 'cruise liner', 'freighter', 'tugboat', 'submarine', 'aircraft carrier', 'destroyer', 'frigate']"}
{"cat":"vehicles","slot":"part","value":"lifeboat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of lifeboat.\";         A textual example of the semantic relation is \"can have lifeboat\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['ship', 'cruise ship', 'boat', 'yacht', 'submarine', 'aircraft carrier', 'ocean liner', 'ferry', 'tanker', 'freighter']"}
{"cat":"vehicles","slot":"part","value":"bulkhead","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of bulkhead.\";         A textual example of the semantic relation is \"can have bulkhead\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'truck', 'bus', 'train', 'ship', 'airplane', 'helicopter', 'submarine', 'motorcycle', 'bicycle']"}
{"cat":"vehicles","slot":"part","value":"interior","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of interior.\";         A textual example of the semantic relation is \"can have interior\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"car\", \"van\", \"truck\", \"bus\", \"motorcycle\", \"bicycle\", \"boat\", \"train\", \"airplane\", \"helicopter\"]"}
{"cat":"vehicles","slot":"part","value":"sea anchor","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of sea anchor.\";         A textual example of the semantic relation is \"can have sea anchor\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['ship', 'boat', 'yacht', 'cruise', 'sailboat', 'steamship', 'freighter', 'tugboat', 'submarine', 'aircraft carrier']"}
{"cat":"vehicles","slot":"part","value":"stern","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of stern.\";         A textual example of the semantic relation is \"can have stern\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['ship', 'boat', 'yacht', 'cruise', 'steamboat', 'ferry', 'sailboat', 'tugboat', 'warship', 'cargo']"}
{"cat":"vehicles","slot":"part","value":"weather sheet","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of weather sheet.\";         A textual example of the semantic relation is \"can have weather sheet\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"car\", \"truck\", \"van\", \"bus\", \"motorcycle\", \"bicycle\", \"boat\", \"airplane\", \"helicopter\", \"train\"]"}
{"cat":"vehicles","slot":"part","value":"third","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of third.\";         A textual example of the semantic relation is \"can have third\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'truck', 'bus', 'motorcycle', 'bicycle', 'train', 'airplane', 'boat', 'submarine', 'spaceship']"}
{"cat":"vehicles","slot":"part","value":"crow's nest","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of crow's nest.\";         A textual example of the semantic relation is \"can have crow's nest\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"ship\", \"boat\", \"sailboat\", \"yacht\", \"cruise ship\", \"steamboat\", \"pirate ship\", \"frigate\", \"galleon\", \"warship\"]"}
{"cat":"vehicles","slot":"part","value":"water","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of water.\";         A textual example of the semantic relation is \"can have water\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"boat\", \"ship\", \"submarine\", \"yacht\", \"cruise\", \"ferry\", \"steamboat\", \"sailboat\", \"catamaran\", \"kayak\"]"}
{"cat":"vehicles","slot":"part","value":"shroud","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of shroud.\";         A textual example of the semantic relation is \"can have shroud\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'truck', 'bus', 'motorcycle', 'airplane', 'helicopter', 'boat', 'train', 'bicycle', 'scooter']"}
{"cat":"vehicles","slot":"part","value":"helm","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of helm.\";         A textual example of the semantic relation is \"can have helm\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['ship', 'boat', 'yacht', 'cruise', 'sailboat', 'steamship', 'cargo', 'submarine', 'aircraft', 'spacecraft']"}
{"cat":"vehicles","slot":"part","value":"gyrostabilizer","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of gyrostabilizer.\";         A textual example of the semantic relation is \"can have gyrostabilizer\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['motorcycle', 'bicycle', 'aircraft', 'helicopter', 'hovercraft', 'ship', 'submarine', 'train', 'car', 'bus']"}
{"cat":"vehicles","slot":"part","value":"forecastle","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of forecastle.\";         A textual example of the semantic relation is \"can have forecastle\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['ship', 'boat', 'yacht', 'sailboat', 'cruise ship', 'steamboat', 'frigate', 'schooner', 'galleon', 'tugboat']"}
{"cat":"vehicles","slot":"part","value":"tailfin","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of tailfin.\";         A textual example of the semantic relation is \"can have tailfin\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['airplane', 'jet', 'fighter', 'boeing', 'airbus', 'concorde', 'bomber', 'helicopter', 'cruiser', 'warplane']"}
{"cat":"vehicles","slot":"part","value":"storage area","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of storage area.\";         A textual example of the semantic relation is \"can have storage area\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'truck', 'van', 'SUV', 'motorcycle', 'bicycle', 'scooter', 'boat', 'airplane', 'train']"}
{"cat":"vehicles","slot":"part","value":"navigation light","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of navigation light.\";         A textual example of the semantic relation is \"can have navigation light\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['boat', 'ship', 'yacht', 'cruise liner', 'airplane', 'helicopter', 'sailboat', 'submarine', 'spacecraft', 'blimp']"}
{"cat":"vehicles","slot":"part","value":"accelerator pedal","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of accelerator pedal.\";         A textual example of the semantic relation is \"can have accelerator pedal\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'motorcycle', 'truck', 'bus', 'van', 'SUV', 'boat', 'train', 'airplane', 'helicopter']"}
{"cat":"vehicles","slot":"part","value":"trunk","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of trunk.\";         A textual example of the semantic relation is \"can have trunk\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'sedan', 'limousine', 'hatchback', 'station wagon', 'coupe', 'convertible', 'roadster', 'SUV', 'minivan']"}
{"cat":"vehicles","slot":"part","value":"first","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of first.\";         A textual example of the semantic relation is \"can have first\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'truck', 'bus', 'train', 'boat', 'plane', 'helicopter', 'motorcycle', 'bicycle', 'scooter']"}
{"cat":"vehicles","slot":"part","value":"bay","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of bay.\";         A textual example of the semantic relation is \"can have bay\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'truck', 'van', 'bus', 'motorcycle', 'bicycle', 'boat', 'ship', 'airplane', 'helicopter']"}
{"cat":"vehicles","slot":"part","value":"kickstand","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of kickstand.\";         A textual example of the semantic relation is \"can have kickstand\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['motorcycle', 'scooter', 'moped', 'bicycle', 'tricycle', 'unicycle', 'snowmobile', 'ATV', 'dirt bike', 'trike']"}
{"cat":"vehicles","slot":"part","value":"tail fin","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of tail fin.\";         A textual example of the semantic relation is \"can have tail fin\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['airplane', 'jet', 'fighter', 'fighter jet', 'aircraft', 'jet aircraft', 'jet fighter', 'fighter aircraft', 'jet airplane', 'aircraft jet']"}
{"cat":"vehicles","slot":"part","value":"cargo area","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of cargo area.\";         A textual example of the semantic relation is \"can have cargo area\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['truck', 'van', 'SUV', 'minivan', 'pickup', 'cargo', 'semi-trailer', 'box truck', 'flatbed', 'trailer']"}
{"cat":"vehicles","slot":"generalization","value":"aircraft","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of aircraft related to hypernyms.\";         A textual example of the semantic relation is \"are aircraft\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['airplane', 'jet', 'helicopter', 'glider', 'blimp', 'drone', 'hot air balloon', 'rocket', 'space shuttle', 'satellite']"}
{"cat":"vehicles","slot":"generalization","value":"heavier-than-air craft","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of heavier-than-air craft related to hypernyms.\";         A textual example of the semantic relation is \"are heavier-than-air craft\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['airplane', 'helicopter', 'jet', 'glider', 'blimp', 'airship', 'hot air balloon', 'hang glider', 'ultralight', 'gyrocopter']"}
{"cat":"vehicles","slot":"part","value":"wheel","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of wheel.\";         A textual example of the semantic relation is \"can have wheel\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'truck', 'bus', 'train', 'bike', 'motorcycle', 'bicycle', 'scooter', 'skateboard', 'wheelchair']"}
{"cat":"vehicles","slot":"movement","value":"pilot","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Terms that describe the type and speed of movement.\";         A textual example of the semantic relation is \"can pilot\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'bike', 'plane', 'train', 'boat', 'bus', 'truck', 'motorcycle', 'scooter', 'jet']"}
{"cat":"vehicles","slot":"specialization","value":"jet","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of jet in terms of their hyponyms.\";         A textual example of the semantic relation is \"are jet\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['aircraft', 'airplane', 'jet', 'fighter', 'bomber', 'transport', 'helicopter', 'drone', 'missile', 'spacecraft']"}
{"cat":"vehicles","slot":"specialization","value":"Boeing","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of Boeing in terms of their hyponyms.\";         A textual example of the semantic relation is \"are Boeing\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['747', '777', '787', '737', '767', '757', '727', '717', '707', '720']"}
{"cat":"vehicles","slot":"specialization","value":"Antonov","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of Antonov in terms of their hyponyms.\";         A textual example of the semantic relation is \"are Antonov\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['Antonov An-2', 'Antonov An-3', 'Antonov An-4', 'Antonov An-6', 'Antonov An-8', 'Antonov An-10', 'Antonov An-12', 'Antonov An-14', 'Antonov An-22', 'Antonov An-24']"}
{"cat":"vehicles","slot":"specialization","value":"racing bike","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of racing bike in terms of their hyponyms.\";         A textual example of the semantic relation is \"are racing bike\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['motorcycle', 'sport bike', 'superbike', 'cruiser', 'touring bike', 'dual-sport bike', 'off-road bike', 'electric bike', 'folding bike']"}
{"cat":"vehicles","slot":"specialization","value":"city car","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of city car in terms of their hyponyms.\";         A textual example of the semantic relation is \"are city car\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['Fiat 500', 'Mini Cooper', 'Smart Fortwo', 'Toyota Aygo', 'Peugeot 108', 'Citroen C1', 'Renault Twingo', 'Ford Ka', 'Suzuki Celerio', 'Vauxhall Adam']"}
{"cat":"vehicles","slot":"specialization","value":"pickup","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of pickup in terms of their hyponyms.\";         A textual example of the semantic relation is \"are pickup\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['Ford F-150', 'Chevrolet Silverado', 'Ram 1500', 'GMC Sierra', 'Toyota Tundra', 'Nissan Titan', 'Honda Ridgeline', 'Ford Ranger', 'Chevrolet Colorado', 'GMC Canyon']"}
{"cat":"vehicles","slot":"specialization","value":"attack aircraft","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of attack aircraft in terms of their hyponyms.\";         A textual example of the semantic relation is \"are attack aircraft\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['F-15 Eagle', 'F-16 Fighting Falcon', 'F\/A-18 Hornet', 'A-10 Thunderbolt II', 'Su-27 Flanker', 'MiG-29 Fulcrum', 'JAS 39 Gripen', 'Eurofighter Typhoon', 'F-22 Raptor', 'F-35 Lightning II']"}
{"cat":"vehicles","slot":"specialization","value":"vintage car","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of vintage car in terms of their hyponyms.\";         A textual example of the semantic relation is \"are vintage car\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['Ferrari', 'Porsche', 'Jaguar', 'Aston Martin', 'Lamborghini', 'Bentley', 'Mercedes-Benz', 'Rolls-Royce', 'Cadillac', 'Chevrolet']"}
{"cat":"vehicles","slot":"specialization","value":"amphibian","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of amphibian in terms of their hyponyms.\";         A textual example of the semantic relation is \"are amphibian\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'truck', 'bus', 'train', 'plane', 'boat', 'ship', 'submarine', 'helicopter', 'bike']"}
{"cat":"vehicles","slot":"specialization","value":"bomber","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of bomber in terms of their hyponyms.\";         A textual example of the semantic relation is \"are bomber\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['B-17 Flying Fortress', 'B-24 Liberator', 'B-29 Superfortress', 'B-52 Stratofortress', 'Tu-95 Bear', 'Vulcan', 'B-58 Hustler', 'B-47 Stratojet', 'B-36 Peacemaker', 'B-2 Spirit']"}
{"cat":"vehicles","slot":"specialization","value":"fighter aircraft","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of fighter aircraft in terms of their hyponyms.\";         A textual example of the semantic relation is \"are fighter aircraft\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['F-16', 'F-22', 'Su-35', 'MiG-29', 'F-35', 'J-20', 'F-15', 'F\/A-18', 'Su-57', 'Typhoon']"}
{"cat":"vehicles","slot":"specialization","value":"wagon","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of wagon in terms of their hyponyms.\";         A textual example of the semantic relation is \"are wagon\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['stagecoach', 'sleigh', 'haywagon', 'covered wagon', 'carriage', 'wagonette', 'dray', 'trolley', 'handcart', 'chuckwagon']"}
{"cat":"vehicles","slot":"specialization","value":"seaplane","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of seaplane in terms of their hyponyms.\";         A textual example of the semantic relation is \"are seaplane\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['floatplane', 'flying boat', 'amphibious aircraft', 'hydroplane', 'seaplane', 'watercraft', 'aircraft', 'plane', 'flying machine', 'water plane']"}
{"cat":"vehicles","slot":"specialization","value":"micro car","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of micro car in terms of their hyponyms.\";         A textual example of the semantic relation is \"are micro car\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['Smart', 'Fiat', 'Mitsubishi', 'Toyota', 'Honda', 'Suzuki', 'Daewoo', 'Daihatsu', 'Kia']"}
{"cat":"vehicles","slot":"specialization","value":"monoplane","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of monoplane in terms of their hyponyms.\";         A textual example of the semantic relation is \"are monoplane\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['aircraft', 'plane', 'monoplane', 'single-seater', 'biplane', 'triplane', 'quadruplane', 'flying machine', 'airship', 'glider']"}
{"cat":"vehicles","slot":"specialization","value":"delta wing","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of delta wing in terms of their hyponyms.\";         A textual example of the semantic relation is \"are delta wing\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['Concorde', 'XB-70', 'X-3', 'X-24', 'X-23', 'X-2', 'X-1', 'X-15', 'X-14', 'X-13']"}
{"cat":"vehicles","slot":"specialization","value":"reconnaissance plane","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of reconnaissance plane in terms of their hyponyms.\";         A textual example of the semantic relation is \"are reconnaissance plane\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['spy plane', 'surveillance aircraft', 'intelligence gathering aircraft', 'reconnaissance aircraft', 'U-2 Dragon Lady', 'SR-71 Blackbird', 'RQ-4 Global Hawk', 'MQ-9 Reaper', 'E-8 Joint STARS', 'P-8 Poseidon']"}
{"cat":"vehicles","slot":"specialization","value":"fighter","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of fighter in terms of their hyponyms.\";         A textual example of the semantic relation is \"are fighter\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['aircraft', 'jet', 'fighter', 'bomber', 'missile', 'drone', 'helicopter', 'tank', 'ship', 'submarine']"}
{"cat":"vehicles","slot":"specialization","value":"cabriolet","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of cabriolet in terms of their hyponyms.\";         A textual example of the semantic relation is \"are cabriolet\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['convertible', 'roadster', 'spider', 'drophead', 'speedster', 'targa', 'cabriolet', 'coupe', 'sedan', 'hatchback']"}
{"cat":"vehicles","slot":"specialization","value":"amphibious aircraft","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of amphibious aircraft in terms of their hyponyms.\";         A textual example of the semantic relation is \"are amphibious aircraft\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"seaplane\", \"floatplane\", \"flying boat\", \"amphibious aircraft\", \"hydroplane\", \"water plane\", \"amphibian\", \"watercraft\", \"aircraft\", \"aviation\"]"}
{"cat":"vehicles","slot":"specialization","value":"SUV","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of SUV in terms of their hyponyms.\";         A textual example of the semantic relation is \"are SUV\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['Jeep', 'Toyota', 'Ford', 'Chevrolet', 'Nissan', 'Honda', 'Hyundai', 'Kia', 'Mazda']"}
{"cat":"vehicles","slot":"specialization","value":"multiengine plane","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of multiengine plane in terms of their hyponyms.\";         A textual example of the semantic relation is \"are multiengine plane\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['Boeing 747', 'Airbus A380', 'Boeing 777', 'Boeing 787', 'Airbus A350', 'Boeing 767', 'Airbus A330', 'Boeing 757', 'Embraer E-Jet', 'Bombardier CRJ']"}
{"cat":"vehicles","slot":"specialization","value":"airbus","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of airbus in terms of their hyponyms.\";         A textual example of the semantic relation is \"are airbus\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['A300', 'A310', 'A318', 'A319', 'A320', 'A321', 'A330', 'A340', 'A350', 'A380']"}
{"cat":"vehicles","slot":"specialization","value":"sedan","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of sedan in terms of their hyponyms.\";         A textual example of the semantic relation is \"are sedan\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['sedan', 'coupe', 'hatchback', 'station wagon', 'limousine', 'SUV', 'minivan', 'pickup truck', 'convertible', 'sports car']"}
{"cat":"vehicles","slot":"specialization","value":"propeller plane","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of propeller plane in terms of their hyponyms.\";         A textual example of the semantic relation is \"are propeller plane\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['Cessna', 'Piper', 'Beechcraft', 'Diamond', 'Cirrus', 'Mooney', 'Pilatus', 'Stinson', 'Grumman', 'de Havilland']"}
{"cat":"vehicles","slot":"specialization","value":"racing car","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of racing car in terms of their hyponyms.\";         A textual example of the semantic relation is \"are racing car\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"Formula One\", \"IndyCar\", \"NASCAR\", \"Dragster\", \"Rally Car\", \"Sports Car\", \"Touring Car\", \"Stock Car\", \"Endurance Car\"]"}
{"cat":"vehicles","slot":"specialization","value":"hangar queen","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of hangar queen in terms of their hyponyms.\";         A textual example of the semantic relation is \"are hangar queen\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['airplane', 'helicopter', 'jet', 'fighter', 'bomber', 'transport', 'tank', 'truck', 'car', 'motorcycle']"}
{"cat":"vehicles","slot":"specialization","value":"hydroplane","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of hydroplane in terms of their hyponyms.\";         A textual example of the semantic relation is \"are hydroplane\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['seaplane', 'floatplane', 'flying boat', 'amphibious aircraft', 'hydrofoil', 'hovercraft', 'jet boat', 'airboat', 'watercraft', 'boat']"}
{"cat":"vehicles","slot":"specialization","value":"biplane","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of biplane in terms of their hyponyms.\";         A textual example of the semantic relation is \"are biplane\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['aircraft', 'airship', 'airplane', 'glider', 'helicopter', 'jet', 'propeller', 'rocket', 'seaplane', 'sport']"}
{"cat":"vehicles","slot":"specialization","value":"ski-plane","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of ski-plane in terms of their hyponyms.\";         A textual example of the semantic relation is \"are ski-plane\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['ski-plane', 'aircraft', 'vehicle', 'aircraft', 'ski-plane', 'aircraft', 'vehicle', 'aircraft', 'ski-plane', 'aircraft']"}
{"cat":"vehicles","slot":"specialization","value":"tanker plane","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of tanker plane in terms of their hyponyms.\";         A textual example of the semantic relation is \"are tanker plane\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['aircraft', 'airliner', 'jet', 'airbus', 'boeing', 'plane', 'aircraft', 'aircraft', 'aircraft']"}
{"cat":"vehicles","slot":"specialization","value":"multiengine airplane","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of multiengine airplane in terms of their hyponyms.\";         A textual example of the semantic relation is \"are multiengine airplane\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['twin-engine', 'triple-engine', 'quad-engine', 'piston-engine', 'turbojet', 'turbofan', 'ramjet', 'scramjet', 'rotary-engine', 'hybrid-engine']"}
{"cat":"vehicles","slot":"specialization","value":"lorry","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of lorry in terms of their hyponyms.\";         A textual example of the semantic relation is \"are lorry\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['truck', 'semi-trailer', 'flatbed', 'tanker', 'crane', 'dump', 'refrigerated', 'van', 'tractor']"}
{"cat":"vehicles","slot":"specialization","value":"airliner","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of airliner in terms of their hyponyms.\";         A textual example of the semantic relation is \"are airliner\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['Airbus', 'Boeing', 'Embraer', 'Bombardier', 'McDonnell Douglas', 'Lockheed', 'Tupolev', 'Ilyushin', 'Antonov', 'Sukhoi']"}
{"cat":"vehicles","slot":"specialization","value":"tender","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of tender in terms of their hyponyms.\";         A textual example of the semantic relation is \"are tender\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'truck', 'bus', 'train', 'boat', 'ship', 'airplane', 'helicopter', 'motorcycle', 'bicycle']"}
{"cat":"vehicles","slot":"specialization","value":"iceboat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of iceboat in terms of their hyponyms.\";         A textual example of the semantic relation is \"are iceboat\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['iceboat', 'sailboat', 'yacht', 'catamaran', 'trimaran', 'kayak', 'canoe', 'rowboat', 'speedboat', 'motorboat']"}
{"cat":"vehicles","slot":"specialization","value":"shrimper","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of shrimper in terms of their hyponyms.\";         A textual example of the semantic relation is \"are shrimper\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['trawler', 'fishing boat', 'fishing vessel', 'shrimp boat', 'fishing trawler', 'fishing craft', 'fishing ship', 'fishing fleet', 'shrimping boat', 'shrimp trawler']"}
{"cat":"vehicles","slot":"specialization","value":"dozer","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of dozer in terms of their hyponyms.\";         A textual example of the semantic relation is \"are dozer\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['bulldozer', 'crawler', 'tracked vehicle', 'construction equipment', 'heavy machinery', 'earth mover', 'dozer blade', 'pushing machine', 'dirt pusher', 'land leveler']"}
{"cat":"vehicles","slot":"specialization","value":"cab","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of cab in terms of their hyponyms.\";         A textual example of the semantic relation is \"are cab\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['sedan', 'limousine', 'taxi', 'hackney', 'cabriolet', 'coupe', 'minivan', 'SUV', 'truck', 'van']"}
{"cat":"vehicles","slot":"specialization","value":"gas guzzler","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of gas guzzler in terms of their hyponyms.\";         A textual example of the semantic relation is \"are gas guzzler\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['SUV', 'truck', 'luxury car', 'sports car', 'convertible', 'sedan', 'minivan', 'crossover', 'wagon', 'hatchback']"}
{"cat":"vehicles","slot":"specialization","value":"small boat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of small boat in terms of their hyponyms.\";         A textual example of the semantic relation is \"are small boat\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['dinghy', 'canoe', 'kayak', 'rowboat', 'sailboat', 'paddleboat', 'motorboat', 'jet ski', 'inflatable boat', 'fishing boat']"}
{"cat":"vehicles","slot":"specialization","value":"tugboat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of tugboat in terms of their hyponyms.\";         A textual example of the semantic relation is \"are tugboat\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['tugboat', 'towboat', 'pusher', 'harbor tug', 'ocean tug', 'river tug', 'seagoing tug', 'harbor tugboat', 'ocean tugboat', 'river tugboat']"}
{"cat":"vehicles","slot":"specialization","value":"ballistic capsule","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of ballistic capsule in terms of their hyponyms.\";         A textual example of the semantic relation is \"are ballistic capsule\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['missile', 'rocket', 'projectile', 'bullet', 'dart', 'arrow', 'shell', 'grenade', 'torpedo', 'cannonball']"}
{"cat":"vehicles","slot":"specialization","value":"cruiser","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of cruiser in terms of their hyponyms.\";         A textual example of the semantic relation is \"are cruiser\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['motorcycle', 'car', 'truck', 'bus', 'train', 'airplane', 'boat', 'yacht', 'cruise ship', 'submarine']"}
{"cat":"vehicles","slot":"specialization","value":"horseless carriage","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of horseless carriage in terms of their hyponyms.\";         A textual example of the semantic relation is \"are horseless carriage\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['automobile', 'car', 'truck', 'van', 'bus', 'motorcycle', 'scooter', 'bicycle', 'unicycle', 'quadricycle']"}
{"cat":"vehicles","slot":"specialization","value":"spacecraft","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of spacecraft in terms of their hyponyms.\";         A textual example of the semantic relation is \"are spacecraft\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['rocket', 'shuttle', 'satellite', 'probe', 'capsule', 'lander', 'orbit', 'launch', 'spacecraft', 'station']"}
{"cat":"vehicles","slot":"specialization","value":"pilot boat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of pilot boat in terms of their hyponyms.\";         A textual example of the semantic relation is \"are pilot boat\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"tugboat\", \"ferry\", \"cargo ship\", \"container ship\", \"cruise ship\", \"fishing boat\", \"yacht\", \"sailboat\", \"speedboat\", \"motorboat\"]"}
{"cat":"vehicles","slot":"specialization","value":"milk wagon","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of milk wagon in terms of their hyponyms.\";         A textual example of the semantic relation is \"are milk wagon\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"milk wagon\", \"cart\", \"carriage\", \"truck\", \"van\", \"lorry\", \"trailer\", \"tractor\", \"bike\", \"scooter\"]"}
{"cat":"vehicles","slot":"specialization","value":"transporter","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of transporter in terms of their hyponyms.\";         A textual example of the semantic relation is \"are transporter\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'truck', 'bus', 'motorcycle', 'bicycle', 'airplane', 'train', 'boat', 'submarine', 'spacecraft']"}
{"cat":"vehicles","slot":"specialization","value":"pirate","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of pirate in terms of their hyponyms.\";         A textual example of the semantic relation is \"are pirate\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['ship', 'boat', 'frigate', 'sloop', 'schooner', 'galleon', 'brigantine', 'corsair', 'privateer', 'buccaneer']"}
{"cat":"vehicles","slot":"specialization","value":"articulated lorry","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of articulated lorry in terms of their hyponyms.\";         A textual example of the semantic relation is \"are articulated lorry\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['semi-trailer', 'tractor unit', 'cab', 'fifth wheel', 'sleeper', 'bunk', 'engine', 'transmission', 'axle']"}
{"cat":"vehicles","slot":"specialization","value":"heap","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of heap in terms of their hyponyms.\";         A textual example of the semantic relation is \"are heap\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'truck', 'van', 'bus', 'motorcycle', 'bicycle', 'boat', 'airplane', 'train', 'submarine']"}
{"cat":"vehicles","slot":"specialization","value":"school bus","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of school bus in terms of their hyponyms.\";         A textual example of the semantic relation is \"are school bus\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"yellow\", \"large\", \"long\", \"bus-like\", \"multi-colored\", \"small\", \"red\", \"green\", \"blue\", \"white\"]"}
{"cat":"vehicles","slot":"specialization","value":"bareboat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of bareboat in terms of their hyponyms.\";         A textual example of the semantic relation is \"are bareboat\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['yacht', 'sailboat', 'catamaran', 'motorboat', 'powerboat', 'houseboat', 'speedboat', 'cruiser', 'dinghy', 'fishing boat']"}
{"cat":"vehicles","slot":"specialization","value":"hoy","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of hoy in terms of their hyponyms.\";         A textual example of the semantic relation is \"are hoy\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'truck', 'bus', 'motorcycle', 'bicycle', 'boat', 'airplane', 'train', 'subway', 'helicopter']"}
{"cat":"vehicles","slot":"specialization","value":"bicycle-built-for-two","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of bicycle-built-for-two in terms of their hyponyms.\";         A textual example of the semantic relation is \"are bicycle-built-for-two\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['tandem', 'bicycle-built-for-two', 'twosome', 'double', 'duo', 'pair', 'couple', 'duet', 'dyad', 'duologue']"}
{"cat":"vehicles","slot":"specialization","value":"electric automobile","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of electric automobile in terms of their hyponyms.\";         A textual example of the semantic relation is \"are electric automobile\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['electric car', 'electric vehicle', 'EV', 'electric sedan', 'electric hatchback', 'electric SUV', 'electric truck', 'electric bus', 'electric motorcycle', 'electric bicycle']"}
{"cat":"vehicles","slot":"specialization","value":"sister ship","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of sister ship in terms of their hyponyms.\";         A textual example of the semantic relation is \"are sister ship\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['Aurora', 'Astraea', 'Bellona', 'Centaur', 'Conqueror', 'Cressy', 'Dido', 'Duncan', 'Euryalus', 'Hermione']"}
{"cat":"vehicles","slot":"specialization","value":"turbofan","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of turbofan in terms of their hyponyms.\";         A textual example of the semantic relation is \"are turbofan\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['aircraft', 'jet', 'airliner', 'passenger jet', 'commercial aircraft', 'military aircraft', 'fighter jet', 'bomber', 'transport aircraft', 'helicopter']"}
{"cat":"vehicles","slot":"specialization","value":"slave ship","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of slave ship in terms of their hyponyms.\";         A textual example of the semantic relation is \"are slave ship\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"slave ship\", \"ship\", \"vessel\", \"boat\", \"galleon\", \"frigate\", \"sloop\", \"schooner\", \"steamship\", \"cargo ship\"]"}
{"cat":"vehicles","slot":"specialization","value":"whaler","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of whaler in terms of their hyponyms.\";         A textual example of the semantic relation is \"are whaler\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['ship', 'boat', 'vessel', 'watercraft', 'steamship', 'sailboat', 'schooner', 'brig', 'sloop', 'frigate']"}
{"cat":"vehicles","slot":"specialization","value":"pickup truck","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of pickup truck in terms of their hyponyms.\";         A textual example of the semantic relation is \"are pickup truck\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"Chevrolet Silverado\", \"Ford F-150\", \"Ram 1500\", \"Toyota Tundra\", \"Nissan Titan\", \"GMC Sierra\", \"Honda Ridgeline\", \"Jeep Gladiator\", \"Ford Ranger\", \"Chevrolet Colorado\"]"}
{"cat":"vehicles","slot":"specialization","value":"trolley coach","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of trolley coach in terms of their hyponyms.\";         A textual example of the semantic relation is \"are trolley coach\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['trolley', 'coach', 'bus', 'electric bus', 'trolleybus', 'trackless trolley', 'trolley car', 'streetcar', 'tram', 'light rail vehicle']"}
{"cat":"vehicles","slot":"specialization","value":"covered wagon","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of covered wagon in terms of their hyponyms.\";         A textual example of the semantic relation is \"are covered wagon\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"Conestoga wagon\", \"Prairie schooner\", \"Jerkline wagon\", \"Ox wagon\", \"Buckboard wagon\", \"Stagecoach\", \"Chuckwagon\", \"Mule wagon\", \"Horse-drawn wagon\", \"Wagon train\"]"}
{"cat":"vehicles","slot":"specialization","value":"jet plane","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of jet plane in terms of their hyponyms.\";         A textual example of the semantic relation is \"are jet plane\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"Fighter Jet\", \"Passenger Jet\", \"Bomber Jet\", \"Trainer Jet\", \"Cargo Jet\", \"Reconnaissance Jet\", \"Experimental Jet\", \"Stealth Jet\", \"Interceptor Jet\", \"Multirole Jet\"]"}
{"cat":"vehicles","slot":"specialization","value":"flagship","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of flagship in terms of their hyponyms.\";         A textual example of the semantic relation is \"are flagship\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['Boeing 747', 'Airbus A380', 'Tesla Model S', 'Ford Mustang', 'Chevrolet Corvette', 'Lamborghini Aventador', 'Ferrari 488 GTB', 'Porsche 911', 'BMW M5', 'Mercedes-Benz S-Class']"}
{"cat":"vehicles","slot":"specialization","value":"river boat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of river boat in terms of their hyponyms.\";         A textual example of the semantic relation is \"are river boat\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"canoe\", \"kayak\", \"rowboat\", \"paddleboat\", \"gondola\", \"steamboat\", \"houseboat\", \"speedboat\", \"motorboat\", \"sailboat\"]"}
{"cat":"vehicles","slot":"specialization","value":"blockade-runner","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of blockade-runner in terms of their hyponyms.\";         A textual example of the semantic relation is \"are blockade-runner\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['steamship', 'cargo ship', 'paddle steamer', 'sloop', 'schooner', 'clipper', 'gunboat', 'frigate', 'corvette', 'brig']"}
{"cat":"vehicles","slot":"specialization","value":"punt","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of punt in terms of their hyponyms.\";         A textual example of the semantic relation is \"are punt\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['canoe', 'kayak', 'rowboat', 'gondola', 'dinghy', 'sampan', 'skiff', 'yacht', 'catamaran', 'sailboat']"}
{"cat":"vehicles","slot":"specialization","value":"supply ship","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of supply ship in terms of their hyponyms.\";         A textual example of the semantic relation is \"are supply ship\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['cargo ship', 'tanker', 'freighter', 'container ship', 'bulk carrier', 'oil tanker', 'gas carrier', 'chemical tanker', 'liquefied gas carrier', 'roll-on\/roll-off ship']"}
{"cat":"vehicles","slot":"specialization","value":"landrover","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of landrover in terms of their hyponyms.\";         A textual example of the semantic relation is \"are landrover\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['Range Rover', 'Defender', 'Discovery', 'Freelander', 'Range Rover Sport', 'Discovery Sport', 'Evoque', 'Velar', 'Discovery 4', 'Range Rover Evoque']"}
{"cat":"vehicles","slot":"specialization","value":"racing yacht","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of racing yacht in terms of their hyponyms.\";         A textual example of the semantic relation is \"are racing yacht\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"J-class\", \"America'        s Cup\", \"Soling\", \"Flying Dutchman\", \"49er\", \"Hobie Cat 16\", \"Tornado\", \"Star\", \"Laser\"]"}
{"cat":"vehicles","slot":"specialization","value":"hack","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of hack in terms of their hyponyms.\";         A textual example of the semantic relation is \"are hack\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'truck', 'motorcycle', 'bus', 'van', 'SUV', 'bicycle', 'train', 'boat', 'airplane']"}
{"cat":"vehicles","slot":"specialization","value":"convertible","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of convertible in terms of their hyponyms.\";         A textual example of the semantic relation is \"are convertible\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['Mazda MX-5 Miata', 'BMW Z4', 'Fiat 124 Spider', 'Audi TT', 'Porsche Boxster', 'Mercedes-Benz SL', 'Chevrolet Corvette', 'Ford Mustang', 'Porsche 911', 'BMW i8']"}
{"cat":"vehicles","slot":"specialization","value":"camion","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of camion in terms of their hyponyms.\";         A textual example of the semantic relation is \"are camion\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['truck', 'lorry', 'semi-trailer', 'dump truck', 'tractor-trailer', 'big rig', 'flatbed truck', 'tow truck', 'pickup truck', 'cargo van']"}
{"cat":"vehicles","slot":"specialization","value":"safety bike","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of safety bike in terms of their hyponyms.\";         A textual example of the semantic relation is \"are safety bike\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['helmet', 'light', 'bell', 'reflector', 'lock', 'pump', 'toolkit', 'water bottle holder', 'seat', 'handlebar']"}
{"cat":"vehicles","slot":"specialization","value":"trackless trolley","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of trackless trolley in terms of their hyponyms.\";         A textual example of the semantic relation is \"are trackless trolley\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['trolleybus', 'dual-mode bus', 'guided bus', 'rubber-tired tram', 'tram-train', 'light rail', 'streetcar', 'trolley car', 'trolley', 'tram']"}
{"cat":"vehicles","slot":"specialization","value":"rig","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of rig in terms of their hyponyms.\";         A textual example of the semantic relation is \"are rig\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'truck', 'bus', 'motorcycle', 'bicycle', 'boat', 'train', 'airplane', 'helicopter', 'rocket']"}
{"cat":"vehicles","slot":"specialization","value":"jalopy","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of jalopy in terms of their hyponyms.\";         A textual example of the semantic relation is \"are jalopy\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['old car', 'rusty car', 'beater', 'clunker', 'heap', 'wreck', 'decrepit car', 'dilapidated car', 'run-down car', 'junk car']"}
{"cat":"vehicles","slot":"specialization","value":"bulldozer","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of bulldozer in terms of their hyponyms.\";         A textual example of the semantic relation is \"are bulldozer\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"crawler\", \"tracked\", \"wheeled\", \"articulated\", \"mini\", \"compact\", \"heavy-duty\", \"high-lift\", \"swamp\"]"}
{"cat":"vehicles","slot":"specialization","value":"dump truck","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of dump truck in terms of their hyponyms.\";         A textual example of the semantic relation is \"are dump truck\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['articulated dump truck', 'belly dump truck', 'bottom dump truck', 'off-road dump truck', 'on-road dump truck', 'quad-axle dump truck', 'semi-trailer end dump truck', 'transfer dump truck', 'tri-axle dump truck', 'truck and pup']"}
{"cat":"vehicles","slot":"specialization","value":"ferry","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of ferry in terms of their hyponyms.\";         A textual example of the semantic relation is \"are ferry\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['catamaran', 'cruise ship', 'ferryboat', 'hovercraft', 'paddle steamer', 'passenger ship', 'pilot boat', 'ro-ro ship', 'steamship', 'tugboat']"}
{"cat":"vehicles","slot":"specialization","value":"Conestoga wagon","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of Conestoga wagon in terms of their hyponyms.\";         A textual example of the semantic relation is \"are Conestoga wagon\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['wagon', 'cart', 'carriage', 'stagecoach', 'coach', 'buggy', 'sleigh', 'haywain', 'dray', 'trolley']"}
{"cat":"vehicles","slot":"specialization","value":"jetliner","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of jetliner in terms of their hyponyms.\";         A textual example of the semantic relation is \"are jetliner\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['Airbus A380', 'Boeing 747', 'Boeing 777', 'Boeing 787', 'Airbus A320', 'Airbus A350', 'Boeing 737', 'Boeing 767', 'Embraer E-Jet', 'Airbus A330']"}
{"cat":"vehicles","slot":"specialization","value":"blimp","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of blimp in terms of their hyponyms.\";         A textual example of the semantic relation is \"are blimp\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['airship', 'dirigible', 'zeppelin', 'lighter-than-air', 'non-rigid', 'semi-rigid', 'rigid', 'helium-filled', 'hydrogen-filled', 'blimp']"}
{"cat":"vehicles","slot":"specialization","value":"two-seater","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of two-seater in terms of their hyponyms.\";         A textual example of the semantic relation is \"are two-seater\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['motorcycle', 'scooter', 'bicycle', 'moped', 'tandem', 'sportscar', 'roadster', 'convertible', 'coupe', 'sedan']"}
{"cat":"vehicles","slot":"specialization","value":"stock car","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of stock car in terms of their hyponyms.\";         A textual example of the semantic relation is \"are stock car\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['Ford', 'Chevrolet', 'Dodge', 'Toyota', 'Honda', 'Nissan', 'Pontiac', 'Oldsmobile', 'Plymouth', 'AMC']"}
{"cat":"vehicles","slot":"specialization","value":"sled","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of sled in terms of their hyponyms.\";         A textual example of the semantic relation is \"are sled\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['toboggan', 'sleigh', 'sledge', 'pulka', 'kicksled', 'bobsled', 'snowmobile', 'snowboard', 'skis', 'skateboard']"}
{"cat":"vehicles","slot":"specialization","value":"mountain bike","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of mountain bike in terms of their hyponyms.\";         A textual example of the semantic relation is \"are mountain bike\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['mountain bike', 'hardtail mountain bike', 'full suspension mountain bike', '29er mountain bike', '27.5 mountain bike', '26 mountain bike', 'trail mountain bike', 'enduro mountain bike', 'downhill mountain bike', 'fat tire mountain bike']"}
{"cat":"vehicles","slot":"specialization","value":"tandem","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of tandem in terms of their hyponyms.\";         A textual example of the semantic relation is \"are tandem\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['bicycle', 'motorcycle', 'car', 'truck', 'bus', 'train', 'airplane', 'boat', 'submarine', 'spacecraft']"}
{"cat":"vehicles","slot":"specialization","value":"abandoned ship","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of abandoned ship in terms of their hyponyms.\";         A textual example of the semantic relation is \"are abandoned ship\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['ghost ship', 'derelict ship', 'wreck', 'hulk', 'sunken ship', 'stranded ship', 'floating junk', 'marooned vessel', 'lost ship', 'scuttled ship']"}
{"cat":"vehicles","slot":"specialization","value":"loaner","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of loaner in terms of their hyponyms.\";         A textual example of the semantic relation is \"are loaner\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"car\", \"truck\", \"van\", \"bus\", \"motorcycle\", \"bicycle\", \"train\", \"airplane\", \"boat\", \"ship\"]"}
{"cat":"vehicles","slot":"specialization","value":"fireboat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of fireboat in terms of their hyponyms.\";         A textual example of the semantic relation is \"are fireboat\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['fireboat', 'firefighting boat', 'watercraft', 'vessel', 'marine vehicle', 'firefighting vehicle', 'rescue boat', 'lifeboat', 'patrol boat', 'coast guard boat']"}
{"cat":"vehicles","slot":"specialization","value":"minesweeper","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of minesweeper in terms of their hyponyms.\";         A textual example of the semantic relation is \"are minesweeper\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['minesweeper', 'ship', 'vessel', 'warship', 'navy', 'destroyer', 'frigate', 'corvette', 'patrol boat', 'submarine']"}
{"cat":"vehicles","slot":"specialization","value":"cruise missile","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of cruise missile in terms of their hyponyms.\";         A textual example of the semantic relation is \"are cruise missile\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['aircraft', 'missile', 'rocket', 'drone', 'submarine', 'tank', 'helicopter', 'ship', 'car', 'truck']"}
{"cat":"vehicles","slot":"specialization","value":"troopship","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of troopship in terms of their hyponyms.\";         A textual example of the semantic relation is \"are troopship\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"landing craft\", \"transport ship\", \"troop carrier\", \"armored personnel carrier\", \"aircraft carrier\", \"amphibious assault ship\", \"destroyer\", \"frigate\", \"corvette\", \"submarine\"]"}
{"cat":"vehicles","slot":"specialization","value":"fan-jet","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of fan-jet in terms of their hyponyms.\";         A textual example of the semantic relation is \"are fan-jet\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['airplane', 'jet', 'turboprop', 'helicopter', 'drone', 'rocket', 'spacecraft', 'hovercraft', 'glider', 'blimp']"}
{"cat":"vehicles","slot":"specialization","value":"sailing ship","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of sailing ship in terms of their hyponyms.\";         A textual example of the semantic relation is \"are sailing ship\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['schooner', 'sloop', 'brig', 'frigate', 'clipper', 'barque', 'caravel', 'galleon', 'junk', 'xebec']"}
{"cat":"vehicles","slot":"specialization","value":"mackinaw","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of mackinaw in terms of their hyponyms.\";         A textual example of the semantic relation is \"are mackinaw\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'truck', 'bus', 'train', 'airplane', 'boat', 'ship', 'motorcycle', 'bicycle', 'scooter']"}
{"cat":"vehicles","slot":"specialization","value":"police cruiser","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of police cruiser in terms of their hyponyms.\";         A textual example of the semantic relation is \"are police cruiser\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['patrol car', 'squad car', 'cruiser', 'police car', 'cop car', 'black and white', 'highway patrol', 'interceptor', 'pursuit vehicle', 'police van']"}
{"cat":"vehicles","slot":"specialization","value":"bogy","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of bogy in terms of their hyponyms.\";         A textual example of the semantic relation is \"are bogy\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'truck', 'bus', 'motorcycle', 'bicycle', 'airplane', 'train', 'boat', 'submarine', 'helicopter']"}
{"cat":"vehicles","slot":"specialization","value":"angledozer","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of angledozer in terms of their hyponyms.\";         A textual example of the semantic relation is \"are angledozer\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"bulldozer\", \"crawler\", \"tracks\", \"blade\", \"cab\", \"engine\", \"transmission\", \"hydraulics\", \"wheels\", \"tires\"]"}
{"cat":"vehicles","slot":"specialization","value":"bus","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of bus in terms of their hyponyms.\";         A textual example of the semantic relation is \"are bus\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['double-decker', 'articulated', 'coach', 'minibus', 'school', 'transit', 'trolley', 'electric', 'open-top', 'party']"}
{"cat":"vehicles","slot":"specialization","value":"subcompact","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of subcompact in terms of their hyponyms.\";         A textual example of the semantic relation is \"are subcompact\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"Ford Fiesta\", \"Honda Fit\", \"Toyota Yaris\", \"Nissan Versa\", \"Chevrolet Sonic\", \"Kia Rio\", \"Hyundai Accent\", \"Mazda2\", \"Scion iA\", \"Fiat 500\"]"}
{"cat":"vehicles","slot":"specialization","value":"fanjet","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of fanjet in terms of their hyponyms.\";         A textual example of the semantic relation is \"are fanjet\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['jet', 'airplane', 'plane', 'aircraft', 'flying machine', 'aeroplane', 'flier', 'flight', 'aviation', 'air travel']"}
{"cat":"vehicles","slot":"specialization","value":"tourer","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of tourer in terms of their hyponyms.\";         A textual example of the semantic relation is \"are tourer\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'motorcycle', 'bicycle', 'bus', 'train', 'boat', 'airplane', 'helicopter', 'truck', 'van']"}
{"cat":"vehicles","slot":"specialization","value":"coupe","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of coupe in terms of their hyponyms.\";         A textual example of the semantic relation is \"are coupe\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['BMW 3 Series Coupe', 'BMW 4 Series Coupe', 'BMW 6 Series Coupe', 'Mercedes-Benz C-Class Coupe', 'Mercedes-Benz E-Class Coupe', 'Audi A5 Coupe', 'Lexus RC Coupe', 'Infiniti Q60 Coupe', 'Cadillac ATS Coupe', 'Cadillac CTS Coupe']"}
{"cat":"vehicles","slot":"specialization","value":"gondola","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of gondola in terms of their hyponyms.\";         A textual example of the semantic relation is \"are gondola\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['boat', 'ferry', 'water taxi', 'vaporetto', 'gondola', 'gondola boat', 'water bus', 'watercraft', 'water transport', 'water vessel']"}
{"cat":"vehicles","slot":"specialization","value":"dumper","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of dumper in terms of their hyponyms.\";         A textual example of the semantic relation is \"are dumper\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['articulated_dumper', 'backhoe_dumper', 'crawler_dumper', 'dump_truck', 'mini_dumper', 'off-road_dumper', 'rigid_dumper', 'skip_loader', 'tracked_dumper', 'wheel_loader']"}
{"cat":"vehicles","slot":"specialization","value":"tower","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of tower in terms of their hyponyms.\";         A textual example of the semantic relation is \"are tower\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"car\", \"truck\", \"bus\", \"motorcycle\", \"bicycle\", \"train\", \"airplane\", \"boat\", \"submarine\", \"helicopter\"]"}
{"cat":"vehicles","slot":"specialization","value":"ice-wagon","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of ice-wagon in terms of their hyponyms.\";         A textual example of the semantic relation is \"are ice-wagon\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['ice-wagon', 'horse-drawn wagon', 'ice delivery wagon', 'ice transport wagon', 'ice delivery vehicle', 'ice transport vehicle', 'refrigerated wagon', 'refrigerated vehicle', 'cold storage wagon', 'cold storage vehicle']"}
{"cat":"vehicles","slot":"specialization","value":"safety bicycle","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of safety bicycle in terms of their hyponyms.\";         A textual example of the semantic relation is \"are safety bicycle\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['bicycle', 'mountain bike', 'road bike', 'hybrid bike', 'cruiser', 'folding bike', 'tandem bike', 'recumbent bike', 'electric bike']"}
{"cat":"vehicles","slot":"specialization","value":"gas-turbine ship","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of gas-turbine ship in terms of their hyponyms.\";         A textual example of the semantic relation is \"are gas-turbine ship\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"turbine ship\", \"gas turbine\", \"turbine\", \"ship\", \"gas\", \"hyponym\", \"classification\", \"vehicle\", \"engine\", \"marine\"]"}
{"cat":"vehicles","slot":"specialization","value":"three-decker","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of three-decker in terms of their hyponyms.\";         A textual example of the semantic relation is \"are three-decker\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"car\", \"bus\", \"train\", \"airplane\", \"boat\", \"truck\", \"motorcycle\", \"bicycle\", \"scooter\", \"unicycle\"]"}
{"cat":"vehicles","slot":"specialization","value":"packet boat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of packet boat in terms of their hyponyms.\";         A textual example of the semantic relation is \"are packet boat\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['ship', 'boat', 'vessel', 'steamboat', 'sailboat', 'paddlewheel', 'schooner', 'clipper', 'barge', 'ferry']"}
{"cat":"vehicles","slot":"specialization","value":"motor mower","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of motor mower in terms of their hyponyms.\";         A textual example of the semantic relation is \"are motor mower\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['lawn mower', 'push mower', 'electric mower', 'riding mower', 'zero-turn mower', 'robotic mower', 'battery mower', 'gas mower', 'mulching mower', 'reel mower']"}
{"cat":"vehicles","slot":"specialization","value":"landing craft","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of landing craft in terms of their hyponyms.\";         A textual example of the semantic relation is \"are landing craft\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['LCVP', 'LCA', 'LCM', 'LCU', 'LSSL', 'LCSL', 'LCT', 'LCM(3)', 'LCM(6)', 'LCM(8)']"}
{"cat":"vehicles","slot":"specialization","value":"runabout","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of runabout in terms of their hyponyms.\";         A textual example of the semantic relation is \"are runabout\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'sedan', 'hatchback', 'SUV', 'truck', 'minivan', 'convertible', 'coupe', 'wagon', 'van']"}
{"cat":"vehicles","slot":"specialization","value":"pinnace","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of pinnace in terms of their hyponyms.\";         A textual example of the semantic relation is \"are pinnace\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"ship\", \"boat\", \"vessel\", \"craft\", \"yacht\", \"sailboat\", \"steamboat\", \"motorboat\", \"rowboat\", \"canoe\"]"}
{"cat":"vehicles","slot":"specialization","value":"scrambler","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of scrambler in terms of their hyponyms.\";         A textual example of the semantic relation is \"are scrambler\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['motorcycle', 'bike', 'off-road', 'dirt bike', 'enduro', 'dual sport', 'trials', 'trail', 'adventure']"}
{"cat":"vehicles","slot":"specialization","value":"motorbike","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of motorbike in terms of their hyponyms.\";         A textual example of the semantic relation is \"are motorbike\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['sport bike', 'cruiser', 'touring bike', 'standard', 'dual sport', 'dirt bike', 'scooter', 'chopper', 'naked bike', 'adventure bike']"}
{"cat":"vehicles","slot":"specialization","value":"turbojet","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of turbojet in terms of their hyponyms.\";         A textual example of the semantic relation is \"are turbojet\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['jet', 'aircraft', 'engine', 'propulsion', 'technology', 'speed', 'power', 'fuel', 'noise', 'efficiency']"}
{"cat":"vehicles","slot":"specialization","value":"flatboat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of flatboat in terms of their hyponyms.\";         A textual example of the semantic relation is \"are flatboat\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['canoe', 'kayak', 'rowboat', 'skiff', 'scow', 'raft', 'dory', 'sampan', 'coracle', 'gondola']"}
{"cat":"vehicles","slot":"specialization","value":"hardtop","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of hardtop in terms of their hyponyms.\";         A textual example of the semantic relation is \"are hardtop\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['coupe', 'sedan', 'convertible', 'roadster', 'hatchback', 'SUV', 'minivan', 'station wagon', 'pickup truck', 'limousine']"}
{"cat":"vehicles","slot":"specialization","value":"minelayer","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of minelayer in terms of their hyponyms.\";         A textual example of the semantic relation is \"are minelayer\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['minelayer', 'mine-laying ship', 'mine-laying vessel', 'minelayer ship', 'mine-laying boat', 'mine-laying craft', 'mine-laying barge', 'mine-laying pontoon', 'mine-laying raft', 'mine-laying float']"}
{"cat":"vehicles","slot":"specialization","value":"tipper truck","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of tipper truck in terms of their hyponyms.\";         A textual example of the semantic relation is \"are tipper truck\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['dump truck', 'tipper lorry', 'tipper trailer', 'tipper semi-trailer', 'dump semi-trailer', 'tipper body', 'dump body', 'tipper chassis', 'dump chassis', 'tipper frame']"}
{"cat":"vehicles","slot":"specialization","value":"minibus","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of minibus in terms of their hyponyms.\";         A textual example of the semantic relation is \"are minibus\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['minivan', 'shuttle', 'coach', 'bus', 'van', 'truck', 'SUV', 'car', 'taxi', 'limousine']"}
{"cat":"vehicles","slot":"specialization","value":"wain","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of wain in terms of their hyponyms.\";         A textual example of the semantic relation is \"are wain\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'truck', 'bus', 'van', 'motorcycle', 'bicycle', 'train', 'boat', 'airplane', 'helicopter']"}
{"cat":"vehicles","slot":"specialization","value":"skibob","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of skibob in terms of their hyponyms.\";         A textual example of the semantic relation is \"are skibob\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['snowmobile', 'snowboard', 'ski', 'sled', 'skateboard', 'bike', 'motorcycle', 'car', 'truck', 'bus']"}
{"cat":"vehicles","slot":"specialization","value":"cruise ship","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of cruise ship in terms of their hyponyms.\";         A textual example of the semantic relation is \"are cruise ship\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['Cruise Ship', 'Luxury Cruise Ship', 'Mega Cruise Ship', 'River Cruise Ship', 'Expedition Cruise Ship', 'Yacht Cruise Ship', 'Family Cruise Ship', 'Adults-Only Cruise Ship', 'Theme Cruise Ship', 'Casino Cruise Ship']"}
{"cat":"vehicles","slot":"specialization","value":"bandwagon","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of bandwagon in terms of their hyponyms.\";         A textual example of the semantic relation is \"are bandwagon\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['carriage', 'cart', 'wagon', 'stagecoach', 'coach', 'caravan', 'van', 'truck', 'bus', 'train']"}
{"cat":"vehicles","slot":"specialization","value":"phaeton","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of phaeton in terms of their hyponyms.\";         A textual example of the semantic relation is \"are phaeton\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['carriage', 'car', 'wagon', 'coach', 'buggy', 'sulky', 'phaeton', 'gig', 'trap', 'cabriolet']"}
{"cat":"vehicles","slot":"specialization","value":"touring car","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of touring car in terms of their hyponyms.\";         A textual example of the semantic relation is \"are touring car\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['sedan', 'coupe', 'hatchback', 'wagon', 'convertible', 'SUV', 'minivan', 'pickup truck', 'sports car', 'luxury car']"}
{"cat":"vehicles","slot":"specialization","value":"patrol car","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of patrol car in terms of their hyponyms.\";         A textual example of the semantic relation is \"are patrol car\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['police car', 'squad car', 'cruiser', 'marked car', 'unmarked car', 'highway patrol car', 'interceptor', 'pursuit vehicle', 'traffic enforcement vehicle', 'law enforcement vehicle']"}
{"cat":"vehicles","slot":"specialization","value":"sledge","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of sledge in terms of their hyponyms.\";         A textual example of the semantic relation is \"are sledge\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['sleigh', 'bobsleigh', 'luge', 'sled', 'sledge', 'toboggan', 'pulka', 'skid', 'travois', 'snowmobile']"}
{"cat":"vehicles","slot":"specialization","value":"tip truck","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of tip truck in terms of their hyponyms.\";         A textual example of the semantic relation is \"are tip truck\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"dump truck\", \"tipper\", \"tipping trailer\", \"articulated truck\", \"tipping lorry\", \"tipping semi-trailer\", \"tipping tractor\", \"tipping rigid\", \"tipping tipper\", \"tipping vehicle\"]"}
{"cat":"vehicles","slot":"specialization","value":"shuttle helicopter","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of shuttle helicopter in terms of their hyponyms.\";         A textual example of the semantic relation is \"are shuttle helicopter\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"helicopter\", \"aircraft\", \"vehicle\", \"transport\", \"aircraft\", \"rotorcraft\", \"airship\", \"blimp\", \"dirigible\"]"}
{"cat":"vehicles","slot":"specialization","value":"fishing vessel","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of fishing vessel in terms of their hyponyms.\";         A textual example of the semantic relation is \"are fishing vessel\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"longliner\", \"trawler\", \"purse seiner\", \"gillnetter\", \"seine netter\", \"crabber\", \"shrimper\", \"dredger\", \"lugger\", \"troller\"]"}
{"cat":"vehicles","slot":"specialization","value":"tug","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of tug in terms of their hyponyms.\";         A textual example of the semantic relation is \"are tug\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['tugboat', 'tug', 'towboat', 'tow', 'towing', 'pusher', 'push', 'puller', 'pull']"}
{"cat":"vehicles","slot":"specialization","value":"ice yacht","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of ice yacht in terms of their hyponyms.\";         A textual example of the semantic relation is \"are ice yacht\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['iceboat', 'ice yacht', 'sailboat', 'sailing vessel', 'sleigh', 'sledge', 'skate', 'skateboard', 'snowmobile', 'winter vehicle']"}
{"cat":"vehicles","slot":"specialization","value":"sea boat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of sea boat in terms of their hyponyms.\";         A textual example of the semantic relation is \"are sea boat\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['cruise ship', 'sailboat', 'yacht', 'motorboat', 'submarine', 'tugboat', 'fishing boat', 'speedboat', 'catamaran', 'paddleboat']"}
{"cat":"vehicles","slot":"specialization","value":"ambulance","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of ambulance in terms of their hyponyms.\";         A textual example of the semantic relation is \"are ambulance\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['ambulance', 'emergency vehicle', 'medical transport', 'rescue vehicle', 'paramedic unit', 'first responder', 'life support unit', 'mobile clinic', 'trauma center', 'disaster relief vehicle']"}
{"cat":"vehicles","slot":"specialization","value":"rocket","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of rocket in terms of their hyponyms.\";         A textual example of the semantic relation is \"are rocket\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['missile', 'projectile', 'spacecraft', 'satellite', 'launch vehicle', 'space shuttle', 'rocket engine', 'propulsion system', 'fuel tank', 'control system']"}
{"cat":"vehicles","slot":"specialization","value":"passenger ship","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of passenger ship in terms of their hyponyms.\";         A textual example of the semantic relation is \"are passenger ship\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['cruise ship', 'ferry', 'liner', 'steamship', 'steamer', 'ocean liner', 'cargo ship', 'container ship', 'tanker', 'bulk carrier']"}
{"cat":"vehicles","slot":"specialization","value":"whaling ship","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of whaling ship in terms of their hyponyms.\";         A textual example of the semantic relation is \"are whaling ship\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"whaler\", \"bark\", \"brig\", \"schooner\", \"sloop\", \"steamer\", \"factory ship\", \"catcher\", \"chaser\", \"mother ship\"]"}
{"cat":"vehicles","slot":"specialization","value":"patrol boat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of patrol boat in terms of their hyponyms.\";         A textual example of the semantic relation is \"are patrol boat\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['speedboat', 'motorboat', 'gunboat', 'torpedo boat', 'missile boat', 'coast guard cutter', 'patrol craft', 'fast attack craft', 'river patrol boat', 'harbor patrol boat']"}
{"cat":"vehicles","slot":"specialization","value":"treasure ship","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of treasure ship in terms of their hyponyms.\";         A textual example of the semantic relation is \"are treasure ship\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['galleon', 'caravel', 'junk', 'frigate', 'sloop', 'schooner', 'brig', 'corvette', 'cutter', 'snow']"}
{"cat":"vehicles","slot":"specialization","value":"steamship","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of steamship in terms of their hyponyms.\";         A textual example of the semantic relation is \"are steamship\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['steamboat', 'steamship', 'steam-powered ship', 'paddle steamer', 'sidewheeler', 'sternwheeler', 'steam-powered vessel', 'steam-powered boat', 'steam-powered watercraft', 'steam-driven ship']"}
{"cat":"vehicles","slot":"specialization","value":"bumboat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of bumboat in terms of their hyponyms.\";         A textual example of the semantic relation is \"are bumboat\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['boat', 'watercraft', 'vessel', 'ferry', 'tourist boat', 'transportation', 'riverboat', 'cruise ship', 'sampan', 'junk']"}
{"cat":"vehicles","slot":"specialization","value":"minivan","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of minivan in terms of their hyponyms.\";         A textual example of the semantic relation is \"are minivan\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['Toyota Sienna', 'Honda Odyssey', 'Chrysler Pacifica', 'Kia Sedona', 'Dodge Grand Caravan', 'Nissan Quest', 'Mazda MPV', 'Ford Freestar', 'Chevrolet Venture', 'Hyundai Entourage']"}
{"cat":"vehicles","slot":"specialization","value":"sound truck","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of sound truck in terms of their hyponyms.\";         A textual example of the semantic relation is \"are sound truck\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['sound truck', 'speaker truck', 'amplifier truck', 'PA truck', 'public address truck', 'broadcast truck', 'mobile sound system', 'audio van', 'noise truck', 'sonic vehicle']"}
{"cat":"vehicles","slot":"specialization","value":"ice wagon","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of ice wagon in terms of their hyponyms.\";         A textual example of the semantic relation is \"are ice wagon\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['horse-drawn carriage', 'sleigh', 'wagon', 'cart', 'stagecoach', 'carriage', 'hay wagon', 'grain wagon', 'log wagon', 'mail wagon']"}
{"cat":"vehicles","slot":"specialization","value":"minibike","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of minibike in terms of their hyponyms.\";         A textual example of the semantic relation is \"are minibike\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['motorcycle', 'scooter', 'moped', 'trike', 'quad', 'ATV', 'dirt bike', 'snowmobile', 'jet ski', 'go-kart']"}
{"cat":"vehicles","slot":"specialization","value":"Stanley Steamer","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of Stanley Steamer in terms of their hyponyms.\";         A textual example of the semantic relation is \"are Stanley Steamer\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['steam car', 'steam-powered vehicle', 'steam-powered automobile', 'steam-powered car', 'steam-powered automotive', 'steam-powered transportation', 'steam-powered machine', 'steam-powered device', 'steam-powered engine', 'steam-powered system']"}
{"cat":"vehicles","slot":"specialization","value":"prairie schooner","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of prairie schooner in terms of their hyponyms.\";         A textual example of the semantic relation is \"are prairie schooner\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['wagon', 'carriage', 'stagecoach', 'conestoga', 'prairie schooner', 'buckboard', 'buggy', 'surrey', 'phaeton', 'brougham']"}
{"cat":"vehicles","slot":"specialization","value":"school ship","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of school ship in terms of their hyponyms.\";         A textual example of the semantic relation is \"are school ship\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['training ship', 'school ship', 'naval training ship', 'naval academy ship', 'maritime academy ship', 'sail training ship', 'tall ship', 'barquentine', 'barque', 'brigantine']"}
{"cat":"vehicles","slot":"specialization","value":"road roller","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of road roller in terms of their hyponyms.\";         A textual example of the semantic relation is \"are road roller\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['steamroller', 'vibratory roller', 'tandem roller', 'pneumatic tire roller', 'sheepsfoot roller', 'single drum roller', 'double drum roller', 'static roller', 'smooth-wheeled roller', 'grid roller']"}
{"cat":"vehicles","slot":"specialization","value":"push-bike","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of push-bike in terms of their hyponyms.\";         A textual example of the semantic relation is \"are push-bike\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['bicycle', 'mountain bike', 'road bike', 'cruiser', 'hybrid bike', 'fixie', 'recumbent bike', 'tandem', 'folding bike']"}
{"cat":"vehicles","slot":"specialization","value":"hatchback","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of hatchback in terms of their hyponyms.\";         A textual example of the semantic relation is \"are hatchback\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"Ford Focus\", \"Toyota Corolla\", \"Honda Civic\", \"Volkswagen Golf\", \"Mazda3\", \"Hyundai Elantra\", \"Kia Forte\", \"Nissan Sentra\", \"Chevrolet Cruze\", \"Subaru Impreza\"]"}
{"cat":"vehicles","slot":"specialization","value":"tow truck","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of tow truck in terms of their hyponyms.\";         A textual example of the semantic relation is \"are tow truck\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['flatbed', 'wheel-lift', 'integrated', 'heavy-duty', 'medium-duty', 'light-duty', 'hydraulic', 'mechanical', 'boom', 'sling']"}
{"cat":"vehicles","slot":"specialization","value":"lugger","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of lugger in terms of their hyponyms.\";         A textual example of the semantic relation is \"are lugger\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['sailboat', 'ship', 'boat', 'vessel', 'watercraft', 'craft', 'yacht', 'schooner', 'ketch', 'sloop']"}
{"cat":"vehicles","slot":"specialization","value":"bogie","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of bogie in terms of their hyponyms.\";         A textual example of the semantic relation is \"are bogie\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['locomotive', 'carriage', 'wagon', 'truck', 'bus', 'trolley', 'train', 'subway', 'monorail', 'cable car']"}
{"cat":"vehicles","slot":"specialization","value":"van","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of van in terms of their hyponyms.\";         A textual example of the semantic relation is \"are van\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['minivan', 'cargo van', 'campervan', 'panel van', 'caravanette', 'microvan', 'vanette', 'multi-stop truck', 'step van']"}
{"cat":"vehicles","slot":"specialization","value":"narrow boat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of narrow boat in terms of their hyponyms.\";         A textual example of the semantic relation is \"are narrow boat\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['canoe', 'kayak', 'rowboat', 'punt', 'gondola', 'sampan', 'coracle', 'umiak', 'currach', 'wherry']"}
{"cat":"vehicles","slot":"specialization","value":"cart","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of cart in terms of their hyponyms.\";         A textual example of the semantic relation is \"are cart\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['wagon', 'stagecoach', 'chariot', 'rickshaw', 'carriage', 'trolley', 'sleigh', 'buggy', 'tram', 'gurney']"}
{"cat":"vehicles","slot":"specialization","value":"tandem bicycle","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of tandem bicycle in terms of their hyponyms.\";         A textual example of the semantic relation is \"are tandem bicycle\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['tandem', 'bicycle', 'bike', 'cycle', 'two-seater', 'recumbent', 'tricycle', 'quadracycle', 'unicycle', 'velocipede']"}
{"cat":"vehicles","slot":"specialization","value":"small ship","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of small ship in terms of their hyponyms.\";         A textual example of the semantic relation is \"are small ship\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['canoe', 'kayak', 'dinghy', 'skiff', 'yawl', 'sloop', 'schooner', 'catamaran', 'trimaran', 'rowboat']"}
{"cat":"vehicles","slot":"specialization","value":"squad car","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of squad car in terms of their hyponyms.\";         A textual example of the semantic relation is \"are squad car\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['police car', 'patrol car', 'cruiser', 'squad', 'squadron', 'police vehicle', 'police van', 'police motorcycle', 'police helicopter', 'police boat']"}
{"cat":"vehicles","slot":"specialization","value":"tipper","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of tipper in terms of their hyponyms.\";         A textual example of the semantic relation is \"are tipper\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['dump truck', 'tipper lorry', 'tipper truck', 'dump trailer', 'tipper body', 'dump body', 'tipper vehicle', 'tipper trailer', 'dump tipper', 'tipper dump']"}
{"cat":"vehicles","slot":"specialization","value":"power mower","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of power mower in terms of their hyponyms.\";         A textual example of the semantic relation is \"are power mower\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['lawn mower', 'riding lawn mower', 'zero turn mower', 'electric lawn mower', 'push mower', 'reel mower', 'battery-powered mower', 'gas-powered mower', 'mulching mower', 'side discharge mower']"}
{"cat":"vehicles","slot":"specialization","value":"skidder","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of skidder in terms of their hyponyms.\";         A textual example of the semantic relation is \"are skidder\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"forestry\", \"logging\", \"tractor\", \"machine\", \"equipment\", \"vehicle\", \"transportation\", \"harvesting\", \"felling\", \"hauling\"]"}
{"cat":"vehicles","slot":"specialization","value":"jumbo jet","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of jumbo jet in terms of their hyponyms.\";         A textual example of the semantic relation is \"are jumbo jet\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['airplane', 'boeing', 'airbus', 'jet', 'aircraft', 'passenger', 'transport', 'flight', 'commercial', 'airliner']"}
{"cat":"vehicles","slot":"specialization","value":"single-rotor helicopter","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of single-rotor helicopter in terms of their hyponyms.\";         A textual example of the semantic relation is \"are single-rotor helicopter\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['helicopter', 'aircraft', 'rotorcraft', 'single-rotor helicopter', 'gyrocopter', 'autogyro', 'coaxial helicopter', 'compound helicopter', 'quadcopter', 'multicopter']"}
{"cat":"vehicles","slot":"specialization","value":"sleigh","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of sleigh in terms of their hyponyms.\";         A textual example of the semantic relation is \"are sleigh\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['sled', 'sledge', 'bobsled', 'dog sled', 'horse-drawn sleigh', 'reindeer sleigh', 'snowmobile', 'wagon', 'chariot', 'stagecoach']"}
{"cat":"vehicles","slot":"specialization","value":"shipwreck","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of shipwreck in terms of their hyponyms.\";         A textual example of the semantic relation is \"are shipwreck\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['schooner', 'steamship', 'frigate', 'sloop', 'barge', 'yacht', 'galleon', 'cruise_ship', 'submarine', 'aircraft_carrier']"}
{"cat":"vehicles","slot":"specialization","value":"garbage truck","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of garbage truck in terms of their hyponyms.\";         A textual example of the semantic relation is \"are garbage truck\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['truck', 'garbage', 'vehicle', 'waste', 'collection', 'disposal', 'compactor', 'recycling', 'sanitation', 'transport']"}
{"cat":"vehicles","slot":"specialization","value":"Conestoga","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of Conestoga in terms of their hyponyms.\";         A textual example of the semantic relation is \"are Conestoga\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['wagon', 'carriage', 'stagecoach', 'oxcart', 'mule', 'horse', 'steam engine', 'locomotive', 'automobile', 'truck']"}
{"cat":"vehicles","slot":"specialization","value":"pedicab","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of pedicab in terms of their hyponyms.\";         A textual example of the semantic relation is \"are pedicab\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['rickshaw', 'tricycle', 'velotaxi', 'velomobile', 'bicycle', 'tandem', 'quadracycle', 'unicycle', 'scooter', 'motorcycle']"}
{"cat":"vehicles","slot":"specialization","value":"semi","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of semi in terms of their hyponyms.\";         A textual example of the semantic relation is \"are semi\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['truck', 'bus', 'car', 'van', 'SUV', 'motorcycle', 'bicycle', 'scooter', 'boat', 'train']"}
{"cat":"vehicles","slot":"specialization","value":"police car","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of police car in terms of their hyponyms.\";         A textual example of the semantic relation is \"are police car\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['cruiser', 'patrol car', 'squad car', 'interceptor', 'undercover car', 'unmarked car', 'pursuit vehicle', 'highway patrol car', 'traffic enforcement vehicle', 'detective car']"}
{"cat":"vehicles","slot":"specialization","value":"ordinary","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of ordinary in terms of their hyponyms.\";         A textual example of the semantic relation is \"are ordinary\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"car\", \"truck\", \"bus\", \"motorcycle\", \"bicycle\", \"train\", \"boat\", \"airplane\", \"helicopter\", \"rocket\"]"}
{"cat":"vehicles","slot":"specialization","value":"fire truck","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of fire truck in terms of their hyponyms.\";         A textual example of the semantic relation is \"are fire truck\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['ladder truck', 'pumper', 'tanker', 'rescue truck', 'brush truck', 'wildland fire engine', 'aerial truck', 'tiller truck', 'quint', 'mini pumper']"}
{"cat":"vehicles","slot":"specialization","value":"subcompact car","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of subcompact car in terms of their hyponyms.\";         A textual example of the semantic relation is \"are subcompact car\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['Fiat 500', 'Mini Cooper', 'Smart Fortwo', 'Toyota Yaris', 'Honda Fit', 'Chevrolet Spark', 'Ford Fiesta', 'Hyundai Accent', 'Kia Rio', 'Nissan Versa']"}
{"cat":"vehicles","slot":"specialization","value":"electric","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of electric in terms of their hyponyms.\";         A textual example of the semantic relation is \"are electric\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"electric car\", \"electric bus\", \"electric motorcycle\", \"electric bicycle\", \"electric scooter\", \"electric skateboard\", \"electric unicycle\", \"electric tricycle\", \"electric quadricycle\", \"electric train\"]"}
{"cat":"vehicles","slot":"specialization","value":"compact","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of compact in terms of their hyponyms.\";         A textual example of the semantic relation is \"are compact\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['Mini Cooper', 'Fiat 500', 'Volkswagen Beetle', 'Toyota Yaris', 'Honda Fit', 'Ford Fiesta', 'Chevrolet Sonic', 'Kia Rio', 'Nissan Versa']"}
{"cat":"vehicles","slot":"specialization","value":"trailer truck","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of trailer truck in terms of their hyponyms.\";         A textual example of the semantic relation is \"are trailer truck\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['semi-trailer truck', 'articulated lorry', 'tractor unit', 'trailer', 'flatbed truck', 'lowboy', 'step deck', 'reefer', 'van', 'tanker']"}
{"cat":"vehicles","slot":"specialization","value":"hospital ship","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of hospital ship in terms of their hyponyms.\";         A textual example of the semantic relation is \"are hospital ship\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['USS Comfort', 'USS Mercy', 'USNS Comfort', 'USNS Mercy', 'USS Hope', 'USS Relief', 'USS Benevolence', 'USS Sanctuary', 'USS Solace', 'USS Tranquility']"}
{"cat":"vehicles","slot":"specialization","value":"horsecar","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of horsecar in terms of their hyponyms.\";         A textual example of the semantic relation is \"are horsecar\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['horsecar', 'streetcar', 'tram', 'trolley', 'cable car', 'funicular', 'monorail', 'light rail', 'rapid transit', 'commuter rail']"}
{"cat":"vehicles","slot":"specialization","value":"jet-propelled plane","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of jet-propelled plane in terms of their hyponyms.\";         A textual example of the semantic relation is \"are jet-propelled plane\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['jet fighter', 'airliner', 'bomber', 'fighter', 'interceptor', 'military aircraft', 'passenger jet', 'reconnaissance aircraft', 'stealth aircraft', 'transport aircraft']"}
{"cat":"vehicles","slot":"specialization","value":"dirt bike","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of dirt bike in terms of their hyponyms.\";         A textual example of the semantic relation is \"are dirt bike\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['motocross', 'enduro', 'supercross', 'trail', 'dual-sport', 'trials', 'pit bike', 'mini bike', 'off-road', 'supermoto']"}
{"cat":"vehicles","slot":"specialization","value":"mail boat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of mail boat in terms of their hyponyms.\";         A textual example of the semantic relation is \"are mail boat\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"steamer\", \"ferry\", \"cutter\", \"schooner\", \"sloop\", \"yawl\", \"ketch\", \"brig\", \"bark\", \"ship\"]"}
{"cat":"vehicles","slot":"specialization","value":"powerboat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of powerboat in terms of their hyponyms.\";         A textual example of the semantic relation is \"are powerboat\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"motorboat\", \"speedboat\", \"cruiser\", \"runabout\", \"jet boat\", \"airboat\", \"catamaran\", \"trimaran\", \"hydrofoil\", \"hovercraft\"]"}
{"cat":"vehicles","slot":"specialization","value":"jumbojet","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of jumbojet in terms of their hyponyms.\";         A textual example of the semantic relation is \"are jumbojet\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['Boeing 747', 'Airbus A380', 'Concorde', 'Lockheed L-1011', 'McDonnell Douglas DC-10', 'Boeing 777', 'Airbus A350', 'Boeing 787', 'Airbus A330', 'Boeing 767']"}
{"cat":"vehicles","slot":"specialization","value":"junk","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of junk in terms of their hyponyms.\";         A textual example of the semantic relation is \"are junk\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'truck', 'van', 'bus', 'motorcycle', 'bicycle', 'boat', 'train', 'airplane', 'helicopter']"}
{"cat":"vehicles","slot":"specialization","value":"stealth aircraft","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of stealth aircraft in terms of their hyponyms.\";         A textual example of the semantic relation is \"are stealth aircraft\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['F-22 Raptor', 'F-35 Lightning II', 'B-2 Spirit', 'YF-23 Black Widow II', 'F-117 Nighthawk', 'SR-71 Blackbird', 'B-21 Raider', 'Su-57 Felon', 'J-20 Mighty Dragon', 'Taranis']"}
{"cat":"vehicles","slot":"specialization","value":"water waggon","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of water waggon in terms of their hyponyms.\";         A textual example of the semantic relation is \"are water waggon\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"water wagon\", \"fire truck\", \"tanker truck\", \"water tanker\", \"hose cart\", \"water carrier\", \"water truck\", \"water tank\", \"water trailer\", \"water transport\"]"}
{"cat":"vehicles","slot":"specialization","value":"bogey","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of bogey in terms of their hyponyms.\";         A textual example of the semantic relation is \"are bogey\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'truck', 'bus', 'motorcycle', 'bicycle', 'train', 'airplane', 'boat', 'submarine', 'spaceship']"}
{"cat":"vehicles","slot":"specialization","value":"used-car","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of used-car in terms of their hyponyms.\";         A textual example of the semantic relation is \"are used-car\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['sedan', 'SUV', 'coupe', 'hatchback', 'wagon', 'truck', 'minivan', 'convertible', 'sports car', 'crossover']"}
{"cat":"vehicles","slot":"specialization","value":"jeep","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of jeep in terms of their hyponyms.\";         A textual example of the semantic relation is \"are jeep\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"Wrangler\", \"Cherokee\", \"Grand Cherokee\", \"Renegade\", \"Compass\", \"Liberty\", \"Commander\", \"Patriot\", \"CJ-5\", \"CJ-7\"]"}
{"cat":"vehicles","slot":"specialization","value":"tractor trailer","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of tractor trailer in terms of their hyponyms.\";         A textual example of the semantic relation is \"are tractor trailer\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['semi-trailer', 'tractor unit', 'articulated lorry', '18-wheeler', 'big rig', 'semi', 'tractor-trailer', 'truck', 'rig', 'lorry']"}
{"cat":"vehicles","slot":"specialization","value":"tipper lorry","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of tipper lorry in terms of their hyponyms.\";         A textual example of the semantic relation is \"are tipper lorry\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['dump truck', 'tipper', 'tipping trailer', 'dumping vehicle', 'tipping lorry', 'dumping lorry', 'tipping truck', 'dumping truck', 'tipping vehicle', 'dumping vehicle']"}
{"cat":"vehicles","slot":"specialization","value":"scow","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of scow in terms of their hyponyms.\";         A textual example of the semantic relation is \"are scow\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['barge', 'boat', 'ship', 'vessel', 'watercraft', 'sailboat', 'steamboat', 'tugboat', 'dredge', 'freighter']"}
{"cat":"vehicles","slot":"specialization","value":"lighter","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of lighter in terms of their hyponyms.\";         A textual example of the semantic relation is \"are lighter\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['bicycle', 'motorcycle', 'scooter', 'moped', 'skateboard', 'rollerblades', 'unicycle', 'tricycle', 'quadricycle', 'segway']"}
{"cat":"vehicles","slot":"specialization","value":"ship's boat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of ship's boat in terms of their hyponyms.\";         A textual example of the semantic relation is \"are ship's boat\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"lifeboat\", \"dinghy\", \"tender\", \"launch\", \"pinnace\", \"yawl\", \"jolly boat\", \"cutter\", \"skiff\", \"sailboat\"]"}
{"cat":"vehicles","slot":"specialization","value":"pace car","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of pace car in terms of their hyponyms.\";         A textual example of the semantic relation is \"are pace car\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['race car', 'safety car', 'pace vehicle', 'lead car', 'pilot car', 'escort car', 'control car', 'leader car', 'guide car', 'head car']"}
{"cat":"vehicles","slot":"specialization","value":"sport car","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of sport car in terms of their hyponyms.\";         A textual example of the semantic relation is \"are sport car\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['Ferrari', 'Lamborghini', 'Porsche', 'Aston Martin', 'McLaren', 'Audi', 'BMW', 'Mercedes-Benz', 'Nissan']"}
{"cat":"vehicles","slot":"specialization","value":"towboat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of towboat in terms of their hyponyms.\";         A textual example of the semantic relation is \"are towboat\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['pusher', 'tug', 'towboat', 'tugboat', 'barge', 'tow', 'towing', 'push', 'pull']"}
{"cat":"vehicles","slot":"specialization","value":"Model T","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of Model T in terms of their hyponyms.\";         A textual example of the semantic relation is \"are Model T\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['automobile', 'car', 'vehicle', 'automotive', 'motorcar', 'auto', 'motor vehicle', 'motor', 'transportation']"}
{"cat":"vehicles","slot":"specialization","value":"canal boat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of canal boat in terms of their hyponyms.\";         A textual example of the semantic relation is \"are canal boat\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"narrowboat\", \"barge\", \"tugboat\", \"dutch barge\", \"motorboat\", \"sailboat\", \"houseboat\", \"cargo ship\", \"pleasure boat\", \"paddle steamer\"]"}
{"cat":"vehicles","slot":"specialization","value":"scooter","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of scooter in terms of their hyponyms.\";         A textual example of the semantic relation is \"are scooter\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['motor scooter', 'electric scooter', 'moped', 'motorcycle', 'kick scooter', 'scooter', 'scooter-bike', 'scooter-car', 'scooter-truck', 'scooter-van']"}
{"cat":"vehicles","slot":"specialization","value":"ferryboat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of ferryboat in terms of their hyponyms.\";         A textual example of the semantic relation is \"are ferryboat\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"ferry\", \"steamboat\", \"paddlewheel\", \"catamaran\", \"cable ferry\", \"hovercraft\", \"water taxi\", \"car ferry\", \"passenger ferry\", \"tourist ferry\"]"}
{"cat":"vehicles","slot":"specialization","value":"trucking rig","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of trucking rig in terms of their hyponyms.\";         A textual example of the semantic relation is \"are trucking rig\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['semi-truck', 'big rig', 'tractor-trailer', '18-wheeler', 'tanker', 'flatbed', 'dump truck', 'cabover', 'box truck', 'tow truck']"}
{"cat":"vehicles","slot":"specialization","value":"icebreaker","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of icebreaker in terms of their hyponyms.\";         A textual example of the semantic relation is \"are icebreaker\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"icebreaker\", \"ship\", \"boat\", \"vessel\", \"steamship\", \"tugboat\", \"freighter\", \"cruise ship\", \"yacht\", \"submarine\"]"}
{"cat":"vehicles","slot":"specialization","value":"car transporter","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of car transporter in terms of their hyponyms.\";         A textual example of the semantic relation is \"are car transporter\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car carrier', 'car hauler', 'car transport', 'auto transporter', 'vehicle carrier', 'car shipping', 'car transportation', 'car delivery', 'car moving', 'car towing']"}
{"cat":"vehicles","slot":"specialization","value":"weather ship","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of weather ship in terms of their hyponyms.\";         A textual example of the semantic relation is \"are weather ship\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['weather ship', 'research vessel', 'sailboat', 'yacht', 'cruise ship', 'container ship', 'tanker', 'bulk carrier', 'ferry', 'tugboat']"}
{"cat":"vehicles","slot":"specialization","value":"trail bike","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of trail bike in terms of their hyponyms.\";         A textual example of the semantic relation is \"are trail bike\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['dirt bike', 'motocross bike', 'enduro bike', 'dual sport bike', 'supermoto bike', 'adventure bike', 'trials bike', 'mini bike', 'pit bike', 'trail bike']"}
{"cat":"vehicles","slot":"specialization","value":"barrage balloon","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of barrage balloon in terms of their hyponyms.\";         A textual example of the semantic relation is \"are barrage balloon\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['blimp', 'airship', 'dirigible', 'zeppelin', 'balloon', 'hot air balloon', 'helium balloon', 'hydrogen balloon', 'party balloon', 'decorative balloon']"}
{"cat":"vehicles","slot":"specialization","value":"longboat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of longboat in terms of their hyponyms.\";         A textual example of the semantic relation is \"are longboat\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['canoe', 'kayak', 'rowboat', 'dinghy', 'punt', 'skiff', 'sampan', 'coracle', 'gondola', 'longship']"}
{"cat":"vehicles","slot":"specialization","value":"pirate ship","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of pirate ship in terms of their hyponyms.\";         A textual example of the semantic relation is \"are pirate ship\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['pirate ship', 'sloop', 'schooner', 'brig', 'frigate', 'galleon', 'barque', 'caravel', 'cog', 'xebec']"}
{"cat":"vehicles","slot":"specialization","value":"packet","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of packet in terms of their hyponyms.\";         A textual example of the semantic relation is \"are packet\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"car\", \"bus\", \"truck\", \"motorcycle\", \"bicycle\", \"airplane\", \"boat\", \"train\", \"submarine\", \"helicopter\"]"}
{"cat":"vehicles","slot":"specialization","value":"projectile","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of projectile in terms of their hyponyms.\";         A textual example of the semantic relation is \"are projectile\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['rocket', 'missile', 'bullet', 'dart', 'arrow', 'spear', 'javelin', 'torpedo', 'cannonball', 'grenade']"}
{"cat":"vehicles","slot":"specialization","value":"yacht","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of yacht in terms of their hyponyms.\";         A textual example of the semantic relation is \"are yacht\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"motor yacht\", \"sailing yacht\", \"cruising yacht\", \"racing yacht\", \"luxury yacht\", \"superyacht\", \"megayacht\", \"gigayacht\", \"trawler yacht\", \"catamaran yacht\"]"}
{"cat":"vehicles","slot":"specialization","value":"minicab","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of minicab in terms of their hyponyms.\";         A textual example of the semantic relation is \"are minicab\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['taxi', 'cab', 'car', 'sedan', 'hatchback', 'SUV', 'minivan', 'limousine', 'van', 'truck']"}
{"cat":"vehicles","slot":"specialization","value":"hand mower","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of hand mower in terms of their hyponyms.\";         A textual example of the semantic relation is \"are hand mower\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['lawn mower', 'grass cutter', 'push mower', 'manual mower', 'reel mower', 'rotary mower', 'cylinder mower', 'walk-behind mower', 'tow-behind mower', 'riding mower']"}
{"cat":"vehicles","slot":"specialization","value":"motorboat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of motorboat in terms of their hyponyms.\";         A textual example of the semantic relation is \"are motorboat\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['speedboat', 'cabin cruiser', 'jet boat', 'houseboat', 'fishing boat', 'inflatable boat', 'paddle boat', 'sailboat', 'rowboat']"}
{"cat":"vehicles","slot":"specialization","value":"sausage","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of sausage in terms of their hyponyms.\";         A textual example of the semantic relation is \"are sausage\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'truck', 'bus', 'motorcycle', 'bicycle', 'train', 'boat', 'airplane', 'helicopter', 'spaceship']"}
{"cat":"vehicles","slot":"specialization","value":"compact car","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of compact car in terms of their hyponyms.\";         A textual example of the semantic relation is \"are compact car\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['Mini', 'Fiat 500', 'Volkswagen Polo', 'Ford Fiesta', 'Toyota Yaris', 'Honda Fit', 'Chevrolet Sonic', 'Nissan Versa', 'Kia Rio', 'Hyundai Accent']"}
{"cat":"vehicles","slot":"specialization","value":"chuck wagon","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of chuck wagon in terms of their hyponyms.\";         A textual example of the semantic relation is \"are chuck wagon\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['wagon', 'carriage', 'stagecoach', 'conestoga', 'prairie schooner', 'buckboard', 'surrey', 'buggy', 'hansom cab', 'brougham']"}
{"cat":"vehicles","slot":"specialization","value":"limo","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of limo in terms of their hyponyms.\";         A textual example of the semantic relation is \"are limo\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"sedan\", \"stretch\", \"SUV\", \"Hummer\", \"Escalade\", \"Navigator\", \"Excursion\", \"Limousine\", \"Town Car\", \"Lincoln\"]"}
{"cat":"vehicles","slot":"specialization","value":"surfboat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of surfboat in terms of their hyponyms.\";         A textual example of the semantic relation is \"are surfboat\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"canoe\", \"kayak\", \"rowboat\", \"sailboat\", \"speedboat\", \"yacht\", \"catamaran\", \"dinghy\", \"paddleboard\", \"jetski\"]"}
{"cat":"vehicles","slot":"specialization","value":"hot rod","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of hot rod in terms of their hyponyms.\";         A textual example of the semantic relation is \"are hot rod\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"hot rod\", \"street rod\", \"rat rod\", \"pro street\", \"gasser\", \"dragster\", \"funny car\", \"stock car\", \"muscle car\", \"custom car\"]"}
{"cat":"vehicles","slot":"specialization","value":"mailboat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of mailboat in terms of their hyponyms.\";         A textual example of the semantic relation is \"are mailboat\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['steamer', 'sailboat', 'rowboat', 'motorboat', 'paddleboat', 'steamboat', 'schooner', 'sloop', 'ferry', 'yacht']"}
{"cat":"vehicles","slot":"specialization","value":"minicar","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of minicar in terms of their hyponyms.\";         A textual example of the semantic relation is \"are minicar\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['smart', 'fiat', 'toyota', 'honda', 'nissan', 'hyundai', 'kia', 'mazda', 'subaru', 'mitsubishi']"}
{"cat":"vehicles","slot":"specialization","value":"training ship","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of training ship in terms of their hyponyms.\";         A textual example of the semantic relation is \"are training ship\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['tall ship', 'sail training ship', 'barquentine', 'barque', 'brigantine', 'schooner', 'sloop', 'yawl', 'ketch', 'ship']"}
{"cat":"vehicles","slot":"specialization","value":"ark","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of ark in terms of their hyponyms.\";         A textual example of the semantic relation is \"are ark\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'truck', 'bus', 'train', 'airplane', 'boat', 'ship', 'submarine', 'motorcycle', 'bicycle']"}
{"cat":"vehicles","slot":"specialization","value":"taxicab","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of taxicab in terms of their hyponyms.\";         A textual example of the semantic relation is \"are taxicab\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['sedan', 'hatchback', 'minivan', 'SUV', 'limousine', 'cabriolet', 'coupe', 'convertible', 'wagon', 'pickup']"}
{"cat":"vehicles","slot":"specialization","value":"cycle rickshaw","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of cycle rickshaw in terms of their hyponyms.\";         A textual example of the semantic relation is \"are cycle rickshaw\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['rickshaw', 'cycle rickshaw', 'tricycle', 'bicycle', 'tandem', 'pedicab', 'velocipede', 'quadricycle', 'trishaw', 'velo']"}
{"cat":"vehicles","slot":"specialization","value":"tow car","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of tow car in terms of their hyponyms.\";         A textual example of the semantic relation is \"are tow car\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['tow truck', 'flatbed', 'wrecker', 'hoist', 'integrated', 'boom', 'rotator', 'carrier', 'dolly', 'lowboy']"}
{"cat":"vehicles","slot":"specialization","value":"sausage balloon","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of sausage balloon in terms of their hyponyms.\";         A textual example of the semantic relation is \"are sausage balloon\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'truck', 'bus', 'motorcycle', 'bicycle', 'airplane', 'boat', 'train', 'submarine', 'scooter']"}
{"cat":"vehicles","slot":"specialization","value":"transport ship","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of transport ship in terms of their hyponyms.\";         A textual example of the semantic relation is \"are transport ship\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['cruise ship', 'container ship', 'tanker', 'bulk carrier', 'roll-on\/roll-off', 'ferry', 'tugboat', 'dredger', 'research vessel', 'icebreaker']"}
{"cat":"vehicles","slot":"specialization","value":"steamer","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of steamer in terms of their hyponyms.\";         A textual example of the semantic relation is \"are steamer\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['steamboat', 'steamship', 'steam-powered ship', 'paddle steamer', 'sidewheeler', 'steam-powered locomotive', 'steam train', 'steam engine', 'steam-powered vehicle', 'steam-powered car']"}
{"cat":"vehicles","slot":"specialization","value":"twinjet","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of twinjet in terms of their hyponyms.\";         A textual example of the semantic relation is \"are twinjet\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['Airbus A300', 'Airbus A310', 'Airbus A320 family', 'Boeing 737', 'Boeing 757', 'Boeing 767', 'Boeing 777', 'Boeing 787 Dreamliner', 'Dassault Falcon 900', 'Gulfstream G650']"}
{"cat":"vehicles","slot":"specialization","value":"skyhook","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of skyhook in terms of their hyponyms.\";         A textual example of the semantic relation is \"are skyhook\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['aircraft', 'airship', 'balloon', 'blimp', 'dirigible', 'glider', 'helicopter', 'hot air balloon', 'zeppelin']"}
{"cat":"vehicles","slot":"specialization","value":"velocipede","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of velocipede in terms of their hyponyms.\";         A textual example of the semantic relation is \"are velocipede\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['bicycle', 'motorcycle', 'scooter', 'unicycle', 'tricycle', 'quadracycle', 'tandem', 'recumbent', 'penny-farthing', 'velocipede']"}
{"cat":"vehicles","slot":"specialization","value":"hovercraft","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of hovercraft in terms of their hyponyms.\";         A textual example of the semantic relation is \"are hovercraft\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"airboat\", \"ground-effect vehicle\", \"hydrofoil\", \"hoverbarge\", \"hovercraft\", \"hovertrain\", \"wing-in-ground-effect vehicle\", \"air cushion vehicle\", \"surface-effect ship\"]"}
{"cat":"vehicles","slot":"specialization","value":"ordinary bicycle","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of ordinary bicycle in terms of their hyponyms.\";         A textual example of the semantic relation is \"are ordinary bicycle\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['mountain bike', 'road bike', 'cruiser', 'hybrid bike', 'BMX', 'tandem', 'recumbent', 'folding bike', 'electric bike']"}
{"cat":"vehicles","slot":"specialization","value":"hulk","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of hulk in terms of their hyponyms.\";         A textual example of the semantic relation is \"are hulk\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'truck', 'bus', 'train', 'plane', 'boat', 'motorcycle', 'bicycle', 'scooter', 'skateboard']"}
{"cat":"vehicles","slot":"specialization","value":"Mackinaw boat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of Mackinaw boat in terms of their hyponyms.\";         A textual example of the semantic relation is \"are Mackinaw boat\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['canoe', 'kayak', 'rowboat', 'paddleboat', 'sailboat', 'motorboat', 'yacht', 'catamaran', 'trimaran', 'dinghy']"}
{"cat":"vehicles","slot":"specialization","value":"Dodgem","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of Dodgem in terms of their hyponyms.\";         A textual example of the semantic relation is \"are Dodgem\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'truck', 'bus', 'van', 'SUV', 'motorcycle', 'bicycle', 'scooter', 'train', 'airplane']"}
{"cat":"vehicles","slot":"specialization","value":"guard boat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of guard boat in terms of their hyponyms.\";         A textual example of the semantic relation is \"are guard boat\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['patrol boat', 'coast guard cutter', 'harbor patrol boat', 'river patrol boat', 'border patrol boat', 'security boat', 'police boat', 'customs boat', 'immigration boat', 'coastal patrol boat']"}
{"cat":"vehicles","slot":"specialization","value":"sailing vessel","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of sailing vessel in terms of their hyponyms.\";         A textual example of the semantic relation is \"are sailing vessel\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['schooner', 'sloop', 'yawl', 'ketch', 'catamaran', 'trimaran', 'dinghy', 'sailboat', 'sailing ship', 'sailing yacht']"}
{"cat":"vehicles","slot":"specialization","value":"space vehicle","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of space vehicle in terms of their hyponyms.\";         A textual example of the semantic relation is \"are space vehicle\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['spacecraft', 'rocket', 'satellite', 'probe', 'shuttle', 'capsule', 'lander', 'orbiter', 'module', 'space station']"}
{"cat":"vehicles","slot":"specialization","value":"limousine","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of limousine in terms of their hyponyms.\";         A textual example of the semantic relation is \"are limousine\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['sedan', 'SUV', 'minivan', 'luxury car', 'stretch limo', 'town car', 'limo bus', 'party bus', 'chauffeur-driven car', 'executive car']"}
{"cat":"vehicles","slot":"specialization","value":"patrol ship","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of patrol ship in terms of their hyponyms.\";         A textual example of the semantic relation is \"are patrol ship\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"Frigate\", \"Corvette\", \"Sloop-of-war\", \"Destroyer\", \"Fast attack craft\", \"Patrol boat\", \"Coastal patrol boat\", \"Offshore patrol vessel\", \"Inshore patrol vessel\", \"River patrol boat\"]"}
{"cat":"vehicles","slot":"specialization","value":"bumper car","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of bumper car in terms of their hyponyms.\";         A textual example of the semantic relation is \"are bumper car\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['bumper car', 'go-kart', 'electric car', 'sports car', 'convertible', 'sedan', 'SUV', 'minivan', 'pickup truck']"}
{"cat":"vehicles","slot":"specialization","value":"nuclear-powered ship","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of nuclear-powered ship in terms of their hyponyms.\";         A textual example of the semantic relation is \"are nuclear-powered ship\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['submarine', 'aircraft carrier', 'battleship', 'cruiser', 'destroyer', 'frigate', 'corvette', 'sloop', 'minesweeper', 'patrol boat']"}
{"cat":"vehicles","slot":"specialization","value":"tramcar","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of tramcar in terms of their hyponyms.\";         A textual example of the semantic relation is \"are tramcar\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['streetcar', 'trolley', 'cable car', 'light rail', 'tram', 'tramway', 'trolleybus', 'electric tram', 'tramcar', 'horsecar']"}
{"cat":"vehicles","slot":"specialization","value":"prairie wagon","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of prairie wagon in terms of their hyponyms.\";         A textual example of the semantic relation is \"are prairie wagon\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['covered wagon', 'conestoga wagon', 'prairie schooner', 'prairie schooners', 'prairie schooner', 'prairie schooners', 'prairie schooners', 'prairie schooner', 'prairie schooner', 'prairie schooner']"}
{"cat":"vehicles","slot":"specialization","value":"roadster","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of roadster in terms of their hyponyms.\";         A textual example of the semantic relation is \"are roadster\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['Porsche Boxster', 'Mazda MX-5', 'Audi TT', 'BMW Z4', 'Fiat 124 Spider', 'Mercedes-Benz SLK', 'Lotus Elise', 'Alfa Romeo Spider', 'Toyota MR2', 'Honda S2000']"}
{"cat":"vehicles","slot":"specialization","value":"tram","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of tram in terms of their hyponyms.\";         A textual example of the semantic relation is \"are tram\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['streetcar', 'trolley', 'light rail', 'tramway', 'cable car', 'funicular', 'monorail', 'metro', 'subway', 'underground']"}
{"cat":"vehicles","slot":"specialization","value":"taxi","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of taxi in terms of their hyponyms.\";         A textual example of the semantic relation is \"are taxi\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"cab\", \"hackney\", \"taxi\", \"limousine\", \"sedan\", \"minivan\", \"SUV\", \"crossover\", \"hybrid\", \"electric\"]"}
{"cat":"vehicles","slot":"specialization","value":"cargo ship","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of cargo ship in terms of their hyponyms.\";         A textual example of the semantic relation is \"are cargo ship\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"container ship\", \"bulk carrier\", \"tanker\", \"reefer ship\", \"ro-ro ship\", \"lng carrier\", \"lpg carrier\", \"multi-purpose vessel\", \"heavy lift vessel\", \"general cargo ship\"]"}
{"cat":"vehicles","slot":"specialization","value":"wreck","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of wreck in terms of their hyponyms.\";         A textual example of the semantic relation is \"are wreck\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'truck', 'bus', 'motorcycle', 'boat', 'airplane', 'train', 'bicycle', 'scooter', 'snowmobile']"}
{"cat":"vehicles","slot":"specialization","value":"fishing boat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of fishing boat in terms of their hyponyms.\";         A textual example of the semantic relation is \"are fishing boat\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"trawler\", \"longliner\", \"purse seiner\", \"gillnetter\", \"crabbing boat\", \"lobster boat\", \"shrimp boat\", \"tuna boat\", \"squid boat\", \"crab boat\"]"}
{"cat":"vehicles","slot":"specialization","value":"sports car","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of sports car in terms of their hyponyms.\";         A textual example of the semantic relation is \"are sports car\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['Audi R8', 'BMW M8', 'Ferrari 488', 'Lamborghini Huracan', 'McLaren 720S', 'Porsche 911', 'Mercedes-AMG GT', 'Nissan GT-R', 'Aston Martin Vantage', 'Chevrolet Corvette']"}
{"cat":"vehicles","slot":"specialization","value":"gypsy cab","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of gypsy cab in terms of their hyponyms.\";         A textual example of the semantic relation is \"are gypsy cab\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['taxi', 'cab', 'hack', 'jitney', 'shuttle', 'limo', 'towncar', 'sedan', 'minivan', 'SUV']"}
{"cat":"vehicles","slot":"specialization","value":"narrowboat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of narrowboat in terms of their hyponyms.\";         A textual example of the semantic relation is \"are narrowboat\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['barge', 'tugboat', 'canal boat', 'riverboat', 'paddleboat', 'steamboat', 'houseboat', 'dutch barge', 'motorboat', 'sailboat']"}
{"cat":"vehicles","slot":"specialization","value":"trolleybus","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of trolleybus in terms of their hyponyms.\";         A textual example of the semantic relation is \"are trolleybus\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['trolleybus', 'electric bus', 'trackless trolley', 'tram', 'streetcar', 'light rail', 'railway', 'train', 'subway', 'metro']"}
{"cat":"vehicles","slot":"specialization","value":"cargo helicopter","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of cargo helicopter in terms of their hyponyms.\";         A textual example of the semantic relation is \"are cargo helicopter\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['Chinook', 'Black Hawk', 'Mi-26', 'Mi-8', 'Super Stallion', 'Cougar', 'Puma', 'Panther', 'Dauphin', 'Ecureuil']"}
{"cat":"vehicles","slot":"specialization","value":"cargo vessel","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of cargo vessel in terms of their hyponyms.\";         A textual example of the semantic relation is \"are cargo vessel\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['container ship', 'bulk carrier', 'tanker', 'general cargo ship', 'reefer ship', 'ro-ro ship', 'lpg carrier', 'lng carrier', 'heavy lift vessel', 'multi-purpose vessel']"}
{"cat":"vehicles","slot":"specialization","value":"steamboat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of steamboat in terms of their hyponyms.\";         A textual example of the semantic relation is \"are steamboat\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['steamboat', 'paddle steamer', 'sidewheeler', 'riverboat', 'showboat', 'excursion boat', 'ferry', 'tugboat', 'cargo ship', 'passenger ship']"}
{"cat":"vehicles","slot":"specialization","value":"electric car","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of electric car in terms of their hyponyms.\";         A textual example of the semantic relation is \"are electric car\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['Tesla Model S', 'Tesla Model 3', 'Nissan Leaf', 'Chevrolet Bolt', 'BMW i3', 'Hyundai Kona Electric', 'Kia Soul EV', 'Jaguar I-PACE', 'Audi e-tron', 'Volkswagen e-Golf']"}
{"cat":"vehicles","slot":"specialization","value":"water wagon","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of water wagon in terms of their hyponyms.\";         A textual example of the semantic relation is \"are water wagon\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['water wagon', 'fire engine', 'tanker', 'sprinkler', 'hose', 'pump', 'ladder', 'siren', 'axe', 'extinguisher']"}
{"cat":"vehicles","slot":"specialization","value":"fishing smack","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of fishing smack in terms of their hyponyms.\";         A textual example of the semantic relation is \"are fishing smack\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"sailboat\", \"trawler\", \"longliner\", \"purse seiner\", \"gillnetter\", \"crabber\", \"shrimper\", \"oyster boat\", \"lobster boat\", \"dredger\"]"}
{"cat":"vehicles","slot":"specialization","value":"milkwagon","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of milkwagon in terms of their hyponyms.\";         A textual example of the semantic relation is \"are milkwagon\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['milk_truck', 'milk_float', 'milk_van', 'milk_cart', 'milk_wagon', 'milk_carrier', 'milk_transporter', 'milk_hauler', 'milk_vehicle', 'milk_car']"}
{"cat":"vehicles","slot":"specialization","value":"prowl car","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of prowl car in terms of their hyponyms.\";         A textual example of the semantic relation is \"are prowl car\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['police car', 'patrol car', 'squad car', 'cruiser', 'interceptor', 'pursuit vehicle', 'highway patrol', 'marked car', 'unmarked car', 'undercover car']"}
{"cat":"vehicles","slot":"specialization","value":"barge","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of barge in terms of their hyponyms.\";         A textual example of the semantic relation is \"are barge\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['lighter', 'towboat', 'scow', 'dredger', 'flatboat', 'hopper', 'dredge', 'pusher', 'drydock', 'tugboat']"}
{"cat":"vehicles","slot":"specialization","value":"merchant ship","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of merchant ship in terms of their hyponyms.\";         A textual example of the semantic relation is \"are merchant ship\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['container ship', 'bulk carrier', 'oil tanker', 'gas carrier', 'chemical tanker', 'liquefied gas carrier', 'multi-purpose vessel', 'roll-on\/roll-off ship', 'general cargo ship', 'heavy lift vessel']"}
{"cat":"vehicles","slot":"specialization","value":"secondhand car","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of secondhand car in terms of their hyponyms.\";         A textual example of the semantic relation is \"are secondhand car\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['sedan', 'hatchback', 'coupe', 'convertible', 'minivan', 'SUV', 'truck', 'luxury', 'sports', 'crossover']"}
{"cat":"vehicles","slot":"specialization","value":"gunboat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of gunboat in terms of their hyponyms.\";         A textual example of the semantic relation is \"are gunboat\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['patrol boat', 'cruiser', 'destroyer', 'frigate', 'submarine', 'torpedo boat', 'battleship', 'missile boat', 'aircraft carrier', 'mine sweeper']"}
{"cat":"vehicles","slot":"specialization","value":"lightship","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of lightship in terms of their hyponyms.\";         A textual example of the semantic relation is \"are lightship\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['sailboat', 'yacht', 'dinghy', 'catamaran', 'trimaran', 'kayak', 'canoe', 'rowboat', 'motorboat', 'jet ski']"}
{"cat":"vehicles","slot":"specialization","value":"ground-effect machine","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of ground-effect machine in terms of their hyponyms.\";         A textual example of the semantic relation is \"are ground-effect machine\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['hovercraft', 'airboat', 'ekranoplan', 'wing-in-ground-effect', 'ground-effect vehicle', 'WIG craft', 'flying boat', 'seaplane', 'amphibious vehicle', 'flying car']"}
{"cat":"vehicles","slot":"specialization","value":"derelict","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of derelict in terms of their hyponyms.\";         A textual example of the semantic relation is \"are derelict\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'truck', 'bus', 'van', 'motorcycle', 'bicycle', 'train', 'boat', 'airplane', 'helicopter']"}
{"cat":"vehicles","slot":"specialization","value":"cutter","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of cutter in terms of their hyponyms.\";         A textual example of the semantic relation is \"are cutter\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"car\", \"truck\", \"bus\", \"motorcycle\", \"bicycle\", \"boat\", \"ship\", \"airplane\", \"helicopter\", \"train\"]"}
{"cat":"vehicles","slot":"specialization","value":"police boat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of police boat in terms of their hyponyms.\";         A textual example of the semantic relation is \"are police boat\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['police boat', 'patrol boat', 'coast guard cutter', 'harbor patrol boat', 'river patrol boat', 'marine unit', 'watercraft', 'vessel', 'ship', 'boat']"}
{"cat":"vehicles","slot":"specialization","value":"hot-rod","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of hot-rod in terms of their hyponyms.\";         A textual example of the semantic relation is \"are hot-rod\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['Ford', 'Chevrolet', 'Dodge', 'Plymouth', 'Buick', 'Oldsmobile', 'Pontiac', 'Cadillac', 'Lincoln', 'Mercury']"}
{"cat":"vehicles","slot":"specialization","value":"dustcart","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of dustcart in terms of their hyponyms.\";         A textual example of the semantic relation is \"are dustcart\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['dustcart', 'garbage truck', 'trash truck', 'refuse truck', 'rubbish truck', 'sanitation truck', 'waste management vehicle', 'waste collection vehicle', 'compactor truck', 'bin lorry']"}
{"cat":"vehicles","slot":"specialization","value":"fire engine","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of fire engine in terms of their hyponyms.\";         A textual example of the semantic relation is \"are fire engine\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['fire truck', 'pumper', 'ladder truck', 'tanker', 'rescue truck', 'brush truck', 'squad truck', 'hazmat truck', 'airport crash tender', 'wildland fire engine']"}
{"cat":"vehicles","slot":"specialization","value":"wrecker","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of wrecker in terms of their hyponyms.\";         A textual example of the semantic relation is \"are wrecker\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"tow truck\", \"recovery vehicle\", \"breakdown truck\", \"wrecker truck\", \"towing truck\", \"breakdown lorry\", \"towing van\", \"towing car\", \"towing trailer\", \"towing vehicle\"]"}
{"cat":"vehicles","slot":"specialization","value":"steamroller","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of steamroller in terms of their hyponyms.\";         A textual example of the semantic relation is \"are steamroller\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['steamroller', 'road roller', 'construction equipment', 'heavy machinery', 'compactor', 'vibratory roller', 'tandem roller', 'pneumatic roller', 'sheepsfoot roller', 'static roller']"}
{"cat":"vehicles","slot":"place","value":"rental","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the entities in which rental can be experienced, found or perceived.\";         A textual example of the semantic relation is \"can be found or used in rentals\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"car\", \"truck\", \"van\", \"SUV\", \"motorcycle\", \"boat\", \"yacht\", \"airplane\", \"helicopter\", \"scooter\"]"}
{"cat":"vehicles","slot":"generalization","value":"lighter-than-air craft","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of lighter-than-air craft related to hypernyms.\";         A textual example of the semantic relation is \"are lighter-than-air craft\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['airship', 'balloon', 'blimp', 'dirigible', 'hot air balloon', 'zeppelin', 'montgolfier', 'charliere', 'semirigid airship', 'nonrigid airship']"}
{"cat":"vehicles","slot":"generalization","value":"combat ship","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of combat ship related to hypernyms.\";         A textual example of the semantic relation is \"are combat ship\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['battleship', 'destroyer', 'cruiser', 'frigate', 'corvette', 'submarine', 'aircraft carrier', 'amphibious assault ship', 'missile boat', 'patrol boat']"}
{"cat":"vehicles","slot":"generalization","value":"tractor","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of tractor related to hypernyms.\";         A textual example of the semantic relation is \"are tractor\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['tractor', 'tractor-trailer', 'semi-trailer', 'truck', 'tow truck', 'dump truck', 'farm tractor', 'bulldozer', 'backhoe', 'crane']"}
{"cat":"vehicles","slot":"generalization","value":"warship","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of warship related to hypernyms.\";         A textual example of the semantic relation is \"are warship\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"battleship\", \"destroyer\", \"frigate\", \"cruiser\", \"submarine\", \"aircraft carrier\", \"amphibious assault ship\", \"corvette\", \"missile boat\", \"mine countermeasures vessel\"]"}
{"cat":"vehicles","slot":"generalization","value":"watercraft","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of watercraft related to hypernyms.\";         A textual example of the semantic relation is \"are watercraft\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"cruise ship\", \"yacht\", \"sailboat\", \"speedboat\", \"catamaran\", \"kayak\", \"canoe\", \"rowboat\", \"submarine\", \"warship\"]"}
{"cat":"vehicles","slot":"generalization","value":"ship","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of ship related to hypernyms.\";         A textual example of the semantic relation is \"are ship\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['cruise ship', 'container ship', 'tanker', 'bulk carrier', 'ferry', 'yacht', 'sailboat', 'submarine', 'warship', 'tugboat']"}
{"cat":"vehicles","slot":"generalization","value":"war vessel","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of war vessel related to hypernyms.\";         A textual example of the semantic relation is \"are war vessel\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"battleship\", \"cruiser\", \"destroyer\", \"frigate\", \"submarine\", \"aircraft carrier\", \"amphibious assault ship\", \"corvette\", \"sloop\", \"torpedo boat\"]"}
{"cat":"vehicles","slot":"generalization","value":"military vehicle","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of military vehicle related to hypernyms.\";         A textual example of the semantic relation is \"are military vehicle\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['tank', 'armored personnel carrier', 'artillery', 'fighter jet', 'bomber', 'helicopter', 'submarine', 'warship', 'missile', 'drone']"}
{"cat":"vehicles","slot":"purpose","value":"passenger","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All of the purposes for which passenger is interacted with.\";         A textual example of the semantic relation is \"are used for passenger\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"car\", \"bus\", \"train\", \"airplane\", \"ship\", \"tram\", \"taxi\", \"subway\", \"limousine\", \"ferry\"]"}
{"cat":"vehicles","slot":"part","value":"boat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of boat.\";         A textual example of the semantic relation is \"can have boat\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['hull', 'deck', 'keel', 'rudder', 'mast', 'sail', 'oar', 'anchor', 'cabin', 'engine']"}
{"cat":"vehicles","slot":"generalization","value":"transport","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of transport related to hypernyms.\";         A textual example of the semantic relation is \"are transport\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"car\", \"truck\", \"bus\", \"train\", \"airplane\", \"boat\", \"motorcycle\", \"bicycle\", \"scooter\", \"skateboard\"]"}
{"cat":"vehicles","slot":"user","value":"farm","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the kinds of living beings which are able to operate, employ, interact with or perceive farm.\";         A textual example of the semantic relation is \"are used by farms\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['tractor', 'combine harvester', 'plow', 'irrigation system', 'sprayer', 'seeder', 'tillage equipment', 'baler', 'grain cart', 'livestock trailer']"}
{"cat":"vehicles","slot":"specialization","value":"galley","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of galley in terms of their hyponyms.\";         A textual example of the semantic relation is \"are galley\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"sailboat\", \"warship\", \"vessel\", \"ship\", \"transport\", \"oar-powered\", \"ancient\", \"sea-going\", \"watercraft\"]"}
{"cat":"vehicles","slot":"part","value":"galley","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of galley.\";         A textual example of the semantic relation is \"can have galley\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['galley', 'sail', 'mast', 'deck', 'hull', 'rudder', 'oar', 'rowlock', 'bench', 'ship']"}
{"cat":"vehicles","slot":"specialization","value":"lighter-than-air craft","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of lighter-than-air craft in terms of their hyponyms.\";         A textual example of the semantic relation is \"are lighter-than-air craft\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"blimp\", \"airship\", \"dirigible\", \"zeppelin\", \"balloon\", \"hot air balloon\", \"montgolfier\", \"charliere\", \"hydrogen balloon\", \"helium balloon\"]"}
{"cat":"vehicles","slot":"specialization","value":"combat ship","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of combat ship in terms of their hyponyms.\";         A textual example of the semantic relation is \"are combat ship\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['aircraft carrier', 'battleship', 'cruiser', 'destroyer', 'frigate', 'submarine', 'corvette', 'patrol boat', 'torpedo boat', 'mine sweeper']"}
{"cat":"vehicles","slot":"specialization","value":"warship","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of warship in terms of their hyponyms.\";         A textual example of the semantic relation is \"are warship\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['battleship', 'cruiser', 'destroyer', 'frigate', 'submarine', 'aircraft carrier', 'amphibious assault ship', 'corvette', 'patrol boat', 'mine countermeasures vessel']"}
{"cat":"vehicles","slot":"specialization","value":"watercraft","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of watercraft in terms of their hyponyms.\";         A textual example of the semantic relation is \"are watercraft\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['boat', 'ship', 'yacht', 'cruise', 'sailboat', 'ferry', 'cargo', 'submarine', 'tugboat', 'steamboat']"}
{"cat":"vehicles","slot":"specialization","value":"military vehicle","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of military vehicle in terms of their hyponyms.\";         A textual example of the semantic relation is \"are military vehicle\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['tank', 'armored personnel carrier', 'self-propelled artillery', 'missile launcher', 'infantry fighting vehicle', 'mine-resistant ambush protected vehicle', 'light armored vehicle', 'reconnaissance vehicle', 'military truck']"}
{"cat":"vehicles","slot":"specialization","value":"ship","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of ship in terms of their hyponyms.\";         A textual example of the semantic relation is \"are ship\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['cruise ship', 'container ship', 'tanker', 'bulk carrier', 'general cargo ship', 'ro-ro ship', 'ferry', 'tugboat', 'dredger', 'fishing boat']"}
{"cat":"vehicles","slot":"specialization","value":"war vessel","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of war vessel in terms of their hyponyms.\";         A textual example of the semantic relation is \"are war vessel\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['battleship', 'destroyer', 'frigate', 'submarine', 'aircraft carrier', 'cruiser', 'corvette', 'torpedo boat', 'amphibious assault ship', 'mine countermeasures vessel']"}
{"cat":"vehicles","slot":"specialization","value":"boat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of boat in terms of their hyponyms.\";         A textual example of the semantic relation is \"are boat\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['sailboat', 'motorboat', 'yacht', 'cruise ship', 'speedboat', 'rowboat', 'kayak', 'canoe', 'paddle boat', 'fishing boat']"}
{"cat":"vehicles","slot":"specialization","value":"tractor","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of tractor in terms of their hyponyms.\";         A textual example of the semantic relation is \"are tractor\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['tractor', 'farm tractor', 'tractor-trailer', 'tractor-trailer truck', 'tractor unit', 'tractor engine', 'tractor tire', 'tractor seat', 'tractor cab', 'tractor hitch']"}
{"cat":"vehicles","slot":"part","value":"gas","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"All the constitutive parts of gas.\";         A textual example of the semantic relation is \"can have gas\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"car\", \"truck\", \"bus\", \"motorcycle\", \"van\", \"SUV\", \"sedan\", \"pickup\", \"minivan\"]"}
{"cat":"vehicles","slot":"generalization","value":"wheel","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of wheel related to hypernyms.\";         A textual example of the semantic relation is \"are wheel\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'truck', 'bus', 'motorcycle', 'bicycle', 'scooter', 'train', 'airplane', 'boat', 'helicopter']"}
{"cat":"vehicles","slot":"specialization","value":"heavier-than-air craft","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of heavier-than-air craft in terms of their hyponyms.\";         A textual example of the semantic relation is \"are heavier-than-air craft\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['airplane', 'helicopter', 'blimp', 'glider', 'airship', 'jet', 'biplane', 'triplane', 'quadplane', 'multiengine aircraft']"}
{"cat":"vehicles","slot":"specialization","value":"aircraft","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of aircraft in terms of their hyponyms.\";         A textual example of the semantic relation is \"are aircraft\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['jet', 'airliner', 'helicopter', 'glider', 'cargo plane', 'fighter jet', 'bomber', 'stealth aircraft', 'airship', 'blimp']"}
{"cat":"vehicles","slot":"specialization","value":"vessel","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of vessel in terms of their hyponyms.\";         A textual example of the semantic relation is \"are vessel\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'truck', 'bus', 'van', 'motorcycle', 'bicycle', 'boat', 'ship', 'airplane', 'train']"}
{"cat":"vehicles","slot":"specialization","value":"craft","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of craft in terms of their hyponyms.\";         A textual example of the semantic relation is \"are craft\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"car\", \"truck\", \"bus\", \"motorcycle\", \"bicycle\", \"airplane\", \"helicopter\", \"boat\", \"submarine\", \"rocket\"]"}
{"cat":"vehicles","slot":"specialization","value":"wheeled vehicle","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"vehicles\";         The returned words must satisfy the semantic relation \"Classification of wheeled vehicle in terms of their hyponyms.\";         A textual example of the semantic relation is \"are wheeled vehicle\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'truck', 'bus', 'van', 'motorcycle', 'bicycle', 'scooter', 'train', 'airplane', 'boat']"}
{"cat":"clothes","slot":"size","value":"tall","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Size of tall.\";         A textual example of the semantic relation is \"can be tall\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['trousers', 'shirt', 'jacket', 'coat', 'dress', 'skirt', 'pants', 'sweater', 'jeans', 'shorts']"}
{"cat":"clothes","slot":"size","value":"short","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Size of short.\";         A textual example of the semantic relation is \"can be short\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['shorts', 'skirt', 'dress', 'shirt', 'blouse', 'pants', 'jacket', 'sweater', 'vest', 'top']"}
{"cat":"clothes","slot":"time","value":"winter","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"All the entries which link winter with the time flow or with specific moments of time.\";         A textual example of the semantic relation is \"can be consumed or used during winter\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['coat', 'jacket', 'sweater', 'scarf', 'hat', 'gloves', 'boots', 'earmuffs', 'leggings', 'long johns']"}
{"cat":"clothes","slot":"time","value":"summer","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"All the entries which link summer with the time flow or with specific moments of time.\";         A textual example of the semantic relation is \"can be consumed or used during summer\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['bikini', 'shorts', 'sunglasses', 'sandals', 'swimsuit', 'tank top', 'flip flops', 'sun hat', 'crop top', 'maxi dress']"}
{"cat":"clothes","slot":"place","value":"outdoors","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"All the entities in which outdoors can be experienced, found or perceived.\";         A textual example of the semantic relation is \"can be found or used in outdoorss\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['jacket', 'coat', 'sweater', 'hat', 'gloves', 'boots', 'scarf', 'sunglasses', 'umbrella', 'raincoat']"}
{"cat":"clothes","slot":"place","value":"hospital","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"All the entities in which hospital can be experienced, found or perceived.\";         A textual example of the semantic relation is \"can be found or used in hospitals\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"scrubs\", \"gown\", \"mask\", \"gloves\", \"lab coat\", \"stethoscope\", \"surgical cap\", \"surgical mask\", \"surgical gown\", \"surgical gloves\"]"}
{"cat":"clothes","slot":"place","value":"surgery","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"All the entities in which surgery can be experienced, found or perceived.\";         A textual example of the semantic relation is \"can be found or used in surgeries\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['scrubs', 'gown', 'mask', 'gloves', 'cap', 'booties', 'surgical', 'drapes', 'towel']"}
{"cat":"clothes","slot":"bodyPart","value":"waist","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"All the body parts which are involved in interacting with waist.\";         A textual example of the semantic relation is \"can have or be used with waist\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['pants', 'trousers', 'jeans', 'skirt', 'belt', 'waistband', 'cummerbund', 'corset', 'suspenders', 'sash']"}
{"cat":"clothes","slot":"bodyPart","value":"neck","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"All the body parts which are involved in interacting with neck.\";         A textual example of the semantic relation is \"can have or be used with neck\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['necklace', 'tie', 'collar', 'scarf', 'hood', 'neckline', 'pendant', 'choker', 'neckwarmer', 'cravat']"}
{"cat":"clothes","slot":"bodyPart","value":"head","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"All the body parts which are involved in interacting with head.\";         A textual example of the semantic relation is \"can have or be used with head\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['hat', 'headband', 'headgear', 'headscarf', 'headwear', 'hood', 'hoodie', 'mask', 'wig', 'veil']"}
{"cat":"clothes","slot":"bodyPart","value":"ankle","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"All the body parts which are involved in interacting with ankle.\";         A textual example of the semantic relation is \"can have or be used with ankle\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['ankle', 'socks', 'shoes', 'boots', 'sandals', 'anklet', 'bracelet', 'leg', 'foot']"}
{"cat":"clothes","slot":"bodyPart","value":"calf","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"All the body parts which are involved in interacting with calf.\";         A textual example of the semantic relation is \"can have or be used with calf\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['socks', 'stockings', 'leggings', 'ankle bracelet', 'ankle monitor', 'ankle strap', 'ankle weights', 'boot', 'calf sleeve', 'calf wrap']"}
{"cat":"clothes","slot":"bodyPart","value":"foot","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"All the body parts which are involved in interacting with foot.\";         A textual example of the semantic relation is \"can have or be used with foot\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['shoes', 'socks', 'sandals', 'slippers', 'boots', 'sneakers', 'ankle boots', 'loafers', 'high heels', 'flip flops']"}
{"cat":"clothes","slot":"bodyPart","value":"knee","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"All the body parts which are involved in interacting with knee.\";         A textual example of the semantic relation is \"can have or be used with knee\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['trousers', 'pants', 'jeans', 'shorts', 'skirt', 'dress', 'leggings', 'stockings', 'socks', 'kneepads']"}
{"cat":"clothes","slot":"bodyPart","value":"throat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"All the body parts which are involved in interacting with throat.\";         A textual example of the semantic relation is \"can have or be used with throat\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['shirt', 'tie', 'collar', 'necklace', 'scarf', 'hood', 'vest', 'gloves', 'mask', 'headphones']"}
{"cat":"clothes","slot":"shape","value":"long","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Form of long.\";         A textual example of the semantic relation is \"can be long\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['dress', 'gown', 'coat', 'shirt', 'skirt', 'sweater', 'pants', 'jacket', 'scarf', 'tunic']"}
{"cat":"clothes","slot":"shape","value":"elongated","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Form of elongated.\";         A textual example of the semantic relation is \"can be elongated\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['scarf', 'sash', 'tie', 'belt', 'ribbon', 'bandana', 'cravat', 'neckerchief', 'gaiter', 'shawl']"}
{"cat":"clothes","slot":"shape","value":"circular","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Form of circular.\";         A textual example of the semantic relation is \"can be circular\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['skirt', 'dress', 'shirt', 'blouse', 'top', 't-shirt', 'sweater', 'hoodie', 'sweatshirt']"}
{"cat":"clothes","slot":"shape","value":"rectangular","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Form of rectangular.\";         A textual example of the semantic relation is \"can be rectangular\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"shirt\", \"pants\", \"skirt\", \"dress\", \"scarf\", \"tie\", \"jacket\", \"sweater\", \"vest\", \"coat\"]"}
{"cat":"clothes","slot":"shape","value":"round","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Form of round.\";         A textual example of the semantic relation is \"can be round\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['hat', 'scarf', 'necklace', 'belt', 'bracelet', 'ring', 'earrings', 'watch', 'shirt', 'pants']"}
{"cat":"clothes","slot":"bodyPart","value":"leg","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"All the body parts which are involved in interacting with leg.\";         A textual example of the semantic relation is \"can have or be used with leg\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['pants', 'trousers', 'jeans', 'shorts', 'skirts', 'stockings', 'socks', 'leggings', 'boots', 'sandals']"}
{"cat":"clothes","slot":"bodyPart","value":"hand","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"All the body parts which are involved in interacting with hand.\";         A textual example of the semantic relation is \"can have or be used with hand\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['gloves', 'mittens', 'wristwatch', 'bracelet', 'ring', 'handkerchief', 'pocket', 'purse', 'wallet', 'phone']"}
{"cat":"clothes","slot":"purpose","value":"protect","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"All of the purposes for which protect is interacted with.\";         A textual example of the semantic relation is \"are used to protect\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['coat', 'jacket', 'gloves', 'hat', 'scarf', 'umbrella', 'raincoat', 'sunglasses', 'boots', 'mask']"}
{"cat":"clothes","slot":"purpose","value":"warmth","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"All of the purposes for which warmth is interacted with.\";         A textual example of the semantic relation is \"are used for warmth\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"sweater\", \"coat\", \"scarf\", \"hat\", \"gloves\", \"socks\", \"boots\", \"earmuffs\", \"blanket\", \"poncho\"]"}
{"cat":"clothes","slot":"purpose","value":"pair","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"All of the purposes for which pair is interacted with.\";         A textual example of the semantic relation is \"are used for pair\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['shirt', 'pants', 'socks', 'shoes', 'jacket', 'hat', 'scarf', 'gloves', 'dress', 'skirt']"}
{"cat":"clothes","slot":"purpose","value":"riding","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"All of the purposes for which riding is interacted with.\";         A textual example of the semantic relation is \"are used for riding\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['riding boots', 'riding pants', 'riding jacket', 'riding gloves', 'riding helmet', 'riding shirt', 'riding socks', 'riding breeches', 'riding skirt', 'riding vest']"}
{"cat":"clothes","slot":"purpose","value":"hygiene","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"All of the purposes for which hygiene is interacted with.\";         A textual example of the semantic relation is \"are used for hygiene\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['underwear', 'socks', 'shirt', 'pants', 'bra', 'shorts', 'dress', 'skirt', 'sweater']"}
{"cat":"clothes","slot":"purpose","value":"work","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"All of the purposes for which work is interacted with.\";         A textual example of the semantic relation is \"are used for work\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"overalls\", \"hardhat\", \"safety boots\", \"work gloves\", \"safety glasses\", \"earmuffs\", \"tool belt\", \"high-visibility vest\", \"safety harness\", \"coveralls\"]"}
{"cat":"clothes","slot":"purpose","value":"gardening","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"All of the purposes for which gardening is interacted with.\";         A textual example of the semantic relation is \"are used for gardening\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"gloves\", \"hat\", \"boots\", \"overalls\", \"apron\", \"sunscreen\", \"sunglasses\", \"bandana\", \"long-sleeve shirt\", \"pants\"]"}
{"cat":"clothes","slot":"purpose","value":"run","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"All of the purposes for which run is interacted with.\";         A textual example of the semantic relation is \"are used to run\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['sneakers', 'running shoes', 'athletic shorts', 'running tights', 'sports bra', 'moisture-wicking shirt', 'compression socks', 'headband', 'gloves', 'reflective vest']"}
{"cat":"clothes","slot":"purpose","value":"tie","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"All of the purposes for which tie is interacted with.\";         A textual example of the semantic relation is \"are used to tie\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['bow tie', 'necktie', 'scarf', 'ribbon', 'belt', 'shoelace', 'string', 'rope', 'cord', 'lace']"}
{"cat":"clothes","slot":"purpose","value":"ride","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"All of the purposes for which ride is interacted with.\";         A textual example of the semantic relation is \"are used to ride\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['pants', 'shirt', 'jacket', 'dress', 'shorts', 'skirt', 'sweater', 'jeans', 'coat', 'suit']"}
{"cat":"clothes","slot":"purpose","value":"ride","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"All of the purposes for which ride is interacted with.\";         A textual example of the semantic relation is \"are used for ride\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['pants', 'shirt', 'jacket', 'skirt', 'dress', 'shorts', 'jeans', 'sweater', 'socks', 'hat']"}
{"cat":"clothes","slot":"purpose","value":"walk","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"All of the purposes for which walk is interacted with.\";         A textual example of the semantic relation is \"are used to walk\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['shoes', 'sneakers', 'boots', 'sandals', 'socks', 'pants', 'shorts', 'skirts', 'dresses', 'coats']"}
{"cat":"clothes","slot":"user","value":"woman","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"All the kinds of living beings which are able to operate, employ, interact with or perceive woman.\";         A textual example of the semantic relation is \"are used by women\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['dress', 'skirt', 'top', 'blouse', 'pants', 'jeans', 'shorts', 'shirt', 'sweater', 'jacket']"}
{"cat":"clothes","slot":"user","value":"man","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"All the kinds of living beings which are able to operate, employ, interact with or perceive man.\";         A textual example of the semantic relation is \"are used by men\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"shirt\", \"pants\", \"jacket\", \"shoes\", \"hat\", \"belt\", \"socks\", \"tie\", \"sweater\", \"vest\"]"}
{"cat":"clothes","slot":"user","value":"horseman","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"All the kinds of living beings which are able to operate, employ, interact with or perceive horseman.\";         A textual example of the semantic relation is \"are used by horsemen\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['riding boots', 'jodhpurs', 'riding hat', 'riding gloves', 'riding jacket', 'riding pants', 'riding helmet', 'riding breeches', 'riding coat', 'riding shirt']"}
{"cat":"clothes","slot":"user","value":"gardener","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"All the kinds of living beings which are able to operate, employ, interact with or perceive gardener.\";         A textual example of the semantic relation is \"are used by gardeners\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['gloves', 'hat', 'boots', 'overalls', 'apron', 't-shirt', 'pants', 'jacket', 'socks', 'scarf']"}
{"cat":"clothes","slot":"user","value":"doctor","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"All the kinds of living beings which are able to operate, employ, interact with or perceive doctor.\";         A textual example of the semantic relation is \"are used by doctors\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"lab coat\", \"scrubs\", \"stethoscope\", \"mask\", \"gloves\", \"gown\", \"surgical cap\", \"surgical scrub\", \"surgical boot\"]"}
{"cat":"clothes","slot":"user","value":"surgeon","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"All the kinds of living beings which are able to operate, employ, interact with or perceive surgeon.\";         A textual example of the semantic relation is \"are used by surgeons\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"scrubs\", \"gown\", \"mask\", \"cap\", \"gloves\", \"shoes\", \"stethoscope\", \"surgical instruments\", \"surgical table\", \"operating room lights\"]"}
{"cat":"clothes","slot":"user","value":"workman","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"All the kinds of living beings which are able to operate, employ, interact with or perceive workman.\";         A textual example of the semantic relation is \"are used by workmen\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['overalls', 'hard hat', 'steel-toed boots', 'safety glasses', 'gloves', 'tool belt', 'high-visibility vest', 'ear protection', 'flame-resistant clothing', 'safety harness']"}
{"cat":"clothes","slot":"user","value":"men","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"All the kinds of living beings which are able to operate, employ, interact with or perceive men.\";         A textual example of the semantic relation is \"are used by mens\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['shirt', 'pants', 'jacket', 'tie', 'hat', 'shoes', 'socks', 'belt', 'watch', 'wallet']"}
{"cat":"clothes","slot":"user","value":"catcher","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"All the kinds of living beings which are able to operate, employ, interact with or perceive catcher.\";         A textual example of the semantic relation is \"are used by catchers\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['glove', 'mask', 'chest protector', 'shin guard', 'leg guard', 'helmet', 'pants', 'jersey', 'cleats', 'sock']"}
{"cat":"clothes","slot":"user","value":"goalkeeper","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"All the kinds of living beings which are able to operate, employ, interact with or perceive goalkeeper.\";         A textual example of the semantic relation is \"are used by goalkeepers\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['gloves', 'jersey', 'shorts', 'socks', 'pants', 'shirt', 'cleats', 'sweatbands', 'headband', 'cap']"}
{"cat":"clothes","slot":"user","value":"soldier","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"All the kinds of living beings which are able to operate, employ, interact with or perceive soldier.\";         A textual example of the semantic relation is \"are used by soldiers\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['uniform', 'combat boot', 'flak jacket', 'helmet', 'camouflage', 'battle dress', 'tactical vest', 'gloves', 'backpack', 'goggles']"}
{"cat":"clothes","slot":"user","value":"falconer","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"All the kinds of living beings which are able to operate, employ, interact with or perceive falconer.\";         A textual example of the semantic relation is \"are used by falconers\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"gloves\", \"hood\", \"jesses\", \"leash\", \"lure\", \"perch\", \"swivel\", \"talons\", \"telemetry\", \"weathering\"]"}
{"cat":"clothes","slot":"user","value":"women","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"All the kinds of living beings which are able to operate, employ, interact with or perceive women.\";         A textual example of the semantic relation is \"are used by womens\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"dress\", \"skirt\", \"blouse\", \"top\", \"jeans\", \"pants\", \"shoes\", \"purse\", \"scarf\", \"hat\"]"}
{"cat":"clothes","slot":"user","value":"baseman","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"All the kinds of living beings which are able to operate, employ, interact with or perceive baseman.\";         A textual example of the semantic relation is \"are used by basemen\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"shirt\", \"pants\", \"jacket\", \"hat\", \"shoes\", \"socks\", \"belt\", \"gloves\", \"scarf\", \"sunglasses\"]"}
{"cat":"clothes","slot":"user","value":"fielder","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"All the kinds of living beings which are able to operate, employ, interact with or perceive fielder.\";         A textual example of the semantic relation is \"are used by fielders\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['glove', 'hat', 'pants', 'shirt', 'shorts', 'socks', 'sweater', 'vest', 'jacket', 'jersey']"}
{"cat":"clothes","slot":"user","value":"cowboy","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"All the kinds of living beings which are able to operate, employ, interact with or perceive cowboy.\";         A textual example of the semantic relation is \"are used by cowboys\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"boots\", \"hat\", \"jeans\", \"shirt\", \"belt\", \"spurs\", \"chaps\", \"vest\", \"buckle\", \"bandana\"]"}
{"cat":"clothes","slot":"user","value":"lady","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"All the kinds of living beings which are able to operate, employ, interact with or perceive lady.\";         A textual example of the semantic relation is \"are used by ladies\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['dress', 'skirt', 'top', 'blouse', 'pants', 'jeans', 'jacket', 'coat', 'shoes', 'purse']"}
{"cat":"clothes","slot":"purpose","value":"disposable","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"All of the purposes for which disposable is interacted with.\";         A textual example of the semantic relation is \"are used for disposable\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"shirt\", \"pants\", \"socks\", \"underwear\", \"jacket\", \"dress\", \"skirt\", \"shorts\", \"hat\", \"gloves\"]"}
{"cat":"clothes","slot":"shape","value":"hand","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Form of hand.\";         A textual example of the semantic relation is \"can be hand\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"glove\", \"mitten\", \"handkerchief\", \"bracelet\", \"ring\", \"watch\", \"wristband\", \"cuff\", \"sleeve\", \"cufflink\"]"}
{"cat":"clothes","slot":"material","value":"cotton","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Material of which cotton is composed.\";         A textual example of the semantic relation is \"can be made of cotton\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['shirt', 'pants', 'dress', 'skirt', 'shorts', 'socks', 'hat', 'scarf', 'sweater', 'jacket']"}
{"cat":"clothes","slot":"material","value":"wool","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Material of which wool is composed.\";         A textual example of the semantic relation is \"can be made of wool\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"sweater\", \"coat\", \"hat\", \"scarf\", \"gloves\", \"socks\", \"suit\", \"dress\", \"skirt\", \"pants\"]"}
{"cat":"clothes","slot":"material","value":"leather","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Material of which leather is composed.\";         A textual example of the semantic relation is \"can be made of leather\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['jacket', 'boots', 'gloves', 'pants', 'skirt', 'dress', 'belt', 'bag', 'wallet', 'hat']"}
{"cat":"clothes","slot":"material","value":"linen","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Material of which linen is composed.\";         A textual example of the semantic relation is \"can be made of linen\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['shirt', 'dress', 'pants', 'skirt', 'jacket', 'blouse', 'shorts', 'trousers', 'top', 'suit']"}
{"cat":"clothes","slot":"material","value":"silk","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Material of which silk is composed.\";         A textual example of the semantic relation is \"can be made of silk\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['shirt', 'dress', 'blouse', 'scarf', 'skirt', 'suit', 'tie', 'pajamas', 'robe', 'kimono']"}
{"cat":"clothes","slot":"material","value":"polyester","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Material of which polyester is composed.\";         A textual example of the semantic relation is \"can be made of polyester\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['shirt', 'dress', 'pants', 'jacket', 'skirt', 'blouse', 'shorts', 'suit', 'coat', 'sweater']"}
{"cat":"clothes","slot":"material","value":"plastic","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Material of which plastic is composed.\";         A textual example of the semantic relation is \"can be made of plastic\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"shirt\", \"pants\", \"skirt\", \"dress\", \"shorts\", \"jacket\", \"coat\", \"hat\", \"gloves\", \"socks\"]"}
{"cat":"clothes","slot":"material","value":"viscose","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Material of which viscose is composed.\";         A textual example of the semantic relation is \"can be made of viscose\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"shirt\", \"dress\", \"skirt\", \"blouse\", \"pants\", \"jacket\", \"scarf\", \"sweater\", \"underwear\", \"socks\"]"}
{"cat":"clothes","slot":"material","value":"nylon","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Material of which nylon is composed.\";         A textual example of the semantic relation is \"can be made of nylon\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"stockings\", \"pantyhose\", \"tights\", \"swimsuits\", \"windbreakers\", \"umbrellas\", \"parachutes\", \"sleeping bags\", \"tents\", \"rope\"]"}
{"cat":"clothes","slot":"material","value":"suede","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Material of which suede is composed.\";         A textual example of the semantic relation is \"can be made of suede\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['jacket', 'shoes', 'bag', 'boots', 'hat', 'gloves', 'skirt', 'pants', 'vest', 'coat']"}
{"cat":"clothes","slot":"material","value":"fabric","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Material of which fabric is composed.\";         A textual example of the semantic relation is \"can be made of fabric\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['cotton', 'wool', 'silk', 'linen', 'rayon', 'polyester', 'denim', 'velvet', 'chiffon', 'satin']"}
{"cat":"clothes","slot":"material","value":"cloth","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Material of which cloth is composed.\";         A textual example of the semantic relation is \"can be made of cloth\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['cotton', 'wool', 'linen', 'silk', 'polyester', 'rayon', 'nylon', 'lycra', 'denim', 'velvet']"}
{"cat":"clothes","slot":"material","value":"felt","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Material of which felt is composed.\";         A textual example of the semantic relation is \"can be made of felt\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['wool', 'fur', 'fleece', 'cotton', 'rayon', 'acrylic', 'polyester', 'nylon', 'linen', 'silk']"}
{"cat":"clothes","slot":"material","value":"velvet","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Material of which velvet is composed.\";         A textual example of the semantic relation is \"can be made of velvet\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"dress\", \"gown\", \"jacket\", \"pants\", \"shirt\", \"skirt\", \"suit\", \"vest\", \"coat\", \"hat\"]"}
{"cat":"clothes","slot":"material","value":"rubber","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Material of which rubber is composed.\";         A textual example of the semantic relation is \"can be made of rubber\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['boots', 'gloves', 'raincoat', 'swim cap', 'wetsuit', 'belt', 'shoes', 'band', 'goggles']"}
{"cat":"clothes","slot":"material","value":"fleece","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Material of which fleece is composed.\";         A textual example of the semantic relation is \"can be made of fleece\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"sweater\", \"jacket\", \"hoodie\", \"vest\", \"pants\", \"gloves\", \"hat\", \"scarf\", \"socks\", \"blanket\"]"}
{"cat":"clothes","slot":"material","value":"chiffon","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Material of which chiffon is composed.\";         A textual example of the semantic relation is \"can be made of chiffon\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['silk', 'fabric', 'textile', 'material', 'cloth', 'cotton', 'wool', 'polyester', 'rayon', 'linen']"}
{"cat":"clothes","slot":"material","value":"straw","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Material of which straw is composed.\";         A textual example of the semantic relation is \"can be made of straw\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['straw', 'hay', 'grass', 'wheat', 'corn', 'oats', 'barley', 'rye', 'sorghum', 'bamboo']"}
{"cat":"clothes","slot":"material","value":"sheepskin","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Material of which sheepskin is composed.\";         A textual example of the semantic relation is \"can be made of sheepskin\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['coat', 'jacket', 'gloves', 'boots', 'hat', 'scarf', 'slippers', 'mittens', 'vest', 'blanket']"}
{"cat":"clothes","slot":"material","value":"cashmere","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Material of which cashmere is composed.\";         A textual example of the semantic relation is \"can be made of cashmere\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"sweater\", \"scarf\", \"jumper\", \"cardigan\", \"hat\", \"gloves\", \"coat\", \"vest\", \"dress\", \"pants\"]"}
{"cat":"clothes","slot":"material","value":"latex","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Material of which latex is composed.\";         A textual example of the semantic relation is \"can be made of latex\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['gloves', 'stockings', 'corset', 'dress', 'shirt', 'pants', 'skirt', 'bodysuit', 'mask', 'boots']"}
{"cat":"clothes","slot":"part","value":"tongue","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"All the constitutive parts of tongue.\";         A textual example of the semantic relation is \"can have tongue\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['shirt', 'pants', 'skirt', 'dress', 'jacket', 'coat', 'hat', 'gloves', 'scarf', 'socks']"}
{"cat":"clothes","slot":"part","value":"hem","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"All the constitutive parts of hem.\";         A textual example of the semantic relation is \"can have hem\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['shirt', 'pants', 'skirt', 'dress', 'jacket', 'blouse', 'shorts', 'trousers', 'sweater', 'coat']"}
{"cat":"clothes","slot":"part","value":"heel","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"All the constitutive parts of heel.\";         A textual example of the semantic relation is \"can have heel\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['shoe', 'sandal', 'boot', 'pump', 'stiletto', 'wedge', 'platform', 'ankle boot', 'mule', 'slipper']"}
{"cat":"clothes","slot":"part","value":"seam","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"All the constitutive parts of seam.\";         A textual example of the semantic relation is \"can have seam\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['shirt', 'pants', 'dress', 'skirt', 'jacket', 'coat', 'shorts', 'blouse', 'sweater', 'trousers']"}
{"cat":"clothes","slot":"part","value":"button","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"All the constitutive parts of button.\";         A textual example of the semantic relation is \"can have button\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"shirt\", \"jacket\", \"coat\", \"pants\", \"dress\", \"skirt\", \"blouse\", \"sweater\", \"jeans\", \"shorts\"]"}
{"cat":"clothes","slot":"part","value":"sole","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"All the constitutive parts of sole.\";         A textual example of the semantic relation is \"can have sole\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['shoe', 'boot', 'sandal', 'slipper', 'heel', 'platform', 'wedge', 'clog', 'mule', 'loafer']"}
{"cat":"clothes","slot":"part","value":"fur","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"All the constitutive parts of fur.\";         A textual example of the semantic relation is \"can have fur\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['coat', 'hat', 'gloves', 'scarf', 'vest', 'jacket', 'boots', 'moccasins', 'muff']"}
{"cat":"clothes","slot":"part","value":"upper","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"All the constitutive parts of upper.\";         A textual example of the semantic relation is \"can have upper\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"shirt\", \"blouse\", \"jacket\", \"sweater\", \"hoodie\", \"vest\", \"tank top\", \"dress\", \"coat\"]"}
{"cat":"clothes","slot":"part","value":"pocket","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"All the constitutive parts of pocket.\";         A textual example of the semantic relation is \"can have pocket\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['pants', 'jeans', 'shorts', 'skirt', 'jacket', 'shirt', 'sweater', 'vest', 'dress', 'coat']"}
{"cat":"clothes","slot":"part","value":"zip","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"All the constitutive parts of zip.\";         A textual example of the semantic relation is \"can have zip\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"jacket\", \"jeans\", \"sweater\", \"dress\", \"coat\", \"skirt\", \"pants\", \"hoodie\", \"shirt\", \"shorts\"]"}
{"cat":"clothes","slot":"part","value":"waistband","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"All the constitutive parts of waistband.\";         A textual example of the semantic relation is \"can have waistband\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"pants\", \"jeans\", \"shorts\", \"skirt\", \"dress\", \"belt\", \"suspenders\", \"trousers\", \"slacks\", \"chinos\"]"}
{"cat":"clothes","slot":"part","value":"strap","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"All the constitutive parts of strap.\";         A textual example of the semantic relation is \"can have strap\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['sandals', 'shoes', 'backpack', 'purse', 'handbag', 'duffel bag', 'camera bag', 'fanny pack', 'watch', 'sunglasses']"}
{"cat":"clothes","slot":"part","value":"collar","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"All the constitutive parts of collar.\";         A textual example of the semantic relation is \"can have collar\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"shirt\", \"jacket\", \"blouse\", \"sweater\", \"coat\", \"dress\", \"suit\", \"necktie\", \"vest\", \"turtleneck\"]"}
{"cat":"clothes","slot":"part","value":"visor","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"All the constitutive parts of visor.\";         A textual example of the semantic relation is \"can have visor\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['visor', 'hood', 'cap', 'helmet', 'mask', 'goggles', 'shield', 'headband', 'scarf', 'bandana']"}
{"cat":"clothes","slot":"part","value":"belt loop","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"All the constitutive parts of belt loop.\";         A textual example of the semantic relation is \"can have belt loop\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['pants', 'trousers', 'jeans', 'shorts', 'skirt', 'dress', 'jacket', 'coat', 'vest', 'shirt']"}
{"cat":"clothes","slot":"part","value":"neckline","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"All the constitutive parts of neckline.\";         A textual example of the semantic relation is \"can have neckline\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"collar\", \"neckband\", \"lapel\", \"placket\", \"yoke\", \"bib\", \"cowl\", \"halter\", \"turtleneck\", \"scoop\"]"}
{"cat":"clothes","slot":"part","value":"hemline","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"All the constitutive parts of hemline.\";         A textual example of the semantic relation is \"can have hemline\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"dress\", \"skirt\", \"gown\", \"coat\", \"jacket\", \"pants\", \"shorts\", \"trousers\", \"jeans\", \"slacks\"]"}
{"cat":"clothes","slot":"part","value":"outsole","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"All the constitutive parts of outsole.\";         A textual example of the semantic relation is \"can have outsole\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['shoe', 'boot', 'sneaker', 'sandal', 'heel', 'sole', 'insole', 'midsole', 'outsole', 'upper']"}
{"cat":"clothes","slot":"part","value":"insole","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"All the constitutive parts of insole.\";         A textual example of the semantic relation is \"can have insole\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['shoe', 'boot', 'sneaker', 'sandal', 'heel', 'loafer', 'pump', 'oxford', 'mule', 'clog']"}
{"cat":"clothes","slot":"part","value":"toecap","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"All the constitutive parts of toecap.\";         A textual example of the semantic relation is \"can have toecap\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"shoe\", \"boot\", \"sneaker\", \"sandal\", \"pump\", \"loafer\", \"oxford\", \"mule\", \"clog\", \"heel\"]"}
{"cat":"clothes","slot":"part","value":"trouser leg","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"All the constitutive parts of trouser leg.\";         A textual example of the semantic relation is \"can have trouser leg\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['cuff', 'hem', 'seam', 'pocket', 'fly', 'waistband', 'zipper', 'button', 'pleat', 'crotch']"}
{"cat":"clothes","slot":"part","value":"toe box","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"All the constitutive parts of toe box.\";         A textual example of the semantic relation is \"can have toe box\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['shoes', 'sneakers', 'sandals', 'boots', 'flip-flops', 'high heels', 'loafers', 'clogs', 'mules', 'pumps']"}
{"cat":"clothes","slot":"part","value":"shoe collar","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"All the constitutive parts of shoe collar.\";         A textual example of the semantic relation is \"can have shoe collar\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['shirt', 'pants', 'jacket', 'dress', 'skirt', 'shorts', 'blouse', 'sweater', 'coat', 'suit']"}
{"cat":"clothes","slot":"part","value":"instep","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"All the constitutive parts of instep.\";         A textual example of the semantic relation is \"can have instep\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"shoe\", \"boot\", \"sandal\", \"slipper\", \"moccasin\", \"clog\", \"platform\", \"wedge\", \"heels\", \"pumps\"]"}
{"cat":"clothes","slot":"part","value":"shirtfront","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"All the constitutive parts of shirtfront.\";         A textual example of the semantic relation is \"can have shirtfront\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"collar\", \"button\", \"buttonhole\", \"pocket\", \"lapel\", \"cuff\", \"yoke\", \"placket\", \"gusset\", \"pleat\"]"}
{"cat":"clothes","slot":"part","value":"seat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"All the constitutive parts of seat.\";         A textual example of the semantic relation is \"can have seat\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['pants', 'shirt', 'skirt', 'jacket', 'dress', 'shorts', 'socks', 'shoes', 'hat', 'gloves']"}
{"cat":"clothes","slot":"part","value":"counter","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"All the constitutive parts of counter.\";         A textual example of the semantic relation is \"can have counter\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['shirt', 'pants', 'jacket', 'skirt', 'dress', 'shorts', 'sweater', 'coat', 'hat', 'scarf']"}
{"cat":"clothes","slot":"part","value":"trouser","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"All the constitutive parts of trouser.\";         A textual example of the semantic relation is \"can have trouser\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['waistband', 'fly', 'crotch', 'pocket', 'leg', 'seam', 'hem', 'button', 'zipper', 'belt loop']"}
{"cat":"clothes","slot":"part","value":"innersole","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"All the constitutive parts of innersole.\";         A textual example of the semantic relation is \"can have innersole\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['shoes', 'sneakers', 'boots', 'slippers', 'sandals', 'loafers', 'heels', 'flats', 'moccasins', 'oxfords']"}
{"cat":"clothes","slot":"part","value":"lap covering","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"All the constitutive parts of lap covering.\";         A textual example of the semantic relation is \"can have lap covering\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"shirt\", \"blouse\", \"dress\", \"skirt\", \"pants\", \"shorts\", \"jacket\", \"coat\", \"sweater\", \"scarf\"]"}
{"cat":"clothes","slot":"part","value":"hip pocket","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"All the constitutive parts of hip pocket.\";         A textual example of the semantic relation is \"can have hip pocket\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['jeans', 'trousers', 'pants', 'shorts', 'skirts', 'dresses', 'jackets', 'coats', 'shirts', 'blouses']"}
{"cat":"clothes","slot":"part","value":"heel counter","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"All the constitutive parts of heel counter.\";         A textual example of the semantic relation is \"can have heel counter\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['shoe', 'heel', 'counter', 'footwear', 'ankle', 'support', 'strap', 'buckle', 'heel cup', 'insole']"}
{"cat":"clothes","slot":"part","value":"trouser cuff","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"All the constitutive parts of trouser cuff.\";         A textual example of the semantic relation is \"can have trouser cuff\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['button', 'buttonhole', 'cuff', 'fabric', 'hem', 'lining', 'pocket', 'seam', 'thread', 'zipper']"}
{"cat":"clothes","slot":"part","value":"lap","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"All the constitutive parts of lap.\";         A textual example of the semantic relation is \"can have lap\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['lap', 'collar', 'sleeve', 'pocket', 'hem', 'button', 'zipper', 'elastic', 'cuff', 'fabric']"}
{"cat":"clothes","slot":"part","value":"pant leg","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"All the constitutive parts of pant leg.\";         A textual example of the semantic relation is \"can have pant leg\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['pant', 'leg', 'jeans', 'trousers', 'slacks', 'chinos', 'khakis', 'cuffs', 'hem', 'seam']"}
{"cat":"clothes","slot":"part","value":"sunburst pleat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"All the constitutive parts of sunburst pleat.\";         A textual example of the semantic relation is \"can have sunburst pleat\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"skirt\", \"dress\", \"blouse\", \"shirt\", \"pants\", \"shorts\", \"jacket\", \"coat\", \"vest\", \"sweater\"]"}
{"cat":"clothes","slot":"part","value":"shirtsleeve","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"All the constitutive parts of shirtsleeve.\";         A textual example of the semantic relation is \"can have shirtsleeve\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['cuff', 'elbow', 'hem', 'seam', 'shoulder', 'sleeve', 'sleeve cap', 'sleeve head', 'sleeve placket', 'wrist']"}
{"cat":"clothes","slot":"part","value":"finger","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"All the constitutive parts of finger.\";         A textual example of the semantic relation is \"can have finger\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['ring', 'pinky', 'thumb', 'index', 'middle', 'finger', 'nail', 'knuckle', 'joint', 'tip']"}
{"cat":"clothes","slot":"part","value":"toe","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"All the constitutive parts of toe.\";         A textual example of the semantic relation is \"can have toe\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['socks', 'shoes', 'sandals', 'boots', 'flip-flops', 'slippers', 'ankle boots', 'loafers', 'sneakers', 'clogs']"}
{"cat":"clothes","slot":"part","value":"sleeve","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"All the constitutive parts of sleeve.\";         A textual example of the semantic relation is \"can have sleeve\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['shirt', 'blouse', 'coat', 'jacket', 'dress', 'sweater', 'tunic', 'top', 'jumper', 'cardigan']"}
{"cat":"clothes","slot":"part","value":"half sole","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"All the constitutive parts of half sole.\";         A textual example of the semantic relation is \"can have half sole\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['shoe', 'boot', 'sneaker', 'sandal', 'heel', 'pump', 'loafer', 'oxford', 'derby', 'mule']"}
{"cat":"clothes","slot":"part","value":"brim","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"All the constitutive parts of brim.\";         A textual example of the semantic relation is \"can have brim\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['hat', 'cap', 'visor', 'bonnet', 'beret', 'fedora', 'beanie', 'sun hat', 'top hat', 'bowler hat']"}
{"cat":"clothes","slot":"part","value":"shoelace","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"All the constitutive parts of shoelace.\";         A textual example of the semantic relation is \"can have shoelace\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['shoe', 'sneaker', 'boot', 'sandal', 'loafer', 'oxford', 'derby', 'running shoe', 'hiking boot', 'dress shoe']"}
{"cat":"clothes","slot":"part","value":"sunray pleat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"All the constitutive parts of sunray pleat.\";         A textual example of the semantic relation is \"can have sunray pleat\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['dress', 'skirt', 'blouse', 'shirt', 'pants', 'shorts', 'jacket', 'coat', 'vest', 'sweater']"}
{"cat":"clothes","slot":"part","value":"shoe string","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"All the constitutive parts of shoe string.\";         A textual example of the semantic relation is \"can have shoe string\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['shirt', 'pants', 'dress', 'skirt', 'shorts', 'jacket', 'sweater', 'hat', 'socks', 'shoes']"}
{"cat":"clothes","slot":"part","value":"bodice","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"All the constitutive parts of bodice.\";         A textual example of the semantic relation is \"can have bodice\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"corset\", \"bra\", \"bustier\", \"camisole\", \"tank top\", \"halter top\", \"cami\", \"vest\", \"waistcoat\"]"}
{"cat":"clothes","slot":"part","value":"neckband","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"All the constitutive parts of neckband.\";         A textual example of the semantic relation is \"can have neckband\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"shirt\", \"t-shirt\", \"blouse\", \"dress\", \"sweater\", \"polo\", \"collar\", \"neckline\", \"collarbone\", \"necklace\"]"}
{"cat":"clothes","slot":"part","value":"shoestring","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"All the constitutive parts of shoestring.\";         A textual example of the semantic relation is \"can have shoestring\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"shirt\", \"pants\", \"skirt\", \"dress\", \"jacket\", \"coat\", \"hat\", \"scarf\", \"gloves\", \"socks\"]"}
{"cat":"clothes","slot":"part","value":"shirt button","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"All the constitutive parts of shirt button.\";         A textual example of the semantic relation is \"can have shirt button\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['button', 'collar', 'cuff', 'pocket', 'seam', 'sleeve', 'shoulder', 'yoke', 'hem', 'placket']"}
{"cat":"clothes","slot":"part","value":"dickey","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"All the constitutive parts of dickey.\";         A textual example of the semantic relation is \"can have dickey\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"collar\", \"shirt\", \"vest\", \"tie\", \"jacket\", \"sleeves\", \"buttons\", \"pockets\", \"lapel\"]"}
{"cat":"clothes","slot":"part","value":"spike","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"All the constitutive parts of spike.\";         A textual example of the semantic relation is \"can have spike\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['jacket', 'vest', 'shirt', 'pants', 'skirt', 'dress', 'coat', 'sweater', 'shorts', 'shoes']"}
{"cat":"clothes","slot":"part","value":"eyehole","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"All the constitutive parts of eyehole.\";         A textual example of the semantic relation is \"can have eyehole\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"mask\", \"hood\", \"cap\", \"goggles\", \"visor\", \"helmet\", \"hat\", \"scarf\", \"veil\", \"headband\"]"}
{"cat":"clothes","slot":"part","value":"saddle","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"All the constitutive parts of saddle.\";         A textual example of the semantic relation is \"can have saddle\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"saddle\", \"seat\", \"flaps\", \"pommel\", \"cantle\", \"girth\", \"stirrups\", \"leathers\", \"billets\", \"surcingle\"]"}
{"cat":"clothes","slot":"part","value":"bootleg","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"All the constitutive parts of bootleg.\";         A textual example of the semantic relation is \"can have bootleg\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"boot\", \"leg\", \"calf\", \"ankle\", \"heel\", \"toe\", \"sole\", \"upper\", \"shaft\", \"tongue\"]"}
{"cat":"clothes","slot":"part","value":"pleat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"All the constitutive parts of pleat.\";         A textual example of the semantic relation is \"can have pleat\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['pants', 'skirt', 'dress', 'shirt', 'blouse', 'trousers', 'jacket', 'coat', 'slacks', 'shorts']"}
{"cat":"clothes","slot":"part","value":"spur","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"All the constitutive parts of spur.\";         A textual example of the semantic relation is \"can have spur\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['shirt', 'pants', 'jacket', 'dress', 'skirt', 'shorts', 'socks', 'shoes', 'hat', 'scarf']"}
{"cat":"clothes","slot":"part","value":"bootlace","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"All the constitutive parts of bootlace.\";         A textual example of the semantic relation is \"can have bootlace\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['boot', 'shoe', 'heel', 'sole', 'lace', 'tongue', 'eyelet', 'upper', 'insole', 'outsole']"}
{"cat":"clothes","slot":"part","value":"box pleat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"All the constitutive parts of box pleat.\";         A textual example of the semantic relation is \"can have box pleat\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['skirt', 'dress', 'pants', 'shirt', 'blouse', 'jacket', 'coat', 'trousers', 'tunic', 'top']"}
{"cat":"clothes","slot":"part","value":"shoe lace","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"All the constitutive parts of shoe lace.\";         A textual example of the semantic relation is \"can have shoe lace\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['sneakers', 'running shoes', 'trainers', 'hiking boots', 'dress shoes', 'oxfords', 'loafers', 'sandals', 'boat shoes', 'ballet flats']"}
{"cat":"clothes","slot":"part","value":"eyelet","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"All the constitutive parts of eyelet.\";         A textual example of the semantic relation is \"can have eyelet\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"shirt\", \"dress\", \"blouse\", \"skirt\", \"pants\", \"shorts\", \"jacket\", \"coat\", \"sweater\", \"hat\"]"}
{"cat":"clothes","slot":"part","value":"ruffle","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"All the constitutive parts of ruffle.\";         A textual example of the semantic relation is \"can have ruffle\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"blouse\", \"dress\", \"shirt\", \"skirt\", \"pants\", \"jacket\", \"sweater\", \"top\", \"collar\"]"}
{"cat":"clothes","slot":"part","value":"buckle","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"All the constitutive parts of buckle.\";         A textual example of the semantic relation is \"can have buckle\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['shoes', 'boots', 'belts', 'watches', 'jackets', 'pants', 'skirts', 'dresses', 'bags', 'hats']"}
{"cat":"clothes","slot":"part","value":"shirting","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"All the constitutive parts of shirting.\";         A textual example of the semantic relation is \"can have shirting\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['collar', 'cuff', 'button', 'yoke', 'pocket', 'sleeve', 'hem', 'placket', 'gusset', 'shoulder']"}
{"cat":"clothes","slot":"part","value":"lacing","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"All the constitutive parts of lacing.\";         A textual example of the semantic relation is \"can have lacing\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['shoes', 'boots', 'dress', 'corset', 'gloves', 'sleeves', 'pants', 'jacket', 'skirt', 'blouse']"}
{"cat":"clothes","slot":"part","value":"earlap","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"All the constitutive parts of earlap.\";         A textual example of the semantic relation is \"can have earlap\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"hat\", \"cap\", \"beanie\", \"beret\", \"stocking cap\", \"skullcap\", \"toque\", \"balaclava\", \"hood\"]"}
{"cat":"clothes","slot":"part","value":"hatband","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"All the constitutive parts of hatband.\";         A textual example of the semantic relation is \"can have hatband\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['hat', 'band', 'headband', 'ribbon', 'fabric', 'silk', 'cotton', 'leather', 'lace', 'elastic']"}
{"cat":"clothes","slot":"part","value":"earflap","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"All the constitutive parts of earflap.\";         A textual example of the semantic relation is \"can have earflap\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['hat', 'cap', 'beanie', 'toque', 'beret', 'stocking cap', 'wool hat', 'fishing hat', 'balaclava']"}
{"cat":"clothes","slot":"part","value":"crown","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"All the constitutive parts of crown.\";         A textual example of the semantic relation is \"can have crown\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"crown\", \"tiara\", \"diadem\", \"coronet\", \"circlet\", \"headband\", \"wreath\", \"fillet\", \"laurel\", \"mitre\"]"}
{"cat":"clothes","slot":"part","value":"thumb","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"All the constitutive parts of thumb.\";         A textual example of the semantic relation is \"can have thumb\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['gloves', 'mittens', 'socks', 'sweaters', 'jackets', 'shirts', 'pants', 'skirts', 'dresses', 'hats']"}
{"cat":"clothes","slot":"part","value":"kick pleat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"All the constitutive parts of kick pleat.\";         A textual example of the semantic relation is \"can have kick pleat\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['skirt', 'dress', 'pants', 'trousers', 'shorts', 'blouse', 'shirt', 'jacket', 'coat', 'suit']"}
{"cat":"clothes","slot":"part","value":"dickie","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"All the constitutive parts of dickie.\";         A textual example of the semantic relation is \"can have dickie\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['dickie', 'collar', 'lapel', 'cuff', 'button', 'pocket', 'sleeve', 'hem', 'fabric', 'thread']"}
{"cat":"clothes","slot":"part","value":"dicky","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"All the constitutive parts of dicky.\";         A textual example of the semantic relation is \"can have dicky\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"collar\", \"shirt\", \"neck\", \"fabric\", \"button\", \"cuff\", \"sleeve\", \"pocket\", \"vest\", \"tie\"]"}
{"cat":"clothes","slot":"part","value":"placket","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"All the constitutive parts of placket.\";         A textual example of the semantic relation is \"can have placket\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['shirt', 'jacket', 'blouse', 'dress', 'coat', 'pants', 'skirt', 'shorts', 'sweater', 'vest']"}
{"cat":"clothes","slot":"part","value":"shirttail","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"All the constitutive parts of shirttail.\";         A textual example of the semantic relation is \"can have shirttail\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"shirt\", \"t-shirt\", \"blouse\", \"dress\", \"top\", \"button-down\", \"polo\", \"tunic\", \"tank top\", \"camisole\"]"}
{"cat":"clothes","slot":"part","value":"gad","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"All the constitutive parts of gad.\";         A textual example of the semantic relation is \"can have gad\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['shirt', 'pants', 'jacket', 'skirt', 'dress', 'shoes', 'socks', 'hat', 'belt', 'scarf']"}
{"cat":"clothes","slot":"material","value":"lace","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Material of which lace is composed.\";         A textual example of the semantic relation is \"can be made of lace\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"dress\", \"blouse\", \"skirt\", \"petticoat\", \"camisole\", \"corset\", \"gloves\", \"stockings\", \"veil\", \"collar\"]"}
{"cat":"clothes","slot":"material","value":"coat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Material of which coat is composed.\";         A textual example of the semantic relation is \"can be made of coat\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['wool', 'cotton', 'leather', 'polyester', 'cashmere', 'denim', 'silk', 'linen', 'suede', 'velvet']"}
{"cat":"clothes","slot":"generalization","value":"garment","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of garment related to hypernyms.\";         A textual example of the semantic relation is \"are garment\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['shirt', 'pants', 'dress', 'jacket', 'skirt', 'shorts', 'blouse', 'sweater', 'jeans', 't-shirt']"}
{"cat":"clothes","slot":"generalization","value":"clothing","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of clothing related to hypernyms.\";         A textual example of the semantic relation is \"are clothing\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"shirt\", \"pants\", \"skirt\", \"dress\", \"jacket\", \"sweater\", \"shorts\", \"hat\", \"shoes\", \"socks\"]"}
{"cat":"clothes","slot":"generalization","value":"covering","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of covering related to hypernyms.\";         A textual example of the semantic relation is \"are covering\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['shirt', 'pants', 'dress', 'jacket', 'coat', 'skirt', 'shorts', 'blouse', 'sweater', 't-shirt']"}
{"cat":"clothes","slot":"generalization","value":"consumer goods","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of consumer goods related to hypernyms.\";         A textual example of the semantic relation is \"are consumer goods\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['shirt', 'pants', 'dress', 'skirt', 'jacket', 'coat', 'shorts', 'socks', 'shoes', 'hat']"}
{"cat":"clothes","slot":"generalization","value":"footwear","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of footwear related to hypernyms.\";         A textual example of the semantic relation is \"are footwear\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['sneakers', 'boots', 'sandals', 'heels', 'flats', 'loafers', 'clogs', 'flip-flops', 'ankle boots', 'mules']"}
{"cat":"clothes","slot":"generalization","value":"vesture","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of vesture related to hypernyms.\";         A textual example of the semantic relation is \"are vesture\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['shirt', 'pants', 'dress', 'jacket', 'skirt', 'shorts', 'blouse', 'sweater', 't-shirt', 'jeans']"}
{"cat":"clothes","slot":"generalization","value":"article of clothing","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of article of clothing related to hypernyms.\";         A textual example of the semantic relation is \"are article of clothing\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['shirt', 'pants', 'dress', 'jacket', 'skirt', 'shorts', 'hat', 'socks', 'shoes', 'scarf']"}
{"cat":"clothes","slot":"generalization","value":"wearable","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of wearable related to hypernyms.\";         A textual example of the semantic relation is \"are wearable\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['shirt', 'pants', 'dress', 'jacket', 'skirt', 'shoes', 'socks', 'hat', 'scarf', 'gloves']"}
{"cat":"clothes","slot":"generalization","value":"habiliment","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of habiliment related to hypernyms.\";         A textual example of the semantic relation is \"are habiliment\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['shirt', 'pants', 'skirt', 'dress', 'jacket', 'coat', 'hat', 'gloves', 'scarf', 'socks']"}
{"cat":"clothes","slot":"generalization","value":"wear","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of wear related to hypernyms.\";         A textual example of the semantic relation is \"are wear\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['shirt', 'pants', 'jacket', 'dress', 'skirt', 'shorts', 'socks', 'hat', 'scarf', 'gloves']"}
{"cat":"clothes","slot":"generalization","value":"artefact","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of artefact related to hypernyms.\";         A textual example of the semantic relation is \"are artefact\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['shirt', 'pants', 'dress', 'skirt', 'jacket', 'coat', 'hat', 'gloves', 'scarf', 'socks']"}
{"cat":"clothes","slot":"generalization","value":"artifact","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of artifact related to hypernyms.\";         A textual example of the semantic relation is \"are artifact\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"shirt\", \"pants\", \"dress\", \"jacket\", \"skirt\", \"shorts\", \"blouse\", \"sweater\", \"coat\", \"hat\"]"}
{"cat":"clothes","slot":"generalization","value":"shoe","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of shoe related to hypernyms.\";         A textual example of the semantic relation is \"are shoe\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['sneakers', 'slippers', 'heels', 'boots', 'flats', 'flip-flops', 'loafers', 'sandals', 'pumps', 'oxfords']"}
{"cat":"clothes","slot":"generalization","value":"headgear","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of headgear related to hypernyms.\";         A textual example of the semantic relation is \"are headgear\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['hat', 'cap', 'beret', 'beanie', 'top hat', 'bowler hat', 'fedora', 'panama hat', 'cowboy hat', 'baseball cap']"}
{"cat":"clothes","slot":"generalization","value":"footgear","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of footgear related to hypernyms.\";         A textual example of the semantic relation is \"are footgear\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['sneakers', 'slippers', 'boots', 'sandals', 'flip-flops', 'loafers', 'high heels', 'ankle boots', 'flats', 'moccasins']"}
{"cat":"clothes","slot":"generalization","value":"headwear","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of headwear related to hypernyms.\";         A textual example of the semantic relation is \"are headwear\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['hat', 'cap', 'beret', 'beanie', 'bonnet', 'top hat', 'bowler hat', 'fedora', 'pork pie hat', 'cowboy hat']"}
{"cat":"clothes","slot":"generalization","value":"headdress","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of headdress related to hypernyms.\";         A textual example of the semantic relation is \"are headdress\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['hat', 'cap', 'beanie', 'beret', 'top hat', 'bowler hat', 'fedora', 'cowboy hat', 'sombrero', 'panama hat']"}
{"cat":"clothes","slot":"generalization","value":"hand wear","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of hand wear related to hypernyms.\";         A textual example of the semantic relation is \"are hand wear\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['gloves', 'mittens', 'fingerless gloves', 'wrist warmers', 'fingerless mittens', 'arm warmers', 'hand warmers', 'fingerless glove', 'fingerless mitten', 'fingerless hand warmer']"}
{"cat":"clothes","slot":"generalization","value":"handwear","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of handwear related to hypernyms.\";         A textual example of the semantic relation is \"are handwear\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"gloves\", \"mittens\", \"fingerless gloves\", \"wrist warmers\", \"arm warmers\", \"hand warmers\", \"finger warmers\", \"fingerless mittens\", \"hand wraps\", \"hand guards\"]"}
{"cat":"clothes","slot":"generalization","value":"good","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of good related to hypernyms.\";         A textual example of the semantic relation is \"are good\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"shirt\", \"pants\", \"jacket\", \"dress\", \"skirt\", \"shorts\", \"jeans\", \"sweater\", \"coat\", \"hat\"]"}
{"cat":"clothes","slot":"generalization","value":"overgarment","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of overgarment related to hypernyms.\";         A textual example of the semantic relation is \"are overgarment\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['coat', 'jacket', 'blazer', 'cardigan', 'sweater', 'hoodie', 'windbreaker', 'parka', 'overcoat', 'raincoat']"}
{"cat":"clothes","slot":"generalization","value":"trade good","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of trade good related to hypernyms.\";         A textual example of the semantic relation is \"are trade good\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['shirt', 'pants', 'dress', 'jacket', 'skirt', 'shorts', 'blouse', 'sweater', 'coat', 'hat']"}
{"cat":"clothes","slot":"generalization","value":"whole","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of whole related to hypernyms.\";         A textual example of the semantic relation is \"are whole\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['shirt', 'pants', 'dress', 'skirt', 'jacket', 'coat', 'hat', 'scarf', 'gloves', 'socks']"}
{"cat":"clothes","slot":"generalization","value":"outer garment","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of outer garment related to hypernyms.\";         A textual example of the semantic relation is \"are outer garment\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['shirt', 'jacket', 'coat', 'sweater', 'pants', 'skirt', 'dress', 'shorts', 'trousers', 'blazer']"}
{"cat":"clothes","slot":"generalization","value":"commodity","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of commodity related to hypernyms.\";         A textual example of the semantic relation is \"are commodity\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['shirt', 'pants', 'dress', 'jacket', 'skirt', 'shorts', 'hat', 'shoes', 'socks', 'sweater']"}
{"cat":"clothes","slot":"generalization","value":"unit","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of unit related to hypernyms.\";         A textual example of the semantic relation is \"are unit\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['shirt', 'pants', 'dress', 'skirt', 'jacket', 'coat', 'shorts', 't-shirt', 'sweater', 'blouse']"}
{"cat":"clothes","slot":"generalization","value":"woman's clothing","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of woman's clothing related to hypernyms.\";         A textual example of the semantic relation is \"are woman's clothing\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['dress', 'skirt', 'top', 'blouse', 'pants', 'shorts', 'shirt', 'sweater', 'jacket', 'coat']"}
{"cat":"clothes","slot":"generalization","value":"attire","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of attire related to hypernyms.\";         A textual example of the semantic relation is \"are attire\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['shirt', 'pants', 'dress', 'skirt', 'shorts', 'jacket', 'coat', 'hat', 'scarf', 'gloves']"}
{"cat":"clothes","slot":"generalization","value":"hosiery","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of hosiery related to hypernyms.\";         A textual example of the semantic relation is \"are hosiery\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"stockings\", \"tights\", \"socks\", \"pantyhose\", \"leggings\", \"knee-highs\", \"thigh-highs\", \"compression stockings\", \"fishnets\", \"nylons\"]"}
{"cat":"clothes","slot":"generalization","value":"dress","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of dress related to hypernyms.\";         A textual example of the semantic relation is \"are dress\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['shirt', 'pants', 'skirt', 'dress', 'jacket', 'coat', 'shorts', 'sweater', 'socks', 'hat']"}
{"cat":"clothes","slot":"generalization","value":"hose","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of hose related to hypernyms.\";         A textual example of the semantic relation is \"are hose\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['stockings', 'pantyhose', 'tights', 'leggings', 'socks', 'hose', 'hosiery', 'suspenders', 'garter belt']"}
{"cat":"clothes","slot":"generalization","value":"garb","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of garb related to hypernyms.\";         A textual example of the semantic relation is \"are garb\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['shirt', 'pants', 'jacket', 'dress', 'skirt', 'shorts', 'sweater', 'coat', 'hat', 'gloves']"}
{"cat":"clothes","slot":"generalization","value":"disguise","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of disguise related to hypernyms.\";         A textual example of the semantic relation is \"are disguise\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"wig\", \"hat\", \"mask\", \"sunglasses\", \"scarf\", \"gloves\", \"costume\", \"makeup\", \"prosthetics\", \"clothing\"]"}
{"cat":"clothes","slot":"generalization","value":"neckwear","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of neckwear related to hypernyms.\";         A textual example of the semantic relation is \"are neckwear\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['necktie', 'bowtie', 'ascot', 'cravat', 'bolo', 'scarf', 'shawl', 'stole', 'sash', 'kerchief']"}
{"cat":"clothes","slot":"generalization","value":"top","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of top related to hypernyms.\";         A textual example of the semantic relation is \"are top\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['shirt', 'blouse', 'top', 't-shirt', 'sweater', 'vest', 'jacket', 'coat', 'hoodie', 'jersey']"}
{"cat":"clothes","slot":"generalization","value":"cloak","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of cloak related to hypernyms.\";         A textual example of the semantic relation is \"are cloak\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['cloak', 'coat', 'jacket', 'cape', 'hood', 'vest', 'robe', 'shawl', 'poncho', 'overcoat']"}
{"cat":"clothes","slot":"colorPattern","value":"patterned","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"All the features that refer to the color or texture of patterned.\";         A textual example of the semantic relation is \"can be patterned\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['shirt', 'dress', 'pants', 'skirt', 'jacket', 'sweater', 'scarf', 'hat', 'socks', 'shoes']"}
{"cat":"clothes","slot":"colorPattern","value":"black","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"All the features that refer to the color or texture of black.\";         A textual example of the semantic relation is \"can be black\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['shirt', 'pants', 'dress', 'jacket', 'skirt', 'shoes', 'socks', 'hat', 'scarf', 'gloves']"}
{"cat":"clothes","slot":"colorPattern","value":"black","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"All the features that refer to the color or texture of black.\";         A textual example of the semantic relation is \"can be black\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['shirt', 'pants', 'dress', 'jacket', 'skirt', 'shoes', 'socks', 'hat', 'scarf', 'gloves']"}
{"cat":"clothes","slot":"colorPattern","value":"blue","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"All the features that refer to the color or texture of blue.\";         A textual example of the semantic relation is \"can be blue\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['jeans', 'shirt', 'pants', 'jacket', 'dress', 'skirt', 'shorts', 'sweater', 'scarf', 'hat']"}
{"cat":"clothes","slot":"colorPattern","value":"blue","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"All the features that refer to the color or texture of blue.\";         A textual example of the semantic relation is \"can be blue\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['jeans', 'shirt', 'pants', 'jacket', 'dress', 'skirt', 'shorts', 'sweater', 'scarf', 'hat']"}
{"cat":"clothes","slot":"colorPattern","value":"pink","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"All the features that refer to the color or texture of pink.\";         A textual example of the semantic relation is \"can be pink\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['dress', 'shirt', 'skirt', 'blouse', 'sweater', 'coat', 'pants', 'shorts', 'scarf', 'hat']"}
{"cat":"clothes","slot":"colorPattern","value":"green","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"All the features that refer to the color or texture of green.\";         A textual example of the semantic relation is \"can be green\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['shirt', 'dress', 'pants', 'skirt', 'jacket', 'hat', 'scarf', 'gloves', 'socks', 'shoes']"}
{"cat":"clothes","slot":"colorPattern","value":"green","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"All the features that refer to the color or texture of green.\";         A textual example of the semantic relation is \"can be green\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['shirt', 'dress', 'pants', 'skirt', 'jacket', 'hat', 'scarf', 'gloves', 'socks', 'shoes']"}
{"cat":"clothes","slot":"colorPattern","value":"pink","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"All the features that refer to the color or texture of pink.\";         A textual example of the semantic relation is \"can be pink\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['dress', 'shirt', 'skirt', 'blouse', 'sweater', 'coat', 'pants', 'shorts', 'scarf', 'hat']"}
{"cat":"clothes","slot":"colorPattern","value":"brown","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"All the features that refer to the color or texture of brown.\";         A textual example of the semantic relation is \"can be brown\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['shirt', 'pants', 'jacket', 'skirt', 'dress', 'hat', 'belt', 'scarf', 'gloves', 'boots']"}
{"cat":"clothes","slot":"colorPattern","value":"brown","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"All the features that refer to the color or texture of brown.\";         A textual example of the semantic relation is \"can be brown\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['shirt', 'pants', 'jacket', 'skirt', 'dress', 'hat', 'belt', 'scarf', 'gloves', 'boots']"}
{"cat":"clothes","slot":"colorPattern","value":"red","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"All the features that refer to the color or texture of red.\";         A textual example of the semantic relation is \"can be red\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['shirt', 'dress', 'scarf', 'sweater', 'pants', 'skirt', 'hat', 'jacket', 'socks', 'shoes']"}
{"cat":"clothes","slot":"colorPattern","value":"striped","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"All the features that refer to the color or texture of striped.\";         A textual example of the semantic relation is \"can be striped\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['shirt', 'dress', 'pants', 'skirt', 'sweater', 'tie', 'scarf', 'socks', 'hat', 'jacket']"}
{"cat":"clothes","slot":"colorPattern","value":"red","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"All the features that refer to the color or texture of red.\";         A textual example of the semantic relation is \"can be red\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['shirt', 'dress', 'scarf', 'sweater', 'pants', 'skirt', 'hat', 'jacket', 'socks', 'shoes']"}
{"cat":"clothes","slot":"colorPattern","value":"white","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"All the features that refer to the color or texture of white.\";         A textual example of the semantic relation is \"can be white\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['shirt', 'blouse', 'dress', 'pants', 'skirt', 'jacket', 'coat', 'hat', 'scarf', 'gloves']"}
{"cat":"clothes","slot":"colorPattern","value":"grey","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"All the features that refer to the color or texture of grey.\";         A textual example of the semantic relation is \"can be grey\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['sweater', 'shirt', 'pants', 'dress', 'skirt', 'coat', 'hat', 'gloves', 'scarf', 'sock']"}
{"cat":"clothes","slot":"colorPattern","value":"grey","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"All the features that refer to the color or texture of grey.\";         A textual example of the semantic relation is \"can be grey\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['sweater', 'shirt', 'pants', 'dress', 'skirt', 'coat', 'hat', 'gloves', 'scarf', 'sock']"}
{"cat":"clothes","slot":"colorPattern","value":"shiny","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"All the features that refer to the color or texture of shiny.\";         A textual example of the semantic relation is \"can be shiny\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['silk', 'satin', 'sequins', 'velvet', 'metallic', 'shimmer', 'glitter', 'lam\u00e9', 'foil', 'mirror']"}
{"cat":"clothes","slot":"colorPattern","value":"glossy","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"All the features that refer to the color or texture of glossy.\";         A textual example of the semantic relation is \"can be glossy\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['shirt', 'dress', 'skirt', 'pants', 'jacket', 'coat', 'shoes', 'hat', 'gloves', 'scarf']"}
{"cat":"clothes","slot":"material","value":"disposable","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Material of which disposable is composed.\";         A textual example of the semantic relation is \"can be made of disposable\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['plastic', 'paper', 'foil', 'nylon', 'polyester', 'cotton', 'rayon', 'acrylic', 'viscose', 'spandex']"}
{"cat":"clothes","slot":"specialization","value":"stretch pants","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of stretch pants in terms of their hyponyms.\";         A textual example of the semantic relation is \"are stretch pants\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"leggings\", \"yoga pants\", \"joggers\", \"sweatpants\", \"track pants\", \"activewear\", \"athleisure\", \"capris\", \"skinny jeans\", \"bootcut jeans\"]"}
{"cat":"clothes","slot":"specialization","value":"long trousers","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of long trousers in terms of their hyponyms.\";         A textual example of the semantic relation is \"are long trousers\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['pants', 'trousers', 'jeans', 'chinos', 'slacks', 'khakis', 'cargos', 'joggers', 'leggings', 'sweatpants']"}
{"cat":"clothes","slot":"specialization","value":"blue jean","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of blue jean in terms of their hyponyms.\";         A textual example of the semantic relation is \"are blue jean\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['denim', 'jeans', 'pants', 'trousers', 'leggings', 'shorts', 'skirts', 'dresses', 'shirts', 'jackets']"}
{"cat":"clothes","slot":"specialization","value":"gantlet","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of gantlet in terms of their hyponyms.\";         A textual example of the semantic relation is \"are gantlet\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['glove', 'mitten', 'gauntlet', 'sleeve', 'cuff', 'wristlet', 'armlet', 'armband', 'bracelet', 'handkerchief']"}
{"cat":"clothes","slot":"specialization","value":"pajama","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of pajama in terms of their hyponyms.\";         A textual example of the semantic relation is \"are pajama\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['pajama', 'nightwear', 'sleepwear', 'robe', 'nightgown', 'loungewear', 'onesie', 'pajama set', 'pajama pants', 'pajama top']"}
{"cat":"clothes","slot":"specialization","value":"shorts","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of shorts in terms of their hyponyms.\";         A textual example of the semantic relation is \"are shorts\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['shorts', 'boxers', 'briefs', 'trunks', 'boardshorts', 'hotpants', 'bikini bottoms', 'cargo shorts', 'denim shorts', 'gym shorts']"}
{"cat":"clothes","slot":"specialization","value":"knee breeches","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of knee breeches in terms of their hyponyms.\";         A textual example of the semantic relation is \"are knee breeches\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['knee breeches', 'breeches', 'pantaloons', 'knickerbockers', 'shorts', 'trousers', 'pants', 'slacks', 'jeans', 'chinos']"}
{"cat":"clothes","slot":"specialization","value":"pyjama","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of pyjama in terms of their hyponyms.\";         A textual example of the semantic relation is \"are pyjama\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['top', 'bottom', 'pants', 'shirt', 'shorts', 'jacket', 'robe', 'onesie', 'nightgown', 'sweatpants']"}
{"cat":"clothes","slot":"specialization","value":"tweed","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of tweed in terms of their hyponyms.\";         A textual example of the semantic relation is \"are tweed\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['jacket', 'coat', 'suit', 'pants', 'skirt', 'dress', 'shirt', 'vest', 'blazer', 'sweater']"}
{"cat":"clothes","slot":"specialization","value":"slacks","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of slacks in terms of their hyponyms.\";         A textual example of the semantic relation is \"are slacks\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['pants', 'trousers', 'slacks', 'chinos', 'khakis', 'cargo pants', 'capris', 'shorts', 'jeans', 'joggers']"}
{"cat":"clothes","slot":"specialization","value":"breeches","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of breeches in terms of their hyponyms.\";         A textual example of the semantic relation is \"are breeches\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['knee breeches', 'knickerbockers', 'pantaloons', 'sailor pants', 'shorts', 'trousers', 'pants', 'britches', 'tights', 'drawers']"}
{"cat":"clothes","slot":"specialization","value":"bellbottom pants","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of bellbottom pants in terms of their hyponyms.\";         A textual example of the semantic relation is \"are bellbottom pants\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['bellbottom pants', 'flared pants', 'wide-leg pants', 'bootcut pants', 'palazzo pants', 'cuffed pants', 'high-waisted pants', 'low-rise pants', 'skinny jeans', 'straight-leg jeans']"}
{"cat":"clothes","slot":"specialization","value":"jean","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of jean in terms of their hyponyms.\";         A textual example of the semantic relation is \"are jean\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['denim', 'fabric', 'material', 'cotton', 'polyester', 'stretch', 'blue', 'black', 'white', 'ripped']"}
{"cat":"clothes","slot":"specialization","value":"knickerbockers","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of knickerbockers in terms of their hyponyms.\";         A textual example of the semantic relation is \"are knickerbockers\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['knickers', 'breeches', 'shorts', 'trousers', 'pants', 'slacks', 'dungarees', 'jeans', 'chinos', 'jodhpurs']"}
{"cat":"clothes","slot":"specialization","value":"toreador pants","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of toreador pants in terms of their hyponyms.\";         A textual example of the semantic relation is \"are toreador pants\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['toreador pants', 'trousers', 'pants', 'bottoms', 'legwear', 'clothing', 'apparel', 'garments', 'attire', 'wardrobe']"}
{"cat":"clothes","slot":"specialization","value":"jodhpurs","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of jodhpurs in terms of their hyponyms.\";         A textual example of the semantic relation is \"are jodhpurs\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"breeches\", \"riding pants\", \"jodhpur boots\", \"riding jacket\", \"riding helmet\", \"riding gloves\", \"riding crop\", \"spurs\", \"saddle\", \"stirrups\"]"}
{"cat":"clothes","slot":"specialization","value":"short pants","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of short pants in terms of their hyponyms.\";         A textual example of the semantic relation is \"are short pants\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['shorts', 'capris', 'hotpants', 'culottes', 'jorts', 'breeches', 'knickerbockers', 'pedal pushers', 'clamdiggers']"}
{"cat":"clothes","slot":"specialization","value":"gauntlet","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of gauntlet in terms of their hyponyms.\";         A textual example of the semantic relation is \"are gauntlet\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['glove', 'armor', 'protection', 'leather', 'metal', 'bracer', 'cuff', 'sleeve', 'gauntlet', 'fingerless']"}
{"cat":"clothes","slot":"specialization","value":"bell-bottoms","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of bell-bottoms in terms of their hyponyms.\";         A textual example of the semantic relation is \"are bell-bottoms\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"pants\", \"trousers\", \"jeans\", \"leggings\", \"chinos\", \"cargos\", \"joggers\", \"sweatpants\", \"shorts\"]"}
{"cat":"clothes","slot":"specialization","value":"sack","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of sack in terms of their hyponyms.\";         A textual example of the semantic relation is \"are sack\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['sack', 'bag', 'pouch', 'purse', 'rucksack', 'backpack', 'duffel', 'hermes', 'kanken', 'tote']"}
{"cat":"clothes","slot":"specialization","value":"churidars","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of churidars in terms of their hyponyms.\";         A textual example of the semantic relation is \"are churidars\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['ankle-length', 'calf-length', 'knee-length', 'thigh-length', 'full-length', 'short', 'medium', 'long', 'extra-long', 'custom-length']"}
{"cat":"clothes","slot":"specialization","value":"gabardine","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of gabardine in terms of their hyponyms.\";         A textual example of the semantic relation is \"are gabardine\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['trousers', 'jacket', 'pants', 'shirt', 'skirt', 'coat', 'dress', 'shorts', 'suit', 'blazer']"}
{"cat":"clothes","slot":"specialization","value":"corduroys","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of corduroys in terms of their hyponyms.\";         A textual example of the semantic relation is \"are corduroys\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['pants', 'trousers', 'jeans', 'slacks', 'chinos', 'cords', 'dungarees', 'overalls', 'shorts', 'skirts']"}
{"cat":"clothes","slot":"specialization","value":"long pants","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of long pants in terms of their hyponyms.\";         A textual example of the semantic relation is \"are long pants\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"jeans\", \"slacks\", \"khakis\", \"trousers\", \"chinos\", \"dress pants\", \"cargo pants\", \"joggers\", \"leggings\"]"}
{"cat":"clothes","slot":"specialization","value":"sweat pants","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of sweat pants in terms of their hyponyms.\";         A textual example of the semantic relation is \"are sweat pants\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['leggings', 'track pants', 'joggers', 'sweatpants', 'sweatshirt', 'hoodie', 't-shirt', 'shorts', 'pajamas', 'sweat suit']"}
{"cat":"clothes","slot":"specialization","value":"pantaloon","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of pantaloon in terms of their hyponyms.\";         A textual example of the semantic relation is \"are pantaloon\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['pants', 'trousers', 'slacks', 'jeans', 'chinos', 'khakis', 'cargos', 'joggers', 'shorts', 'leggings']"}
{"cat":"clothes","slot":"specialization","value":"knickers","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of knickers in terms of their hyponyms.\";         A textual example of the semantic relation is \"are knickers\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['underpants', 'panties', 'knickers', 'drawers', 'briefs', 'boxers', 'thongs', 'boyshorts', 'bikinis', 'hipsters']"}
{"cat":"clothes","slot":"specialization","value":"jumper","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of jumper in terms of their hyponyms.\";         A textual example of the semantic relation is \"are jumper\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['turtleneck', 'pullover', 'cardigan', 'hoodie', 'sweater', 'vest', 'bolero', 'tank top', 'long-sleeved', 'short-sleeved']"}
{"cat":"clothes","slot":"specialization","value":"sweatpants","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of sweatpants in terms of their hyponyms.\";         A textual example of the semantic relation is \"are sweatpants\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['pants', 'sweatpants', 'sweats', 'athletic wear', 'activewear', 'track pants', 'joggers', 'loungers', 'sportswear', 'gym clothes']"}
{"cat":"clothes","slot":"specialization","value":"chino","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of chino in terms of their hyponyms.\";         A textual example of the semantic relation is \"are chino\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['pants', 'trousers', 'khakis', 'slacks', 'chinos', 'cargos', 'jeans', 'shorts', 'skirts', 'dresses']"}
{"cat":"clothes","slot":"specialization","value":"bellbottom trousers","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of bellbottom trousers in terms of their hyponyms.\";         A textual example of the semantic relation is \"are bellbottom trousers\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['flared pants', 'wide-leg trousers', 'boot-cut pants', 'palazzo pants', 'cuffed trousers', 'loose-fit pants', 'high-waisted trousers', 'hip-hugger pants', 'low-rise pants', 'baggy trousers']"}
{"cat":"clothes","slot":"specialization","value":"pedal pusher","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of pedal pusher in terms of their hyponyms.\";         A textual example of the semantic relation is \"are pedal pusher\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['shorts', 'capris', 'cropped pants', 'culottes', 'clamdiggers', 'gauchos', 'jodhpurs', 'pedal pushers', 'skorts', 'skinny jeans']"}
{"cat":"clothes","slot":"specialization","value":"shalwar","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of shalwar in terms of their hyponyms.\";         A textual example of the semantic relation is \"are shalwar\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"shalwar\", \"khaki shalwar\", \"white shalwar\", \"black shalwar\", \"brown shalwar\", \"gray shalwar\", \"striped shalwar\", \"checkered shalwar\", \"cotton shalwar\", \"silk shalwar\"]"}
{"cat":"clothes","slot":"specialization","value":"riding breeches","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of riding breeches in terms of their hyponyms.\";         A textual example of the semantic relation is \"are riding breeches\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"jodhpurs\", \"riding pants\", \"breeches\", \"trousers\", \"khakis\", \"chaps\", \"leggings\", \"riding tights\", \"riding shorts\", \"riding jeans\"]"}
{"cat":"clothes","slot":"specialization","value":"jodhpur breeches","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of jodhpur breeches in terms of their hyponyms.\";         A textual example of the semantic relation is \"are jodhpur breeches\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"jodhpur breeches\", \"riding breeches\", \"jodhpurs\", \"trousers\", \"pants\", \"slacks\", \"chinos\", \"khakis\", \"cargo pants\", \"shorts\"]"}
{"cat":"clothes","slot":"specialization","value":"trews","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of trews in terms of their hyponyms.\";         A textual example of the semantic relation is \"are trews\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"trousers\", \"pants\", \"slacks\", \"jeans\", \"chinos\", \"khakis\", \"cargos\", \"joggers\", \"leggings\", \"shorts\"]"}
{"cat":"clothes","slot":"specialization","value":"salwar","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of salwar in terms of their hyponyms.\";         A textual example of the semantic relation is \"are salwar\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"churidar\", \"patiala\", \"afghani\", \"punjabi\", \"sharara\", \"gharara\", \"dhoti\", \"pathani\", \"palazzo\", \"harem\"]"}
{"cat":"clothes","slot":"specialization","value":"trunks","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of trunks in terms of their hyponyms.\";         A textual example of the semantic relation is \"are trunks\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['jeans', 'trousers', 'pants', 'shorts', 'skirts', 'dresses', 'shirts', 't-shirts', 'jackets', 'coats']"}
{"cat":"clothes","slot":"specialization","value":"knee pants","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of knee pants in terms of their hyponyms.\";         A textual example of the semantic relation is \"are knee pants\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"shorts\", \"capris\", \"pedal pushers\", \"clamdiggers\", \"cuffed pants\", \"cropped pants\", \"jodhpurs\", \"breeches\", \"knickerbockers\", \"culottes\"]"}
{"cat":"clothes","slot":"specialization","value":"mitten","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of mitten in terms of their hyponyms.\";         A textual example of the semantic relation is \"are mitten\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['glove', 'handwear', 'winterwear', 'knitted', 'woollen', 'fleece', 'leather', 'fingerless', 'cuff', 'flap']"}
{"cat":"clothes","slot":"specialization","value":"flannel","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of flannel in terms of their hyponyms.\";         A textual example of the semantic relation is \"are flannel\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['shirt', 'jacket', 'pajamas', 'pants', 'skirt', 'dress', 'socks', 'hat', 'scarf', 'gloves']"}
{"cat":"clothes","slot":"specialization","value":"cords","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of cords in terms of their hyponyms.\";         A textual example of the semantic relation is \"are cords\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"trousers\", \"jeans\", \"shorts\", \"skirt\", \"dress\", \"shirt\", \"blouse\", \"sweater\", \"jacket\", \"coat\"]"}
{"cat":"clothes","slot":"specialization","value":"slouch hat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of slouch hat in terms of their hyponyms.\";         A textual example of the semantic relation is \"are slouch hat\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['slouch hat', 'floppy hat', 'wide-brimmed hat', 'panama hat', 'straw hat', 'fedora', 'trilby', 'derby', 'porkpie hat', 'homburg']"}
{"cat":"clothes","slot":"specialization","value":"muumuu","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of muumuu in terms of their hyponyms.\";         A textual example of the semantic relation is \"are muumuu\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"dress\", \"gown\", \"robe\", \"maxi\", \"caftan\", \"kimono\", \"tunic\", \"smock\", \"shift\", \"jumper\"]"}
{"cat":"clothes","slot":"specialization","value":"kurta","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of kurta in terms of their hyponyms.\";         A textual example of the semantic relation is \"are kurta\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"shirt\", \"blouse\", \"top\", \"tunic\", \"dress\", \"jacket\", \"coat\", \"vest\", \"sweater\", \"hoodie\"]"}
{"cat":"clothes","slot":"specialization","value":"kepi","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of kepi in terms of their hyponyms.\";         A textual example of the semantic relation is \"are kepi\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"hat\", \"cap\", \"military cap\", \"uniform accessory\", \"headgear\", \"covering\", \"protection\", \"style\", \"fashion\", \"apparel\"]"}
{"cat":"clothes","slot":"specialization","value":"dunce cap","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of dunce cap in terms of their hyponyms.\";         A textual example of the semantic relation is \"are dunce cap\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"dunce cap\", \"pointed hat\", \"conical hat\", \"fool's cap\", \"jester's hat\", \"silly hat\", \"fool's hat\", \"clown hat\", \"ridiculous hat\", \"stupid hat\"]"}
{"cat":"clothes","slot":"specialization","value":"tam-o'-shanter","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of tam-o'-shanter in terms of their hyponyms.\";         A textual example of the semantic relation is \"are tam-o'-shanter\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['tam', 'shanter', 'bonnet', 'cap', 'hat', 'topper', 'headgear', 'beret', 'beanie', 'fedora']"}
{"cat":"clothes","slot":"specialization","value":"garrison cap","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of garrison cap in terms of their hyponyms.\";         A textual example of the semantic relation is \"are garrison cap\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['cap', 'hat', 'headwear', 'military cap', 'army cap', 'navy cap', 'air force cap', 'marine cap', 'coast guard cap', 'uniform cap']"}
{"cat":"clothes","slot":"specialization","value":"sacque","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of sacque in terms of their hyponyms.\";         A textual example of the semantic relation is \"are sacque\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['shirt', 'blouse', 'tunic', 'smock', 'chemise', 'tank top', 'polo shirt', 'sweater', 'vest', 'jacket']"}
{"cat":"clothes","slot":"specialization","value":"Norfolk jacket","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of Norfolk jacket in terms of their hyponyms.\";         A textual example of the semantic relation is \"are Norfolk jacket\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['jacket', 'blazer', 'sports coat', 'coat', 'tweed jacket', 'hunting jacket', 'shooting jacket', 'country jacket', 'sport coat', 'sports jacket']"}
{"cat":"clothes","slot":"specialization","value":"wishing cap","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of wishing cap in terms of their hyponyms.\";         A textual example of the semantic relation is \"are wishing cap\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"hat\", \"cap\", \"beanie\", \"beret\", \"fedora\", \"top hat\", \"bowler hat\", \"panama hat\", \"cowboy hat\", \"baseball cap\"]"}
{"cat":"clothes","slot":"specialization","value":"peacoat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of peacoat in terms of their hyponyms.\";         A textual example of the semantic relation is \"are peacoat\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"navy\", \"double-breasted\", \"wool\", \"heavy\", \"black\", \"grey\", \"blue\", \"belted\", \"hooded\"]"}
{"cat":"clothes","slot":"specialization","value":"Stetson","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of Stetson in terms of their hyponyms.\";         A textual example of the semantic relation is \"are Stetson\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['hat', 'cowboy hat', 'western hat', 'felt hat', 'leather hat', 'straw hat', 'fedora', 'top hat', 'bowler hat', 'panama hat']"}
{"cat":"clothes","slot":"specialization","value":"deerstalker","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of deerstalker in terms of their hyponyms.\";         A textual example of the semantic relation is \"are deerstalker\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"coat\", \"jacket\", \"vest\", \"shirt\", \"pants\", \"skirt\", \"dress\", \"hat\", \"scarf\", \"gloves\"]"}
{"cat":"clothes","slot":"specialization","value":"shift","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of shift in terms of their hyponyms.\";         A textual example of the semantic relation is \"are shift\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"blouse\", \"dress\", \"shirt\", \"pants\", \"skirt\", \"jacket\", \"coat\", \"shorts\", \"t-shirt\", \"sweater\"]"}
{"cat":"clothes","slot":"specialization","value":"metal glove","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of metal glove in terms of their hyponyms.\";         A textual example of the semantic relation is \"are metal glove\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['gloves', 'leather gloves', 'latex gloves', 'rubber gloves', 'work gloves', 'welding gloves', 'gardening gloves', 'driving gloves', 'fishing gloves', 'cycling gloves']"}
{"cat":"clothes","slot":"specialization","value":"bomber jacket","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of bomber jacket in terms of their hyponyms.\";         A textual example of the semantic relation is \"are bomber jacket\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['bomber jacket', 'leather bomber jacket', 'shearling bomber jacket', 'nylon bomber jacket', 'cotton bomber jacket', 'quilted bomber jacket', 'satin bomber jacket', 'suede bomber jacket', 'wool bomber jacket', 'denim bomber jacket']"}
{"cat":"clothes","slot":"specialization","value":"silk hat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of silk hat in terms of their hyponyms.\";         A textual example of the semantic relation is \"are silk hat\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['top hat', 'bowler hat', 'fedora', 'trilby', 'pork pie hat', 'homburg', 'boater', 'beret', 'panama hat', 'newsboy cap']"}
{"cat":"clothes","slot":"specialization","value":"fur hat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of fur hat in terms of their hyponyms.\";         A textual example of the semantic relation is \"are fur hat\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"fur hat\", \"fur cap\", \"fur beret\", \"fur beanie\", \"fur fedora\", \"fur top hat\", \"fur bowler hat\", \"fur bonnet\", \"fur cloche\", \"fur trilby\"]"}
{"cat":"clothes","slot":"specialization","value":"T-shirt","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of T-shirt in terms of their hyponyms.\";         A textual example of the semantic relation is \"are T-shirt\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"v-neck\", \"long-sleeve\", \"short-sleeve\", \"crew-neck\", \"scoop-neck\", \"tank-top\", \"graphic\", \"polo\", \"henley\", \"hoodie\"]"}
{"cat":"clothes","slot":"specialization","value":"ski cap","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of ski cap in terms of their hyponyms.\";         A textual example of the semantic relation is \"are ski cap\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['ski cap', 'beanie', 'toque', 'bobble hat', 'trapper hat', 'balaclava', 'neck gaiter', 'ear flap hat', 'hood', 'helmet liner']"}
{"cat":"clothes","slot":"specialization","value":"mobcap","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of mobcap in terms of their hyponyms.\";         A textual example of the semantic relation is \"are mobcap\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['bonnet', 'cap', 'hat', 'headwear', 'hood', 'kerchief', 'scarf', 'turban', 'veil', 'wig']"}
{"cat":"clothes","slot":"specialization","value":"turban","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of turban in terms of their hyponyms.\";         A textual example of the semantic relation is \"are turban\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['Pagri', 'Dastar', 'Pheta', 'Safa', 'Pag', 'Pagadi', 'Pagri', 'Dastaar', 'Safa', 'Pagadi']"}
{"cat":"clothes","slot":"specialization","value":"dirndl","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of dirndl in terms of their hyponyms.\";         A textual example of the semantic relation is \"are dirndl\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['blouse', 'bodice', 'skirt', 'apron', 'shoes', 'socks', 'stockings', 'hat', 'scarf', 'gloves']"}
{"cat":"clothes","slot":"specialization","value":"tank top","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of tank top in terms of their hyponyms.\";         A textual example of the semantic relation is \"are tank top\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['sleeveless', 'tank', 'top', 'cami', 'spaghetti', 'straps', 'halter', 'racerback', 'cropped', 'bodysuit']"}
{"cat":"clothes","slot":"specialization","value":"bolero","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of bolero in terms of their hyponyms.\";         A textual example of the semantic relation is \"are bolero\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['jacket', 'coat', 'blazer', 'cardigan', 'sweater', 'vest', 'shrug', 'top', 'blouse', 'shirt']"}
{"cat":"clothes","slot":"specialization","value":"Mao jacket","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of Mao jacket in terms of their hyponyms.\";         A textual example of the semantic relation is \"are Mao jacket\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['Mao jacket', 'tunic', 'shirt', 'coat', 'blazer', 'suit', 'vest', 'sweater', 'hoodie', 'cardigan']"}
{"cat":"clothes","slot":"specialization","value":"lumber jacket","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of lumber jacket in terms of their hyponyms.\";         A textual example of the semantic relation is \"are lumber jacket\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['jacket', 'coat', 'vest', 'shirt', 'pants', 'jeans', 'boots', 'hat', 'gloves', 'scarf']"}
{"cat":"clothes","slot":"specialization","value":"fedora","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of fedora in terms of their hyponyms.\";         A textual example of the semantic relation is \"are fedora\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['fedora', 'hat', 'cap', 'bonnet', 'beret', 'beanie', 'bowler', 'top hat', 'panama hat', 'trilby']"}
{"cat":"clothes","slot":"specialization","value":"wimple","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of wimple in terms of their hyponyms.\";         A textual example of the semantic relation is \"are wimple\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['veil', 'headscarf', 'shawl', 'mantilla', 'kerchief', 'turban', 'snood', 'headpiece', 'hijab', 'chador']"}
{"cat":"clothes","slot":"specialization","value":"bobbysocks","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of bobbysocks in terms of their hyponyms.\";         A textual example of the semantic relation is \"are bobbysocks\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['ankle_socks', 'knee_socks', 'thigh_highs', 'tights', 'leggings', 'stockings', 'pantyhose', 'socks', 'footwear', 'legwear']"}
{"cat":"clothes","slot":"specialization","value":"full skirt","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of full skirt in terms of their hyponyms.\";         A textual example of the semantic relation is \"are full skirt\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['bell-shaped skirt', 'flared skirt', 'trumpet skirt', 'tulip skirt', 'circular skirt', 'hoop skirt', 'bubble skirt', 'gathered skirt', 'pleated skirt', 'ruffled skirt']"}
{"cat":"clothes","slot":"specialization","value":"cockscomb","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of cockscomb in terms of their hyponyms.\";         A textual example of the semantic relation is \"are cockscomb\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['shirt', 'pants', 'dress', 'skirt', 'jacket', 'shorts', 'blouse', 'sweater', 'socks', 'hat']"}
{"cat":"clothes","slot":"specialization","value":"liberty cap","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of liberty cap in terms of their hyponyms.\";         A textual example of the semantic relation is \"are liberty cap\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['liberty cap', 'cap', 'hat', 'headwear', 'clothing', 'apparel', 'garment', 'attire', 'costume', 'dress']"}
{"cat":"clothes","slot":"specialization","value":"sports coat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of sports coat in terms of their hyponyms.\";         A textual example of the semantic relation is \"are sports coat\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['blazer', 'sport coat', 'sports jacket', 'sports coat', 'casual jacket', 'tweed jacket', 'leather jacket', 'denim jacket', 'wool jacket', 'suede jacket']"}
{"cat":"clothes","slot":"specialization","value":"beret","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of beret in terms of their hyponyms.\";         A textual example of the semantic relation is \"are beret\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['wool beret', 'french beret', 'knit beret', 'leather beret', 'cashmere beret', 'cotton beret', 'felt beret', 'velvet beret', 'nylon beret', 'silk beret']"}
{"cat":"clothes","slot":"specialization","value":"morning coat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of morning coat in terms of their hyponyms.\";         A textual example of the semantic relation is \"are morning coat\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"lapel\", \"pocket\", \"button\", \"collar\", \"tail\", \"sleeve\", \"lining\", \"vest\", \"pants\", \"shirt\"]"}
{"cat":"clothes","slot":"specialization","value":"trilby","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of trilby in terms of their hyponyms.\";         A textual example of the semantic relation is \"are trilby\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['hat', 'fedora', 'cap', 'trilby', 'panama', 'boater', 'derby', 'bowler', 'top hat', 'beret']"}
{"cat":"clothes","slot":"specialization","value":"chemise","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of chemise in terms of their hyponyms.\";         A textual example of the semantic relation is \"are chemise\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['shirt', 'blouse', 'top', 'tunic', 'tank top', 'camisole', 'halter top', 't-shirt', 'sweater']"}
{"cat":"clothes","slot":"specialization","value":"blazer","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of blazer in terms of their hyponyms.\";         A textual example of the semantic relation is \"are blazer\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['sports jacket', 'suit jacket', 'single-breasted jacket', 'double-breasted jacket', 'casual blazer', 'dress blazer', 'navy blazer', 'black blazer', 'gray blazer', 'white blazer']"}
{"cat":"clothes","slot":"specialization","value":"shovel hat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of shovel hat in terms of their hyponyms.\";         A textual example of the semantic relation is \"are shovel hat\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['shovel hat', 'fedora', 'trilby', 'pork pie hat', 'bowler hat', 'derby', 'homburg', 'boater', 'panama hat', 'top hat']"}
{"cat":"clothes","slot":"specialization","value":"kalpac","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of kalpac in terms of their hyponyms.\";         A textual example of the semantic relation is \"are kalpac\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"fedora\", \"trilby\", \"pork pie\", \"borsalino\", \"homburg\", \"boater\", \"panama\", \"bowler\", \"derby\"]"}
{"cat":"clothes","slot":"specialization","value":"Mother Hubbard","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of Mother Hubbard in terms of their hyponyms.\";         A textual example of the semantic relation is \"are Mother Hubbard\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['dress', 'gown', 'robe', 'frock', 'smock', 'habit', 'tunic', 'cassock', 'kirtle', 'chemise']"}
{"cat":"clothes","slot":"specialization","value":"service cap","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of service cap in terms of their hyponyms.\";         A textual example of the semantic relation is \"are service cap\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['visor', 'band', 'button', 'crown', 'peak', 'chinstrap', 'bill', 'sweatband', 'vent', 'badge']"}
{"cat":"clothes","slot":"specialization","value":"muff","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of muff in terms of their hyponyms.\";         A textual example of the semantic relation is \"are muff\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['muffler', 'muff', 'hand warmer', 'hand muff', 'handwarmer', 'muffette', 'muffette', 'muffette', 'muffette']"}
{"cat":"clothes","slot":"specialization","value":"coatdress","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of coatdress in terms of their hyponyms.\";         A textual example of the semantic relation is \"are coatdress\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['blazer', 'trench coat', 'pea coat', 'duffle coat', 'wool coat', 'fur coat', 'leather coat', 'raincoat', 'parka', 'tweed coat']"}
{"cat":"clothes","slot":"specialization","value":"flat cap","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of flat cap in terms of their hyponyms.\";         A textual example of the semantic relation is \"are flat cap\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['newsboy cap', 'baker boy cap', 'gatsby cap', 'ivy cap', 'scally cap', 'duffer cap', 'cheese-cutter cap', 'driver cap', 'flat cap']"}
{"cat":"clothes","slot":"specialization","value":"baseball cap","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of baseball cap in terms of their hyponyms.\";         A textual example of the semantic relation is \"are baseball cap\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['visor', 'bill', 'brim', 'snapback', 'trucker', 'dad hat', 'snapback', 'curved', 'flat', 'adjustable']"}
{"cat":"clothes","slot":"specialization","value":"jeweled headdress","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of jeweled headdress in terms of their hyponyms.\";         A textual example of the semantic relation is \"are jeweled headdress\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"tiara\", \"diadem\", \"crown\", \"headband\", \"headpiece\", \"wreath\", \"coronet\", \"fillet\", \"circlet\", \"headgear\"]"}
{"cat":"clothes","slot":"specialization","value":"dress shirt","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of dress shirt in terms of their hyponyms.\";         A textual example of the semantic relation is \"are dress shirt\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['dress shirt', 'button-down', 'polo shirt', 'tuxedo shirt', 'wing collar', 'tab collar', 'spread collar', 'point collar', 'band collar', 'mandarin collar']"}
{"cat":"clothes","slot":"specialization","value":"parka","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of parka in terms of their hyponyms.\";         A textual example of the semantic relation is \"are parka\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['hood', 'zipper', 'pockets', 'insulation', 'shell', 'lining', 'cuffs', 'collar', 'drawstring', 'waist']"}
{"cat":"clothes","slot":"specialization","value":"dress hat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of dress hat in terms of their hyponyms.\";         A textual example of the semantic relation is \"are dress hat\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['top hat', 'bowler hat', 'fedora', 'trilby', 'pork pie hat', 'homburg', 'panama hat', 'boater', 'derby', 'borsalino']"}
{"cat":"clothes","slot":"specialization","value":"sombrero","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of sombrero in terms of their hyponyms.\";         A textual example of the semantic relation is \"are sombrero\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['hat', 'straw hat', 'mexican hat', 'cowboy hat', 'fedora', 'panama hat', 'top hat', 'bowler hat', 'beret', 'beanie']"}
{"cat":"clothes","slot":"specialization","value":"cocked hat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of cocked hat in terms of their hyponyms.\";         A textual example of the semantic relation is \"are cocked hat\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['tricorne', 'bicorne', 'napoleon hat', 'chapeau bras', 'bearskin', 'shako', 'busby', 'tarboosh', 'pith helmet', 'stovepipe hat']"}
{"cat":"clothes","slot":"specialization","value":"kaffiyeh","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of kaffiyeh in terms of their hyponyms.\";         A textual example of the semantic relation is \"are kaffiyeh\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['headscarf', 'turban', 'shemagh', 'ghutra', 'keffiyeh', 'hijab', 'chador', 'abaya', 'thobe', 'bisht']"}
{"cat":"clothes","slot":"specialization","value":"campaign hat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of campaign hat in terms of their hyponyms.\";         A textual example of the semantic relation is \"are campaign hat\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['cap', 'hat', 'headwear', 'military cap', 'field cap', 'service cap', 'campaign cap', 'uniform cap', 'army cap', 'navy cap']"}
{"cat":"clothes","slot":"specialization","value":"shell jacket","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of shell jacket in terms of their hyponyms.\";         A textual example of the semantic relation is \"are shell jacket\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['jacket', 'coat', 'blazer', 'parka', 'windbreaker', 'hoodie', 'cardigan', 'sweater', 'vest', 'shirt']"}
{"cat":"clothes","slot":"specialization","value":"boater","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of boater in terms of their hyponyms.\";         A textual example of the semantic relation is \"are boater\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['straw hat', 'boater', 'hat', 'headwear', 'accessory', 'fashion', 'clothing', 'apparel', 'garment', 'attire']"}
{"cat":"clothes","slot":"specialization","value":"argyll","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of argyll in terms of their hyponyms.\";         A textual example of the semantic relation is \"are argyll\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['shirt', 'sweater', 'pants', 'skirt', 'dress', 'jacket', 'coat', 'hat', 'gloves', 'scarf']"}
{"cat":"clothes","slot":"specialization","value":"grass skirt","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of grass skirt in terms of their hyponyms.\";         A textual example of the semantic relation is \"are grass skirt\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['grass skirt', 'sarong', 'wrap', 'tube skirt', 'mini skirt', 'maxi skirt', 'pencil skirt', 'skater skirt', 'trumpet skirt', 'mermaid skirt']"}
{"cat":"clothes","slot":"specialization","value":"cavalier hat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of cavalier hat in terms of their hyponyms.\";         A textual example of the semantic relation is \"are cavalier hat\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['hat', 'cavalier', 'felt', 'brim', 'band', 'feather', 'plume', 'crown', 'headwear', 'clothing']"}
{"cat":"clothes","slot":"specialization","value":"batting glove","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of batting glove in terms of their hyponyms.\";         A textual example of the semantic relation is \"are batting glove\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['batting glove', 'baseball glove', 'softball glove', 'glove', 'sports glove', 'hand protection', 'leather glove', 'padded glove', 'athletic glove', 'protective gear']"}
{"cat":"clothes","slot":"specialization","value":"domino","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of domino in terms of their hyponyms.\";         A textual example of the semantic relation is \"are domino\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['shirt', 'pants', 'dress', 'skirt', 'jacket', 'coat', 'hat', 'scarf', 'gloves', 'socks']"}
{"cat":"clothes","slot":"specialization","value":"bluebonnet","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of bluebonnet in terms of their hyponyms.\";         A textual example of the semantic relation is \"are bluebonnet\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['shirt', 'pants', 'dress', 'skirt', 'jacket', 'coat', 'sweater', 'hat', 'gloves', 'scarf']"}
{"cat":"clothes","slot":"specialization","value":"golf cap","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of golf cap in terms of their hyponyms.\";         A textual example of the semantic relation is \"are golf cap\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"visor\", \"brim\", \"bill\", \"crown\", \"sweatband\", \"button\", \"fabric\", \"mesh\", \"stitching\", \"logo\"]"}
{"cat":"clothes","slot":"specialization","value":"tabi","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of tabi in terms of their hyponyms.\";         A textual example of the semantic relation is \"are tabi\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"socks\", \"stockings\", \"leggings\", \"pantyhose\", \"tights\", \"anklets\", \"footlets\", \"toe socks\", \"tabi boots\", \"tabi shoes\"]"}
{"cat":"clothes","slot":"specialization","value":"pinafore","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of pinafore in terms of their hyponyms.\";         A textual example of the semantic relation is \"are pinafore\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['dress', 'skirt', 'top', 'blouse', 'shirt', 'pants', 'shorts', 'jumper', 'romper', 'smock']"}
{"cat":"clothes","slot":"specialization","value":"daishiki","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of daishiki in terms of their hyponyms.\";         A textual example of the semantic relation is \"are daishiki\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['shirt', 'jacket', 'pants', 'skirt', 'dress', 'tie', 'belt', 'hat', 'shoes', 'socks']"}
{"cat":"clothes","slot":"specialization","value":"bed jacket","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of bed jacket in terms of their hyponyms.\";         A textual example of the semantic relation is \"are bed jacket\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['nightgown', 'pajamas', 'robe', 'sweater', 'blanket', 'comforter', 'duvet', 'quilt', 'sleepwear', 'wrap']"}
{"cat":"clothes","slot":"specialization","value":"high hat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of high hat in terms of their hyponyms.\";         A textual example of the semantic relation is \"are high hat\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"top hat\", \"bowler hat\", \"fedora\", \"cowboy hat\", \"beret\", \"pork pie hat\", \"straw hat\", \"beanie\", \"newsboy cap\", \"baseball cap\"]"}
{"cat":"clothes","slot":"specialization","value":"dressing sacque","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of dressing sacque in terms of their hyponyms.\";         A textual example of the semantic relation is \"are dressing sacque\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['blouse', 'shirt', 'jacket', 'coat', 'sweater', 'dress', 'skirt', 'pants', 'shorts', 'vest']"}
{"cat":"clothes","slot":"specialization","value":"swallowtail","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of swallowtail in terms of their hyponyms.\";         A textual example of the semantic relation is \"are swallowtail\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['shirt', 'pants', 'dress', 'skirt', 'jacket', 'coat', 'hat', 'scarf', 'gloves', 'shoes']"}
{"cat":"clothes","slot":"specialization","value":"tam","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of tam in terms of their hyponyms.\";         A textual example of the semantic relation is \"are tam\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['shirt', 'pants', 'dress', 'skirt', 'jacket', 'coat', 'hat', 'scarf', 'gloves', 'socks']"}
{"cat":"clothes","slot":"specialization","value":"skimmer","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of skimmer in terms of their hyponyms.\";         A textual example of the semantic relation is \"are skimmer\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"t-shirt\", \"blouse\", \"shirt\", \"jacket\", \"vest\", \"sweater\", \"hoodie\", \"dress\", \"shorts\", \"pants\"]"}
{"cat":"clothes","slot":"specialization","value":"calpac","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of calpac in terms of their hyponyms.\";         A textual example of the semantic relation is \"are calpac\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['hood', 'cap', 'hat', 'beanie', 'toque', 'beret', 'stocking cap', 'watch cap', 'tuque', 'skullcap']"}
{"cat":"clothes","slot":"specialization","value":"tammy","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of tammy in terms of their hyponyms.\";         A textual example of the semantic relation is \"are tammy\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['shirt', 'pants', 'dress', 'skirt', 'jacket', 'coat', 'shorts', 'blouse', 'sweater', 'hat']"}
{"cat":"clothes","slot":"specialization","value":"snap-brim hat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of snap-brim hat in terms of their hyponyms.\";         A textual example of the semantic relation is \"are snap-brim hat\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"fedora\", \"trilby\", \"pork pie\", \"boater\", \"newsboy\", \"flat cap\", \"ivy cap\", \"baker boy\", \"snap-brim hat\"]"}
{"cat":"clothes","slot":"specialization","value":"woman's hat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of woman's hat in terms of their hyponyms.\";         A textual example of the semantic relation is \"are woman's hat\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['fascinator', 'beret', 'fedora', 'cloche', 'pillbox', 'panama', 'trilby', 'cowboy hat', 'derby', 'top hat']"}
{"cat":"clothes","slot":"specialization","value":"calpack","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of calpack in terms of their hyponyms.\";         A textual example of the semantic relation is \"are calpack\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['shirt', 'pants', 'jacket', 'dress', 'skirt', 'shorts', 'sweater', 'coat', 'hat', 'scarf']"}
{"cat":"clothes","slot":"specialization","value":"nightcap","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of nightcap in terms of their hyponyms.\";         A textual example of the semantic relation is \"are nightcap\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['nightcap', 'sleeping cap', 'night bonnet', 'bedcap', 'night hat', 'sleep cap', 'night headgear', 'sleeping hat', 'night headwear', 'sleep bonnet']"}
{"cat":"clothes","slot":"specialization","value":"dolman jacket","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of dolman jacket in terms of their hyponyms.\";         A textual example of the semantic relation is \"are dolman jacket\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['dolman', 'jacket', 'sleeve', 'collar', 'lapel', 'pocket', 'button', 'zipper', 'fabric', 'thread']"}
{"cat":"clothes","slot":"specialization","value":"helmet","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of helmet in terms of their hyponyms.\";         A textual example of the semantic relation is \"are helmet\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['visor', 'chinstrap', 'crown', 'brim', 'vent', 'strap', 'buckle', 'padding', 'shell', 'liner']"}
{"cat":"clothes","slot":"specialization","value":"balaclava helmet","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of balaclava helmet in terms of their hyponyms.\";         A textual example of the semantic relation is \"are balaclava helmet\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['hood', 'mask', 'cap', 'neckwarmer', 'headgear', 'scarf', 'face covering', 'ski mask', 'headband', 'beanie']"}
{"cat":"clothes","slot":"specialization","value":"mitre","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of mitre in terms of their hyponyms.\";         A textual example of the semantic relation is \"are mitre\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['hat', 'cap', 'helmet', 'beanie', 'beret', 'top hat', 'bowler hat', 'fedora', 'pillbox hat', 'bonnet']"}
{"cat":"clothes","slot":"specialization","value":"jewelled headdress","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of jewelled headdress in terms of their hyponyms.\";         A textual example of the semantic relation is \"are jewelled headdress\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['tiara', 'crown', 'diadem', 'coronet', 'fillet', 'circlet', 'wreath', 'headband', 'headpiece', 'coif']"}
{"cat":"clothes","slot":"specialization","value":"kilt","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of kilt in terms of their hyponyms.\";         A textual example of the semantic relation is \"are kilt\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"plaid\", \"tartan\", \"pleated\", \"wool\", \"cotton\", \"leather\", \"velvet\", \"silk\", \"linen\", \"denim\"]"}
{"cat":"clothes","slot":"specialization","value":"cocktail dress","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of cocktail dress in terms of their hyponyms.\";         A textual example of the semantic relation is \"are cocktail dress\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['mini', 'knee-length', 'midi', 'maxi', 'strapless', 'halter', 'sleeveless', 'cap-sleeve', 'off-shoulder', 'one-shoulder']"}
{"cat":"clothes","slot":"specialization","value":"sou'wester","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of sou'wester in terms of their hyponyms.\";         A textual example of the semantic relation is \"are sou'wester\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['raincoat', 'hood', 'brim', 'waterproof', 'fabric', 'material', 'storm', 'weather', 'protection']"}
{"cat":"clothes","slot":"specialization","value":"biggin","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of biggin in terms of their hyponyms.\";         A textual example of the semantic relation is \"are biggin\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['shirt', 'pants', 'jacket', 'dress', 'skirt', 'shorts', 'sweater', 'hat', 'shoes', 'socks']"}
{"cat":"clothes","slot":"specialization","value":"titfer","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of titfer in terms of their hyponyms.\";         A textual example of the semantic relation is \"are titfer\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"hat\", \"cap\", \"beanie\", \"beret\", \"fedora\", \"bowler\", \"top hat\", \"panama hat\", \"pork pie hat\", \"derby\"]"}
{"cat":"clothes","slot":"specialization","value":"swallow-tailed coat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of swallow-tailed coat in terms of their hyponyms.\";         A textual example of the semantic relation is \"are swallow-tailed coat\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['swallow-tailed coat', 'tailcoat', 'dress coat', 'frock coat', 'morning coat', 'evening coat', 'white tie', 'black tie', 'tuxedo', 'smoking jacket']"}
{"cat":"clothes","slot":"specialization","value":"half mask","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of half mask in terms of their hyponyms.\";         A textual example of the semantic relation is \"are half mask\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['hoodie', 'sweater', 'jacket', 'vest', 'shirt', 't-shirt', 'pants', 'shorts', 'skirt', 'dress']"}
{"cat":"clothes","slot":"specialization","value":"false face","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of false face in terms of their hyponyms.\";         A textual example of the semantic relation is \"are false face\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['mask', 'disguise', 'make-believe', 'deception', 'pretense', 'camouflage', 'costume', 'fantasy', 'illusion', 'imposture']"}
{"cat":"clothes","slot":"specialization","value":"berretta","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of berretta in terms of their hyponyms.\";         A textual example of the semantic relation is \"are berretta\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"hat\", \"cap\", \"beret\", \"fedora\", \"trilby\", \"pork pie hat\", \"newsboy cap\", \"flat cap\", \"snapback\", \"beanie\"]"}
{"cat":"clothes","slot":"specialization","value":"coonskin cap","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of coonskin cap in terms of their hyponyms.\";         A textual example of the semantic relation is \"are coonskin cap\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['coonskin cap', 'fur cap', 'hat', 'headwear', 'accessory', 'winter wear', 'historical clothing', 'frontier fashion', 'trapper hat']"}
{"cat":"clothes","slot":"specialization","value":"sports jacket","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of sports jacket in terms of their hyponyms.\";         A textual example of the semantic relation is \"are sports jacket\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['blazer', 'sports coat', 'casual jacket', 'leather jacket', 'denim jacket', 'bomber jacket', 'tweed jacket', 'trench coat', 'hoodie', 'windbreaker']"}
{"cat":"clothes","slot":"specialization","value":"pinny","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of pinny in terms of their hyponyms.\";         A textual example of the semantic relation is \"are pinny\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['apron', 'smock', 'tabard', 'pinafore', 'jumper', 'dress', 'shirt', 'skirt', 'trousers', 'jacket']"}
{"cat":"clothes","slot":"specialization","value":"yachting cap","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of yachting cap in terms of their hyponyms.\";         A textual example of the semantic relation is \"are yachting cap\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['yachting cap', 'sailor cap', 'captain hat', 'boater hat', 'flat cap', 'newsboy cap', 'ivy cap', 'duckbill cap', 'pork pie hat', 'fiddler cap']"}
{"cat":"clothes","slot":"specialization","value":"miniskirt","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of miniskirt in terms of their hyponyms.\";         A textual example of the semantic relation is \"are miniskirt\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['miniskirt', 'short skirt', 'micro-mini', 'denim miniskirt', 'leather miniskirt', 'lace miniskirt', 'pleated miniskirt', 'printed miniskirt', 'ruffled miniskirt', 'tiered miniskirt']"}
{"cat":"clothes","slot":"specialization","value":"sailor","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of sailor in terms of their hyponyms.\";         A textual example of the semantic relation is \"are sailor\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"uniform\", \"cap\", \"shirt\", \"pants\", \"shoes\", \"socks\", \"belt\", \"jacket\", \"gloves\", \"hat\"]"}
{"cat":"clothes","slot":"specialization","value":"toboggan cap","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of toboggan cap in terms of their hyponyms.\";         A textual example of the semantic relation is \"are toboggan cap\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['hat', 'beanie', 'toque', 'ski cap', 'winter hat', 'knit cap', 'headwear', 'earflap hat', 'balaclava', 'stocking cap']"}
{"cat":"clothes","slot":"specialization","value":"stocking cap","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of stocking cap in terms of their hyponyms.\";         A textual example of the semantic relation is \"are stocking cap\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['knit cap', 'wool cap', 'beanie', 'skullcap', 'watch cap', 'toboggan', 'ski cap', 'bobble hat', 'trapper hat', 'balaclava']"}
{"cat":"clothes","slot":"specialization","value":"hug-me-tight","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of hug-me-tight in terms of their hyponyms.\";         A textual example of the semantic relation is \"are hug-me-tight\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['sweater', 'hoodie', 'jacket', 'vest', 'cardigan', 'coat', 'blazer', 'jumper', 'shirt', 'turtleneck']"}
{"cat":"clothes","slot":"specialization","value":"gown","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of gown in terms of their hyponyms.\";         A textual example of the semantic relation is \"are gown\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"prom dress\", \"wedding dress\", \"evening gown\", \"ball gown\", \"cocktail dress\", \"mermaid dress\", \"maxi dress\", \"little black dress\", \"tea-length dress\", \"formal gown\"]"}
{"cat":"clothes","slot":"specialization","value":"crinoline","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of crinoline in terms of their hyponyms.\";         A textual example of the semantic relation is \"are crinoline\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['petticoat', 'hoop skirt', 'cage crinoline', 'full crinoline', 'half crinoline', 'underskirt', 'linen crinoline', 'steel crinoline', 'wire crinoline', 'nylon crinoline']"}
{"cat":"clothes","slot":"specialization","value":"tutu","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of tutu in terms of their hyponyms.\";         A textual example of the semantic relation is \"are tutu\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['ballet skirt', 'frilly skirt', 'tulle skirt', 'puffy skirt', 'ballerina skirt', 'dancer skirt', 'fancy skirt', 'costume skirt', 'performance skirt', 'stage skirt']"}
{"cat":"clothes","slot":"specialization","value":"skullcap","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of skullcap in terms of their hyponyms.\";         A textual example of the semantic relation is \"are skullcap\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['knit cap', 'beanie', 'toque', 'stocking cap', 'watch cap', 'wool cap', 'beret', 'skullcap', 'hat']"}
{"cat":"clothes","slot":"specialization","value":"shako","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of shako in terms of their hyponyms.\";         A textual example of the semantic relation is \"are shako\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['hat', 'cap', 'helmet', 'headgear', 'beret', 'top hat', 'bowler hat', 'fedora', 'cowboy hat', 'beanie']"}
{"cat":"clothes","slot":"specialization","value":"Eton jacket","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of Eton jacket in terms of their hyponyms.\";         A textual example of the semantic relation is \"are Eton jacket\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"jacket\", \"blazer\", \"suit\", \"tuxedo\", \"vest\", \"waistcoat\", \"coat\", \"sports coat\", \"dress coat\", \"topcoat\"]"}
{"cat":"clothes","slot":"specialization","value":"polo shirt","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of polo shirt in terms of their hyponyms.\";         A textual example of the semantic relation is \"are polo shirt\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"polo shirt\", \"collared shirt\", \"knitted shirt\", \"cotton shirt\", \"short-sleeved shirt\", \"long-sleeved shirt\", \"striped shirt\", \"solid-colored shirt\", \"button-down shirt\", \"casual shirt\"]"}
{"cat":"clothes","slot":"specialization","value":"tirolean","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of tirolean in terms of their hyponyms.\";         A textual example of the semantic relation is \"are tirolean\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['shirt', 'pants', 'jacket', 'dress', 'skirt', 'shorts', 'sweater', 'coat', 'hat', 'scarf']"}
{"cat":"clothes","slot":"specialization","value":"top hat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of top hat in terms of their hyponyms.\";         A textual example of the semantic relation is \"are top hat\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['top hat', 'bowler hat', 'fedora', 'pork pie hat', 'homburg', 'trilby', 'boater', 'panama hat', 'straw hat', 'derby hat']"}
{"cat":"clothes","slot":"specialization","value":"stovepipe","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of stovepipe in terms of their hyponyms.\";         A textual example of the semantic relation is \"are stovepipe\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['pants', 'trousers', 'jeans', 'shorts', 'skirt', 'dress', 'shirt', 'blouse', 'sweater', 'coat']"}
{"cat":"clothes","slot":"specialization","value":"fez","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of fez in terms of their hyponyms.\";         A textual example of the semantic relation is \"are fez\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['hat', 'cap', 'turban', 'beret', 'fedora', 'bowler', 'top hat', 'trilby', 'panama', 'sombrero']"}
{"cat":"clothes","slot":"specialization","value":"hood","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of hood in terms of their hyponyms.\";         A textual example of the semantic relation is \"are hood\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"hoodie\", \"jacket\", \"sweatshirt\", \"coat\", \"parka\", \"windbreaker\", \"anorak\", \"hooded sweatshirt\", \"hooded jacket\", \"hooded coat\"]"}
{"cat":"clothes","slot":"specialization","value":"kaftan","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of kaftan in terms of their hyponyms.\";         A textual example of the semantic relation is \"are kaftan\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"robe\", \"dress\", \"gown\", \"tunic\", \"coat\", \"jacket\", \"shirt\", \"blouse\", \"vest\", \"pants\"]"}
{"cat":"clothes","slot":"specialization","value":"sailor cap","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of sailor cap in terms of their hyponyms.\";         A textual example of the semantic relation is \"are sailor cap\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['sailor cap', 'hat', 'cap', 'headwear', 'clothing', 'apparel', 'accessory', 'fashion', 'style', 'wardrobe']"}
{"cat":"clothes","slot":"specialization","value":"bush jacket","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of bush jacket in terms of their hyponyms.\";         A textual example of the semantic relation is \"are bush jacket\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['shirt', 'pants', 'shorts', 'skirt', 'dress', 'sweater', 'coat', 'jacket', 'blazer', 'vest']"}
{"cat":"clothes","slot":"specialization","value":"double-breasted jacket","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of double-breasted jacket in terms of their hyponyms.\";         A textual example of the semantic relation is \"are double-breasted jacket\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"blazer\", \"sport coat\", \"suit jacket\", \"tuxedo jacket\", \"overcoat\", \"topcoat\", \"car coat\", \"reversible jacket\", \"trench coat\"]"}
{"cat":"clothes","slot":"specialization","value":"camise","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of camise in terms of their hyponyms.\";         A textual example of the semantic relation is \"are camise\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['shirt', 'blouse', 'top', 'tunic', 'dress', 'vest', 'tank top', 'tee', 'turtleneck', 'sweater']"}
{"cat":"clothes","slot":"specialization","value":"sunhat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of sunhat in terms of their hyponyms.\";         A textual example of the semantic relation is \"are sunhat\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['straw hat', 'fedora', 'panama hat', 'cowboy hat', 'beret', 'bowler hat', 'top hat', 'pork pie hat', 'newsboy cap', 'flat cap']"}
{"cat":"clothes","slot":"specialization","value":"jersey","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of jersey in terms of their hyponyms.\";         A textual example of the semantic relation is \"are jersey\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['sweater', 'pullover', 't-shirt', 'hoodie', 'jersey', 'blouse', 'shirt', 'vest', 'jacket', 'cardigan']"}
{"cat":"clothes","slot":"specialization","value":"topper","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of topper in terms of their hyponyms.\";         A textual example of the semantic relation is \"are topper\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"coat\", \"jacket\", \"blazer\", \"parka\", \"overcoat\", \"trench coat\", \"hoodie\", \"sweater\", \"windbreaker\", \"cardigan\"]"}
{"cat":"clothes","slot":"specialization","value":"maxi","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of maxi in terms of their hyponyms.\";         A textual example of the semantic relation is \"are maxi\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"dress\", \"skirt\", \"top\", \"shirt\", \"blouse\", \"tunic\", \"jumpsuit\", \"romper\", \"kimono\", \"gown\"]"}
{"cat":"clothes","slot":"specialization","value":"poke bonnet","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of poke bonnet in terms of their hyponyms.\";         A textual example of the semantic relation is \"are poke bonnet\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"bonnet\", \"hat\", \"headwear\", \"accessory\", \"clothing\", \"fashion\", \"style\", \"vintage\", \"historical\", \"costume\"]"}
{"cat":"clothes","slot":"specialization","value":"bathing cap","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of bathing cap in terms of their hyponyms.\";         A textual example of the semantic relation is \"are bathing cap\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['swim cap', 'bathing cap', 'swimming cap', 'bath cap', 'waterproof cap', 'diving cap', 'wet cap', 'pool cap', 'wet suit', 'diving suit']"}
{"cat":"clothes","slot":"specialization","value":"work-shirt","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of work-shirt in terms of their hyponyms.\";         A textual example of the semantic relation is \"are work-shirt\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['button-down', 'collared', 'long-sleeve', 'short-sleeve', 'flannel', 'denim', 'cotton', 'polyester', 'wool', 'linen']"}
{"cat":"clothes","slot":"specialization","value":"homburg","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of homburg in terms of their hyponyms.\";         A textual example of the semantic relation is \"are homburg\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['bowler', 'derby', 'fedora', 'pork pie', 'trilby', 'boater', 'panama', 'straw hat', 'top hat', 'stetson']"}
{"cat":"clothes","slot":"specialization","value":"argyle","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of argyle in terms of their hyponyms.\";         A textual example of the semantic relation is \"are argyle\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['sweater', 'vest', 'socks', 'shirt', 'scarf', 'pants', 'jacket', 'hat', 'dress', 'blouse']"}
{"cat":"clothes","slot":"specialization","value":"sundress","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of sundress in terms of their hyponyms.\";         A textual example of the semantic relation is \"are sundress\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"sundress\", \"maxi dress\", \"mini dress\", \"midi dress\", \"shift dress\", \"wrap dress\", \"strapless dress\", \"halter dress\", \"sleeveless dress\", \"spaghetti strap dress\"]"}
{"cat":"clothes","slot":"specialization","value":"opera hat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of opera hat in terms of their hyponyms.\";         A textual example of the semantic relation is \"are opera hat\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['top hat', 'bowler hat', 'fedora', 'trilby', 'pork pie hat', 'homburg', 'panama hat', 'boater', 'derby hat', 'straw hat']"}
{"cat":"clothes","slot":"specialization","value":"eye mask","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of eye mask in terms of their hyponyms.\";         A textual example of the semantic relation is \"are eye mask\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['eye mask', 'sleep mask', 'face mask', 'eye cover', 'sleep mask', 'eye patch', 'sleep mask', 'eye shield', 'sleep mask', 'eye band']"}
{"cat":"clothes","slot":"specialization","value":"beaver","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of beaver in terms of their hyponyms.\";         A textual example of the semantic relation is \"are beaver\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['shirt', 'pants', 'dress', 'jacket', 'skirt', 'shorts', 'sweater', 'hat', 'shoes', 'socks']"}
{"cat":"clothes","slot":"specialization","value":"golf glove","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of golf glove in terms of their hyponyms.\";         A textual example of the semantic relation is \"are golf glove\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['golf glove', 'leather glove', 'synthetic glove', 'knit glove', 'winter glove', 'summer glove', 'driving glove', 'practice glove', 'left-handed glove', 'right-handed glove']"}
{"cat":"clothes","slot":"specialization","value":"kalansuwa","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of kalansuwa in terms of their hyponyms.\";         A textual example of the semantic relation is \"are kalansuwa\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['shirt', 'pants', 'jacket', 'dress', 'skirt', 'shorts', 'sweater', 'socks', 'hat', 'gloves']"}
{"cat":"clothes","slot":"specialization","value":"cap","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of cap in terms of their hyponyms.\";         A textual example of the semantic relation is \"are cap\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['baseball cap', 'snapback', 'trucker cap', 'fitted cap', 'dad cap', 'bucket hat', 'beanie', 'beret', 'fedora', 'top hat']"}
{"cat":"clothes","slot":"specialization","value":"kid glove","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of kid glove in terms of their hyponyms.\";         A textual example of the semantic relation is \"are kid glove\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['kid glove', 'leather glove', 'lace glove', 'knit glove', 'cashmere glove', 'wool glove', 'silk glove', 'cotton glove', 'nylon glove', 'polyester glove']"}
{"cat":"clothes","slot":"specialization","value":"monkey jacket","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of monkey jacket in terms of their hyponyms.\";         A textual example of the semantic relation is \"are monkey jacket\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['hoodie', 'windbreaker', 'parka', 'bomber jacket', 'leather jacket', 'denim jacket', 'trench coat', 'pea coat', 'blazer', 'cardigan']"}
{"cat":"clothes","slot":"specialization","value":"pinner","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of pinner in terms of their hyponyms.\";         A textual example of the semantic relation is \"are pinner\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['shirt', 'pants', 'dress', 'skirt', 'jacket', 'coat', 'hat', 'shoes', 'socks', 'underwear']"}
{"cat":"clothes","slot":"specialization","value":"mess jacket","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of mess jacket in terms of their hyponyms.\";         A textual example of the semantic relation is \"are mess jacket\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['tuxedo', 'dinner jacket', 'black tie', 'formal wear', 'evening dress', 'white tie', 'black tie optional', 'crew neck', 'lapel', 'cummerbund']"}
{"cat":"clothes","slot":"specialization","value":"jockey cap","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of jockey cap in terms of their hyponyms.\";         A textual example of the semantic relation is \"are jockey cap\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['jockey cap', 'cap', 'hat', 'headwear', 'clothing', 'apparel', 'accessory', 'fashion', 'style', 'wardrobe']"}
{"cat":"clothes","slot":"specialization","value":"sweat sock","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of sweat sock in terms of their hyponyms.\";         A textual example of the semantic relation is \"are sweat sock\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['ankle socks', 'athletic socks', 'boot socks', 'calf socks', 'crew socks', 'knee socks', 'no-show socks', 'over-the-calf socks', 'tube socks', 'wrist socks']"}
{"cat":"clothes","slot":"specialization","value":"banian","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of banian in terms of their hyponyms.\";         A textual example of the semantic relation is \"are banian\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['t-shirt', 'sweater', 'hoodie', 'polo shirt', 'blouse', 'dress', 'skirt', 'pants', 'shorts', 'jeans']"}
{"cat":"clothes","slot":"specialization","value":"hair shirt","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of hair shirt in terms of their hyponyms.\";         A textual example of the semantic relation is \"are hair shirt\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"hair shirt\", \"linen shirt\", \"cotton shirt\", \"wool shirt\", \"leather shirt\", \"denim shirt\", \"flannel shirt\", \"silk shirt\", \"polyester shirt\", \"rayon shirt\"]"}
{"cat":"clothes","slot":"specialization","value":"busby","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of busby in terms of their hyponyms.\";         A textual example of the semantic relation is \"are busby\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['coat', 'cape', 'jacket', 'vest', 'shirt', 'pants', 'skirt', 'dress', 'shorts', 'suit']"}
{"cat":"clothes","slot":"specialization","value":"hobble skirt","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of hobble skirt in terms of their hyponyms.\";         A textual example of the semantic relation is \"are hobble skirt\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"hobble skirt\", \"skirt\", \"dress\", \"pant\", \"shirt\", \"blouse\", \"jacket\", \"coat\", \"sweater\", \"cardigan\"]"}
{"cat":"clothes","slot":"specialization","value":"pea jacket","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of pea jacket in terms of their hyponyms.\";         A textual example of the semantic relation is \"are pea jacket\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"jacket\", \"coat\", \"blazer\", \"sweater\", \"hoodie\", \"vest\", \"cardigan\", \"windbreaker\", \"parka\", \"overcoat\"]"}
{"cat":"clothes","slot":"specialization","value":"leghorn","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of leghorn in terms of their hyponyms.\";         A textual example of the semantic relation is \"are leghorn\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['shirt', 'pants', 'skirt', 'dress', 'jacket', 'coat', 'hat', 'scarf', 'gloves', 'socks']"}
{"cat":"clothes","slot":"specialization","value":"bobbysock","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of bobbysock in terms of their hyponyms.\";         A textual example of the semantic relation is \"are bobbysock\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['ankle sock', 'ankle-length sock', 'short sock', 'shortie', 'shorty', 'knee-high', 'knee sock', 'knee-length sock', 'calf-length sock', 'calf sock']"}
{"cat":"clothes","slot":"specialization","value":"sari","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of sari in terms of their hyponyms.\";         A textual example of the semantic relation is \"are sari\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"chiffon\", \"georgette\", \"crepe\", \"net\", \"silk\", \"cotton\", \"linen\", \"jacquard\", \"brocade\", \"embroidered\"]"}
{"cat":"clothes","slot":"specialization","value":"mini","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of mini in terms of their hyponyms.\";         A textual example of the semantic relation is \"are mini\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['blouse', 'dress', 'skirt', 'top', 'pants', 'shorts', 'jacket', 'coat', 'sweater', 'shirt']"}
{"cat":"clothes","slot":"specialization","value":"windcheater","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of windcheater in terms of their hyponyms.\";         A textual example of the semantic relation is \"are windcheater\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['windcheater', 'jacket', 'coat', 'hoodie', 'sweater', 'vest', 'blazer', 'cardigan', 'waistcoat', 'parka']"}
{"cat":"clothes","slot":"specialization","value":"hoopskirt","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of hoopskirt in terms of their hyponyms.\";         A textual example of the semantic relation is \"are hoopskirt\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['petticoat', 'skirt', 'crinoline', 'bustle', 'farthingale', 'panier', 'cage', 'hoop', 'corset', 'stays']"}
{"cat":"clothes","slot":"specialization","value":"peaked cap","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of peaked cap in terms of their hyponyms.\";         A textual example of the semantic relation is \"are peaked cap\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['visor', 'brim', 'crown', 'button', 'band', 'sweatband', 'vent', 'stitching', 'fabric', 'material']"}
{"cat":"clothes","slot":"specialization","value":"shower cap","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of shower cap in terms of their hyponyms.\";         A textual example of the semantic relation is \"are shower cap\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['cap', 'hat', 'headwear', 'hair protector', 'waterproof cover', 'bathing accessory', 'shower accessory', 'bath cap', 'swim cap', 'hair cap']"}
{"cat":"clothes","slot":"specialization","value":"doublet","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of doublet in terms of their hyponyms.\";         A textual example of the semantic relation is \"are doublet\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['shirt', 'pants', 'skirt', 'dress', 'jacket', 'coat', 'hat', 'gloves', 'scarf', 'socks']"}
{"cat":"clothes","slot":"specialization","value":"swimming cap","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of swimming cap in terms of their hyponyms.\";         A textual example of the semantic relation is \"are swimming cap\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['swimming cap', 'bathing cap', 'diving cap', 'waterproof cap', 'silicone cap', 'latex cap', 'neoprene cap', 'lycra cap', 'rubber cap', 'nylon cap']"}
{"cat":"clothes","slot":"specialization","value":"fool's cap","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of fool's cap in terms of their hyponyms.\";         A textual example of the semantic relation is \"are fool's cap\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"crown\", \"hat\", \"cap\", \"bonnet\", \"hood\", \"beret\", \"beanie\", \"top hat\", \"fedora\", \"bowler hat\"]"}
{"cat":"clothes","slot":"specialization","value":"birretta","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of birretta in terms of their hyponyms.\";         A textual example of the semantic relation is \"are birretta\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['cap', 'hat', 'bonnet', 'beret', 'skullcap', 'beanie', 'toque', 'stocking cap', 'fedora', 'bowler hat']"}
{"cat":"clothes","slot":"specialization","value":"bearskin","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of bearskin in terms of their hyponyms.\";         A textual example of the semantic relation is \"are bearskin\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"coat\", \"hat\", \"vest\", \"trousers\", \"shirt\", \"gloves\", \"boots\", \"scarf\", \"jacket\", \"hood\"]"}
{"cat":"clothes","slot":"specialization","value":"coonskin","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of coonskin in terms of their hyponyms.\";         A textual example of the semantic relation is \"are coonskin\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['coonskin cap', 'coonskin jacket', 'coonskin vest', 'coonskin pants', 'coonskin boots', 'coonskin gloves', 'coonskin scarf', 'coonskin hat', 'coonskin coat', 'coonskin suit']"}
{"cat":"clothes","slot":"specialization","value":"cowboy hat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of cowboy hat in terms of their hyponyms.\";         A textual example of the semantic relation is \"are cowboy hat\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['Straw cowboy hat', 'Felt cowboy hat', 'Leather cowboy hat', 'Wool cowboy hat', 'Brown cowboy hat', 'Black cowboy hat', 'White cowboy hat', 'Tan cowboy hat', 'Beige cowboy hat', 'Pink cowboy hat']"}
{"cat":"clothes","slot":"specialization","value":"millinery","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of millinery in terms of their hyponyms.\";         A textual example of the semantic relation is \"are millinery\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['hat', 'cap', 'beret', 'fascinator', 'headband', 'scarf', 'turban', 'beanie', 'bonnet', 'top hat']"}
{"cat":"clothes","slot":"specialization","value":"Glengarry","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of Glengarry in terms of their hyponyms.\";         A textual example of the semantic relation is \"are Glengarry\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['bonnet', 'cap', 'hat', 'toque', 'tuque', 'beret', 'beanie', 'tam', 'stocking cap']"}
{"cat":"clothes","slot":"specialization","value":"cloth cap","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of cloth cap in terms of their hyponyms.\";         A textual example of the semantic relation is \"are cloth cap\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['cap', 'hat', 'beanie', 'beret', 'fedora', 'newsboy cap', 'baseball cap', 'bucket hat', 'top hat']"}
{"cat":"clothes","slot":"specialization","value":"banyan","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of banyan in terms of their hyponyms.\";         A textual example of the semantic relation is \"are banyan\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['shirt', 'jacket', 'pants', 'shorts', 'dress', 'skirt', 'blouse', 'sweater', 'vest', 'coat']"}
{"cat":"clothes","slot":"specialization","value":"donkey jacket","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of donkey jacket in terms of their hyponyms.\";         A textual example of the semantic relation is \"are donkey jacket\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['donkey jacket', 'jacket', 'coat', 'outerwear', 'clothing', 'apparel', 'garment', 'vest', 'blazer', 'hoodie']"}
{"cat":"clothes","slot":"specialization","value":"strapless","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of strapless in terms of their hyponyms.\";         A textual example of the semantic relation is \"are strapless\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['dress', 'top', 'bra', 'bikini', 'swimsuit', 'corset', 'gown', 'camisole', 'halter', 'tube']"}
{"cat":"clothes","slot":"specialization","value":"watch cap","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of watch cap in terms of their hyponyms.\";         A textual example of the semantic relation is \"are watch cap\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['beanie', 'toboggan', 'skullcap', 'stocking cap', 'wool cap', 'knit cap', 'watch cap', 'ski cap', 'winter cap', 'hat']"}
{"cat":"clothes","slot":"specialization","value":"tabis","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of tabis in terms of their hyponyms.\";         A textual example of the semantic relation is \"are tabis\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['socks', 'sandals', 'shoes', 'boots', 'sneakers', 'loafers', 'moccasins', 'clogs', 'flats', 'heels']"}
{"cat":"clothes","slot":"specialization","value":"athletic sock","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of athletic sock in terms of their hyponyms.\";         A textual example of the semantic relation is \"are athletic sock\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['ankle sock', 'crew sock', 'knee sock', 'no-show sock', 'over-the-calf sock', 'quarter sock', 'tube sock', 'compression sock', 'hiking sock', 'soccer sock']"}
{"cat":"clothes","slot":"specialization","value":"lavalava","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of lavalava in terms of their hyponyms.\";         A textual example of the semantic relation is \"are lavalava\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['sarong', 'wrap', 'skirt', 'toga', 'loincloth', 'kilt', 'pareo', 'lavalava', 'lava-lava', 'malo']"}
{"cat":"clothes","slot":"specialization","value":"knee-high","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of knee-high in terms of their hyponyms.\";         A textual example of the semantic relation is \"are knee-high\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"socks\", \"stockings\", \"boots\", \"leggings\", \"pants\", \"shorts\", \"skirts\", \"dresses\", \"tights\", \"jeans\"]"}
{"cat":"clothes","slot":"specialization","value":"balaclava","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of balaclava in terms of their hyponyms.\";         A textual example of the semantic relation is \"are balaclava\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"hood\", \"mask\", \"helmet\", \"cap\", \"scarf\", \"gloves\", \"jacket\", \"pants\", \"boots\", \"goggles\"]"}
{"cat":"clothes","slot":"specialization","value":"morning dress","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of morning dress in terms of their hyponyms.\";         A textual example of the semantic relation is \"are morning dress\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['shirt', 'pants', 'jacket', 'tie', 'vest', 'suspenders', 'dress shoes', 'hat', 'gloves']"}
{"cat":"clothes","slot":"specialization","value":"lumberjack","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of lumberjack in terms of their hyponyms.\";         A textual example of the semantic relation is \"are lumberjack\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"flannel\", \"plaid\", \"denim\", \"boots\", \"jeans\", \"jacket\", \"suspenders\", \"cap\", \"workwear\", \"overalls\"]"}
{"cat":"clothes","slot":"specialization","value":"sheath","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of sheath in terms of their hyponyms.\";         A textual example of the semantic relation is \"are sheath\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"shirt\", \"skirt\", \"dress\", \"pants\", \"shorts\", \"jacket\", \"coat\", \"vest\", \"blouse\", \"sweater\"]"}
{"cat":"clothes","slot":"specialization","value":"saree","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of saree in terms of their hyponyms.\";         A textual example of the semantic relation is \"are saree\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['banarasi', 'kanchipuram', 'paithani', 'tant', 'gadwal', 'pochampally', 'chanderi', 'maheshwari', 'muga', 'baluchari']"}
{"cat":"clothes","slot":"specialization","value":"sport jacket","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of sport jacket in terms of their hyponyms.\";         A textual example of the semantic relation is \"are sport jacket\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['blazer', 'sport coat', 'casual jacket', 'leather jacket', 'windbreaker', 'letterman jacket', 'varsity jacket', 'track jacket', 'bomber jacket', 'trench coat']"}
{"cat":"clothes","slot":"specialization","value":"suede glove","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of suede glove in terms of their hyponyms.\";         A textual example of the semantic relation is \"are suede glove\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['suede', 'glove', 'leather', 'clothing', 'fashion', 'accessory', 'apparel', 'attire', 'dress', 'garment']"}
{"cat":"clothes","slot":"specialization","value":"sarong","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of sarong in terms of their hyponyms.\";         A textual example of the semantic relation is \"are sarong\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"sarong\", \"wrap-around skirt\", \"tube skirt\", \"pareo\", \"lavalava\", \"malong\", \"lungi\", \"kikoy\", \"sari\", \"batik\"]"}
{"cat":"clothes","slot":"specialization","value":"tarboosh","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of tarboosh in terms of their hyponyms.\";         A textual example of the semantic relation is \"are tarboosh\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['fez', 'turban', 'beret', 'top hat', 'bowler hat', 'pillbox hat', 'fedora', 'trilby', 'panama hat']"}
{"cat":"clothes","slot":"specialization","value":"tyrolean","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of tyrolean in terms of their hyponyms.\";         A textual example of the semantic relation is \"are tyrolean\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['jacket', 'pants', 'shirt', 'vest', 'hat', 'gloves', 'scarf', 'socks', 'boots', 'sweater']"}
{"cat":"clothes","slot":"specialization","value":"mortarboard","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of mortarboard in terms of their hyponyms.\";         A textual example of the semantic relation is \"are mortarboard\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['gown', 'cap', 'tassel', 'hood', 'stole', 'sash', 'vestment', 'robe', 'collar', 'lapel']"}
{"cat":"clothes","slot":"specialization","value":"anorak","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of anorak in terms of their hyponyms.\";         A textual example of the semantic relation is \"are anorak\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['hoodie', 'parka', 'windbreaker', 'jacket', 'coat', 'vest', 'sweater', 'cardigan', 'blazer', 'raincoat']"}
{"cat":"clothes","slot":"specialization","value":"sun hat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of sun hat in terms of their hyponyms.\";         A textual example of the semantic relation is \"are sun hat\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['floppy', 'bucket', 'fedora', 'panama', 'straw', 'beanie', 'beret', 'cap', 'visor', 'wide-brimmed']"}
{"cat":"clothes","slot":"specialization","value":"knee-hi","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of knee-hi in terms of their hyponyms.\";         A textual example of the semantic relation is \"are knee-hi\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['stockings', 'socks', 'leggings', 'tights', 'pantyhose', 'knee-highs', 'boots', 'sandals', 'sneakers', 'flats']"}
{"cat":"clothes","slot":"specialization","value":"toque","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of toque in terms of their hyponyms.\";         A textual example of the semantic relation is \"are toque\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['toque', 'beanie', 'stocking cap', 'knit cap', 'watch cap', 'wool cap', 'winter hat', 'ski hat', 'skullcap', 'tuque']"}
{"cat":"clothes","slot":"specialization","value":"single-breasted jacket","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of single-breasted jacket in terms of their hyponyms.\";         A textual example of the semantic relation is \"are single-breasted jacket\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['blazer', 'sport coat', 'suit jacket', 'dress jacket', 'tuxedo jacket', 'smoking jacket', 'car coat', 'trench coat', 'pea coat']"}
{"cat":"clothes","slot":"specialization","value":"caftan","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of caftan in terms of their hyponyms.\";         A textual example of the semantic relation is \"are caftan\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['robe', 'tunic', 'gown', 'dress', 'coat', 'jacket', 'vest', 'shirt', 'pants', 'skirt']"}
{"cat":"clothes","slot":"specialization","value":"Panama","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of Panama in terms of their hyponyms.\";         A textual example of the semantic relation is \"are Panama\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['shirt', 'jacket', 'pants', 'skirt', 'dress', 'shorts', 'hat', 'scarf', 'gloves', 'socks']"}
{"cat":"clothes","slot":"specialization","value":"ten-gallon hat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of ten-gallon hat in terms of their hyponyms.\";         A textual example of the semantic relation is \"are ten-gallon hat\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['cowboy hat', 'stetson', 'sombrero', 'fedora', 'trilby', 'panama hat', 'top hat', 'bowler hat', 'pork pie hat', 'beret']"}
{"cat":"clothes","slot":"specialization","value":"culotte","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of culotte in terms of their hyponyms.\";         A textual example of the semantic relation is \"are culotte\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['skirt', 'shorts', 'pants', 'dress', 'top', 'blouse', 'shirt', 'jacket', 'coat', 'vest']"}
{"cat":"clothes","slot":"specialization","value":"ballet skirt","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of ballet skirt in terms of their hyponyms.\";         A textual example of the semantic relation is \"are ballet skirt\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"tutu\", \"leotard\", \"ballet slippers\", \"tights\", \"pointe shoes\", \"ballet dress\", \"ballet tunic\", \"ballet jacket\", \"ballet shorts\", \"ballet leggings\"]"}
{"cat":"clothes","slot":"specialization","value":"straw hat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of straw hat in terms of their hyponyms.\";         A textual example of the semantic relation is \"are straw hat\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['straw hat', 'boater', 'fedora', 'panama hat', 'pork pie hat', 'trilby', 'cabbie hat', 'snap brim hat', 'outback hat', 'gambler hat']"}
{"cat":"clothes","slot":"specialization","value":"anklet","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of anklet in terms of their hyponyms.\";         A textual example of the semantic relation is \"are anklet\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['bracelet', 'bangle', 'ankle chain', 'ankle bracelet', 'foot jewelry', 'toe ring', 'leg chain', 'leg bracelet', 'leglet', 'leg band']"}
{"cat":"clothes","slot":"specialization","value":"dunce's cap","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of dunce's cap in terms of their hyponyms.\";         A textual example of the semantic relation is \"are dunce's cap\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['cap', 'hat', 'bonnet', 'hood', 'beanie', 'beret', 'top hat', 'bowler hat', 'fedora', 'pillbox hat']"}
{"cat":"clothes","slot":"specialization","value":"Panama hat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of Panama hat in terms of their hyponyms.\";         A textual example of the semantic relation is \"are Panama hat\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['straw hat', 'fedora', 'trilby', 'boater', 'porkpie', 'homburg', 'bowler', 'derby', 'top hat', 'cowboy hat']"}
{"cat":"clothes","slot":"specialization","value":"jerkin","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of jerkin in terms of their hyponyms.\";         A textual example of the semantic relation is \"are jerkin\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['leather jerkin', 'wool jerkin', 'cotton jerkin', 'suede jerkin', 'denim jerkin', 'silk jerkin', 'linen jerkin', 'velvet jerkin', 'nylon jerkin', 'polyester jerkin']"}
{"cat":"clothes","slot":"specialization","value":"overskirt","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of overskirt in terms of their hyponyms.\";         A textual example of the semantic relation is \"are overskirt\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"pannier\", \"bustle\", \"hoop\", \"farthingale\", \"crinoline\", \"cage\", \"cancan\", \"tournure\", \"polonaise\", \"panier\"]"}
{"cat":"clothes","slot":"specialization","value":"miter","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of miter in terms of their hyponyms.\";         A textual example of the semantic relation is \"are miter\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['shirt', 'pants', 'dress', 'skirt', 'jacket', 'coat', 'hat', 'gloves', 'scarf', 'socks']"}
{"cat":"clothes","slot":"specialization","value":"anklets","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of anklets in terms of their hyponyms.\";         A textual example of the semantic relation is \"are anklets\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['anklet', 'bracelet', 'bangle', 'cuff', 'chain', 'band', 'strap', 'string', 'ribbon', 'thread']"}
{"cat":"clothes","slot":"specialization","value":"shirtdress","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of shirtdress in terms of their hyponyms.\";         A textual example of the semantic relation is \"are shirtdress\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['button-down', 'tunic', 'pullover', 'halter', 'wrap', 'peasant', 'sleeveless', 'collared', 'ruffled', 'pleated']"}
{"cat":"clothes","slot":"specialization","value":"kirtle","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of kirtle in terms of their hyponyms.\";         A textual example of the semantic relation is \"are kirtle\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"tunic\", \"gown\", \"dress\", \"robe\", \"smock\", \"shift\", \"blouse\", \"skirt\", \"vest\", \"coat\"]"}
{"cat":"clothes","slot":"specialization","value":"topknot","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of topknot in terms of their hyponyms.\";         A textual example of the semantic relation is \"are topknot\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['shirt', 't-shirt', 'blouse', 'dress', 'skirt', 'pants', 'shorts', 'jacket', 'coat', 'sweater']"}
{"cat":"clothes","slot":"specialization","value":"polonaise","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of polonaise in terms of their hyponyms.\";         A textual example of the semantic relation is \"are polonaise\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['skirt', 'dress', 'gown', 'robe', 'blouse', 'jacket', 'coat', 'cape', 'vest', 'pants']"}
{"cat":"clothes","slot":"specialization","value":"sport shirt","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of sport shirt in terms of their hyponyms.\";         A textual example of the semantic relation is \"are sport shirt\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['soccer jersey', 'baseball jersey', 'basketball jersey', 'hockey jersey', 'golf shirt', 'tennis shirt', 'running shirt', 'cycling jersey', 'rugby jersey', 'football jersey']"}
{"cat":"clothes","slot":"specialization","value":"biretta","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of biretta in terms of their hyponyms.\";         A textual example of the semantic relation is \"are biretta\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['biretta', 'hat', 'cap', 'bonnet', 'beanie', 'beret', 'fedora', 'top hat', 'bowler hat', 'pillbox hat']"}
{"cat":"clothes","slot":"specialization","value":"bowler","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of bowler in terms of their hyponyms.\";         A textual example of the semantic relation is \"are bowler\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"bowler hat\", \"derby hat\", \"top hat\", \"fedora\", \"trilby\", \"pork pie hat\", \"boater\", \"panama hat\", \"cowboy hat\", \"beret\"]"}
{"cat":"clothes","slot":"specialization","value":"evening shirt","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of evening shirt in terms of their hyponyms.\";         A textual example of the semantic relation is \"are evening shirt\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"tuxedo\", \"dress shirt\", \"bow tie\", \"cufflinks\", \"suspenders\", \"vest\", \"cummerbund\", \"wingtip shoes\", \"dress pants\", \"pocket square\"]"}
{"cat":"clothes","slot":"specialization","value":"dressing sack","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of dressing sack in terms of their hyponyms.\";         A textual example of the semantic relation is \"are dressing sack\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['shirt', 'pants', 'skirt', 'dress', 'jacket', 'coat', 'hat', 'scarf', 'gloves', 'socks']"}
{"cat":"clothes","slot":"specialization","value":"tee shirt","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of tee shirt in terms of their hyponyms.\";         A textual example of the semantic relation is \"are tee shirt\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['T-shirt', 'sleeveless shirt', 'tank top', 'jersey', 'polo shirt', 'long-sleeve shirt', 'short-sleeve shirt', 'hoodie', 'sweatshirt', 'vest']"}
{"cat":"clothes","slot":"specialization","value":"windbreaker","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of windbreaker in terms of their hyponyms.\";         A textual example of the semantic relation is \"are windbreaker\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['jacket', 'coat', 'hoodie', 'sweater', 'vest', 'blazer', 'parka', 'raincoat', 'trench coat', 'windbreaker']"}
{"cat":"clothes","slot":"specialization","value":"gathered skirt","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of gathered skirt in terms of their hyponyms.\";         A textual example of the semantic relation is \"are gathered skirt\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['pleated skirt', 'ruffled skirt', 'tiered skirt', 'bubble skirt', 'tulle skirt', 'organza skirt', 'chiffon skirt', 'lace skirt', 'cotton skirt', 'silk skirt']"}
{"cat":"clothes","slot":"specialization","value":"coxcomb","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of coxcomb in terms of their hyponyms.\";         A textual example of the semantic relation is \"are coxcomb\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"hat\", \"cap\", \"beret\", \"top hat\", \"fedora\", \"bowler hat\", \"panama hat\", \"pork pie hat\", \"boater hat\", \"trilby\"]"}
{"cat":"clothes","slot":"specialization","value":"varsity sock","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of varsity sock in terms of their hyponyms.\";         A textual example of the semantic relation is \"are varsity sock\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"athletic sock\", \"sport sock\", \"knee-high sock\", \"ankle sock\", \"compression sock\", \"tube sock\", \"crew sock\", \"dress sock\", \"no-show sock\", \"tab sock\"]"}
{"cat":"clothes","slot":"specialization","value":"dolman","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of dolman in terms of their hyponyms.\";         A textual example of the semantic relation is \"are dolman\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['dolman', 'tunic', 'robe', 'vest', 'jacket', 'coat', 'shirt', 'blouse', 'dress', 'skirt']"}
{"cat":"clothes","slot":"specialization","value":"Balmoral","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of Balmoral in terms of their hyponyms.\";         A textual example of the semantic relation is \"are Balmoral\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"trousers\", \"pants\", \"jeans\", \"shorts\", \"skirts\", \"dresses\", \"shirts\", \"blouses\", \"jackets\", \"coats\"]"}
{"cat":"clothes","slot":"specialization","value":"dashiki","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of dashiki in terms of their hyponyms.\";         A textual example of the semantic relation is \"are dashiki\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"shirt\", \"pants\", \"dress\", \"skirt\", \"shorts\", \"jacket\", \"sweater\", \"hat\", \"shoes\", \"socks\"]"}
{"cat":"clothes","slot":"specialization","value":"bonnet","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of bonnet in terms of their hyponyms.\";         A textual example of the semantic relation is \"are bonnet\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['sunbonnet', 'nightcap', 'nightcap', 'nightcap', 'nightcap', 'nightcap', 'nightcap', 'nightcap', 'nightcap', 'nightcap']"}
{"cat":"clothes","slot":"specialization","value":"overseas cap","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of overseas cap in terms of their hyponyms.\";         A textual example of the semantic relation is \"are overseas cap\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['overseas cap', 'military cap', 'army cap', 'navy cap', 'air force cap', 'marine cap', 'coast guard cap', 'special forces cap', 'tactical cap', 'camouflage cap']"}
{"cat":"clothes","slot":"specialization","value":"felt hat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of felt hat in terms of their hyponyms.\";         A textual example of the semantic relation is \"are felt hat\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['fedora', 'trilby', 'homburg', 'pork pie', 'bowler', 'derby', 'newsboy', 'flat cap', 'beret', 'panama']"}
{"cat":"clothes","slot":"specialization","value":"sport coat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of sport coat in terms of their hyponyms.\";         A textual example of the semantic relation is \"are sport coat\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['blazer', 'sport coat', 'suit jacket', 'tuxedo jacket', 'dinner jacket', 'smoking jacket', 'sport shirt', 'polo shirt', 'golf shirt', 'rugby shirt']"}
{"cat":"clothes","slot":"colorPattern","value":"white","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"All the features that refer to the color or texture of white.\";         A textual example of the semantic relation is \"can be white\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['shirt', 'blouse', 'dress', 'pants', 'skirt', 'jacket', 'coat', 'hat', 'scarf', 'gloves']"}
{"cat":"clothes","slot":"generalization","value":"lid","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of lid related to hypernyms.\";         A textual example of the semantic relation is \"are lid\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['shirt', 'pants', 'jacket', 'dress', 'skirt', 'shorts', 'sweater', 'socks', 'hat', 'scarf']"}
{"cat":"clothes","slot":"generalization","value":"glove","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of glove related to hypernyms.\";         A textual example of the semantic relation is \"are glove\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['glove', 'mitten', 'handwear', 'hand covering', 'winter accessory', 'protective gear', 'fashion item', 'leather glove', 'knitted glove', 'cotton glove']"}
{"cat":"clothes","slot":"generalization","value":"hat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of hat related to hypernyms.\";         A textual example of the semantic relation is \"are hat\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['cap', 'beret', 'top hat', 'fedora', 'bowler hat', 'cowboy hat', 'beanie', 'panama hat', 'pork pie hat', 'newsboy cap']"}
{"cat":"clothes","slot":"generalization","value":"chapeau","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of chapeau related to hypernyms.\";         A textual example of the semantic relation is \"are chapeau\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['hat', 'cap', 'bonnet', 'beret', 'fedora', 'beanie', 'top hat', 'bowler hat', 'cowboy hat', 'panama hat']"}
{"cat":"clothes","slot":"material","value":"denim","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Material of which denim is composed.\";         A textual example of the semantic relation is \"can be made of denim\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['denim', 'jeans', 'jacket', 'shirt', 'skirt', 'dress', 'shorts', 'pants', 'capris', 'vest']"}
{"cat":"clothes","slot":"specialization","value":"denim","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of denim in terms of their hyponyms.\";         A textual example of the semantic relation is \"are denim\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"jeans\", \"shorts\", \"skirts\", \"jackets\", \"shirts\", \"overalls\", \"dresses\", \"capris\", \"vests\", \"pants\"]"}
{"cat":"clothes","slot":"part","value":"lace","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"All the constitutive parts of lace.\";         A textual example of the semantic relation is \"can have lace\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"blouse\", \"dress\", \"shirt\", \"skirt\", \"top\", \"underwear\", \"bra\", \"panties\", \"nightgown\"]"}
{"cat":"clothes","slot":"part","value":"leg","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"All the constitutive parts of leg.\";         A textual example of the semantic relation is \"can have leg\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['pants', 'trousers', 'jeans', 'shorts', 'skirt', 'leggings', 'stockings', 'socks', 'boots', 'shoes']"}
{"cat":"clothes","slot":"generalization","value":"coat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of coat related to hypernyms.\";         A textual example of the semantic relation is \"are coat\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"coat\", \"jacket\", \"blazer\", \"trench coat\", \"overcoat\", \"parka\", \"raincoat\", \"fur coat\", \"leather coat\", \"wool coat\"]"}
{"cat":"clothes","slot":"specialization","value":"glove","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of glove in terms of their hyponyms.\";         A textual example of the semantic relation is \"are glove\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['leather gloves', 'winter gloves', 'fingerless gloves', 'work gloves', 'knit gloves', 'satin gloves', 'latex gloves', 'cotton gloves', 'wool gloves', 'suede gloves']"}
{"cat":"clothes","slot":"specialization","value":"lid","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of lid in terms of their hyponyms.\";         A textual example of the semantic relation is \"are lid\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['shirt', 'pants', 'dress', 'skirt', 'jacket', 'coat', 'hat', 'scarf', 'gloves', 'socks']"}
{"cat":"clothes","slot":"specialization","value":"chapeau","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of chapeau in terms of their hyponyms.\";         A textual example of the semantic relation is \"are chapeau\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['hat', 'cap', 'beret', 'fedora', 'bowler', 'top hat', 'cowboy hat', 'beanie', 'panama hat', 'derby hat']"}
{"cat":"clothes","slot":"specialization","value":"hat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of hat in terms of their hyponyms.\";         A textual example of the semantic relation is \"are hat\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['fedora', 'top hat', 'bowler hat', 'cowboy hat', 'beret', 'beanie', 'panama hat', 'trilby', 'pork pie hat', 'newsboy cap']"}
{"cat":"clothes","slot":"part","value":"throat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"All the constitutive parts of throat.\";         A textual example of the semantic relation is \"can have throat\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['turtleneck', 'collar', 'neckline', 'throat', 'cravat', 'scarf', 'necktie', 'stock', 'choker', 'necklace']"}
{"cat":"clothes","slot":"specialization","value":"white","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"clothes\";         The returned words must satisfy the semantic relation \"Classification of white in terms of their hyponyms.\";         A textual example of the semantic relation is \"are white\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['shirt', 'pants', 'skirt', 'dress', 'shorts', 'socks', 'hat', 'scarf', 'gloves', 'coat']"}
{"cat":"home","slot":"user","value":"gate-keeper","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"All the kinds of living beings which are able to operate, employ, interact with or perceive gate-keeper.\";         A textual example of the semantic relation is \"are used by gate-keepers\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['key', 'lock', 'door', 'knob', 'handle', 'bell', 'intercom', 'security', 'camera', 'alarm']"}
{"cat":"home","slot":"movement","value":"slide","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"Terms that describe the type and speed of movement.\";         A textual example of the semantic relation is \"can slide\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['sliding', 'gliding', 'slipping', 'drifting', 'floating', 'cruising', 'sailing', 'skating', 'coasting', 'wafting']"}
{"cat":"home","slot":"movement","value":"swing","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"Terms that describe the type and speed of movement.\";         A textual example of the semantic relation is \"can swing\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['swing', 'sway', 'rock', 'roll', 'bounce', 'vibrate', 'oscillate', 'shake', 'wobble', 'quiver']"}
{"cat":"home","slot":"time","value":"morning","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"All the entries which link morning with the time flow or with specific moments of time.\";         A textual example of the semantic relation is \"can be consumed or used during morning\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['breakfast', 'morning_coffee', 'morning_tea', 'morning_newspaper', 'morning_shower', 'morning_run', 'morning_commute', 'morning_routine', 'morning_meeting', 'morning_chores']"}
{"cat":"home","slot":"sound","value":"creak","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"All the entries with which the sound of creak can be described.\";         A textual example of the semantic relation is \" creak\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"door\", \"floor\", \"stair\", \"chair\", \"table\", \"bed\", \"window\", \"ceiling\", \"wall\", \"roof\"]"}
{"cat":"home","slot":"sound","value":"clink","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"All the entries with which the sound of clink can be described.\";         A textual example of the semantic relation is \"can clink\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"glass\", \"cup\", \"bottle\", \"fork\", \"knife\", \"spoon\", \"plate\", \"bowl\", \"vase\", \"jug\"]"}
{"cat":"home","slot":"accessory","value":"key","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"All those objects that may have to do with key. The constraint is that there must be a physical contact and that the use of such object is strictly necessary for key.\";         A textual example of the semantic relation is \"are related with key\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"door\", \"lock\", \"keyhole\", \"keyring\", \"keychain\", \"keypad\", \"keyboard\", \"keypunch\", \"keycard\", \"keyfob\"]"}
{"cat":"home","slot":"accessory","value":"tap","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"All those objects that may have to do with tap. The constraint is that there must be a physical contact and that the use of such object is strictly necessary for tap.\";         A textual example of the semantic relation is \"are related with tap\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"sink\", \"faucet\", \"water\", \"handle\", \"spout\", \"countertop\", \"pipes\", \"valve\", \"drain\", \"plumbing\"]"}
{"cat":"home","slot":"accessory","value":"clicker","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"All those objects that may have to do with clicker. The constraint is that there must be a physical contact and that the use of such object is strictly necessary for clicker.\";         A textual example of the semantic relation is \"are related with clicker\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['remote', 'controller', 'button', 'switch', 'handle', 'knob', 'lever', 'key', 'pad', 'screen']"}
{"cat":"home","slot":"efficiency","value":"breakable","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"Positive (efficiency) or negative (inefficiency) features of breakable related to their function.\";         A textual example of the semantic relation is \"can be breakable\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['durable', 'sturdy', 'reliable', 'fragile', 'brittle', 'delicate', 'fragility', 'resilience', 'robustness', 'strength']"}
{"cat":"home","slot":"efficiency","value":"leaking","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"Positive (efficiency) or negative (inefficiency) features of leaking related to their function.\";         A textual example of the semantic relation is \"can be leaking\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['efficient', 'water-saving', 'durable', 'reliable', 'leak-proof', 'well-maintained', 'rust-resistant', 'sturdy', 'long-lasting', 'sealed']"}
{"cat":"home","slot":"efficiency","value":"impermeable","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"Positive (efficiency) or negative (inefficiency) features of impermeable related to their function.\";         A textual example of the semantic relation is \"can be impermeable\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['warm', 'comfortable', 'safe', 'durable', 'energy-efficient', 'waterproof', 'soundproof', 'insulated', 'airtight', 'well-ventilated']"}
{"cat":"home","slot":"content","value":"liquid","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"All the entities which might be contained within liquid, without being constitutive parts of it.\";         A textual example of the semantic relation is \"contain liquids\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['sink', 'bathtub', 'toilet', 'shower', 'faucet', 'dishwasher', 'washing machine', 'water heater', 'swimming pool', 'water cooler']"}
{"cat":"home","slot":"content","value":"water","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"All the entities which might be contained within water, without being constitutive parts of it.\";         A textual example of the semantic relation is \"contain water\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['kitchen', 'bathroom', 'pool', 'lake', 'pond', 'aquarium', 'fountain', 'hot tub', 'water cooler', 'sink']"}
{"cat":"home","slot":"content","value":"soup","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"All the entities which might be contained within soup, without being constitutive parts of it.\";         A textual example of the semantic relation is \"contain soups\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['spoon', 'bowl', 'noodle', 'broth', 'vegetable', 'meat', 'dumpling', 'salt', 'pepper', 'seasoning']"}
{"cat":"home","slot":"content","value":"food","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"All the entities which might be contained within food, without being constitutive parts of it.\";         A textual example of the semantic relation is \"contain foods\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['refrigerator', 'pantry', 'cabinet', 'counter', 'table', 'oven', 'stove', 'microwave', 'dishwasher', 'sink']"}
{"cat":"home","slot":"content","value":"yoghurt","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"All the entities which might be contained within yoghurt, without being constitutive parts of it.\";         A textual example of the semantic relation is \"contain yoghurts\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['house', 'apartment', 'villa', 'condo', 'cottage', 'mansion', 'bungalow', 'townhouse', 'chateau', 'duplex']"}
{"cat":"home","slot":"content","value":"dessert","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"All the entities which might be contained within dessert, without being constitutive parts of it.\";         A textual example of the semantic relation is \"contain desserts\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['bed', 'kitchen', 'living room', 'bathroom', 'dining room', 'garage', 'attic', 'basement', 'yard', 'porch']"}
{"cat":"home","slot":"content","value":"tea","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"All the entities which might be contained within tea, without being constitutive parts of it.\";         A textual example of the semantic relation is \"contain teas\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"kitchen\", \"living room\", \"bedroom\", \"bathroom\", \"dining room\", \"garage\", \"attic\", \"basement\", \"yard\", \"garden\"]"}
{"cat":"home","slot":"content","value":"hot chocolate","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"All the entities which might be contained within hot chocolate, without being constitutive parts of it.\";         A textual example of the semantic relation is \"contain hot chocolates\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['kitchen', 'bedroom', 'living room', 'dining room', 'bathroom', 'garage', 'attic', 'basement', 'yard', 'garden']"}
{"cat":"home","slot":"content","value":"milk","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"All the entities which might be contained within milk, without being constitutive parts of it.\";         A textual example of the semantic relation is \"contain milks\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['butter', 'cream', 'cheese', 'yogurt', 'sour cream', 'cottage cheese', 'half and half', 'condensed milk', 'evaporated milk', 'powdered milk']"}
{"cat":"home","slot":"content","value":"claret","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"All the entities which might be contained within claret, without being constitutive parts of it.\";         A textual example of the semantic relation is \"contain clarets\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['wine', 'glass', 'bottle', 'cork', 'label', 'table', 'cabinet', 'shelf', 'room', 'house']"}
{"cat":"home","slot":"content","value":"flower","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"All the entities which might be contained within flower, without being constitutive parts of it.\";         A textual example of the semantic relation is \"contain flowers\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['bedroom', 'kitchen', 'living room', 'bathroom', 'dining room', 'garage', 'basement', 'attic', 'yard', 'garden']"}
{"cat":"home","slot":"content","value":"claret","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"All the entities which might be contained within claret, without being constitutive parts of it.\";         A textual example of the semantic relation is \"contain clarets\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['wine', 'glass', 'bottle', 'cork', 'label', 'table', 'cabinet', 'shelf', 'room', 'house']"}
{"cat":"home","slot":"content","value":"beer","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"All the entities which might be contained within beer, without being constitutive parts of it.\";         A textual example of the semantic relation is \"contain beers\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['refrigerator', 'freezer', 'cooler', 'pantry', 'cupboard', 'drawer', 'cellar', 'bar', 'fridge', 'kitchen']"}
{"cat":"home","slot":"content","value":"absinthe","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"All the entities which might be contained within absinthe, without being constitutive parts of it.\";         A textual example of the semantic relation is \"contain absinthes\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['bed', 'couch', 'table', 'chair', 'lamp', 'rug', 'curtain', 'painting', 'vase', 'bookshelf']"}
{"cat":"home","slot":"content","value":"greasy","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"All the entities which might be contained within greasy, without being constitutive parts of it.\";         A textual example of the semantic relation is \"contain greasies\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['couch', 'table', 'chair', 'carpet', 'curtain', 'pillow', 'blanket', 'rug', 'mattress', 'sofa']"}
{"cat":"home","slot":"content","value":"coffee","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"All the entities which might be contained within coffee, without being constitutive parts of it.\";         A textual example of the semantic relation is \"contain coffees\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['table', 'chair', 'sofa', 'bed', 'cabinet', 'bookshelf', 'dresser', 'rug', 'curtain', 'lamp']"}
{"cat":"home","slot":"content","value":"cookie","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"All the entities which might be contained within cookie, without being constitutive parts of it.\";         A textual example of the semantic relation is \"contain cookies\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['bed', 'couch', 'table', 'chair', 'fridge', 'oven', 'dishwasher', 'washing machine', 'dining room', 'living room']"}
{"cat":"home","slot":"shape","value":"concave","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"Form of concave.\";         A textual example of the semantic relation is \"can be concave\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"bowl\", \"sink\", \"bathtub\", \"cradle\", \"nest\", \"hollow\", \"cavity\", \"recess\", \"concave\", \"curved\"]"}
{"cat":"home","slot":"shape","value":"round","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"Form of round.\";         A textual example of the semantic relation is \"can be round\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['table', 'chair', 'bed', 'sofa', 'dining table', 'coffee table', 'side table', 'ottoman', 'pouf']"}
{"cat":"home","slot":"shape","value":"circular","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"Form of circular.\";         A textual example of the semantic relation is \"can be circular\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"table\", \"chair\", \"clock\", \"mirror\", \"plate\", \"bowl\", \"vase\", \"door knob\", \"window\", \"picture frame\"]"}
{"cat":"home","slot":"shape","value":"curved","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"Form of curved.\";         A textual example of the semantic relation is \"can be curved\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"couch\", \"chair\", \"bed\", \"table\", \"desk\", \"sofa\", \"armchair\", \"ottoman\", \"love seat\", \"recliner\"]"}
{"cat":"home","slot":"shape","value":"cylindrical","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"Form of cylindrical.\";         A textual example of the semantic relation is \"can be cylindrical\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['candle', 'vase', 'tube', 'pipe', 'pencil', 'pillar', 'tower', 'cylinder', 'container', 'drum']"}
{"cat":"home","slot":"shape","value":"rectangular","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"Form of rectangular.\";         A textual example of the semantic relation is \"can be rectangular\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"bed\", \"table\", \"window\", \"door\", \"rug\", \"curtain\", \"couch\", \"desk\", \"chair\", \"picture\"]"}
{"cat":"home","slot":"shape","value":"long","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"Form of long.\";         A textual example of the semantic relation is \"can be long\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['hallway', 'corridor', 'staircase', 'driveway', 'backyard', 'patio', 'balcony', 'deck', 'porch', 'veranda']"}
{"cat":"home","slot":"shape","value":"elongated","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"Form of elongated.\";         A textual example of the semantic relation is \"can be elongated\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['carpet', 'curtain', 'door', 'fence', 'hallway', 'path', 'pipe', 'rug', 'table', 'window']"}
{"cat":"home","slot":"part","value":"strainer","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"All the constitutive parts of strainer.\";         A textual example of the semantic relation is \"can have strainer\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['sink', 'faucet', 'countertop', 'drain', 'cabinet', 'handle', 'spout', 'basin', 'tap', 'base']"}
{"cat":"home","slot":"part","value":"leg","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"All the constitutive parts of leg.\";         A textual example of the semantic relation is \"can have leg\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['bed', 'couch', 'table', 'chair', 'desk', 'dresser', 'bookcase', 'nightstand', 'coffee table', 'ottoman']"}
{"cat":"home","slot":"part","value":"arm","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"All the constitutive parts of arm.\";         A textual example of the semantic relation is \"can have arm\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['bedroom', 'kitchen', 'living room', 'bathroom', 'dining room', 'garage', 'basement', 'attic', 'patio', 'deck']"}
{"cat":"home","slot":"part","value":"footstool","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"All the constitutive parts of footstool.\";         A textual example of the semantic relation is \"can have footstool\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['couch', 'table', 'chair', 'bed', 'rug', 'curtain', 'lamp', 'wall', 'floor', 'door']"}
{"cat":"home","slot":"part","value":"seatback","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"All the constitutive parts of seatback.\";         A textual example of the semantic relation is \"can have seatback\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['couch', 'chair', 'recliner', 'sofa', 'armchair', 'ottoman', 'loveseat', 'bench', 'stool', 'settee']"}
{"cat":"home","slot":"part","value":"handle","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"All the constitutive parts of handle.\";         A textual example of the semantic relation is \"can have handle\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['door', 'drawer', 'cupboard', 'window', 'furniture', 'appliance', 'utensil', 'tool', 'device', 'gadget']"}
{"cat":"home","slot":"part","value":"jamb","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"All the constitutive parts of jamb.\";         A textual example of the semantic relation is \"can have jamb\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['door', 'window', 'wall', 'frame', 'sill', 'lintel', 'post', 'panel', 'molding', 'trim']"}
{"cat":"home","slot":"part","value":"latch","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"All the constitutive parts of latch.\";         A textual example of the semantic relation is \"can have latch\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"door\", \"window\", \"gate\", \"lock\", \"handle\", \"knob\", \"hinge\", \"frame\", \"panel\", \"catch\"]"}
{"cat":"home","slot":"part","value":"lock","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"All the constitutive parts of lock.\";         A textual example of the semantic relation is \"can have lock\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['door', 'window', 'drawer', 'cabinet', 'box', 'safe', 'chest', 'cupboard', 'container', 'lid']"}
{"cat":"home","slot":"part","value":"hinge","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"All the constitutive parts of hinge.\";         A textual example of the semantic relation is \"can have hinge\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"door\", \"window\", \"cabinet\", \"drawer\", \"box\", \"frame\", \"lid\", \"furniture\", \"appliance\", \"device\"]"}
{"cat":"home","slot":"part","value":"throne","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"All the constitutive parts of throne.\";         A textual example of the semantic relation is \"can have throne\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['throne', 'seat', 'armrest', 'backrest', 'legs', 'base', 'cushion', 'fabric', 'upholstery', 'ornament']"}
{"cat":"home","slot":"part","value":"drain basket","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"All the constitutive parts of drain basket.\";         A textual example of the semantic relation is \"can have drain basket\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['sink', 'drain', 'basket', 'strainer', 'spout', 'faucet', 'countertop', 'cabinet', 'handle', 'plumbing']"}
{"cat":"home","slot":"part","value":"base","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"All the constitutive parts of base.\";         A textual example of the semantic relation is \"can have base\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['bedroom', 'kitchen', 'bathroom', 'living room', 'dining room', 'garage', 'basement', 'attic', 'balcony', 'patio']"}
{"cat":"home","slot":"part","value":"rim","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"All the constitutive parts of rim.\";         A textual example of the semantic relation is \"can have rim\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['house', 'apartment', 'condo', 'cottage', 'bungalow', 'villa', 'mansion', 'townhouse', 'duplex', 'manor']"}
{"cat":"home","slot":"part","value":"wall","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"All the constitutive parts of wall.\";         A textual example of the semantic relation is \"can have wall\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['brick', 'stone', 'plaster', 'drywall', 'panel', 'tile', 'wood', 'concrete', 'glass', 'metal']"}
{"cat":"home","slot":"part","value":"rung","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"All the constitutive parts of rung.\";         A textual example of the semantic relation is \"can have rung\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"bedroom\", \"kitchen\", \"living room\", \"bathroom\", \"dining room\", \"garage\", \"basement\", \"attic\", \"patio\", \"yard\"]"}
{"cat":"home","slot":"part","value":"potty","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"All the constitutive parts of potty.\";         A textual example of the semantic relation is \"can have potty\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"potty\", \"seat\", \"lid\", \"bowl\", \"flush\", \"handle\", \"tank\", \"water\", \"drain\", \"toilet\"]"}
{"cat":"home","slot":"part","value":"commode","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"All the constitutive parts of commode.\";         A textual example of the semantic relation is \"can have commode\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['cabinet', 'drawers', 'shelves', 'legs', 'tabletop', 'frame', 'handle', 'hinges', 'mirror', 'seat']"}
{"cat":"home","slot":"part","value":"crapper","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"All the constitutive parts of crapper.\";         A textual example of the semantic relation is \"can have crapper\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['toilet', 'bathroom', 'sink', 'shower', 'tub', 'faucet', 'mirror', 'floor', 'wall', 'ceiling']"}
{"cat":"home","slot":"part","value":"arch","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"All the constitutive parts of arch.\";         A textual example of the semantic relation is \"can have arch\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"door\", \"window\", \"roof\", \"wall\", \"floor\", \"ceiling\", \"staircase\", \"fireplace\", \"chimney\", \"column\"]"}
{"cat":"home","slot":"part","value":"basin","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"All the constitutive parts of basin.\";         A textual example of the semantic relation is \"can have basin\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['sink', 'faucet', 'drain', 'countertop', 'cabinet', 'mirror', 'soap', 'towel', 'sponge', 'garbage']"}
{"cat":"home","slot":"part","value":"flooring","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"All the constitutive parts of flooring.\";         A textual example of the semantic relation is \"can have flooring\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"carpet\", \"tile\", \"hardwood\", \"vinyl\", \"linoleum\", \"marble\", \"granite\", \"concrete\", \"laminate\"]"}
{"cat":"home","slot":"part","value":"pot","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"All the constitutive parts of pot.\";         A textual example of the semantic relation is \"can have pot\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['pot', 'stove', 'oven', 'kitchen', 'dining room', 'living room', 'bedroom', 'bathroom', 'garage', 'yard']"}
{"cat":"home","slot":"part","value":"plughole","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"All the constitutive parts of plughole.\";         A textual example of the semantic relation is \"can have plughole\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"sink\", \"basin\", \"drain\", \"tub\", \"faucet\", \"countertop\", \"vanity\", \"shower\", \"toilet\", \"floor\"]"}
{"cat":"home","slot":"part","value":"edge","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"All the constitutive parts of edge.\";         A textual example of the semantic relation is \"can have edge\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['door', 'window', 'wall', 'floor', 'ceiling', 'table', 'chair', 'bed', 'sofa', 'counter']"}
{"cat":"home","slot":"part","value":"stave","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"All the constitutive parts of stave.\";         A textual example of the semantic relation is \"can have stave\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['bedroom', 'kitchen', 'bathroom', 'living room', 'dining room', 'garage', 'basement', 'attic', 'porch', 'deck']"}
{"cat":"home","slot":"part","value":"toilet seat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"All the constitutive parts of toilet seat.\";         A textual example of the semantic relation is \"can have toilet seat\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"toilet\", \"seat\", \"lid\", \"hinge\", \"bolts\", \"screws\", \"washers\", \"nut\", \"bowl\", \"tank\"]"}
{"cat":"home","slot":"part","value":"rocker","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"All the constitutive parts of rocker.\";         A textual example of the semantic relation is \"can have rocker\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['chair', 'armchair', 'recliner', 'sofa', 'couch', 'loveseat', 'ottoman', 'bench', 'stool', 'rocker']"}
{"cat":"home","slot":"part","value":"showerhead","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"All the constitutive parts of showerhead.\";         A textual example of the semantic relation is \"can have showerhead\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['showerhead', 'spray', 'water', 'pressure', 'nozzle', 'handle', 'mount', 'valve', 'hose', 'diverter']"}
{"cat":"home","slot":"part","value":"drain","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"All the constitutive parts of drain.\";         A textual example of the semantic relation is \"can have drain\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['sink', 'bathtub', 'shower', 'toilet', 'washing machine', 'dishwasher', 'floor', 'wall', 'countertop', 'gutter']"}
{"cat":"home","slot":"part","value":"bottom","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"All the constitutive parts of bottom.\";         A textual example of the semantic relation is \"can have bottom\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['foundation', 'basement', 'floor', 'ground', 'base', 'support', 'structure', 'footing', 'substructure', 'platform']"}
{"cat":"home","slot":"part","value":"pier","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"All the constitutive parts of pier.\";         A textual example of the semantic relation is \"can have pier\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['pier', 'deck', 'beam', 'column', 'piling', 'stringer', 'joist', 'railing', 'plank', 'board']"}
{"cat":"home","slot":"part","value":"stool","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"All the constitutive parts of stool.\";         A textual example of the semantic relation is \"can have stool\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['chair', 'seat', 'leg', 'backrest', 'armrest', 'cushion', 'frame', 'upholstery', 'base', 'footrest']"}
{"cat":"home","slot":"part","value":"back","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"All the constitutive parts of back.\";         A textual example of the semantic relation is \"can have back\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['bed', 'couch', 'chair', 'table', 'desk', 'dresser', 'closet', 'shelf', 'cabinet', 'nightstand']"}
{"cat":"home","slot":"part","value":"round","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"All the constitutive parts of round.\";         A textual example of the semantic relation is \"can have round\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"bedroom\", \"kitchen\", \"living room\", \"bathroom\", \"dining room\", \"garage\", \"basement\", \"attic\", \"backyard\", \"front yard\"]"}
{"cat":"home","slot":"part","value":"backrest","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"All the constitutive parts of backrest.\";         A textual example of the semantic relation is \"can have backrest\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"chair\", \"sofa\", \"couch\", \"armchair\", \"recliner\", \"ottoman\", \"loveseat\", \"bench\", \"stool\", \"chaise\"]"}
{"cat":"home","slot":"part","value":"can","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"All the constitutive parts of can.\";         A textual example of the semantic relation is \"can have can\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['bedroom', 'kitchen', 'living room', 'bathroom', 'dining room', 'garage', 'basement', 'attic', 'yard', 'patio']"}
{"cat":"home","slot":"part","value":"floor","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"All the constitutive parts of floor.\";         A textual example of the semantic relation is \"can have floor\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['carpet', 'tile', 'hardwood', 'linoleum', 'marble', 'concrete', 'granite', 'vinyl', 'laminate', 'ceramic']"}
{"cat":"home","slot":"part","value":"toilet","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"All the constitutive parts of toilet.\";         A textual example of the semantic relation is \"can have toilet\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['toilet', 'bathroom', 'shower', 'sink', 'mirror', 'toilet paper', 'soap', 'towel', 'faucet', 'drain']"}
{"cat":"home","slot":"part","value":"toilet bowl","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"All the constitutive parts of toilet bowl.\";         A textual example of the semantic relation is \"can have toilet bowl\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['bowl', 'seat', 'lid', 'flushing mechanism', 'tank', 'water supply line', 'drain', 'wax ring', 'bolts', 'toilet paper holder']"}
{"cat":"home","slot":"part","value":"trestle","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"All the constitutive parts of trestle.\";         A textual example of the semantic relation is \"can have trestle\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['table', 'leg', 'board', 'support', 'frame', 'plank', 'beam', 'joint', 'post', 'crosspiece']"}
{"cat":"home","slot":"part","value":"ceiling","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"All the constitutive parts of ceiling.\";         A textual example of the semantic relation is \"can have ceiling\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['plaster', 'paint', 'beams', 'tiles', 'insulation', 'vents', 'lights', 'fans', 'chandeliers', 'skylights']"}
{"cat":"home","slot":"place","value":"kitchen","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"All the entities in which kitchen can be experienced, found or perceived.\";         A textual example of the semantic relation is \"can be found or used in kitchens\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['stove', 'refrigerator', 'oven', 'microwave', 'sink', 'dishwasher', 'cabinet', 'countertop', 'table', 'chair']"}
{"cat":"home","slot":"place","value":"porch","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"All the entities in which porch can be experienced, found or perceived.\";         A textual example of the semantic relation is \"can be found or used in porches\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['door', 'window', 'chair', 'table', 'plant', 'light', 'rug', 'wall', 'ceiling', 'floor']"}
{"cat":"home","slot":"place","value":"restaurant","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"All the entities in which restaurant can be experienced, found or perceived.\";         A textual example of the semantic relation is \"can be found or used in restaurants\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"kitchen\", \"dining room\", \"living room\", \"bedroom\", \"bathroom\", \"garage\", \"patio\", \"yard\", \"basement\", \"attic\"]"}
{"cat":"home","slot":"place","value":"castle","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"All the entities in which castle can be experienced, found or perceived.\";         A textual example of the semantic relation is \"can be found or used in castles\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"throne\", \"armory\", \"dungeon\", \"drawbridge\", \"turret\", \"courtyard\", \"battlement\", \"great hall\", \"moat\", \"gatehouse\"]"}
{"cat":"home","slot":"place","value":"palace","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"All the entities in which palace can be experienced, found or perceived.\";         A textual example of the semantic relation is \"can be found or used in palaces\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"throne\", \"crown\", \"scepter\", \"gold\", \"silk\", \"marble\", \"tapestry\", \"chandelier\", \"gilded\", \"opulent\"]"}
{"cat":"home","slot":"place","value":"courtyard","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"All the entities in which courtyard can be experienced, found or perceived.\";         A textual example of the semantic relation is \"can be found or used in courtyards\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['garden', 'patio', 'pool', 'fountain', 'bench', 'table', 'chair', 'flowers', 'trees', 'grass']"}
{"cat":"home","slot":"place","value":"veranda","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"All the entities in which veranda can be experienced, found or perceived.\";         A textual example of the semantic relation is \"can be found or used in verandas\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['deck', 'porch', 'balcony', 'patio', 'sunroom', 'garden', 'yard', 'pool', 'outdoor furniture', 'barbecue']"}
{"cat":"home","slot":"place","value":"living room","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"All the entities in which living room can be experienced, found or perceived.\";         A textual example of the semantic relation is \"can be found or used in living rooms\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['couch', 'TV', 'coffee table', 'rug', 'end table', 'lamp', 'window', 'curtains', 'fireplace', 'bookshelf']"}
{"cat":"home","slot":"place","value":"building","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"All the entities in which building can be experienced, found or perceived.\";         A textual example of the semantic relation is \"can be found or used in buildings\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"bedroom\", \"kitchen\", \"living room\", \"bathroom\", \"garage\", \"attic\", \"basement\", \"dining room\", \"hallway\", \"patio\"]"}
{"cat":"home","slot":"place","value":"cafeteria","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"All the entities in which cafeteria can be experienced, found or perceived.\";         A textual example of the semantic relation is \"can be found or used in cafeterias\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"kitchen\", \"dining room\", \"living room\", \"bedroom\", \"bathroom\", \"garage\", \"yard\", \"garden\", \"patio\", \"balcony\"]"}
{"cat":"home","slot":"place","value":"bathroom","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"All the entities in which bathroom can be experienced, found or perceived.\";         A textual example of the semantic relation is \"can be found or used in bathrooms\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['shower', 'toilet', 'sink', 'tub', 'towel', 'soap', 'mirror', 'faucet', 'floor', 'wall']"}
{"cat":"home","slot":"place","value":"garden","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"All the entities in which garden can be experienced, found or perceived.\";         A textual example of the semantic relation is \"can be found or used in gardens\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['flowers', 'trees', 'grass', 'gardening tools', 'fruits', 'vegetables', 'shrubs', 'garden furniture', 'potted plants', 'garden gnomes']"}
{"cat":"home","slot":"place","value":"field","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"All the entities in which field can be experienced, found or perceived.\";         A textual example of the semantic relation is \"can be found or used in fields\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['bed', 'couch', 'table', 'chair', 'desk', 'dresser', 'curtain', 'rug', 'lamp', 'cabinet']"}
{"cat":"home","slot":"place","value":"venue","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"All the entities in which venue can be experienced, found or perceived.\";         A textual example of the semantic relation is \"can be found or used in venues\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['bed', 'couch', 'table', 'chair', 'sofa', 'curtain', 'rug', 'lamp', 'dining table', 'bookshelf']"}
{"cat":"home","slot":"place","value":"memorial","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"All the entities in which memorial can be experienced, found or perceived.\";         A textual example of the semantic relation is \"can be found or used in memorials\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['monument', 'plaque', 'gravestone', 'memorial park', 'cemetery', 'obelisk', 'headstone', 'statue', 'memorial hall', 'memorial garden']"}
{"cat":"home","slot":"place","value":"department","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"All the entities in which department can be experienced, found or perceived.\";         A textual example of the semantic relation is \"can be found or used in departments\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['bed', 'sofa', 'table', 'chair', 'couch', 'dining table', 'bookshelf', 'wardrobe', 'desk', 'kitchen']"}
{"cat":"home","slot":"place","value":"monument","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"All the entities in which monument can be experienced, found or perceived.\";         A textual example of the semantic relation is \"can be found or used in monuments\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"furniture\", \"appliances\", \"decorations\", \"lighting\", \"utensils\", \"bedding\", \"curtains\", \"carpets\", \"paintings\", \"plants\"]"}
{"cat":"home","slot":"place","value":"car","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"All the entities in which car can be experienced, found or perceived.\";         A textual example of the semantic relation is \"can be found or used in cars\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['garage', 'driveway', 'parking lot', 'street', 'highway', 'road', 'traffic', 'intersection', 'gas station', 'car wash']"}
{"cat":"home","slot":"place","value":"driveway","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"All the entities in which driveway can be experienced, found or perceived.\";         A textual example of the semantic relation is \"can be found or used in driveways\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"garage\", \"house\", \"neighborhood\", \"yard\", \"street\", \"porch\", \"sidewalk\", \"mailbox\", \"lawn\", \"garden\"]"}
{"cat":"home","slot":"part","value":"support","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"All the constitutive parts of support.\";         A textual example of the semantic relation is \"can have support\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['foundation', 'beam', 'column', 'wall', 'floor', 'roof', 'ceiling', 'joist', 'truss', 'girder']"}
{"cat":"home","slot":"material","value":"wood","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"Material of which wood is composed.\";         A textual example of the semantic relation is \"can be made of wood\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['furniture', 'table', 'chair', 'cabinet', 'door', 'floor', 'wall', 'staircase', 'window frame', 'bookshelf']"}
{"cat":"home","slot":"material","value":"metal","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"Material of which metal is composed.\";         A textual example of the semantic relation is \"can be made of metal\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"steel\", \"bronze\", \"iron\", \"aluminum\", \"copper\", \"titanium\", \"nickel\", \"silver\", \"gold\", \"zinc\"]"}
{"cat":"home","slot":"material","value":"steel","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"Material of which steel is composed.\";         A textual example of the semantic relation is \"can be made of steel\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['fridge', 'oven', 'dishwasher', 'microwave', 'washing machine', 'dryer', 'stove', 'range', 'freezer', 'grill']"}
{"cat":"home","slot":"material","value":"plastic","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"Material of which plastic is composed.\";         A textual example of the semantic relation is \"can be made of plastic\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"furniture\", \"appliances\", \"toys\", \"storage containers\", \"kitchenware\", \"electronics\", \"decorations\", \"garden tools\", \"cleaning supplies\", \"organizers\"]"}
{"cat":"home","slot":"material","value":"porcelain","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"Material of which porcelain is composed.\";         A textual example of the semantic relation is \"can be made of porcelain\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['china', 'dinnerware', 'teapot', 'vase', 'cup', 'saucer', 'plate', 'bowl', 'figurine', 'tile']"}
{"cat":"home","slot":"material","value":"china","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"Material of which china is composed.\";         A textual example of the semantic relation is \"can be made of china\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"porcelain\", \"bone china\", \"fine china\", \"dinnerware\", \"tableware\", \"ceramic\", \"earthenware\", \"stoneware\", \"china clay\", \"china paint\"]"}
{"cat":"home","slot":"material","value":"glass","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"Material of which glass is composed.\";         A textual example of the semantic relation is \"can be made of glass\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['window', 'door', 'table', 'mirror', 'shelf', 'frame', 'vase', 'lamp', 'clock', 'picture']"}
{"cat":"home","slot":"material","value":"pottery","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"Material of which pottery is composed.\";         A textual example of the semantic relation is \"can be made of pottery\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['clay', 'porcelain', 'earthenware', 'stoneware', 'terracotta', 'ceramic', 'faience', 'biscuit', 'slip', 'grog']"}
{"cat":"home","slot":"material","value":"wrought iron","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"Material of which wrought iron is composed.\";         A textual example of the semantic relation is \"can be made of wrought iron\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['fence', 'railing', 'garden gate', 'balcony', 'staircase', 'door', 'fireplace', 'chandelier', 'furniture', 'light fixture']"}
{"cat":"home","slot":"material","value":"marble","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"Material of which marble is composed.\";         A textual example of the semantic relation is \"can be made of marble\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['countertop', 'floor', 'table', 'statue', 'column', 'fountain', 'fireplace', 'bathroom', 'kitchen', 'sculpture']"}
{"cat":"home","slot":"material","value":"copper","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"Material of which copper is composed.\";         A textual example of the semantic relation is \"can be made of copper\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['copper', 'brass', 'bronze', 'alloy', 'metal', 'wire', 'tube', 'pipe', 'sheet', 'rod']"}
{"cat":"home","slot":"material","value":"ceramic","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"Material of which ceramic is composed.\";         A textual example of the semantic relation is \"can be made of ceramic\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['porcelain', 'pottery', 'tile', 'dish', 'mug', 'vase', 'plate', 'bowl', 'figurine', 'tableware']"}
{"cat":"home","slot":"material","value":"glassware","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"Material of which glassware is composed.\";         A textual example of the semantic relation is \"can be made of glassware\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['crystal', 'sand', 'silica', 'quartz', 'borosilicate', 'lead', 'soda', 'lime', 'potash', 'alumina']"}
{"cat":"home","slot":"material","value":"enamel","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"Material of which enamel is composed.\";         A textual example of the semantic relation is \"can be made of enamel\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['porcelain', 'glass', 'ceramic', 'steel', 'aluminum', 'copper', 'brass', 'plastic', 'wood', 'stone']"}
{"cat":"home","slot":"material","value":"wooden","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"Material of which wooden is composed.\";         A textual example of the semantic relation is \"can be made of wooden\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['furniture', 'table', 'chair', 'bed', 'cabinet', 'desk', 'shelf', 'door', 'floor', 'window']"}
{"cat":"home","slot":"material","value":"iron","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"Material of which iron is composed.\";         A textual example of the semantic relation is \"can be made of iron\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['stove', 'oven', 'range', 'cooker', 'grill', 'fireplace', 'hearth', 'furnace', 'radiator', 'boiler']"}
{"cat":"home","slot":"material","value":"ceramic","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"Material of which ceramic is composed.\";         A textual example of the semantic relation is \"can be made of ceramic\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['porcelain', 'pottery', 'tile', 'dish', 'mug', 'vase', 'plate', 'bowl', 'figurine', 'tableware']"}
{"cat":"home","slot":"colorPattern","value":"silver","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"All the features that refer to the color or texture of silver.\";         A textual example of the semantic relation is \"can be silver\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['silverware', 'silver', 'silvered', 'silvering', 'silver-plated', 'silver-colored', 'silvery', 'silver-like', 'silvered-over', 'silver-toned']"}
{"cat":"home","slot":"colorPattern","value":"white","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"All the features that refer to the color or texture of white.\";         A textual example of the semantic relation is \"can be white\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['marble', 'porcelain', 'snow', 'eggshell', 'ivory', 'linen', 'silk', 'cotton', 'pearl', 'alabaster']"}
{"cat":"home","slot":"colorPattern","value":"white","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"All the features that refer to the color or texture of white.\";         A textual example of the semantic relation is \"can be white\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['marble', 'porcelain', 'snow', 'eggshell', 'ivory', 'linen', 'silk', 'cotton', 'pearl', 'alabaster']"}
{"cat":"home","slot":"colorPattern","value":"black","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"All the features that refer to the color or texture of black.\";         A textual example of the semantic relation is \"can be black\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['blackboard', 'blackout', 'blacktop', 'blacksmith', 'blackout', 'blackhead', 'blacklist', 'blackmail', 'blackout', 'blackout']"}
{"cat":"home","slot":"colorPattern","value":"black","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"All the features that refer to the color or texture of black.\";         A textual example of the semantic relation is \"can be black\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['blackboard', 'blackout', 'blacktop', 'blacksmith', 'blackout', 'blackhead', 'blacklist', 'blackmail', 'blackout', 'blackout']"}
{"cat":"home","slot":"colorPattern","value":"brown","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"All the features that refer to the color or texture of brown.\";         A textual example of the semantic relation is \"can be brown\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['wood', 'leather', 'coffee', 'chocolate', 'caramel', 'earth', 'sand', 'fur', 'soil', 'cinnamon']"}
{"cat":"home","slot":"colorPattern","value":"brown","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"All the features that refer to the color or texture of brown.\";         A textual example of the semantic relation is \"can be brown\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['wood', 'leather', 'coffee', 'chocolate', 'caramel', 'earth', 'sand', 'fur', 'soil', 'cinnamon']"}
{"cat":"home","slot":"purpose","value":"contain","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"All of the purposes for which contain is interacted with.\";         A textual example of the semantic relation is \"are used to contain\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"box\", \"jar\", \"container\", \"bag\", \"case\", \"bottle\", \"canister\", \"vessel\", \"receptacle\", \"carton\"]"}
{"cat":"home","slot":"purpose","value":"hold","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"All of the purposes for which hold is interacted with.\";         A textual example of the semantic relation is \"are used to hold\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['cupboard', 'shelf', 'drawer', 'table', 'chair', 'couch', 'bed', 'desk', 'counter', 'rack']"}
{"cat":"home","slot":"purpose","value":"sit","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"All of the purposes for which sit is interacted with.\";         A textual example of the semantic relation is \"are used to sit\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"chair\", \"sofa\", \"couch\", \"armchair\", \"recliner\", \"bench\", \"stool\", \"ottoman\", \"love seat\", \"chaise lounge\"]"}
{"cat":"home","slot":"purpose","value":"eat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"All of the purposes for which eat is interacted with.\";         A textual example of the semantic relation is \"are used to eat\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['plate', 'fork', 'spoon', 'knife', 'bowl', 'cup', 'dish', 'spork', 'chopsticks', 'utensils']"}
{"cat":"home","slot":"colorPattern","value":"patterned","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"All the features that refer to the color or texture of patterned.\";         A textual example of the semantic relation is \"can be patterned\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['curtain', 'rug', 'wallpaper', 'tablecloth', 'pillow', 'quilt', 'blanket', 'duvet', 'bedspread', 'tapestry']"}
{"cat":"home","slot":"purpose","value":"sleep","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"All of the purposes for which sleep is interacted with.\";         A textual example of the semantic relation is \"are used for sleep\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['bed', 'pillow', 'blanket', 'mattress', 'duvet', 'nightstand', 'headboard', 'quilt', 'sleeping bag', 'comforter']"}
{"cat":"home","slot":"colorPattern","value":"glossy","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"All the features that refer to the color or texture of glossy.\";         A textual example of the semantic relation is \"can be glossy\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"flooring\", \"countertops\", \"doors\", \"windows\", \"furniture\", \"appliances\", \"walls\", \"ceilings\", \"floors\", \"cabinets\"]"}
{"cat":"home","slot":"purpose","value":"relaxing","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"All of the purposes for which relaxing is interacted with.\";         A textual example of the semantic relation is \"are used for relaxing\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['sofa', 'bed', 'armchair', 'hammock', 'hot tub', 'sauna', 'pool', 'fireplace', 'balcony', 'garden']"}
{"cat":"home","slot":"purpose","value":"cookery","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"All of the purposes for which cookery is interacted with.\";         A textual example of the semantic relation is \"are used for cookery\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"oven\", \"stove\", \"microwave\", \"kitchen\", \"refrigerator\", \"freezer\", \"pantry\", \"dishwasher\", \"countertop\", \"sink\"]"}
{"cat":"home","slot":"colorPattern","value":"shiny","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"All the features that refer to the color or texture of shiny.\";         A textual example of the semantic relation is \"can be shiny\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['mirror', 'chrome', 'glass', 'polished', 'metallic', 'glossy', 'silver', 'bright', 'reflective', 'shimmering']"}
{"cat":"home","slot":"purpose","value":"security","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"All of the purposes for which security is interacted with.\";         A textual example of the semantic relation is \"are used for security\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['lock', 'key', 'alarm', 'camera', 'safe', 'gate', 'fence', 'motion sensor', 'security system', 'deadbolt']"}
{"cat":"home","slot":"purpose","value":"delimit","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"All of the purposes for which delimit is interacted with.\";         A textual example of the semantic relation is \"are used to delimit\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['fence', 'wall', 'gate', 'door', 'window', 'roof', 'foundation', 'chimney', 'gutter', 'porch']"}
{"cat":"home","slot":"purpose","value":"pick up","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"All of the purposes for which pick up is interacted with.\";         A textual example of the semantic relation is \"are used to pick up\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"vacuum\", \"broom\", \"dustpan\", \"mop\", \"duster\", \"hand\", \"tongs\", \"tweezers\", \"fork\", \"spoon\"]"}
{"cat":"home","slot":"purpose","value":"blend","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"All of the purposes for which blend is interacted with.\";         A textual example of the semantic relation is \"are used to blend\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"mixer\", \"blender\", \"food processor\", \"immersion blender\", \"hand blender\", \"stand mixer\", \"countertop blender\", \"personal blender\", \"commercial blender\", \"portable blender\"]"}
{"cat":"home","slot":"purpose","value":"protection","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"All of the purposes for which protection is interacted with.\";         A textual example of the semantic relation is \"are used for protection\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['door', 'window', 'lock', 'alarm', 'security system', 'fence', 'gate', 'safe', 'peephole', 'deadbolt']"}
{"cat":"home","slot":"purpose","value":"separate","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"All of the purposes for which separate is interacted with.\";         A textual example of the semantic relation is \"are used to separate\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"wall\", \"door\", \"curtain\", \"screen\", \"partition\", \"fence\", \"gate\", \"divider\", \"barrier\", \"shelf\"]"}
{"cat":"home","slot":"purpose","value":"stir","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"All of the purposes for which stir is interacted with.\";         A textual example of the semantic relation is \"are used to stir\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['spoon', 'whisk', 'fork', 'chopsticks', 'stirrer', 'spatula', 'ladle', 'mixer', 'blender', 'stirring rod']"}
{"cat":"home","slot":"purpose","value":"exit","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"All of the purposes for which exit is interacted with.\";         A textual example of the semantic relation is \"are used for exit\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['door', 'window', 'gate', 'garage', 'patio', 'balcony', 'porch', 'staircase', 'hatch', 'escape']"}
{"cat":"home","slot":"purpose","value":"measure","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"All of the purposes for which measure is interacted with.\";         A textual example of the semantic relation is \"are used to measure\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\n            \"ruler\",\n            \"tape measure\",\n            \"scale\",\n            \"thermometer\",\n            \"barometer\",\n            \"hygrometer\",\n            \"clock\",\n            \"timer\",\n            \"stopwatch\",\n            \"measuring cup\"\n        ]"}
{"cat":"home","slot":"purpose","value":"drink","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"All of the purposes for which drink is interacted with.\";         A textual example of the semantic relation is \"are used to drink\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['glass', 'cup', 'mug', 'bottle', 'flask', 'jug', 'pitcher', 'carafe', 'decanter', 'tumbler']"}
{"cat":"home","slot":"purpose","value":"guard","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"All of the purposes for which guard is interacted with.\";         A textual example of the semantic relation is \"are used for guard\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['door', 'window', 'fence', 'alarm', 'security', 'camera', 'lock', 'gate', 'safe', 'light']"}
{"cat":"home","slot":"purpose","value":"feed","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"All of the purposes for which feed is interacted with.\";         A textual example of the semantic relation is \"are used to feed\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['table', 'chair', 'sofa', 'bed', 'kitchen', 'dining room', 'living room', 'bathroom', 'bedroom', 'hallway']"}
{"cat":"home","slot":"purpose","value":"insulate","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"All of the purposes for which insulate is interacted with.\";         A textual example of the semantic relation is \"are used to insulate\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['wall', 'ceiling', 'floor', 'attic', 'basement', 'duct', 'pipe', 'window', 'door', 'roof']"}
{"cat":"home","slot":"purpose","value":"rinse","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"All of the purposes for which rinse is interacted with.\";         A textual example of the semantic relation is \"are used to rinse\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"sink\", \"dish\", \"clothes\", \"hair\", \"body\", \"mouth\", \"eyes\", \"fruits\", \"vegetables\", \"teeth\"]"}
{"cat":"home","slot":"purpose","value":"bar","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"All of the purposes for which bar is interacted with.\";         A textual example of the semantic relation is \"are used to bar\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['door', 'window', 'gate', 'fence', 'lock', 'key', 'security', 'privacy', 'protection']"}
{"cat":"home","slot":"purpose","value":"wash","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"All of the purposes for which wash is interacted with.\";         A textual example of the semantic relation is \"are used to wash\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['clothes', 'dishes', 'hands', 'face', 'body', 'floors', 'windows', 'cars', 'pets', 'laundry']"}
{"cat":"home","slot":"colorPattern","value":"silver","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"All the features that refer to the color or texture of silver.\";         A textual example of the semantic relation is \"can be silver\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['silverware', 'silver', 'silvered', 'silvering', 'silver-plated', 'silver-colored', 'silvery', 'silver-like', 'silvered-over', 'silver-toned']"}
{"cat":"home","slot":"purpose","value":"access","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"All of the purposes for which access is interacted with.\";         A textual example of the semantic relation is \"are used for access\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['door', 'window', 'lock', 'key', 'gate', 'fence', 'garage', 'staircase', 'elevator', 'entryway']"}
{"cat":"home","slot":"purpose","value":"entrance","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"All of the purposes for which entrance is interacted with.\";         A textual example of the semantic relation is \"are used for entrance\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"door\", \"gate\", \"porch\", \"garage\", \"window\", \"patio\", \"deck\", \"balcony\", \"stairs\", \"driveway\"]"}
{"cat":"home","slot":"place","value":"room","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"All the entities in which room can be experienced, found or perceived.\";         A textual example of the semantic relation is \"can be found or used in rooms\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['bedroom', 'living room', 'kitchen', 'bathroom', 'dining room', 'office', 'den', 'library', 'laundry room', 'garage']"}
{"cat":"home","slot":"generalization","value":"artefact","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"Classification of artefact related to hypernyms.\";         A textual example of the semantic relation is \"are artefact\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['bed', 'sofa', 'table', 'chair', 'curtain', 'carpet', 'couch', 'dresser', 'lampshade', 'rug']"}
{"cat":"home","slot":"generalization","value":"artifact","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"Classification of artifact related to hypernyms.\";         A textual example of the semantic relation is \"are artifact\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"house\", \"apartment\", \"condo\", \"villa\", \"cottage\", \"bungalow\", \"mansion\", \"castle\", \"chateau\", \"palace\"]"}
{"cat":"home","slot":"generalization","value":"container","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"Classification of container related to hypernyms.\";         A textual example of the semantic relation is \"are container\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"house\", \"apartment\", \"condo\", \"villa\", \"cottage\", \"bungalow\", \"chalet\", \"manor\", \"mansion\", \"castle\"]"}
{"cat":"home","slot":"generalization","value":"implement","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"Classification of implement related to hypernyms.\";         A textual example of the semantic relation is \"are implement\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['bed', 'chair', 'couch', 'desk', 'dresser', 'kitchen', 'lamp', 'sofa', 'table', 'wardrobe']"}
{"cat":"home","slot":"generalization","value":"utensil","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"Classification of utensil related to hypernyms.\";         A textual example of the semantic relation is \"are utensil\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"knife\", \"spoon\", \"fork\", \"plate\", \"bowl\", \"cup\", \"pot\", \"pan\", \"ladle\", \"whisk\"]"}
{"cat":"home","slot":"generalization","value":"tool","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"Classification of tool related to hypernyms.\";         A textual example of the semantic relation is \"are tool\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['bed', 'table', 'chair', 'couch', 'desk', 'dresser', 'stove', 'refrigerator', 'microwave', 'toaster']"}
{"cat":"home","slot":"generalization","value":"furniture","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"Classification of furniture related to hypernyms.\";         A textual example of the semantic relation is \"are furniture\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"couch\", \"bed\", \"table\", \"chair\", \"desk\", \"dresser\", \"nightstand\", \"sofa\", \"armchair\", \"ottoman\"]"}
{"cat":"home","slot":"generalization","value":"barrier","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"Classification of barrier related to hypernyms.\";         A textual example of the semantic relation is \"are barrier\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['house', 'apartment', 'condo', 'cottage', 'bungalow', 'villa', 'townhouse', 'manor', 'mansion', 'castle']"}
{"cat":"home","slot":"generalization","value":"whole","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"Classification of whole related to hypernyms.\";         A textual example of the semantic relation is \"are whole\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['house', 'apartment', 'condominium', 'villa', 'cottage', 'bungalow', 'mansion', 'chateau', 'manor', 'estate']"}
{"cat":"home","slot":"generalization","value":"tableware","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"Classification of tableware related to hypernyms.\";         A textual example of the semantic relation is \"are tableware\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['dinnerware', 'cutlery', 'glassware', 'flatware', 'serveware', 'tableware', 'dishes', 'plates', 'cups', 'bowls']"}
{"cat":"home","slot":"generalization","value":"unit","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"Classification of unit related to hypernyms.\";         A textual example of the semantic relation is \"are unit\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"house\", \"apartment\", \"condominium\", \"villa\", \"cottage\", \"bungalow\", \"chalet\", \"townhouse\", \"duplex\", \"triplex\"]"}
{"cat":"home","slot":"generalization","value":"cutlery","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"Classification of cutlery related to hypernyms.\";         A textual example of the semantic relation is \"are cutlery\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['knife', 'fork', 'spoon', 'spatula', 'ladle', 'whisk', 'grater', 'peeler', 'tongs', 'can opener']"}
{"cat":"home","slot":"generalization","value":"vessel","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"Classification of vessel related to hypernyms.\";         A textual example of the semantic relation is \"are vessel\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['house', 'apartment', 'condo', 'cottage', 'villa', 'bungalow', 'mansion', 'castle', 'chateau', 'palace']"}
{"cat":"home","slot":"generalization","value":"receptacle","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"Classification of receptacle related to hypernyms.\";         A textual example of the semantic relation is \"are receptacle\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"basket\", \"box\", \"bucket\", \"can\", \"carton\", \"container\", \"crate\", \"jar\", \"pot\", \"tub\"]"}
{"cat":"home","slot":"generalization","value":"instrumentation","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"Classification of instrumentation related to hypernyms.\";         A textual example of the semantic relation is \"are instrumentation\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['bed', 'couch', 'table', 'chair', 'desk', 'sofa', 'dresser', 'nightstand', 'armchair', 'ottoman']"}
{"cat":"home","slot":"generalization","value":"chair","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"Classification of chair related to hypernyms.\";         A textual example of the semantic relation is \"are chair\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['sofa', 'armchair', 'recliner', 'dining chair', 'rocking chair', 'office chair', 'folding chair', 'wingback chair', 'ottoman', 'stool']"}
{"cat":"home","slot":"generalization","value":"closing","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"Classification of closing related to hypernyms.\";         A textual example of the semantic relation is \"are closing\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"door\", \"window\", \"curtain\", \"blinds\", \"shutters\", \"garage\", \"gate\", \"fence\", \"lock\", \"latch\"]"}
{"cat":"home","slot":"generalization","value":"fixture","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"Classification of fixture related to hypernyms.\";         A textual example of the semantic relation is \"are fixture\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['bed', 'table', 'chair', 'sofa', 'couch', 'desk', 'dresser', 'bookcase', 'curtain', 'rug']"}
{"cat":"home","slot":"generalization","value":"instrumentality","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"Classification of instrumentality related to hypernyms.\";         A textual example of the semantic relation is \"are instrumentality\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['house', 'apartment', 'condominium', 'villa', 'cottage', 'bungalow', 'chalet', 'manor', 'mansion', 'castle']"}
{"cat":"home","slot":"generalization","value":"ware","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"Classification of ware related to hypernyms.\";         A textual example of the semantic relation is \"are ware\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['bed', 'table', 'chair', 'sofa', 'couch', 'desk', 'dresser', 'bookshelf', 'curtain', 'rug']"}
{"cat":"home","slot":"generalization","value":"structure","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"Classification of structure related to hypernyms.\";         A textual example of the semantic relation is \"are structure\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['house', 'apartment', 'condominium', 'duplex', 'townhouse', 'villa', 'bungalow', 'cottage', 'chalet', 'manor']"}
{"cat":"home","slot":"generalization","value":"plumbing fixture","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"Classification of plumbing fixture related to hypernyms.\";         A textual example of the semantic relation is \"are plumbing fixture\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['faucet', 'sink', 'toilet', 'shower', 'bathtub', 'drain', 'valve', 'pipe', 'pump', 'hose']"}
{"cat":"home","slot":"generalization","value":"construction","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"Classification of construction related to hypernyms.\";         A textual example of the semantic relation is \"are construction\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['house', 'apartment', 'condominium', 'bungalow', 'villa', 'cottage', 'manor', 'mansion', 'castle', 'palace']"}
{"cat":"home","slot":"generalization","value":"obstructor","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"Classification of obstructor related to hypernyms.\";         A textual example of the semantic relation is \"are obstructor\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['furniture', 'appliances', 'electronics', 'decorations', 'utensils', 'storage', 'lighting', 'bedding', 'cleaning supplies', 'home office']"}
{"cat":"home","slot":"generalization","value":"obstruction","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"Classification of obstruction related to hypernyms.\";         A textual example of the semantic relation is \"are obstruction\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['house', 'apartment', 'condominium', 'bungalow', 'cottage', 'villa', 'mansion', 'townhouse', 'duplex', 'triplex']"}
{"cat":"home","slot":"generalization","value":"eating utensil","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"Classification of eating utensil related to hypernyms.\";         A textual example of the semantic relation is \"are eating utensil\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"spoon\", \"fork\", \"knife\", \"chopsticks\", \"spork\", \"ladle\", \"tongs\", \"skewer\", \"whisk\", \"grater\"]"}
{"cat":"home","slot":"generalization","value":"obstructer","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"Classification of obstructer related to hypernyms.\";         A textual example of the semantic relation is \"are obstructer\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['bed', 'couch', 'table', 'chair', 'desk', 'bookshelf', 'dresser', 'nightstand', 'coffee table', 'ottoman']"}
{"cat":"home","slot":"generalization","value":"drinking vessel","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"Classification of drinking vessel related to hypernyms.\";         A textual example of the semantic relation is \"are drinking vessel\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['cup', 'glass', 'mug', 'tumbler', 'flask', 'pitcher', 'jug', 'goblet', 'steins', 'decanter']"}
{"cat":"home","slot":"generalization","value":"movable barrier","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"Classification of movable barrier related to hypernyms.\";         A textual example of the semantic relation is \"are movable barrier\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['door', 'window', 'curtain', 'shutter', 'blind', 'gate', 'fence', 'screen', 'portiere', 'awning']"}
{"cat":"home","slot":"generalization","value":"impedimenta","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"Classification of impedimenta related to hypernyms.\";         A textual example of the semantic relation is \"are impedimenta\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['furniture', 'appliances', 'decor', 'utensils', 'electronics', 'linens', 'storage', 'cleaning supplies', 'tools', 'pets']"}
{"cat":"home","slot":"generalization","value":"impediment","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"Classification of impediment related to hypernyms.\";         A textual example of the semantic relation is \"are impediment\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['furniture', 'appliances', 'decorations', 'lighting', 'windows', 'doors', 'walls', 'floors', 'ceiling', 'roof']"}
{"cat":"home","slot":"generalization","value":"article","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"Classification of article related to hypernyms.\";         A textual example of the semantic relation is \"are article\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['house', 'apartment', 'condo', 'villa', 'mansion', 'bungalow', 'cottage', 'chateau', 'castle', 'manor']"}
{"cat":"home","slot":"generalization","value":"regulator","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"Classification of regulator related to hypernyms.\";         A textual example of the semantic relation is \"are regulator\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"house\", \"apartment\", \"condo\", \"villa\", \"cottage\", \"bungalow\", \"townhouse\", \"mansion\", \"castle\", \"palace\"]"}
{"cat":"home","slot":"generalization","value":"crockery","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"Classification of crockery related to hypernyms.\";         A textual example of the semantic relation is \"are crockery\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['plate', 'bowl', 'cup', 'mug', 'saucer', 'dish', 'pot', 'pan', 'spoon', 'fork']"}
{"cat":"home","slot":"generalization","value":"corridor","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"Classification of corridor related to hypernyms.\";         A textual example of the semantic relation is \"are corridor\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['hallway', 'passage', 'lobby', 'vestibule', 'foyer', 'entrance', 'staircase', 'landing', 'corridor', 'pathway']"}
{"cat":"home","slot":"generalization","value":"edge tool","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"Classification of edge tool related to hypernyms.\";         A textual example of the semantic relation is \"are edge tool\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['knife', 'sword', 'axe', 'scissors', 'razor', 'chisel', 'plane', 'saw', 'file', 'shears']"}
{"cat":"home","slot":"generalization","value":"passageway","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"Classification of passageway related to hypernyms.\";         A textual example of the semantic relation is \"are passageway\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['hallway', 'corridor', 'passage', 'entryway', 'vestibule', 'foyer', 'lobby', 'staircase', 'landing', 'gallery']"}
{"cat":"home","slot":"generalization","value":"control","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"Classification of control related to hypernyms.\";         A textual example of the semantic relation is \"are control\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['house', 'apartment', 'condo', 'mansion', 'villa', 'cottage', 'bungalow', 'townhouse', 'duplex', 'triplex']"}
{"cat":"home","slot":"generalization","value":"cutting tool","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"Classification of cutting tool related to hypernyms.\";         A textual example of the semantic relation is \"are cutting tool\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['knife', 'scissors', 'razor', 'saw', 'axe', 'chisel', 'drill', 'gimlet', 'plane', 'hacksaw']"}
{"cat":"home","slot":"generalization","value":"amount","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"Classification of amount related to hypernyms.\";         A textual example of the semantic relation is \"are amount\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"living room\", \"bedroom\", \"kitchen\", \"bathroom\", \"dining room\", \"garage\", \"basement\", \"attic\", \"yard\", \"patio\"]"}
{"cat":"home","slot":"generalization","value":"controller","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"Classification of controller related to hypernyms.\";         A textual example of the semantic relation is \"are controller\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['house', 'building', 'residence', 'abode', 'dwelling', 'domicile', 'home', 'mansion', 'cottage', 'villa']"}
{"cat":"home","slot":"generalization","value":"passage","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"Classification of passage related to hypernyms.\";         A textual example of the semantic relation is \"are passage\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['house', 'apartment', 'residence', 'abode', 'dwelling', 'cottage', 'condominium', 'bungalow', 'villa', 'townhouse']"}
{"cat":"home","slot":"generalization","value":"measure","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"Classification of measure related to hypernyms.\";         A textual example of the semantic relation is \"are measure\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['house', 'residence', 'dwelling', 'abode', 'mansion', 'cottage', 'apartment', 'condominium', 'bungalow', 'villa']"}
{"cat":"home","slot":"generalization","value":"quantity","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"Classification of quantity related to hypernyms.\";         A textual example of the semantic relation is \"are quantity\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"household\", \"residence\", \"dwelling\", \"abode\", \"habitation\", \"lodging\", \"shelter\", \"haven\", \"sanctuary\", \"refuge\"]"}
{"cat":"home","slot":"generalization","value":"cutter","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"Classification of cutter related to hypernyms.\";         A textual example of the semantic relation is \"are cutter\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['house', 'apartment', 'condo', 'cottage', 'bungalow', 'villa', 'mansion', 'castle', 'manor', 'palace']"}
{"cat":"home","slot":"generalization","value":"furnishing","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"Classification of furnishing related to hypernyms.\";         A textual example of the semantic relation is \"are furnishing\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['bed', 'sofa', 'table', 'chair', 'desk', 'dresser', 'couch', 'bookshelf', 'wardrobe', 'nightstand']"}
{"cat":"home","slot":"generalization","value":"containerful","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"Classification of containerful related to hypernyms.\";         A textual example of the semantic relation is \"are containerful\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['house', 'apartment', 'condominium', 'villa', 'cottage', 'bungalow', 'mansion', 'chateau', 'castle', 'palace']"}
{"cat":"home","slot":"generalization","value":"approach","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"Classification of approach related to hypernyms.\";         A textual example of the semantic relation is \"are approach\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['house', 'apartment', 'condo', 'villa', 'cottage', 'mansion', 'bungalow', 'townhouse', 'farmhouse', 'chalet']"}
{"cat":"home","slot":"generalization","value":"cup","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"Classification of cup related to hypernyms.\";         A textual example of the semantic relation is \"are cup\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"kitchen\", \"dining room\", \"living room\", \"bedroom\", \"bathroom\", \"garage\", \"basement\", \"attic\", \"yard\", \"garden\"]"}
{"cat":"home","slot":"generalization","value":"device","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"Classification of device related to hypernyms.\";         A textual example of the semantic relation is \"are device\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"refrigerator\", \"oven\", \"microwave\", \"toaster\", \"coffee maker\", \"blender\", \"vacuum cleaner\", \"washing machine\", \"dishwasher\", \"air conditioner\"]"}
{"cat":"home","slot":"generalization","value":"bottle","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"Classification of bottle related to hypernyms.\";         A textual example of the semantic relation is \"are bottle\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['house', 'apartment', 'condo', 'villa', 'cottage', 'bungalow', 'mansion', 'townhouse', 'flat', 'residence']"}
{"cat":"home","slot":"generalization","value":"area","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"Classification of area related to hypernyms.\";         A textual example of the semantic relation is \"are area\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['living room', 'kitchen', 'bedroom', 'bathroom', 'dining room', 'family room', 'den', 'study', 'office', 'laundry room']"}
{"cat":"home","slot":"generalization","value":"spigot","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"Classification of spigot related to hypernyms.\";         A textual example of the semantic relation is \"are spigot\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['house', 'residence', 'abode', 'domicile', 'dwelling', 'haven', 'shelter', 'mansion', 'cottage', 'villa']"}
{"cat":"home","slot":"generalization","value":"way","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"Classification of way related to hypernyms.\";         A textual example of the semantic relation is \"are way\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"house\", \"apartment\", \"condo\", \"cottage\", \"villa\", \"bungalow\", \"mansion\", \"castle\", \"palace\", \"estate\"]"}
{"cat":"home","slot":"generalization","value":"cutting implement","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"Classification of cutting implement related to hypernyms.\";         A textual example of the semantic relation is \"are cutting implement\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"knife\", \"scissors\", \"razor\", \"saw\", \"axe\", \"chisel\", \"plane\", \"file\", \"drill\", \"pliers\"]"}
{"cat":"home","slot":"generalization","value":"indefinite quantity","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"Classification of indefinite quantity related to hypernyms.\";         A textual example of the semantic relation is \"are indefinite quantity\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"furniture\", \"appliances\", \"decorations\", \"utensils\", \"curtains\", \"carpets\", \"paintings\", \"books\", \"clothes\", \"toys\"]"}
{"cat":"home","slot":"generalization","value":"jar","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"Classification of jar related to hypernyms.\";         A textual example of the semantic relation is \"are jar\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['container', 'vessel', 'receptacle', 'storage', 'jar', 'pottery', 'clay', 'glass', 'porcelain', 'ceramic']"}
{"cat":"home","slot":"generalization","value":"faucet","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"Classification of faucet related to hypernyms.\";         A textual example of the semantic relation is \"are faucet\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"sink\", \"bathroom\", \"kitchen\", \"plumbing\", \"fixture\", \"water\", \"tap\", \"spigot\", \"valve\", \"handle\"]"}
{"cat":"home","slot":"part","value":"seat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"All the constitutive parts of seat.\";         A textual example of the semantic relation is \"can have seat\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['chair', 'couch', 'sofa', 'bench', 'stool', 'ottoman', 'love seat', 'recliner', 'armchair', 'chaise longue']"}
{"cat":"home","slot":"generalization","value":"seat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"Classification of seat related to hypernyms.\";         A textual example of the semantic relation is \"are seat\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"couch\", \"sofa\", \"armchair\", \"recliner\", \"ottoman\", \"love seat\", \"chaise longue\", \"bench\", \"stool\", \"chair\"]"}
{"cat":"home","slot":"place","value":"entrance","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"All the entities in which entrance can be experienced, found or perceived.\";         A textual example of the semantic relation is \"can be found or used in entrances\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"door\", \"lock\", \"key\", \"handle\", \"knob\", \"hinge\", \"threshold\", \"mat\", \"frame\", \"gate\"]"}
{"cat":"home","slot":"generalization","value":"room","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"Classification of room related to hypernyms.\";         A textual example of the semantic relation is \"are room\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['kitchen', 'bedroom', 'bathroom', 'living room', 'dining room', 'den', 'study', 'office', 'basement', 'attic']"}
{"cat":"home","slot":"generalization","value":"access","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"Classification of access related to hypernyms.\";         A textual example of the semantic relation is \"are access\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"house\", \"apartment\", \"condo\", \"villa\", \"cottage\", \"bungalow\", \"mansion\", \"townhouse\", \"duplex\", \"residence\"]"}
{"cat":"home","slot":"generalization","value":"support","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"Classification of support related to hypernyms.\";         A textual example of the semantic relation is \"are support\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['house', 'apartment', 'condominium', 'villa', 'mansion', 'bungalow', 'cottage', 'townhouse', 'duplex', 'triplex']"}
{"cat":"home","slot":"material","value":"silver","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"home\";         The returned words must satisfy the semantic relation \"Material of which silver is composed.\";         A textual example of the semantic relation is \"can be made of silver\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"spoon\", \"fork\", \"knife\", \"teaspoon\", \"soup spoon\", \"salad fork\", \"dinner knife\", \"dessert spoon\", \"serving spoon\", \"butter knife\"]"}
{"cat":"appliance","slot":"bodyPart","value":"ear","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"All the body parts which are involved in interacting with ear.\";         A textual example of the semantic relation is \"can have or be used with ear\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"stethoscope\", \"earphones\", \"earbuds\", \"earplugs\", \"hearing aid\", \"earmuffs\", \"ear thermometer\", \"ear trumpet\", \"ear candle\", \"ear irrigation\"]"}
{"cat":"appliance","slot":"bodyPart","value":"mouth","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"All the body parts which are involved in interacting with mouth.\";         A textual example of the semantic relation is \"can have or be used with mouth\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['fridge', 'microwave', 'toaster', 'blender', 'coffee maker', 'kettle', 'dishwasher', 'stove', 'oven', 'washing machine']"}
{"cat":"appliance","slot":"accessory","value":"tablet","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"All those objects that may have to do with tablet. The constraint is that there must be a physical contact and that the use of such object is strictly necessary for tablet.\";         A textual example of the semantic relation is \"are related with tablet\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['charger', 'stylus', 'case', 'screen protector', 'keyboard', 'speaker', 'adapter', 'stand', 'headphones', 'mouse']"}
{"cat":"appliance","slot":"content","value":"programmable","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"All the entities which might be contained within programmable, without being constitutive parts of it.\";         A textual example of the semantic relation is \"contain programmables\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"refrigerator\", \"washing machine\", \"dishwasher\", \"microwave oven\", \"air conditioner\", \"coffee maker\", \"toaster\", \"vacuum cleaner\", \"television\", \"computer\"]"}
{"cat":"appliance","slot":"accessory","value":"salt","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"All those objects that may have to do with salt. The constraint is that there must be a physical contact and that the use of such object is strictly necessary for salt.\";         A textual example of the semantic relation is \"are related with salt\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['salt shaker', 'salt grinder', 'salt cellar', 'salt pig', 'salt mill', 'salt spoon', 'salt dish', 'salt pot', 'salt box', 'salt cruet']"}
{"cat":"appliance","slot":"efficiency","value":"fragile","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"Positive (efficiency) or negative (inefficiency) features of fragile related to their function.\";         A textual example of the semantic relation is \"can be fragile\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"durable\", \"reliable\", \"efficient\", \"long-lasting\", \"sturdy\", \"robust\", \"resilient\", \"tough\", \"hardy\", \"strong\"]"}
{"cat":"appliance","slot":"content","value":"alcohol","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"All the entities which might be contained within alcohol, without being constitutive parts of it.\";         A textual example of the semantic relation is \"contain alcohols\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"refrigerator\", \"freezer\", \"wine cooler\", \"beer fridge\", \"liquor cabinet\", \"bar\", \"kegerator\", \"wine rack\", \"ice maker\", \"cocktail shaker\"]"}
{"cat":"appliance","slot":"user","value":"teacher","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"All the kinds of living beings which are able to operate, employ, interact with or perceive teacher.\";         A textual example of the semantic relation is \"are used by teachers\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"computer\", \"projector\", \"whiteboard\", \"printer\", \"scanner\", \"interactive display\", \"tablet\", \"smartphone\", \"speaker\", \"headphones\"]"}
{"cat":"appliance","slot":"sound","value":"ring","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"All the entries with which the sound of ring can be described.\";         A textual example of the semantic relation is \"can ring\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['bell', 'alarm', 'phone', 'doorbell', 'clock', 'timer', 'oven', 'stove', 'washing machine', 'dryer']"}
{"cat":"appliance","slot":"sound","value":"ring","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"All the entries with which the sound of ring can be described.\";         A textual example of the semantic relation is \" ring\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"telephone\", \"doorbell\", \"alarm clock\", \"cash register\", \"bell\", \"school bell\", \"fire alarm\", \"cowbell\", \"gong\", \"chime\"]"}
{"cat":"appliance","slot":"user","value":"patient","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"All the kinds of living beings which are able to operate, employ, interact with or perceive patient.\";         A textual example of the semantic relation is \"are used by patients\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"television\", \"refrigerator\", \"microwave\", \"toaster\", \"coffee maker\", \"blender\", \"vacuum cleaner\", \"washing machine\", \"dryer\", \"dishwasher\"]"}
{"cat":"appliance","slot":"content","value":"mercury","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"All the entities which might be contained within mercury, without being constitutive parts of it.\";         A textual example of the semantic relation is \"contain mercuries\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['refrigerator', 'washing machine', 'dishwasher', 'microwave', 'oven', 'stove', 'toaster', 'coffee maker', 'blender', 'vacuum cleaner']"}
{"cat":"appliance","slot":"user","value":"doctor","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"All the kinds of living beings which are able to operate, employ, interact with or perceive doctor.\";         A textual example of the semantic relation is \"are used by doctors\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"stethoscope\", \"thermometer\", \"syringe\", \"scalpel\", \"forceps\", \"tongue depressor\", \"reflex hammer\", \"otoscope\", \"ophthalmoscope\", \"ECG machine\"]"}
{"cat":"appliance","slot":"specialization","value":"landline","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"Classification of landline in terms of their hyponyms.\";         A textual example of the semantic relation is \"are landline\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['telephone', 'phone', 'communication device', 'calling machine', 'handset', 'base unit', 'cordless phone', 'answering machine', 'dialer', 'speakerphone']"}
{"cat":"appliance","slot":"specialization","value":"smartphone","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"Classification of smartphone in terms of their hyponyms.\";         A textual example of the semantic relation is \"are smartphone\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['refrigerator', 'microwave', 'dishwasher', 'washing machine', 'dryer', 'oven', 'stove', 'air conditioner', 'television', 'vacuum cleaner']"}
{"cat":"appliance","slot":"specialization","value":"cordless","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"Classification of cordless in terms of their hyponyms.\";         A textual example of the semantic relation is \"are cordless\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['cordless phone', 'cordless drill', 'cordless vacuum', 'cordless screwdriver', 'cordless mouse', 'cordless keyboard', 'cordless headphones', 'cordless lawn mower', 'cordless power tools', 'cordless home appliances']"}
{"cat":"appliance","slot":"specialization","value":"wireless telephone","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"Classification of wireless telephone in terms of their hyponyms.\";         A textual example of the semantic relation is \"are wireless telephone\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"smartphone\", \"cellphone\", \"mobile phone\", \"cellular phone\", \"handset\", \"wireless phone\", \"phone\", \"cell\", \"mobile\", \"cellular\"]"}
{"cat":"appliance","slot":"specialization","value":"telephone extension","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"Classification of telephone extension in terms of their hyponyms.\";         A textual example of the semantic relation is \"are telephone extension\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['telephone', 'extension', 'cordless', 'landline', 'cellular', 'smartphone', 'fax', 'modem', 'voicemail', 'answering machine']"}
{"cat":"appliance","slot":"specialization","value":"French telephone","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"Classification of French telephone in terms of their hyponyms.\";         A textual example of the semantic relation is \"are French telephone\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['French telephone', 'appliance', 'communication device', 'phone', 'telecommunication device', 'telephone', 'telephone set', 'telephony device', 'landline', 'corded telephone']"}
{"cat":"appliance","slot":"specialization","value":"remote terminal","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"Classification of remote terminal in terms of their hyponyms.\";         A textual example of the semantic relation is \"are remote terminal\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['television', 'computer', 'smartphone', 'tablet', 'laptop', 'printer', 'scanner', 'fax machine', 'smartwatch', 'smart speaker']"}
{"cat":"appliance","slot":"specialization","value":"freemail","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"Classification of freemail in terms of their hyponyms.\";         A textual example of the semantic relation is \"are freemail\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['refrigerator', 'microwave', 'dishwasher', 'washing machine', 'dryer', 'oven', 'toaster', 'coffee maker', 'vacuum cleaner', 'air conditioner']"}
{"cat":"appliance","slot":"specialization","value":"link-attached station","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"Classification of link-attached station in terms of their hyponyms.\";         A textual example of the semantic relation is \"are link-attached station\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"microwave\", \"refrigerator\", \"dishwasher\", \"washing machine\", \"dryer\", \"oven\", \"stove\", \"toaster\", \"blender\", \"coffee maker\"]"}
{"cat":"appliance","slot":"specialization","value":"job-oriented terminal","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"Classification of job-oriented terminal in terms of their hyponyms.\";         A textual example of the semantic relation is \"are job-oriented terminal\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['refrigerator', 'washing machine', 'microwave oven', 'dishwasher', 'air conditioner', 'television', 'computer', 'printer', 'vacuum cleaner', 'toaster']"}
{"cat":"appliance","slot":"specialization","value":"radiophone","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"Classification of radiophone in terms of their hyponyms.\";         A textual example of the semantic relation is \"are radiophone\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['radio', 'walkie-talkie', 'CB radio', 'Ham radio', 'marine radio', 'airband radio', 'shortwave radio', 'police radio', 'scanner', 'transceiver']"}
{"cat":"appliance","slot":"specialization","value":"dial phone","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"Classification of dial phone in terms of their hyponyms.\";         A textual example of the semantic relation is \"are dial phone\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"rotary phone\", \"telephone\", \"landline\", \"vintage phone\", \"retro phone\", \"old-fashioned phone\", \"analog phone\", \"push-button phone\", \"corded phone\", \"desk phone\"]"}
{"cat":"appliance","slot":"specialization","value":"speakerphone","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"Classification of speakerphone in terms of their hyponyms.\";         A textual example of the semantic relation is \"are speakerphone\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['speakerphone', 'intercom', 'megaphone', 'loudspeaker', 'PA system', 'audio equipment', 'sound system', 'communication device', 'electronic gadget', 'home appliance']"}
{"cat":"appliance","slot":"specialization","value":"handset","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"Classification of handset in terms of their hyponyms.\";         A textual example of the semantic relation is \"are handset\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['refrigerator', 'microwave', 'dishwasher', 'washing machine', 'clothes dryer', 'air conditioner', 'television', 'stove', 'oven', 'toaster']"}
{"cat":"appliance","slot":"specialization","value":"remote station","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"Classification of remote station in terms of their hyponyms.\";         A textual example of the semantic relation is \"are remote station\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['television', 'refrigerator', 'microwave', 'washing machine', 'dishwasher', 'air conditioner', 'vacuum cleaner', 'toaster', 'blender', 'coffee maker']"}
{"cat":"appliance","slot":"specialization","value":"link-attached terminal","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"Classification of link-attached terminal in terms of their hyponyms.\";         A textual example of the semantic relation is \"are link-attached terminal\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['refrigerator', 'washing machine', 'dishwasher', 'microwave', 'oven', 'toaster', 'coffee maker', 'vacuum cleaner', 'air conditioner', 'television']"}
{"cat":"appliance","slot":"specialization","value":"spam","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"Classification of spam in terms of their hyponyms.\";         A textual example of the semantic relation is \"are spam\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['refrigerator', 'washing machine', 'microwave', 'dishwasher', 'stove', 'oven', 'toaster', 'coffee maker', 'vacuum cleaner', 'air conditioner']"}
{"cat":"appliance","slot":"specialization","value":"radiotelephone","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"Classification of radiotelephone in terms of their hyponyms.\";         A textual example of the semantic relation is \"are radiotelephone\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['telephone', 'radio', 'cellphone', 'smartphone', 'landline', 'cordless', 'satellite', 'walkie-talkie', 'CB radio', 'ham radio']"}
{"cat":"appliance","slot":"specialization","value":"extension phone","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"Classification of extension phone in terms of their hyponyms.\";         A textual example of the semantic relation is \"are extension phone\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"cordless\", \"wireless\", \"portable\", \"handset\", \"base\", \"charger\", \"speaker\", \"microphone\", \"display\", \"keypad\"]"}
{"cat":"appliance","slot":"specialization","value":"desk phone","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"Classification of desk phone in terms of their hyponyms.\";         A textual example of the semantic relation is \"are desk phone\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['telephone', 'landline', 'cordless phone', 'desk phone', 'office phone', 'home phone', 'answering machine', 'speakerphone', 'rotary phone', 'push-button phone']"}
{"cat":"appliance","slot":"specialization","value":"dial telephone","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"Classification of dial telephone in terms of their hyponyms.\";         A textual example of the semantic relation is \"are dial telephone\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"rotary telephone\", \"push-button telephone\", \"landline telephone\", \"corded telephone\", \"cordless telephone\", \"wall-mounted telephone\", \"tabletop telephone\", \"antique telephone\", \"novelty telephone\", \"payphone\"]"}
{"cat":"appliance","slot":"specialization","value":"extension","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"Classification of extension in terms of their hyponyms.\";         A textual example of the semantic relation is \"are extension\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"refrigerator\", \"microwave\", \"washing machine\", \"dishwasher\", \"oven\", \"toaster\", \"coffee maker\", \"vacuum cleaner\", \"air conditioner\", \"television\"]"}
{"cat":"appliance","slot":"specialization","value":"junk e-mail","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"Classification of junk e-mail in terms of their hyponyms.\";         A textual example of the semantic relation is \"are junk e-mail\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"refrigerator\", \"washing machine\", \"microwave\", \"dishwasher\", \"air conditioner\", \"oven\", \"toaster\", \"blender\", \"coffee maker\", \"vacuum cleaner\"]"}
{"cat":"appliance","slot":"specialization","value":"pay-station","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"Classification of pay-station in terms of their hyponyms.\";         A textual example of the semantic relation is \"are pay-station\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['vending_machine', 'parking_meter', 'ticket_machine', 'coin_operated_machine', 'pay_kiosk', 'payment_terminal', 'change_machine', 'automated_teller_machine', 'self-service_kiosk', 'cash_dispenser']"}
{"cat":"appliance","slot":"specialization","value":"pay-phone","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"Classification of pay-phone in terms of their hyponyms.\";         A textual example of the semantic relation is \"are pay-phone\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['telephone', 'phone', 'communication', 'device', 'technology', 'equipment', 'machine', 'hardware', 'gadget', 'appliance']"}
{"cat":"appliance","slot":"shape","value":"rectangular","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"Form of rectangular.\";         A textual example of the semantic relation is \"can be rectangular\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['television', 'microwave', 'toaster', 'refrigerator', 'stove', 'oven', 'dishwasher', 'washing machine', 'dryer', 'air conditioner']"}
{"cat":"appliance","slot":"shape","value":"long","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"Form of long.\";         A textual example of the semantic relation is \"can be long\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['stove', 'refrigerator', 'oven', 'dishwasher', 'washing machine', 'dryer', 'microwave', 'toaster', 'blender', 'coffee maker']"}
{"cat":"appliance","slot":"shape","value":"elongated","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"Form of elongated.\";         A textual example of the semantic relation is \"can be elongated\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['television', 'refrigerator', 'dishwasher', 'washing machine', 'dryer', 'microwave', 'toaster', 'coffee maker', 'vacuum cleaner', 'iron']"}
{"cat":"appliance","slot":"shape","value":"pointy","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"Form of pointy.\";         A textual example of the semantic relation is \"can be pointy\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"knife\", \"scissors\", \"awl\", \"needle\", \"sword\", \"arrow\", \"spear\", \"dart\", \"harpoon\", \"spike\"]"}
{"cat":"appliance","slot":"supply","value":"diesel","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"The power mode that allows the functioning of diesel.\";         A textual example of the semantic relation is \"use diesel\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['diesel generator', 'diesel engine', 'diesel-powered', 'diesel-fueled', 'diesel-driven', 'diesel-operated', 'diesel-run', 'diesel-fired', 'diesel-powered', 'diesel-fueled']"}
{"cat":"appliance","slot":"supply","value":"petrol","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"The power mode that allows the functioning of petrol.\";         A textual example of the semantic relation is \"use petrol\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['car', 'motorcycle', 'lawnmower', 'generator', 'chainsaw', 'snowblower', 'boat', 'ATV', 'scooter', 'outboard motor']"}
{"cat":"appliance","slot":"supply","value":"coal","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"The power mode that allows the functioning of coal.\";         A textual example of the semantic relation is \"use coal\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['stove', 'furnace', 'boiler', 'heater', 'generator', 'oven', 'cooker', 'fireplace', 'grill', 'barbecue']"}
{"cat":"appliance","slot":"supply","value":"fire","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"The power mode that allows the functioning of fire.\";         A textual example of the semantic relation is \"use fire\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['stove', 'fireplace', 'oven', 'grill', 'barbecue', 'fire pit', 'chimney', 'smoker', 'lighter', 'torch']"}
{"cat":"appliance","slot":"supply","value":"gas","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"The power mode that allows the functioning of gas.\";         A textual example of the semantic relation is \"use gas\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['stove', 'oven', 'cooktop', 'grill', 'fireplace', 'furnace', 'water heater', 'dryer', 'generator', 'heater']"}
{"cat":"appliance","slot":"supply","value":"electricity","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"The power mode that allows the functioning of electricity.\";         A textual example of the semantic relation is \"use electricity\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"refrigerator\", \"microwave\", \"dishwasher\", \"washing machine\", \"dryer\", \"air conditioner\", \"television\", \"computer\", \"toaster\", \"electric kettle\"]"}
{"cat":"appliance","slot":"supply","value":"propane","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"The power mode that allows the functioning of propane.\";         A textual example of the semantic relation is \"use propane\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['propane stove', 'propane grill', 'propane heater', 'propane generator', 'propane refrigerator', 'propane lantern', 'propane water heater', 'propane fireplace', 'propane furnace', 'propane range']"}
{"cat":"appliance","slot":"supply","value":"convection","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"The power mode that allows the functioning of convection.\";         A textual example of the semantic relation is \"use convection\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['oven', 'microwave', 'toaster', 'air conditioner', 'dryer', 'refrigerator', 'freezer', 'stove', 'heater', 'furnace']"}
{"cat":"appliance","slot":"supply","value":"biomass","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"The power mode that allows the functioning of biomass.\";         A textual example of the semantic relation is \"use biomass\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['stove', 'furnace', 'boiler', 'heater', 'oven', 'range', 'grill', 'fireplace', 'water heater', 'dryer']"}
{"cat":"appliance","slot":"supply","value":"electric","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"The power mode that allows the functioning of electric.\";         A textual example of the semantic relation is \"use electric\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['microwave', 'fridge', 'oven', 'dishwasher', 'washing machine', 'coffee maker', 'toaster', 'blender', 'vacuum cleaner', 'air conditioner']"}
{"cat":"appliance","slot":"supply","value":"burning","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"The power mode that allows the functioning of burning.\";         A textual example of the semantic relation is \"use burning\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['oven', 'stove', 'grill', 'fireplace', 'toaster', 'barbecue', 'smoker', 'chimney', 'furnace', 'range']"}
{"cat":"appliance","slot":"supply","value":"pellet","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"The power mode that allows the functioning of pellet.\";         A textual example of the semantic relation is \"use pellet\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['pellet stove', 'pellet grill', 'pellet smoker', 'pellet furnace', 'pellet boiler', 'pellet heater', 'pellet fireplace', 'pellet insert', 'pellet burner', 'pellet auger']"}
{"cat":"appliance","slot":"supply","value":"wood","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"The power mode that allows the functioning of wood.\";         A textual example of the semantic relation is \"use wood\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['fireplace', 'stove', 'woodburner', 'furnace', 'boiler', 'grill', 'smoker', 'oven', 'heater', 'chimney']"}
{"cat":"appliance","slot":"purpose","value":"heat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"All of the purposes for which heat is interacted with.\";         A textual example of the semantic relation is \"are used for heat\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"oven\", \"stove\", \"microwave\", \"toaster\", \"grill\", \"kettle\", \"coffee maker\", \"water heater\", \"hair dryer\", \"iron\"]"}
{"cat":"appliance","slot":"purpose","value":"experiment","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"All of the purposes for which experiment is interacted with.\";         A textual example of the semantic relation is \"are used for experiment\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['microwave', 'oven', 'refrigerator', 'dishwasher', 'washing machine', 'dryer', 'air conditioner', 'water heater', 'vacuum cleaner', 'toaster']"}
{"cat":"appliance","slot":"purpose","value":"speak","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"All of the purposes for which speak is interacted with.\";         A textual example of the semantic relation is \"are used to speak\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['microphone', 'telephone', 'speaker', 'intercom', 'megaphone', 'headset', 'walkie-talkie', 'bullhorn', 'public address system', 'voice recorder']"}
{"cat":"appliance","slot":"purpose","value":"teaching","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"All of the purposes for which teaching is interacted with.\";         A textual example of the semantic relation is \"are used for teaching\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"smartboard\", \"projector\", \"computer\", \"tablet\", \"interactive whiteboard\", \"document camera\", \"printer\", \"scanner\", \"speakers\", \"headphones\"]"}
{"cat":"appliance","slot":"purpose","value":"burn","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"All of the purposes for which burn is interacted with.\";         A textual example of the semantic relation is \"are used to burn\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"stove\", \"fireplace\", \"barbecue\", \"lighter\", \"candle\", \"incense\", \"oven\", \"grill\", \"campfire\", \"smoker\"]"}
{"cat":"appliance","slot":"purpose","value":"cooking","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"All of the purposes for which cooking is interacted with.\";         A textual example of the semantic relation is \"are used for cooking\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['oven', 'stove', 'microwave', 'toaster', 'grill', 'blender', 'food processor', 'slow cooker', 'pressure cooker', 'rice cooker']"}
{"cat":"appliance","slot":"purpose","value":"education","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"All of the purposes for which education is interacted with.\";         A textual example of the semantic relation is \"are used for education\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"computer\", \"tablet\", \"smartboard\", \"projector\", \"printer\", \"scanner\", \"speakers\", \"headphones\", \"microphone\", \"whiteboard\"]"}
{"cat":"appliance","slot":"purpose","value":"enlarge","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"All of the purposes for which enlarge is interacted with.\";         A textual example of the semantic relation is \"are used to enlarge\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"microwave\", \"oven\", \"refrigerator\", \"dishwasher\", \"washing machine\", \"dryer\", \"air conditioner\", \"television\", \"stove\", \"toaster\"]"}
{"cat":"appliance","slot":"purpose","value":"presentation","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"All of the purposes for which presentation is interacted with.\";         A textual example of the semantic relation is \"are used for presentation\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"projector\", \"television\", \"computer\", \"smartphone\", \"tablet\", \"digital camera\", \"video camera\", \"speaker\", \"microphone\", \"whiteboard\"]"}
{"cat":"appliance","slot":"purpose","value":"display","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"All of the purposes for which display is interacted with.\";         A textual example of the semantic relation is \"are used to display\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['television', 'monitor', 'projector', 'smartphone', 'tablet', 'laptop', 'desktop', 'digital signage', 'scoreboard', 'dashboard']"}
{"cat":"appliance","slot":"purpose","value":"measure","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"All of the purposes for which measure is interacted with.\";         A textual example of the semantic relation is \"are used to measure\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['scale', 'ruler', 'tape measure', 'caliper', 'odometer', 'thermometer', 'barometer', 'hygrometer', 'stopwatch', 'timer']"}
{"cat":"appliance","slot":"purpose","value":"cook","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"All of the purposes for which cook is interacted with.\";         A textual example of the semantic relation is \"are used to cook\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['stove', 'oven', 'microwave', 'grill', 'toaster', 'rice cooker', 'pressure cooker', 'slow cooker', 'wok', 'frying pan']"}
{"cat":"appliance","slot":"purpose","value":"telephone","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"All of the purposes for which telephone is interacted with.\";         A textual example of the semantic relation is \"are used for telephone\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['telephone', 'cell phone', 'smartphone', 'landline', 'cordless phone', 'flip phone', 'rotary phone', 'payphone', 'voicemail', 'answering machine']"}
{"cat":"appliance","slot":"purpose","value":"phone","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"All of the purposes for which phone is interacted with.\";         A textual example of the semantic relation is \"are used for phone\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['television', 'microwave', 'refrigerator', 'washing machine', 'dishwasher', 'air conditioner', 'vacuum cleaner', 'toaster', 'coffee maker', 'oven']"}
{"cat":"appliance","slot":"purpose","value":"call","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"All of the purposes for which call is interacted with.\";         A textual example of the semantic relation is \"are used for call\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"refrigerator\", \"washing machine\", \"microwave\", \"oven\", \"dishwasher\", \"air conditioner\", \"television\", \"computer\", \"vacuum cleaner\", \"toaster\"]"}
{"cat":"appliance","slot":"purpose","value":"cook","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"All of the purposes for which cook is interacted with.\";         A textual example of the semantic relation is \"are used for cook\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['oven', 'microwave', 'stove', 'grill', 'toaster', 'blender', 'food processor', 'kitchen aid', 'instant pot', 'air fryer']"}
{"cat":"appliance","slot":"purpose","value":"wash","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"All of the purposes for which wash is interacted with.\";         A textual example of the semantic relation is \"are used for wash\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"washing machine\", \"dishwasher\", \"laundry machine\", \"washer\", \"detergent\", \"clothesline\", \"dryer\", \"soap\", \"spin cycle\", \"rinse cycle\"]"}
{"cat":"appliance","slot":"purpose","value":"service","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"All of the purposes for which service is interacted with.\";         A textual example of the semantic relation is \"are used for service\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"dishwasher\", \"microwave\", \"oven\", \"refrigerator\", \"washing machine\", \"clothes dryer\", \"vacuum cleaner\", \"air conditioner\", \"water heater\", \"toaster\"]"}
{"cat":"appliance","slot":"purpose","value":"truck","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"All of the purposes for which truck is interacted with.\";         A textual example of the semantic relation is \"are used for truck\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['refrigerator', 'washing machine', 'dishwasher', 'microwave', 'oven', 'toaster', 'coffee maker', 'vacuum cleaner', 'air conditioner', 'television']"}
{"cat":"appliance","slot":"purpose","value":"project","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"All of the purposes for which project is interacted with.\";         A textual example of the semantic relation is \"are used to project\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['projector', 'TV', 'microwave', 'fridge', 'washing machine', 'dishwasher', 'oven', 'toaster', 'coffee maker']"}
{"cat":"appliance","slot":"purpose","value":"communication","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"All of the purposes for which communication is interacted with.\";         A textual example of the semantic relation is \"are used for communication\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['telephone', 'smartphone', 'fax machine', 'intercom', 'walkie-talkie', 'answering machine', 'video conferencing system', 'speakerphone', 'radiotelephone', 'telegraph']"}
{"cat":"appliance","slot":"place","value":"restaurant","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"All the entities in which restaurant can be experienced, found or perceived.\";         A textual example of the semantic relation is \"can be found or used in restaurants\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['stove', 'oven', 'microwave', 'fridge', 'freezer', 'dishwasher', 'mixer', 'grill', 'toaster', 'blender']"}
{"cat":"appliance","slot":"place","value":"weather station","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"All the entities in which weather station can be experienced, found or perceived.\";         A textual example of the semantic relation is \"can be found or used in weather stations\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['thermometer', 'barometer', 'hygrometer', 'anemometer', 'rain gauge', 'snow gauge', 'wind vane', 'weather balloon', 'radiosonde', 'satellite']"}
{"cat":"appliance","slot":"place","value":"hospital","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"All the entities in which hospital can be experienced, found or perceived.\";         A textual example of the semantic relation is \"can be found or used in hospitals\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"defibrillator\", \"syringe\", \"stethoscope\", \"ECG\", \"ultrasound\", \"MRI\", \"X-ray\", \"ventilator\", \"infusion pump\", \"patient monitor\"]"}
{"cat":"appliance","slot":"place","value":"planetarium","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"All the entities in which planetarium can be experienced, found or perceived.\";         A textual example of the semantic relation is \"can be found or used in planetariums\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['projector', 'telescope', 'dome', 'speaker', 'control panel', 'seating', 'lighting', 'screen', 'ventilation', 'sound system']"}
{"cat":"appliance","slot":"place","value":"cinema","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"All the entities in which cinema can be experienced, found or perceived.\";         A textual example of the semantic relation is \"can be found or used in cinemas\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['projector', 'speaker', 'screen', 'popcorn_machine', 'ticket_dispenser', 'seat', 'lighting', 'sound_system', 'air_conditioner', 'screen_curtain']"}
{"cat":"appliance","slot":"place","value":"classroom","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"All the entities in which classroom can be experienced, found or perceived.\";         A textual example of the semantic relation is \"can be found or used in classrooms\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['whiteboard', 'projector', 'computer', 'printer', 'interactive display', 'speakers', 'table', 'chair', 'desk', 'cabinet']"}
{"cat":"appliance","slot":"place","value":"hotel","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"All the entities in which hotel can be experienced, found or perceived.\";         A textual example of the semantic relation is \"can be found or used in hotels\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['television', 'refrigerator', 'coffee maker', 'hair dryer', 'ironing board', 'safe', 'mini bar', 'air conditioner', 'telephone', 'clock radio']"}
{"cat":"appliance","slot":"place","value":"car","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"All the entities in which car can be experienced, found or perceived.\";         A textual example of the semantic relation is \"can be found or used in cars\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['radio', 'air conditioning', 'GPS', 'seat', 'steering wheel', 'dashboard', 'engine', 'headlight', 'brake', 'clutch']"}
{"cat":"appliance","slot":"place","value":"bakery","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"All the entities in which bakery can be experienced, found or perceived.\";         A textual example of the semantic relation is \"can be found or used in bakeries\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['mixer', 'oven', 'refrigerator', 'freezer', 'dough proofer', 'bread slicer', 'baking sheet', 'scale', 'electric whisk', 'rolling pin']"}
{"cat":"appliance","slot":"place","value":"factory","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"All the entities in which factory can be experienced, found or perceived.\";         A textual example of the semantic relation is \"can be found or used in factories\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['conveyor', 'forklift', 'crane', 'press', 'lathe', 'mill', 'grinder', 'welder', 'generator', 'compressor']"}
{"cat":"appliance","slot":"place","value":"theater","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"All the entities in which theater can be experienced, found or perceived.\";         A textual example of the semantic relation is \"can be found or used in theaters\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['projector', 'speaker', 'screen', 'lighting', 'soundboard', 'microphone', 'spotlight', 'stage', 'curtain', 'ticket machine']"}
{"cat":"appliance","slot":"place","value":"baker","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"All the entities in which baker can be experienced, found or perceived.\";         A textual example of the semantic relation is \"can be found or used in bakers\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['oven', 'mixer', 'whisk', 'rolling pin', 'baking sheet', 'bread machine', 'dough hook', 'cookie cutter', 'pastry brush', 'cake pan']"}
{"cat":"appliance","slot":"place","value":"office","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"All the entities in which office can be experienced, found or perceived.\";         A textual example of the semantic relation is \"can be found or used in offices\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"printer\", \"scanner\", \"fax machine\", \"photocopier\", \"computer\", \"telephone\", \"projector\", \"whiteboard\", \"filing cabinet\", \"desk\"]"}
{"cat":"appliance","slot":"place","value":"lab","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"All the entities in which lab can be experienced, found or perceived.\";         A textual example of the semantic relation is \"can be found or used in labs\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['microscope', 'centrifuge', 'pipette', 'beaker', 'test tube', 'spectrophotometer', 'autoclave', 'incubator', 'thermometer', 'scale']"}
{"cat":"appliance","slot":"place","value":"school","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"All the entities in which school can be experienced, found or perceived.\";         A textual example of the semantic relation is \"can be found or used in schools\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['computer', 'projector', 'printer', 'whiteboard', 'microscope', 'stethoscope', 'beaker', 'test tube', 'scale', 'calculator']"}
{"cat":"appliance","slot":"place","value":"home","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"All the entities in which home can be experienced, found or perceived.\";         A textual example of the semantic relation is \"can be found or used in homes\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['refrigerator', 'oven', 'dishwasher', 'washing machine', 'microwave', 'air conditioner', 'television', 'vacuum cleaner', 'toaster', 'coffee maker']"}
{"cat":"appliance","slot":"place","value":"conference room","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"All the entities in which conference room can be experienced, found or perceived.\";         A textual example of the semantic relation is \"can be found or used in conference rooms\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['projector', 'speaker', 'microphone', 'whiteboard', 'television', 'computer', 'printer', 'videoconferencing system', 'air conditioner', 'coffee machine']"}
{"cat":"appliance","slot":"place","value":"kitchen","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"All the entities in which kitchen can be experienced, found or perceived.\";         A textual example of the semantic relation is \"can be found or used in kitchens\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"refrigerator\", \"oven\", \"microwave\", \"dishwasher\", \"toaster\", \"blender\", \"coffee maker\", \"food processor\", \"sink\", \"stove\"]"}
{"cat":"appliance","slot":"place","value":"room","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"All the entities in which room can be experienced, found or perceived.\";         A textual example of the semantic relation is \"can be found or used in rooms\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['refrigerator', 'stove', 'microwave', 'washing machine', 'dishwasher', 'air conditioner', 'heater', 'television', 'vacuum cleaner', 'toaster']"}
{"cat":"appliance","slot":"material","value":"metal","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"Material of which metal is composed.\";         A textual example of the semantic relation is \"can be made of metal\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['refrigerator', 'washing machine', 'dishwasher', 'oven', 'microwave', 'toaster', 'coffee maker', 'vacuum cleaner', 'air conditioner', 'water heater']"}
{"cat":"appliance","slot":"material","value":"plastic","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"Material of which plastic is composed.\";         A textual example of the semantic relation is \"can be made of plastic\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"microwave\", \"television\", \"toaster\", \"refrigerator\", \"vacuum cleaner\", \"blender\", \"hair dryer\", \"food processor\", \"coffee maker\", \"iron\"]"}
{"cat":"appliance","slot":"material","value":"steel","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"Material of which steel is composed.\";         A textual example of the semantic relation is \"can be made of steel\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['stove', 'refrigerator', 'oven', 'washing machine', 'dishwasher', 'microwave', 'toaster', 'blender', 'coffee maker', 'freezer']"}
{"cat":"appliance","slot":"material","value":"glass","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"Material of which glass is composed.\";         A textual example of the semantic relation is \"can be made of glass\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"microwave\", \"oven\", \"refrigerator\", \"stove\", \"dishwasher\", \"toaster\", \"blender\", \"coffee maker\", \"kettle\", \"food processor\"]"}
{"cat":"appliance","slot":"material","value":"cast iron","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"Material of which cast iron is composed.\";         A textual example of the semantic relation is \"can be made of cast iron\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['stove', 'cooker', 'oven', 'grill', 'heater', 'furnace', 'boiler', 'radiator', 'range', 'fireplace']"}
{"cat":"appliance","slot":"purpose","value":"screen","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"All of the purposes for which screen is interacted with.\";         A textual example of the semantic relation is \"are used for screen\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['television', 'monitor', 'laptop', 'smartphone', 'tablet', 'smartwatch', 'projector', 'digital camera', 'e-reader', 'virtual reality headset']"}
{"cat":"appliance","slot":"colorPattern","value":"silver","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"All the features that refer to the color or texture of silver.\";         A textual example of the semantic relation is \"can be silver\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['toaster', 'blender', 'coffee maker', 'microwave', 'refrigerator', 'dishwasher', 'washing machine', 'dryer', 'oven', 'freezer']"}
{"cat":"appliance","slot":"colorPattern","value":"silver","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"All the features that refer to the color or texture of silver.\";         A textual example of the semantic relation is \"can be silver\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['toaster', 'blender', 'coffee maker', 'microwave', 'refrigerator', 'dishwasher', 'washing machine', 'dryer', 'oven', 'freezer']"}
{"cat":"appliance","slot":"colorPattern","value":"black","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"All the features that refer to the color or texture of black.\";         A textual example of the semantic relation is \"can be black\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['television', 'dishwasher', 'stove', 'microwave', 'refrigerator', 'washing machine', 'coffee maker', 'toaster', 'vacuum cleaner', 'air conditioner']"}
{"cat":"appliance","slot":"colorPattern","value":"black","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"All the features that refer to the color or texture of black.\";         A textual example of the semantic relation is \"can be black\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['television', 'dishwasher', 'stove', 'microwave', 'refrigerator', 'washing machine', 'coffee maker', 'toaster', 'vacuum cleaner', 'air conditioner']"}
{"cat":"appliance","slot":"colorPattern","value":"white","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"All the features that refer to the color or texture of white.\";         A textual example of the semantic relation is \"can be white\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"fridge\", \"washer\", \"dryer\", \"dishwasher\", \"oven\", \"microwave\", \"toaster\", \"blender\", \"coffee maker\", \"air conditioner\"]"}
{"cat":"appliance","slot":"colorPattern","value":"white","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"All the features that refer to the color or texture of white.\";         A textual example of the semantic relation is \"can be white\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"fridge\", \"washer\", \"dryer\", \"dishwasher\", \"oven\", \"microwave\", \"toaster\", \"blender\", \"coffee maker\", \"air conditioner\"]"}
{"cat":"appliance","slot":"part","value":"handle","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"All the constitutive parts of handle.\";         A textual example of the semantic relation is \"can have handle\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['blender', 'coffee maker', 'dishwasher', 'food processor', 'garbage disposal', 'microwave', 'oven', 'refrigerator', 'toaster', 'washing machine']"}
{"cat":"appliance","slot":"part","value":"cord","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"All the constitutive parts of cord.\";         A textual example of the semantic relation is \"can have cord\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['vacuum', 'sewing machine', 'blender', 'coffee maker', 'toaster', 'mixer', 'iron', 'hair dryer', 'electric kettle', 'food processor']"}
{"cat":"appliance","slot":"part","value":"plug","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"All the constitutive parts of plug.\";         A textual example of the semantic relation is \"can have plug\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['toaster', 'microwave', 'blender', 'coffee maker', 'kettle', 'vacuum cleaner', 'hair dryer', 'iron', 'electric fan', 'electric heater']"}
{"cat":"appliance","slot":"part","value":"push-button","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"All the constitutive parts of push-button.\";         A textual example of the semantic relation is \"can have push-button\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['television', 'stereo', 'microwave', 'oven', 'washing machine', 'dishwasher', 'coffee maker', 'toaster', 'blender']"}
{"cat":"appliance","slot":"part","value":"door","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"All the constitutive parts of door.\";         A textual example of the semantic relation is \"can have door\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"refrigerator\", \"oven\", \"dishwasher\", \"washing machine\", \"dryer\", \"microwave\", \"freezer\", \"stove\", \"air conditioner\", \"furnace\"]"}
{"cat":"appliance","slot":"part","value":"knob","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"All the constitutive parts of knob.\";         A textual example of the semantic relation is \"can have knob\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"stove\", \"oven\", \"dishwasher\", \"washing machine\", \"dryer\", \"refrigerator\", \"microwave\", \"toaster\", \"coffee maker\", \"blender\"]"}
{"cat":"appliance","slot":"part","value":"rotor","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"All the constitutive parts of rotor.\";         A textual example of the semantic relation is \"can have rotor\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['microwave', 'washing machine', 'dishwasher', 'blender', 'food processor', 'vacuum cleaner', 'air conditioner', 'fridge', 'electric fan', 'oven']"}
{"cat":"appliance","slot":"part","value":"scale bar","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"All the constitutive parts of scale bar.\";         A textual example of the semantic relation is \"can have scale bar\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['microwave', 'oven', 'refrigerator', 'washing machine', 'dishwasher', 'air conditioner', 'television', 'computer', 'printer', 'scanner']"}
{"cat":"appliance","slot":"part","value":"bulb","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"All the constitutive parts of bulb.\";         A textual example of the semantic relation is \"can have bulb\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['lamp', 'light', 'flashlight', 'headlight', 'projector', 'torch', 'lantern', 'bulb', 'fluorescent', 'incandescent']"}
{"cat":"appliance","slot":"part","value":"microwave","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"All the constitutive parts of microwave.\";         A textual example of the semantic relation is \"can have microwave\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['magnetron', 'turntable', 'control panel', 'door', 'waveguide', 'cavity', 'fan', 'transformer', 'diode', 'capacitor']"}
{"cat":"appliance","slot":"part","value":"sensor","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"All the constitutive parts of sensor.\";         A textual example of the semantic relation is \"can have sensor\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['refrigerator', 'oven', 'dishwasher', 'washing machine', 'dryer', 'microwave', 'toaster', 'coffee maker', 'air conditioner', 'vacuum cleaner']"}
{"cat":"appliance","slot":"part","value":"sprayer","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"All the constitutive parts of sprayer.\";         A textual example of the semantic relation is \"can have sprayer\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['nozzle', 'hose', 'pump', 'tank', 'handle', 'trigger', 'filter', 'valve', 'spout', 'gasket']"}
{"cat":"appliance","slot":"part","value":"rack","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"All the constitutive parts of rack.\";         A textual example of the semantic relation is \"can have rack\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['oven', 'dishwasher', 'refrigerator', 'microwave', 'toaster', 'coffee maker', 'blender', 'food processor', 'washing machine', 'dryer']"}
{"cat":"appliance","slot":"part","value":"steam whistle","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"All the constitutive parts of steam whistle.\";         A textual example of the semantic relation is \"can have steam whistle\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['steam engine', 'train', 'boiler', 'locomotive', 'factory', 'ship', 'power plant', 'steamship', 'whistle', 'alarm']"}
{"cat":"appliance","slot":"part","value":"fire iron","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"All the constitutive parts of fire iron.\";         A textual example of the semantic relation is \"can have fire iron\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['fireplace', 'stove', 'chimney', 'grate', 'hearth', 'smoke', 'flame', 'ash', 'coal', 'log']"}
{"cat":"appliance","slot":"part","value":"lens","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"All the constitutive parts of lens.\";         A textual example of the semantic relation is \"can have lens\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['camera', 'microscope', 'telescope', 'binoculars', 'projector', 'eyeglasses', 'magnifying glass', 'periscope', 'kaleidoscope', 'monocle']"}
{"cat":"appliance","slot":"part","value":"fireplace","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"All the constitutive parts of fireplace.\";         A textual example of the semantic relation is \"can have fireplace\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"mantel\", \"hearth\", \"flue\", \"grate\", \"ashpan\", \"damper\", \"smoke shelf\", \"smoke chamber\", \"throat\", \"lintel\"]"}
{"cat":"appliance","slot":"part","value":"button","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"All the constitutive parts of button.\";         A textual example of the semantic relation is \"can have button\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['washing_machine', 'dishwasher', 'microwave', 'oven', 'fridge', 'freezer', 'toaster', 'coffee_machine', 'kettle', 'air_conditioner']"}
{"cat":"appliance","slot":"part","value":"capillary","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"All the constitutive parts of capillary.\";         A textual example of the semantic relation is \"can have capillary\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['hairdryer', 'steam iron', 'electric kettle', 'coffee maker', 'blender', 'food processor', 'microwave oven', 'toaster', 'vacuum cleaner', 'dishwasher']"}
{"cat":"appliance","slot":"part","value":"light","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"All the constitutive parts of light.\";         A textual example of the semantic relation is \"can have light\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['bulb', 'lamp', 'flashlight', 'torch', 'lantern', 'headlamp', 'spotlight', 'floodlight', 'neon', 'fluorescent']"}
{"cat":"appliance","slot":"part","value":"refrigerator","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"All the constitutive parts of refrigerator.\";         A textual example of the semantic relation is \"can have refrigerator\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['freezer', 'compressor', 'condenser', 'evaporator', 'thermostat', 'defrost timer', 'refrigerator door', 'refrigerator shelves', 'refrigerator light', 'refrigerator handle']"}
{"cat":"appliance","slot":"part","value":"mantle","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"All the constitutive parts of mantle.\";         A textual example of the semantic relation is \"can have mantle\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"stove\", \"oven\", \"microwave\", \"fridge\", \"dishwasher\", \"washing machine\", \"dryer\", \"air conditioner\", \"water heater\", \"freezer\"]"}
{"cat":"appliance","slot":"part","value":"telephone receiver","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"All the constitutive parts of telephone receiver.\";         A textual example of the semantic relation is \"can have telephone receiver\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['telephone', 'receiver', 'handset', 'microphone', 'speaker', 'dial', 'keypad', 'cradle', 'ringtones', 'volume']"}
{"cat":"appliance","slot":"part","value":"mantlepiece","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"All the constitutive parts of mantlepiece.\";         A textual example of the semantic relation is \"can have mantlepiece\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['clock', 'television', 'radio', 'vase', 'lamp', 'picture frame', 'mirror', 'flowers', 'statue', 'bookends']"}
{"cat":"appliance","slot":"part","value":"fireside","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"All the constitutive parts of fireside.\";         A textual example of the semantic relation is \"can have fireside\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['fireplace', 'mantel', 'hearth', 'chimney', 'grate', 'andiron', 'bellows', 'crane', 'tool', 'tongs']"}
{"cat":"appliance","slot":"part","value":"refrigeration system","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"All the constitutive parts of refrigeration system.\";         A textual example of the semantic relation is \"can have refrigeration system\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['compressor', 'condenser', 'evaporator', 'expansion valve', 'capillary tube', 'receiver', 'drier', 'thermostat', 'fan', 'refrigerant']"}
{"cat":"appliance","slot":"part","value":"capillary tubing","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"All the constitutive parts of capillary tubing.\";         A textual example of the semantic relation is \"can have capillary tubing\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['refrigerator', 'air conditioner', 'humidifier', 'dehumidifier', 'water cooler', 'dishwasher', 'washing machine', 'clothes dryer', 'ice maker', 'vacuum cleaner']"}
{"cat":"appliance","slot":"part","value":"drip pan","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"All the constitutive parts of drip pan.\";         A textual example of the semantic relation is \"can have drip pan\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"oven\", \"stove\", \"range\", \"cooktop\", \"microwave\", \"toaster\", \"coffee maker\", \"dishwasher\", \"washing machine\", \"dryer\"]"}
{"cat":"appliance","slot":"part","value":"cable","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"All the constitutive parts of cable.\";         A textual example of the semantic relation is \"can have cable\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['television', 'computer', 'telephone', 'stereo', 'modem', 'printer', 'monitor', 'video game console', 'DVD player', 'VCR']"}
{"cat":"appliance","slot":"part","value":"platform","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"All the constitutive parts of platform.\";         A textual example of the semantic relation is \"can have platform\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['oven', 'microwave', 'refrigerator', 'dishwasher', 'washer', 'dryer', 'air conditioner', 'water heater', 'toaster', 'coffee maker']"}
{"cat":"appliance","slot":"part","value":"mantel","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"All the constitutive parts of mantel.\";         A textual example of the semantic relation is \"can have mantel\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['fireplace', 'mantel', 'chimney', 'hearth', 'flue', 'damper', 'grate', 'ashpan', 'smoke shelf', 'smoke chamber']"}
{"cat":"appliance","slot":"part","value":"mantelpiece","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"All the constitutive parts of mantelpiece.\";         A textual example of the semantic relation is \"can have mantelpiece\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['fireplace', 'stove', 'oven', 'microwave', 'toaster', 'coffee maker', 'blender', 'food processor', 'dishwasher', 'washing machine']"}
{"cat":"appliance","slot":"part","value":"oven","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"All the constitutive parts of oven.\";         A textual example of the semantic relation is \"can have oven\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['oven', 'stove', 'microwave', 'toaster', 'dishwasher', 'fridge', 'freezer', 'washer', 'dryer', 'air conditioner']"}
{"cat":"appliance","slot":"part","value":"water back","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"All the constitutive parts of water back.\";         A textual example of the semantic relation is \"can have water back\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"washer\", \"dishwasher\", \"refrigerator\", \"water heater\", \"ice maker\", \"humidifier\", \"dehumidifier\", \"steam cleaner\", \"water filter\", \"water softener\"]"}
{"cat":"appliance","slot":"part","value":"flashlight battery","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"All the constitutive parts of flashlight battery.\";         A textual example of the semantic relation is \"can have flashlight battery\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['torch', 'lantern', 'headlamp', 'spotlight', 'flasher', 'beacon', 'signal light', 'emergency light', 'searchlight', 'lamp']"}
{"cat":"appliance","slot":"part","value":"mouthpiece","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"All the constitutive parts of mouthpiece.\";         A textual example of the semantic relation is \"can have mouthpiece\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['vacuum', 'toaster', 'blender', 'coffee maker', 'microwave', 'dishwasher', 'washing machine', 'dryer', 'fridge', 'oven']"}
{"cat":"appliance","slot":"part","value":"keypad","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"All the constitutive parts of keypad.\";         A textual example of the semantic relation is \"can have keypad\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"microwave\", \"oven\", \"stove\", \"refrigerator\", \"dishwasher\", \"washing machine\", \"dryer\", \"air conditioner\", \"heater\", \"television\"]"}
{"cat":"appliance","slot":"part","value":"hearthstone","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"All the constitutive parts of hearthstone.\";         A textual example of the semantic relation is \"can have hearthstone\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['stove', 'oven', 'cooktop', 'range', 'microwave', 'dishwasher', 'refrigerator', 'freezer', 'washer', 'dryer']"}
{"cat":"appliance","slot":"part","value":"chimneypiece","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"All the constitutive parts of chimneypiece.\";         A textual example of the semantic relation is \"can have chimneypiece\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['fireplace', 'mantel', 'grate', 'hearth', 'flue', 'damper', 'smoke shelf', 'throat', 'chimney', 'back']"}
{"cat":"appliance","slot":"part","value":"shutter","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"All the constitutive parts of shutter.\";         A textual example of the semantic relation is \"can have shutter\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"camera\", \"projector\", \"light\", \"faucet\", \"window\", \"door\", \"vent\", \"lens\", \"fan\"]"}
{"cat":"appliance","slot":"part","value":"bimetallic strip","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"All the constitutive parts of bimetallic strip.\";         A textual example of the semantic relation is \"can have bimetallic strip\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"thermostat\", \"oven\", \"air conditioner\", \"fridge\", \"freezer\", \"heater\", \"furnace\", \"boiler\", \"dishwasher\", \"washing machine\"]"}
{"cat":"appliance","slot":"part","value":"wire","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"All the constitutive parts of wire.\";         A textual example of the semantic relation is \"can have wire\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['toaster', 'television', 'microwave', 'refrigerator', 'vacuum cleaner', 'washing machine', 'dishwasher', 'electric kettle', 'air conditioner', 'hair dryer']"}
{"cat":"appliance","slot":"part","value":"pipe","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"All the constitutive parts of pipe.\";         A textual example of the semantic relation is \"can have pipe\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['washing machine', 'dishwasher', 'water heater', 'faucet', 'shower', 'toilet', 'sink', 'water filter', 'ice maker', 'humidifier']"}
{"cat":"appliance","slot":"part","value":"grate","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"All the constitutive parts of grate.\";         A textual example of the semantic relation is \"can have grate\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"stove\", \"oven\", \"grill\", \"barbecue\", \"toaster\", \"microwave\", \"coffee maker\", \"blender\", \"food processor\", \"mixer\"]"}
{"cat":"appliance","slot":"part","value":"capillary tube","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"All the constitutive parts of capillary tube.\";         A textual example of the semantic relation is \"can have capillary tube\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"humidifier\", \"thermometer\", \"vaporizer\", \"distiller\", \"dialysis machine\", \"percolator\", \"siphon\", \"condenser\", \"water softener\", \"air conditioner\"]"}
{"cat":"appliance","slot":"part","value":"hearth","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"All the constitutive parts of hearth.\";         A textual example of the semantic relation is \"can have hearth\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['fireplace', 'stove', 'oven', 'heater', 'furnace', 'boiler', 'chimney', 'grill', 'smoker', 'barbecue']"}
{"cat":"appliance","slot":"part","value":"grating","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"All the constitutive parts of grating.\";         A textual example of the semantic relation is \"can have grating\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['oven', 'stove', 'grill', 'toaster', 'microwave', 'blender', 'coffee maker', 'juicer', 'food processor', 'dishwasher']"}
{"cat":"appliance","slot":"generalization","value":"appliance","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"Classification of appliance related to hypernyms.\";         A textual example of the semantic relation is \"are appliance\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['refrigerator', 'washing machine', 'dishwasher', 'microwave oven', 'air conditioner', 'television', 'stove', 'toaster', 'coffee maker', 'blender']"}
{"cat":"appliance","slot":"generalization","value":"instrument","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"Classification of instrument related to hypernyms.\";         A textual example of the semantic relation is \"are instrument\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['microwave', 'refrigerator', 'washing machine', 'dishwasher', 'oven', 'stove', 'air conditioner', 'water heater', 'vacuum cleaner', 'toaster']"}
{"cat":"appliance","slot":"generalization","value":"tool","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"Classification of tool related to hypernyms.\";         A textual example of the semantic relation is \"are tool\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['refrigerator', 'microwave', 'washing machine', 'dishwasher', 'oven', 'toaster', 'blender', 'coffee maker', 'vacuum cleaner', 'air conditioner']"}
{"cat":"appliance","slot":"generalization","value":"electronic equipment","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"Classification of electronic equipment related to hypernyms.\";         A textual example of the semantic relation is \"are electronic equipment\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['refrigerator', 'microwave', 'washing machine', 'dishwasher', 'air conditioner', 'television', 'stove', 'oven', 'toaster', 'blender']"}
{"cat":"appliance","slot":"generalization","value":"home appliance","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"Classification of home appliance related to hypernyms.\";         A textual example of the semantic relation is \"are home appliance\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['refrigerator', 'washing machine', 'microwave oven', 'dishwasher', 'air conditioner', 'vacuum cleaner', 'electric kettle', 'toaster', 'coffee maker', 'oven']"}
{"cat":"appliance","slot":"generalization","value":"household appliance","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"Classification of household appliance related to hypernyms.\";         A textual example of the semantic relation is \"are household appliance\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['refrigerator', 'oven', 'dishwasher', 'washing machine', 'microwave', 'toaster', 'coffee maker', 'vacuum cleaner', 'air conditioner', 'television']"}
{"cat":"appliance","slot":"generalization","value":"equipment","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"Classification of equipment related to hypernyms.\";         A textual example of the semantic relation is \"are equipment\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['refrigerator', 'washing machine', 'dishwasher', 'oven', 'microwave', 'air conditioner', 'vacuum cleaner', 'coffee maker', 'toaster', 'blender']"}
{"cat":"appliance","slot":"generalization","value":"instrumentation","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"Classification of instrumentation related to hypernyms.\";         A textual example of the semantic relation is \"are instrumentation\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"refrigerator\", \"washing machine\", \"microwave\", \"oven\", \"toaster\", \"blender\", \"dishwasher\", \"coffee maker\", \"vacuum cleaner\", \"air conditioner\"]"}
{"cat":"appliance","slot":"generalization","value":"measuring instrument","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"Classification of measuring instrument related to hypernyms.\";         A textual example of the semantic relation is \"are measuring instrument\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['thermometer', 'barometer', 'hygrometer', 'anemometer', 'seismometer', 'ammeter', 'voltmeter', 'ohmmeter', 'multimeter', 'oscilloscope']"}
{"cat":"appliance","slot":"generalization","value":"white goods","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"Classification of white goods related to hypernyms.\";         A textual example of the semantic relation is \"are white goods\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['refrigerator', 'washing machine', 'dishwasher', 'oven', 'microwave', 'air conditioner', 'vacuum cleaner', 'toaster', 'coffee maker', 'blender']"}
{"cat":"appliance","slot":"generalization","value":"instrumentality","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"Classification of instrumentality related to hypernyms.\";         A textual example of the semantic relation is \"are instrumentality\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['refrigerator', 'microwave', 'oven', 'dishwasher', 'washing machine', 'dryer', 'toaster', 'blender', 'coffee maker', 'vacuum cleaner']"}
{"cat":"appliance","slot":"generalization","value":"measuring device","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"Classification of measuring device related to hypernyms.\";         A textual example of the semantic relation is \"are measuring device\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['thermometer', 'barometer', 'hygrometer', 'anemometer', 'ammeter', 'voltmeter', 'ohmmeter', 'wattmeter', 'multimeter', 'clamp meter']"}
{"cat":"appliance","slot":"generalization","value":"measuring system","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"Classification of measuring system related to hypernyms.\";         A textual example of the semantic relation is \"are measuring system\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"scale\", \"thermometer\", \"barometer\", \"hygrometer\", \"anemometer\", \"ammeter\", \"voltmeter\", \"ohmmeter\", \"multimeter\", \"oscilloscope\"]"}
{"cat":"appliance","slot":"generalization","value":"kitchen appliance","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"Classification of kitchen appliance related to hypernyms.\";         A textual example of the semantic relation is \"are kitchen appliance\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['refrigerator', 'stove', 'oven', 'microwave', 'dishwasher', 'toaster', 'blender', 'coffee maker', 'food processor', 'juicer']"}
{"cat":"appliance","slot":"generalization","value":"peripheral","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"Classification of peripheral related to hypernyms.\";         A textual example of the semantic relation is \"are peripheral\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"fridge\", \"oven\", \"dishwasher\", \"microwave\", \"washer\", \"dryer\", \"toaster\", \"blender\", \"coffee maker\", \"vacuum\"]"}
{"cat":"appliance","slot":"generalization","value":"electronic device","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"Classification of electronic device related to hypernyms.\";         A textual example of the semantic relation is \"are electronic device\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['refrigerator', 'microwave', 'washing machine', 'dishwasher', 'air conditioner', 'oven', 'toaster', 'vacuum cleaner', 'television', 'computer']"}
{"cat":"appliance","slot":"generalization","value":"peripheral device","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"Classification of peripheral device related to hypernyms.\";         A textual example of the semantic relation is \"are peripheral device\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['dishwasher', 'microwave', 'refrigerator', 'washing machine', 'vacuum cleaner', 'air conditioner', 'water heater', 'toaster', 'coffee maker', 'oven']"}
{"cat":"appliance","slot":"generalization","value":"computer peripheral","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"Classification of computer peripheral related to hypernyms.\";         A textual example of the semantic relation is \"are computer peripheral\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['monitor', 'keyboard', 'mouse', 'printer', 'scanner', 'speaker', 'webcam', 'microphone', 'headphones', 'joystick']"}
{"cat":"appliance","slot":"generalization","value":"regulator","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"Classification of regulator related to hypernyms.\";         A textual example of the semantic relation is \"are regulator\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"oven\", \"microwave\", \"dishwasher\", \"washing machine\", \"dryer\", \"fridge\", \"freezer\", \"air conditioner\", \"heater\", \"water heater\"]"}
{"cat":"appliance","slot":"generalization","value":"electrical device","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"Classification of electrical device related to hypernyms.\";         A textual example of the semantic relation is \"are electrical device\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"refrigerator\", \"microwave\", \"toaster\", \"washing machine\", \"dishwasher\", \"air conditioner\", \"television\", \"vacuum cleaner\", \"blender\", \"electric kettle\"]"}
{"cat":"appliance","slot":"generalization","value":"lamp","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"Classification of lamp related to hypernyms.\";         A textual example of the semantic relation is \"are lamp\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['table lamp', 'floor lamp', 'desk lamp', 'ceiling lamp', 'wall lamp', 'reading lamp', 'task lamp', 'decorative lamp', 'pendant lamp', 'chandelier']"}
{"cat":"appliance","slot":"generalization","value":"durable goods","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"Classification of durable goods related to hypernyms.\";         A textual example of the semantic relation is \"are durable goods\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"refrigerator\", \"washing machine\", \"microwave oven\", \"dishwasher\", \"air conditioner\", \"television\", \"stove\", \"vacuum cleaner\", \"toaster\", \"blender\"]"}
{"cat":"appliance","slot":"generalization","value":"receiving system","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"Classification of receiving system related to hypernyms.\";         A textual example of the semantic relation is \"are receiving system\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['refrigerator', 'washing machine', 'microwave', 'dishwasher', 'oven', 'stove', 'air conditioner', 'television', 'computer', 'smartphone']"}
{"cat":"appliance","slot":"generalization","value":"transmission","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"Classification of transmission related to hypernyms.\";         A textual example of the semantic relation is \"are transmission\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['refrigerator', 'oven', 'microwave', 'dishwasher', 'washing machine', 'dryer', 'air conditioner', 'heater', 'television', 'computer']"}
{"cat":"appliance","slot":"generalization","value":"telecom","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"Classification of telecom related to hypernyms.\";         A textual example of the semantic relation is \"are telecom\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"telephone\", \"television\", \"radio\", \"modem\", \"router\", \"switch\", \"hub\", \"repeater\", \"bridge\", \"gateway\"]"}
{"cat":"appliance","slot":"generalization","value":"communicating","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"Classification of communicating related to hypernyms.\";         A textual example of the semantic relation is \"are communicating\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"refrigerator\", \"oven\", \"microwave\", \"dishwasher\", \"washing machine\", \"dryer\", \"air conditioner\", \"television\", \"computer\", \"phone\"]"}
{"cat":"appliance","slot":"generalization","value":"printer","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"Classification of printer related to hypernyms.\";         A textual example of the semantic relation is \"are printer\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['printer', 'copier', 'scanner', 'fax machine', 'multifunction device', 'inkjet printer', 'laser printer', '3D printer', 'dot matrix printer', 'thermal printer']"}
{"cat":"appliance","slot":"generalization","value":"electro-acoustic transducer","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"Classification of electro-acoustic transducer related to hypernyms.\";         A textual example of the semantic relation is \"are electro-acoustic transducer\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"speaker\", \"headphones\", \"microphone\", \"loudspeaker\", \"subwoofer\", \"amplifier\", \"receiver\", \"turntable\", \"CD player\", \"DVD player\"]"}
{"cat":"appliance","slot":"generalization","value":"printing machine","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"Classification of printing machine related to hypernyms.\";         A textual example of the semantic relation is \"are printing machine\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['printer', 'photocopier', 'fax machine', 'plotter', 'duplicator', 'offset press', 'letterpress', 'screen printer', 'inkjet printer', 'laser printer']"}
{"cat":"appliance","slot":"generalization","value":"electronic communication","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"Classification of electronic communication related to hypernyms.\";         A textual example of the semantic relation is \"are electronic communication\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['television', 'smartphone', 'tablet', 'laptop', 'desktop', 'printer', 'scanner', 'fax machine', 'modem', 'router']"}
{"cat":"appliance","slot":"generalization","value":"input device","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"Classification of input device related to hypernyms.\";         A textual example of the semantic relation is \"are input device\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"keyboard\", \"mouse\", \"touchpad\", \"joystick\", \"trackball\", \"gamepad\", \"scanner\", \"microphone\", \"webcam\", \"digital pen\"]"}
{"cat":"appliance","slot":"generalization","value":"telecommunication","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"Classification of telecommunication related to hypernyms.\";         A textual example of the semantic relation is \"are telecommunication\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['telephone', 'cell phone', 'smartphone', 'landline', 'fax machine', 'modem', 'router', 'satellite dish', 'walkie-talkie', 'intercom']"}
{"cat":"appliance","slot":"generalization","value":"control","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"Classification of control related to hypernyms.\";         A textual example of the semantic relation is \"are control\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['stove', 'oven', 'microwave', 'refrigerator', 'dishwasher', 'washing machine', 'dryer', 'air conditioner', 'heater', 'television']"}
{"cat":"appliance","slot":"generalization","value":"controller","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"Classification of controller related to hypernyms.\";         A textual example of the semantic relation is \"are controller\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['refrigerator', 'microwave', 'oven', 'dishwasher', 'washing machine', 'dryer', 'air conditioner', 'heater', 'vacuum cleaner', 'toaster']"}
{"cat":"appliance","slot":"generalization","value":"navigational instrument","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"Classification of navigational instrument related to hypernyms.\";         A textual example of the semantic relation is \"are navigational instrument\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['stove', 'microwave', 'refrigerator', 'washer', 'dryer', 'dishwasher', 'air conditioner', 'water heater', 'vacuum cleaner', 'toaster']"}
{"cat":"appliance","slot":"generalization","value":"transducer","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"Classification of transducer related to hypernyms.\";         A textual example of the semantic relation is \"are transducer\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"refrigerator\", \"washing machine\", \"dishwasher\", \"microwave\", \"oven\", \"air conditioner\", \"heater\", \"vacuum cleaner\", \"television\", \"stove\"]"}
{"cat":"appliance","slot":"generalization","value":"source of illumination","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"Classification of source of illumination related to hypernyms.\";         A textual example of the semantic relation is \"are source of illumination\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['lamp', 'chandelier', 'flashlight', 'torch', 'lantern', 'bulb', 'light fixture', 'ceiling light', 'table lamp', 'floor lamp']"}
{"cat":"appliance","slot":"generalization","value":"data input device","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"Classification of data input device related to hypernyms.\";         A textual example of the semantic relation is \"are data input device\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['keyboard', 'mouse', 'joystick', 'gamepad', 'touchpad', 'trackball', 'scanner', 'digital camera', 'microphone', 'stylus']"}
{"cat":"appliance","slot":"generalization","value":"set","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"Classification of set related to hypernyms.\";         A textual example of the semantic relation is \"are set\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['refrigerator', 'washing machine', 'microwave', 'oven', 'dishwasher', 'toaster', 'coffee maker', 'vacuum cleaner', 'air conditioner', 'television']"}
{"cat":"appliance","slot":"generalization","value":"machine","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"Classification of machine related to hypernyms.\";         A textual example of the semantic relation is \"are machine\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['refrigerator', 'oven', 'microwave', 'dishwasher', 'washing machine', 'dryer', 'air conditioner', 'vacuum cleaner', 'toaster', 'coffee maker']"}
{"cat":"appliance","slot":"generalization","value":"optical instrument","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"Classification of optical instrument related to hypernyms.\";         A textual example of the semantic relation is \"are optical instrument\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['microscope', 'telescope', 'binoculars', 'camera', 'projector', 'spectrometer', 'periscope', 'monocular', 'rangefinder', 'spotting scope']"}
{"cat":"appliance","slot":"generalization","value":"consumer durables","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"Classification of consumer durables related to hypernyms.\";         A textual example of the semantic relation is \"are consumer durables\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"refrigerator\", \"washing machine\", \"microwave oven\", \"dishwasher\", \"air conditioner\", \"television\", \"vacuum cleaner\", \"toaster\", \"coffee maker\", \"blender\"]"}
{"cat":"appliance","slot":"generalization","value":"electric lamp","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"Classification of electric lamp related to hypernyms.\";         A textual example of the semantic relation is \"are electric lamp\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['lamp', 'light', 'bulb', 'chandelier', 'ceiling light', 'table lamp', 'floor lamp', 'wall sconce', 'desk lamp', 'track lighting']"}
{"cat":"appliance","slot":"generalization","value":"durables","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"Classification of durables related to hypernyms.\";         A textual example of the semantic relation is \"are durables\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"refrigerator\", \"washing machine\", \"dishwasher\", \"microwave oven\", \"oven\", \"toaster\", \"coffee maker\", \"vacuum cleaner\", \"air conditioner\", \"television\"]"}
{"cat":"appliance","slot":"generalization","value":"mechanism","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"Classification of mechanism related to hypernyms.\";         A textual example of the semantic relation is \"are mechanism\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['refrigerator', 'dishwasher', 'washing machine', 'microwave', 'oven', 'toaster', 'coffee maker', 'vacuum cleaner', 'air conditioner', 'television']"}
{"cat":"appliance","slot":"generalization","value":"broadcasting","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"Classification of broadcasting related to hypernyms.\";         A textual example of the semantic relation is \"are broadcasting\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['television', 'radio', 'cable', 'satellite', 'antenna', 'receiver', 'transmitter', 'amplifier', 'speaker', 'headphone']"}
{"cat":"appliance","slot":"generalization","value":"consumer goods","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"Classification of consumer goods related to hypernyms.\";         A textual example of the semantic relation is \"are consumer goods\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['refrigerator', 'microwave', 'washing machine', 'dishwasher', 'oven', 'toaster', 'coffee maker', 'vacuum cleaner', 'air conditioner', 'television']"}
{"cat":"appliance","slot":"generalization","value":"medium","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"Classification of medium related to hypernyms.\";         A textual example of the semantic relation is \"are medium\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['refrigerator', 'oven', 'microwave', 'dishwasher', 'washing machine', 'dryer', 'air conditioner', 'water heater', 'toaster', 'blender']"}
{"cat":"appliance","slot":"generalization","value":"video display","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"Classification of video display related to hypernyms.\";         A textual example of the semantic relation is \"are video display\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['television', 'monitor', 'projector', 'screen', 'display', 'LCD', 'LED', 'plasma', 'OLED', 'CRT']"}
{"cat":"appliance","slot":"generalization","value":"device","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"Classification of device related to hypernyms.\";         A textual example of the semantic relation is \"are device\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"refrigerator\", \"microwave\", \"oven\", \"dishwasher\", \"washing machine\", \"dryer\", \"air conditioner\", \"heater\", \"vacuum cleaner\", \"toaster\"]"}
{"cat":"appliance","slot":"part","value":"display","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"All the constitutive parts of display.\";         A textual example of the semantic relation is \"can have display\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['television', 'computer', 'phone', 'tablet', 'smartwatch', 'microwave', 'fridge', 'oven', 'washing machine', 'dryer']"}
{"cat":"appliance","slot":"material","value":"mercury","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"Material of which mercury is composed.\";         A textual example of the semantic relation is \"can be made of mercury\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['thermometer', 'barometer', 'sphygmomanometer', 'hygrometer', 'compass', 'fluorescent lamp', 'switch', 'relay', 'tachometer', 'pyrometer']"}
{"cat":"appliance","slot":"material","value":"alcohol","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"Material of which alcohol is composed.\";         A textual example of the semantic relation is \"can be made of alcohol\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"stove\", \"oven\", \"refrigerator\", \"dishwasher\", \"washing machine\", \"dryer\", \"microwave\", \"toaster\", \"blender\", \"coffee maker\"]"}
{"cat":"appliance","slot":"part","value":"receiver","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"All the constitutive parts of receiver.\";         A textual example of the semantic relation is \"can have receiver\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['television', 'radio', 'stereo', 'CD player', 'DVD player', 'VCR', 'microwave', 'oven', 'refrigerator', 'dishwasher']"}
{"cat":"appliance","slot":"part","value":"screen","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"All the constitutive parts of screen.\";         A textual example of the semantic relation is \"can have screen\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['television', 'computer', 'smartphone', 'tablet', 'laptop', 'monitor', 'projector', 'digital camera', 'e-reader', 'gaming console']"}
{"cat":"appliance","slot":"generalization","value":"receiver","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"Classification of receiver related to hypernyms.\";         A textual example of the semantic relation is \"are receiver\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"washing machine\", \"dishwasher\", \"microwave\", \"fridge\", \"oven\", \"toaster\", \"blender\", \"coffee maker\", \"vacuum cleaner\", \"air conditioner\"]"}
{"cat":"appliance","slot":"generalization","value":"communication","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"Classification of communication related to hypernyms.\";         A textual example of the semantic relation is \"are communication\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"refrigerator\", \"microwave\", \"oven\", \"dishwasher\", \"washing machine\", \"dryer\", \"air conditioner\", \"television\", \"computer\", \"smartphone\"]"}
{"cat":"appliance","slot":"generalization","value":"display","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"appliance\";         The returned words must satisfy the semantic relation \"Classification of display related to hypernyms.\";         A textual example of the semantic relation is \"are display\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"television\", \"monitor\", \"projector\", \"smartboard\", \"digital signage\", \"tablet\", \"e-reader\", \"smartwatch\", \"virtual reality headset\", \"holographic display\"]"}
{"cat":"instruments","slot":"accessory","value":"seat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"All those objects that may have to do with seat. The constraint is that there must be a physical contact and that the use of such object is strictly necessary for seat.\";         A textual example of the semantic relation is \"are related with seat\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['chair', 'sofa', 'bench', 'stool', 'couch', 'ottoman', 'chaise lounge', 'recliner', 'love seat', 'armchair']"}
{"cat":"instruments","slot":"accessory","value":"bow","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"All those objects that may have to do with bow. The constraint is that there must be a physical contact and that the use of such object is strictly necessary for bow.\";         A textual example of the semantic relation is \"are related with bow\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['violin', 'cello', 'viola', 'harp', 'double bass', 'hurdy gurdy', 'erhu', 'rebec', 'nyckelharpa']"}
{"cat":"instruments","slot":"place","value":"France","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"All the entities in which France can be experienced, found or perceived.\";         A textual example of the semantic relation is \"can be found or used in Frances\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['accordion', 'bagpipes', 'bassoon', 'cello', 'clarinet', 'flute', 'guitar', 'harp', 'oboe', 'violin']"}
{"cat":"instruments","slot":"specialization","value":"bass horn","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"Classification of bass horn in terms of their hyponyms.\";         A textual example of the semantic relation is \"are bass horn\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['tuba', 'sousaphone', 'euphonium', 'bass trombone', 'double bass', 'bass guitar', 'contrabassoon', 'violone', 'bassoon', 'cello']"}
{"cat":"instruments","slot":"specialization","value":"bass viol","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"Classification of bass viol in terms of their hyponyms.\";         A textual example of the semantic relation is \"are bass viol\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['viola', 'violin', 'cello', 'double bass', 'bass guitar', 'viola da gamba', 'violone', 'contrabass', 'bass fiddle', 'bass viola']"}
{"cat":"instruments","slot":"specialization","value":"bombard","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"Classification of bombard in terms of their hyponyms.\";         A textual example of the semantic relation is \"are bombard\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['bassoon', 'clarinet', 'flute', 'oboe', 'saxophone', 'trumpet', 'trombone', 'horn', 'tuba', 'euphonium']"}
{"cat":"instruments","slot":"specialization","value":"upright piano","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"Classification of upright piano in terms of their hyponyms.\";         A textual example of the semantic relation is \"are upright piano\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['spinet', 'clavichord', 'harpsichord', 'cembalo', 'clavichord', 'virginal', 'ottavino', 'clavicord', 'harpsichord', 'cembalo']"}
{"cat":"instruments","slot":"specialization","value":"contrabass","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"Classification of contrabass in terms of their hyponyms.\";         A textual example of the semantic relation is \"are contrabass\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['double bass', 'bass viol', 'violone', 'bull fiddle', 'stand-up bass', 'string bass', 'bass fiddle', 'upright bass', 'doghouse bass', 'acoustic bass']"}
{"cat":"instruments","slot":"specialization","value":"sousaphone","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"Classification of sousaphone in terms of their hyponyms.\";         A textual example of the semantic relation is \"are sousaphone\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"tuba\", \"brass instrument\", \"wind instrument\", \"marching band instrument\", \"concert band instrument\", \"orchestra instrument\", \"jazz band instrument\", \"big band instrument\", \"Dixieland band instrument\", \"parade instrument\"]"}
{"cat":"instruments","slot":"specialization","value":"bass fiddle","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"Classification of bass fiddle in terms of their hyponyms.\";         A textual example of the semantic relation is \"are bass fiddle\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"double bass\", \"bass guitar\", \"electric bass\", \"upright bass\", \"acoustic bass\", \"fretless bass\", \"stand-up bass\", \"string bass\", \"bass violin\", \"contrabass\"]"}
{"cat":"instruments","slot":"specialization","value":"double bass","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"Classification of double bass in terms of their hyponyms.\";         A textual example of the semantic relation is \"are double bass\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['upright bass', 'contrabass', 'string bass', 'double bass', 'bass fiddle', 'bass viol', 'bull fiddle', 'bass violin', 'stand-up bass', 'bass']"}
{"cat":"instruments","slot":"specialization","value":"bull fiddle","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"Classification of bull fiddle in terms of their hyponyms.\";         A textual example of the semantic relation is \"are bull fiddle\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['violin', 'cello', 'double bass', 'bass guitar', 'bassoon', 'contrabassoon', 'tuba', 'euphonium', 'sousaphone', 'double bass drum']"}
{"cat":"instruments","slot":"specialization","value":"string bass","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"Classification of string bass in terms of their hyponyms.\";         A textual example of the semantic relation is \"are string bass\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"double bass\", \"upright bass\", \"bass violin\", \"contrabass\", \"bull fiddle\", \"doghouse bass\", \"stand-up bass\", \"string bass\", \"bass fiddle\", \"bass viol\"]"}
{"cat":"instruments","slot":"specialization","value":"mechanical piano","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"Classification of mechanical piano in terms of their hyponyms.\";         A textual example of the semantic relation is \"are mechanical piano\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['player piano', 'pianola', 'piano player', 'self-playing piano', 'player-piano', 'piano', 'piano-roll', 'roll', 'pianola roll', 'roll piano']"}
{"cat":"instruments","slot":"specialization","value":"bombardon","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"Classification of bombardon in terms of their hyponyms.\";         A textual example of the semantic relation is \"are bombardon\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['tuba', 'euphonium', 'sousaphone', 'helicon', 'serpent', 'bassoon', 'double bass', 'cello', 'viola', 'violin']"}
{"cat":"instruments","slot":"specialization","value":"tuba","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"Classification of tuba in terms of their hyponyms.\";         A textual example of the semantic relation is \"are tuba\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"contrabass\", \"euphonium\", \"helicon\", \"sousaphone\", \"tenor\", \"baritone\", \"bass\", \"alto\", \"french\", \"tuba\"]"}
{"cat":"instruments","slot":"specialization","value":"player piano","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"Classification of player piano in terms of their hyponyms.\";         A textual example of the semantic relation is \"are player piano\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['piano', 'keyboard', 'organ', 'harpsichord', 'clavinet', 'accordion', 'harmonica', 'trumpet', 'violin', 'guitar']"}
{"cat":"instruments","slot":"specialization","value":"bass guitar","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"Classification of bass guitar in terms of their hyponyms.\";         A textual example of the semantic relation is \"are bass guitar\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['acoustic bass guitar', 'electric bass guitar', 'fretless bass guitar', 'upright bass', 'jazz bass', 'p bass', 'fender bass', 'active bass', 'passive bass', 'bass guitar']"}
{"cat":"instruments","slot":"specialization","value":"grand piano","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"Classification of grand piano in terms of their hyponyms.\";         A textual example of the semantic relation is \"are grand piano\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['piano', 'keyboard', 'grand piano', 'upright piano', 'digital piano', 'electric piano', 'player piano', 'harpsichord', 'clavichord', 'fortepiano']"}
{"cat":"instruments","slot":"specialization","value":"Pianola","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"Classification of Pianola in terms of their hyponyms.\";         A textual example of the semantic relation is \"are Pianola\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['piano', 'keyboard', 'organ', 'harmonium', 'accordion', 'harpsichord', 'clavichord', 'celesta', 'spinet', 'virginal']"}
{"cat":"instruments","slot":"bodyPart","value":"finger","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"All the body parts which are involved in interacting with finger.\";         A textual example of the semantic relation is \"can have or be used with finger\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['piano', 'violin', 'guitar', 'flute', 'saxophone', 'trumpet', 'clarinet', 'drum', 'xylophone', 'marimba']"}
{"cat":"instruments","slot":"bodyPart","value":"mouth","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"All the body parts which are involved in interacting with mouth.\";         A textual example of the semantic relation is \"can have or be used with mouth\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['harmonica', 'flute', 'clarinet', 'oboe', 'saxophone', 'trumpet', 'trombone', 'french horn', 'tuba', 'didgeridoo']"}
{"cat":"instruments","slot":"bodyPart","value":"hand","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"All the body parts which are involved in interacting with hand.\";         A textual example of the semantic relation is \"can have or be used with hand\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['guitar', 'violin', 'piano', 'drums', 'trumpet', 'saxophone', 'flute', 'cello', 'clarinet', 'oboe']"}
{"cat":"instruments","slot":"bodyPart","value":"foot","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"All the body parts which are involved in interacting with foot.\";         A textual example of the semantic relation is \"can have or be used with foot\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['pedal', 'drum', 'bass', 'keyboard', 'guitar', 'violin', 'piano', 'trumpet', 'saxophone', 'flute']"}
{"cat":"instruments","slot":"bodyPart","value":"knee","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"All the body parts which are involved in interacting with knee.\";         A textual example of the semantic relation is \"can have or be used with knee\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['violin', 'cello', 'double bass', 'guitar', 'piano', 'drum', 'trumpet', 'trombone', 'saxophone', 'flute']"}
{"cat":"instruments","slot":"shape","value":"cylindrical","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"Form of cylindrical.\";         A textual example of the semantic relation is \"can be cylindrical\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['trumpet', 'trombone', 'saxophone', 'oboe', 'clarinet', 'flute', 'bagpipe', 'harmonica', 'recorder', 'accordion']"}
{"cat":"instruments","slot":"shape","value":"elongated","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"Form of elongated.\";         A textual example of the semantic relation is \"can be elongated\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['violin', 'cello', 'trumpet', 'saxophone', 'oboe', 'clarinet', 'flute', 'trombone', 'guitar', 'ukulele']"}
{"cat":"instruments","slot":"shape","value":"long","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"Form of long.\";         A textual example of the semantic relation is \"can be long\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['violin', 'flute', 'trumpet', 'clarinet', 'oboe', 'saxophone', 'cello', 'bass', 'trombone']"}
{"cat":"instruments","slot":"shape","value":"thin","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"Form of thin.\";         A textual example of the semantic relation is \"can be thin\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['harmonica', 'flute', 'piccolo', 'recorder', 'clarinet', 'oboe', 'saxophone', 'trumpet', 'trombone', 'violin']"}
{"cat":"instruments","slot":"shape","value":"circular","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"Form of circular.\";         A textual example of the semantic relation is \"can be circular\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['guitar', 'mandolin', 'banjo', 'ukulele', 'lute', 'harp', 'dulcimer', 'violin', 'viola', 'cello']"}
{"cat":"instruments","slot":"shape","value":"round","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"Form of round.\";         A textual example of the semantic relation is \"can be round\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['violin', 'guitar', 'trumpet', 'drum', 'accordion', 'saxophone', 'flute', 'clarinet', 'tuba']"}
{"cat":"instruments","slot":"shape","value":"hollow","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"Form of hollow.\";         A textual example of the semantic relation is \"can be hollow\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['flute', 'trumpet', 'tuba', 'oboe', 'clarinet', 'saxophone', 'violin', 'cello', 'double bass', 'guitar']"}
{"cat":"instruments","slot":"howToUse","value":"sit","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"All the actions or states required to operate, employ, interact with or perceive the existence of sit.\";         A textual example of the semantic relation is \"can be used for sit\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['guitar', 'violin', 'piano', 'drums', 'trumpet', 'saxophone', 'clarinet', 'flute', 'cello', 'oboe']"}
{"cat":"instruments","slot":"howToUse","value":"hold","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"All the actions or states required to operate, employ, interact with or perceive the existence of hold.\";         A textual example of the semantic relation is \"can be used for hold\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"violin\", \"guitar\", \"piano\", \"trumpet\", \"drums\", \"flute\", \"saxophone\", \"cello\", \"clarinet\", \"oboe\"]"}
{"cat":"instruments","slot":"howToUse","value":"blow","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"All the actions or states required to operate, employ, interact with or perceive the existence of blow.\";         A textual example of the semantic relation is \"can be used for blow\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"flute\", \"trumpet\", \"oboe\", \"clarinet\", \"saxophone\", \"bagpipe\", \"harmonica\", \"didgeridoo\", \"ocarina\", \"pan flute\"]"}
{"cat":"instruments","slot":"howToUse","value":"press","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"All the actions or states required to operate, employ, interact with or perceive the existence of press.\";         A textual example of the semantic relation is \"can be used for press\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"typewriter\", \"letterpress\", \"printing press\", \"offset press\", \"rotary press\", \"cylinder press\", \"flatbed press\", \"gravure press\", \"intaglio press\", \"flexographic press\"]"}
{"cat":"instruments","slot":"howToUse","value":"sing","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"All the actions or states required to operate, employ, interact with or perceive the existence of sing.\";         A textual example of the semantic relation is \"can be used for sing\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['piano', 'guitar', 'violin', 'trumpet', 'drums', 'flute', 'clarinet', 'saxophone', 'cello', 'ukulele']"}
{"cat":"instruments","slot":"howToUse","value":"riff","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"All the actions or states required to operate, employ, interact with or perceive the existence of riff.\";         A textual example of the semantic relation is \"can be used for riff\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['guitar', 'bass', 'drums', 'keyboard', 'saxophone', 'trumpet', 'violin', 'cello', 'flute', 'clarinet']"}
{"cat":"instruments","slot":"howToUse","value":"expand","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"All the actions or states required to operate, employ, interact with or perceive the existence of expand.\";         A textual example of the semantic relation is \"can be used for expand\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['guitar', 'violin', 'piano', 'trumpet', 'drums', 'flute', 'clarinet', 'saxophone', 'cello', 'ukulele']"}
{"cat":"instruments","slot":"howToUse","value":"fill","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"All the actions or states required to operate, employ, interact with or perceive the existence of fill.\";         A textual example of the semantic relation is \"can be used for fill\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['guitar', 'violin', 'piano', 'drums', 'trumpet', 'saxophone', 'flute', 'clarinet', 'cymbals', 'xylophone']"}
{"cat":"instruments","slot":"howToUse","value":"fill","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"All the actions or states required to operate, employ, interact with or perceive the existence of fill.\";         A textual example of the semantic relation is \"can be used for fill\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['guitar', 'violin', 'piano', 'drums', 'trumpet', 'saxophone', 'flute', 'clarinet', 'cymbals', 'xylophone']"}
{"cat":"instruments","slot":"howToUse","value":"compress","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"All the actions or states required to operate, employ, interact with or perceive the existence of compress.\";         A textual example of the semantic relation is \"can be used for compress\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['pump', 'valve', 'gauge', 'filter', 'regulator', 'hose', 'nozzle', 'tank', 'seal', 'cylinder']"}
{"cat":"instruments","slot":"sound","value":"mechanical","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"All the entries with which the sound of mechanical can be described.\";         A textual example of the semantic relation is \"sound mechanical\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['clock', 'typewriter', 'piano', 'guitar', 'violin', 'trumpet', 'drums', 'accordion', 'harmonica']"}
{"cat":"instruments","slot":"sound","value":"deep","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"All the entries with which the sound of deep can be described.\";         A textual example of the semantic relation is \"sound deep\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"organ\", \"bass\", \"cello\", \"double bass\", \"contrabass\", \"tuba\", \"baritone\", \"bassoon\", \"horn\", \"bass drum\"]"}
{"cat":"instruments","slot":"sound","value":"versatile","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"All the entries with which the sound of versatile can be described.\";         A textual example of the semantic relation is \"sound versatile\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['piano', 'guitar', 'violin', 'drums', 'trumpet', 'saxophone', 'flute', 'cello', 'accordion', 'ukulele']"}
{"cat":"instruments","slot":"sound","value":"acute","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"All the entries with which the sound of acute can be described.\";         A textual example of the semantic relation is \"sound acute\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['piccolo', 'flute', 'violin', 'oboe', 'clarinet', 'trumpet', 'xylophone', 'triangle', 'tambourine', 'maracas']"}
{"cat":"instruments","slot":"sound","value":"high","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"All the entries with which the sound of high can be described.\";         A textual example of the semantic relation is \"sound high\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['piccolo', 'flute', 'violin', 'soprano', 'trumpet', 'clarinet', 'oboe', 'saxophone', 'viola', 'cello']"}
{"cat":"instruments","slot":"sound","value":"sad","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"All the entries with which the sound of sad can be described.\";         A textual example of the semantic relation is \"sound sad\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['violin', 'cello', 'piano', 'harp', 'oboe', 'flute', 'clarinet', 'trumpet', 'saxophone', 'guitar']"}
{"cat":"instruments","slot":"sound","value":"melancholy","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"All the entries with which the sound of melancholy can be described.\";         A textual example of the semantic relation is \"sound melancholy\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['piano', 'violin', 'cello', 'guitar', 'harp', 'flute', 'oboe', 'clarinet', 'trumpet', 'trombone']"}
{"cat":"instruments","slot":"sound","value":"mournful","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"All the entries with which the sound of mournful can be described.\";         A textual example of the semantic relation is \"sound mournful\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"bagpipes\", \"violin\", \"cello\", \"oboe\", \"harp\", \"flute\", \"piano\", \"organ\", \"trumpet\", \"clarinet\"]"}
{"cat":"instruments","slot":"user","value":"orchestra","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"All the kinds of living beings which are able to operate, employ, interact with or perceive orchestra.\";         A textual example of the semantic relation is \"are used by orchestras\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['violin', 'cello', 'trumpet', 'flute', 'clarinet', 'oboe', 'trombone', 'percussion', 'piano', 'harpsichord']"}
{"cat":"instruments","slot":"user","value":"musician","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"All the kinds of living beings which are able to operate, employ, interact with or perceive musician.\";         A textual example of the semantic relation is \"are used by musicians\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['guitar', 'piano', 'violin', 'drums', 'trumpet', 'saxophone', 'flute', 'cello', 'clarinet', 'trombone']"}
{"cat":"instruments","slot":"user","value":"band","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"All the kinds of living beings which are able to operate, employ, interact with or perceive band.\";         A textual example of the semantic relation is \"are used by bands\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['guitar', 'drums', 'bass', 'keyboard', 'violin', 'trumpet', 'saxophone', 'flute', 'trombone', 'cello']"}
{"cat":"instruments","slot":"user","value":"busker","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"All the kinds of living beings which are able to operate, employ, interact with or perceive busker.\";         A textual example of the semantic relation is \"are used by buskers\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"guitar\", \"violin\", \"accordion\", \"harmonica\", \"trumpet\", \"saxophone\", \"flute\", \"drum\", \"piano\", \"ukulele\"]"}
{"cat":"instruments","slot":"user","value":"accordionist","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"All the kinds of living beings which are able to operate, employ, interact with or perceive accordionist.\";         A textual example of the semantic relation is \"are used by accordionists\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"accordion\", \"button\", \"keyboard\", \"reed\", \"valve\", \"strap\", \"strap\", \"bellows\", \"case\", \"microphone\"]"}
{"cat":"instruments","slot":"user","value":"pianist","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"All the kinds of living beings which are able to operate, employ, interact with or perceive pianist.\";         A textual example of the semantic relation is \"are used by pianists\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['piano', 'violin', 'guitar', 'drums', 'trumpet', 'saxophone', 'cello', 'flute', 'clarinet', 'trombone']"}
{"cat":"instruments","slot":"user","value":"cellist","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"All the kinds of living beings which are able to operate, employ, interact with or perceive cellist.\";         A textual example of the semantic relation is \"are used by cellists\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['cello', 'bow', 'strings', 'rosin', 'tuner', 'music stand', 'score', 'chair', 'practice room', 'recording studio']"}
{"cat":"instruments","slot":"user","value":"drummer","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"All the kinds of living beings which are able to operate, employ, interact with or perceive drummer.\";         A textual example of the semantic relation is \"are used by drummers\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['drumsticks', 'cymbals', 'hi-hat', 'snare drum', 'bass drum', 'tom-tom', 'ride cymbal', 'crash cymbal', 'cowbell', 'tambourine']"}
{"cat":"instruments","slot":"purpose","value":"groove","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"All of the purposes for which groove is interacted with.\";         A textual example of the semantic relation is \"are used for groove\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['guitar', 'drum', 'bass', 'keyboard', 'violin', 'saxophone', 'trumpet', 'flute', 'cello', 'trombone']"}
{"cat":"instruments","slot":"purpose","value":"rhythm","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"All of the purposes for which rhythm is interacted with.\";         A textual example of the semantic relation is \"are used for rhythm\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['drum', 'cymbal', 'triangle', 'clapper', 'castanet', 'tambourine', 'cowbell', 'maracas', 'shaker', 'rattle']"}
{"cat":"instruments","slot":"purpose","value":"light music","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"All of the purposes for which light music is interacted with.\";         A textual example of the semantic relation is \"are used for light music\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['piano', 'guitar', 'violin', 'saxophone', 'trumpet', 'drums', 'ukulele', 'flute', 'clarinet', 'cymbals']"}
{"cat":"instruments","slot":"purpose","value":"jazz","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"All of the purposes for which jazz is interacted with.\";         A textual example of the semantic relation is \"are used for jazz\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['trumpet', 'saxophone', 'piano', 'drums', 'bass', 'guitar', 'clarinet', 'trombone', 'vibraphone', 'flute']"}
{"cat":"instruments","slot":"purpose","value":"solo","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"All of the purposes for which solo is interacted with.\";         A textual example of the semantic relation is \"are used for solo\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['guitar', 'piano', 'violin', 'flute', 'saxophone', 'trumpet', 'drums', 'bass', 'ukulele', 'harmonica']"}
{"cat":"instruments","slot":"purpose","value":"classical music","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"All of the purposes for which classical music is interacted with.\";         A textual example of the semantic relation is \"are used for classical music\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['piano', 'violin', 'cello', 'flute', 'oboe', 'clarinet', 'bassoon', 'trumpet', 'trombone', 'percussion']"}
{"cat":"instruments","slot":"purpose","value":"playing","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"All of the purposes for which playing is interacted with.\";         A textual example of the semantic relation is \"are used to playing\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['guitar', 'piano', 'violin', 'drums', 'trumpet', 'saxophone', 'flute', 'cello', 'clarinet', 'oboe']"}
{"cat":"instruments","slot":"purpose","value":"beat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"All of the purposes for which beat is interacted with.\";         A textual example of the semantic relation is \"are used for beat\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['drum', 'bass', 'guitar', 'piano', 'violin', 'saxophone', 'trumpet', 'flute', 'cello', 'ukulele']"}
{"cat":"instruments","slot":"purpose","value":"sound","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"All of the purposes for which sound is interacted with.\";         A textual example of the semantic relation is \"are used for sound\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['piano', 'guitar', 'drums', 'violin', 'trumpet', 'saxophone', 'flute', 'cello', 'ukulele', 'harmonica']"}
{"cat":"instruments","slot":"purpose","value":"practice","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"All of the purposes for which practice is interacted with.\";         A textual example of the semantic relation is \"are used for practice\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"piano\", \"guitar\", \"violin\", \"drums\", \"flute\", \"trumpet\", \"saxophone\", \"cello\", \"clarinet\", \"trombone\"]"}
{"cat":"instruments","slot":"purpose","value":"sonata","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"All of the purposes for which sonata is interacted with.\";         A textual example of the semantic relation is \"are used for sonata\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['piano', 'violin', 'cello', 'flute', 'oboe', 'clarinet', 'bassoon', 'horn', 'trumpet', 'trombone']"}
{"cat":"instruments","slot":"purpose","value":"improvise","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"All of the purposes for which improvise is interacted with.\";         A textual example of the semantic relation is \"are used to improvise\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['guitar', 'piano', 'saxophone', 'trumpet', 'drums', 'violin', 'bass', 'flute', 'clarinet', 'ukulele']"}
{"cat":"instruments","slot":"purpose","value":"concerto","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"All of the purposes for which concerto is interacted with.\";         A textual example of the semantic relation is \"are used for concerto\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"violin\", \"piano\", \"cello\", \"flute\", \"oboe\", \"clarinet\", \"bassoon\", \"trumpet\", \"trombone\", \"percussion\"]"}
{"cat":"instruments","slot":"purpose","value":"trio","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"All of the purposes for which trio is interacted with.\";         A textual example of the semantic relation is \"are used for trio\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['violin', 'cello', 'piano', 'flute', 'clarinet', 'oboe', 'trumpet', 'trombone', 'percussion', 'guitar']"}
{"cat":"instruments","slot":"purpose","value":"beat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"All of the purposes for which beat is interacted with.\";         A textual example of the semantic relation is \"are used to beat\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"drum\", \"stick\", \"mallet\", \"hammer\", \"whip\", \"rod\", \"club\", \"bat\", \"paddle\", \"cane\"]"}
{"cat":"instruments","slot":"purpose","value":"recital","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"All of the purposes for which recital is interacted with.\";         A textual example of the semantic relation is \"are used for recital\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['piano', 'violin', 'guitar', 'flute', 'trumpet', 'drums', 'cello', 'saxophone', 'clarinet', 'oboe']"}
{"cat":"instruments","slot":"purpose","value":"accompaniment","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"All of the purposes for which accompaniment is interacted with.\";         A textual example of the semantic relation is \"are used for accompaniment\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['guitar', 'piano', 'drums', 'violin', 'bass', 'trumpet', 'saxophone', 'flute', 'cello', 'accordion']"}
{"cat":"instruments","slot":"part","value":"fingerboard","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"All the constitutive parts of fingerboard.\";         A textual example of the semantic relation is \"can have fingerboard\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['guitar', 'violin', 'viola', 'cello', 'double bass', 'mandolin', 'banjo', 'ukulele', 'lute', 'harp']"}
{"cat":"instruments","slot":"part","value":"mouthpiece","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"All the constitutive parts of mouthpiece.\";         A textual example of the semantic relation is \"can have mouthpiece\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['trumpet', 'clarinet', 'saxophone', 'oboe', 'flute', 'bagpipe', 'harmonica', 'tuba', 'euphonium', 'bassoon']"}
{"cat":"instruments","slot":"part","value":"register key","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"All the constitutive parts of register key.\";         A textual example of the semantic relation is \"can have register key\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['piano', 'organ', 'harpsichord', 'accordion', 'harmonium', 'celesta', 'pipe organ', 'clavichord', 'virginal']"}
{"cat":"instruments","slot":"part","value":"ligature","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"All the constitutive parts of ligature.\";         A textual example of the semantic relation is \"can have ligature\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['violin', 'viola', 'cello', 'double bass', 'flute', 'clarinet', 'oboe', 'bassoon', 'horn', 'trumpet']"}
{"cat":"instruments","slot":"part","value":"scroll","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"All the constitutive parts of scroll.\";         A textual example of the semantic relation is \"can have scroll\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"violin\", \"guitar\", \"piano\", \"flute\", \"clarinet\", \"oboe\", \"trumpet\", \"saxophone\", \"cello\", \"double bass\"]"}
{"cat":"instruments","slot":"part","value":"clavier","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"All the constitutive parts of clavier.\";         A textual example of the semantic relation is \"can have clavier\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['keyboard', 'piano', 'organ', 'harpsichord', 'celesta', 'synthesizer', 'accordion', 'harmonium', 'clavichord']"}
{"cat":"instruments","slot":"part","value":"resonance chamber","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"All the constitutive parts of resonance chamber.\";         A textual example of the semantic relation is \"can have resonance chamber\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['violin', 'guitar', 'piano', 'cello', 'harp', 'accordion', 'trumpet', 'clarinet', 'oboe', 'flute']"}
{"cat":"instruments","slot":"part","value":"piano keyboard","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"All the constitutive parts of piano keyboard.\";         A textual example of the semantic relation is \"can have piano keyboard\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['keyboard', 'keys', 'hammer', 'string', 'pedal', 'frame', 'action', 'damper', 'soundboard', 'bridge']"}
{"cat":"instruments","slot":"part","value":"endpin","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"All the constitutive parts of endpin.\";         A textual example of the semantic relation is \"can have endpin\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"cello\", \"double bass\", \"violin\", \"viola\", \"contrabass\", \"bass violin\", \"bass guitar\", \"upright bass\", \"string bass\", \"stand-up bass\"]"}
{"cat":"instruments","slot":"part","value":"neck","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"All the constitutive parts of neck.\";         A textual example of the semantic relation is \"can have neck\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['guitar', 'violin', 'cello', 'double bass', 'viola', 'lute', 'harp', 'banjo', 'mandolin', 'ukulele']"}
{"cat":"instruments","slot":"part","value":"f-hole","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"All the constitutive parts of f-hole.\";         A textual example of the semantic relation is \"can have f-hole\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['violin', 'viola', 'cello', 'double bass', 'guitar', 'mandolin', 'ukulele', 'banjo', 'lute', 'harp']"}
{"cat":"instruments","slot":"part","value":"bridge","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"All the constitutive parts of bridge.\";         A textual example of the semantic relation is \"can have bridge\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['violin', 'guitar', 'mandolin', 'banjo', 'ukulele', 'harp', 'dulcimer', 'sitar', 'lyre', 'zither']"}
{"cat":"instruments","slot":"part","value":"tuning peg","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"All the constitutive parts of tuning peg.\";         A textual example of the semantic relation is \"can have tuning peg\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['violin', 'guitar', 'cello', 'mandolin', 'banjo', 'ukulele', 'harp', 'lute', 'sitar', 'oud']"}
{"cat":"instruments","slot":"part","value":"strap","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"All the constitutive parts of strap.\";         A textual example of the semantic relation is \"can have strap\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['guitar', 'violin', 'cello', 'mandolin', 'ukulele', 'bass', 'banjo', 'harp', 'dulcimer', 'lute']"}
{"cat":"instruments","slot":"part","value":"body","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"All the constitutive parts of body.\";         A textual example of the semantic relation is \"can have body\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['guitar', 'violin', 'piano', 'drums', 'trumpet', 'saxophone', 'flute', 'cello', 'harpsichord', 'harp']"}
{"cat":"instruments","slot":"part","value":"tailpiece","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"All the constitutive parts of tailpiece.\";         A textual example of the semantic relation is \"can have tailpiece\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['violin', 'cello', 'double bass', 'viola', 'guitar', 'piano', 'harp', 'banjo', 'mandolin', 'ukulele']"}
{"cat":"instruments","slot":"part","value":"fine tuner","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"All the constitutive parts of fine tuner.\";         A textual example of the semantic relation is \"can have fine tuner\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['violin', 'cello', 'double bass', 'viola', 'guitar', 'piano', 'trumpet', 'clarinet', 'oboe', 'flute']"}
{"cat":"instruments","slot":"part","value":"thumbhole","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"All the constitutive parts of thumbhole.\";         A textual example of the semantic relation is \"can have thumbhole\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['flute', 'clarinet', 'saxophone', 'oboe', 'bassoon', 'recorder', 'piccolo', 'bagpipes', 'ocarina', 'pan flute']"}
{"cat":"instruments","slot":"part","value":"finger hole","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"All the constitutive parts of finger hole.\";         A textual example of the semantic relation is \"can have finger hole\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['flute', 'recorder', 'clarinet', 'oboe', 'bassoon', 'saxophone', 'piccolo', 'pan flute', 'ocarina', 'shakuhachi']"}
{"cat":"instruments","slot":"part","value":"violin bow","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"All the constitutive parts of violin bow.\";         A textual example of the semantic relation is \"can have violin bow\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['frog', 'stick', 'hair', 'button', 'eyelet', 'screw', 'leather', 'wire', 'grip', 'winding']"}
{"cat":"instruments","slot":"part","value":"fall-board","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"All the constitutive parts of fall-board.\";         A textual example of the semantic relation is \"can have fall-board\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['piano', 'harpsichord', 'organ', 'clavichord', 'celesta', 'harmonium', 'synthesizer', 'accordion', 'melodica', 'harp']"}
{"cat":"instruments","slot":"part","value":"key","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"All the constitutive parts of key.\";         A textual example of the semantic relation is \"can have key\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['piano', 'organ', 'accordion', 'harpsichord', 'clavinet', 'celesta', 'synthesizer', 'melodica', 'harmonium']"}
{"cat":"instruments","slot":"part","value":"drumhead","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"All the constitutive parts of drumhead.\";         A textual example of the semantic relation is \"can have drumhead\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['drum', 'bass drum', 'snare drum', 'tom-tom', 'timpani', 'bongo', 'conga', 'djembe', 'tabla', 'tambourine']"}
{"cat":"instruments","slot":"part","value":"handle","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"All the constitutive parts of handle.\";         A textual example of the semantic relation is \"can have handle\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"guitar\", \"violin\", \"cello\", \"flute\", \"clarinet\", \"trumpet\", \"saxophone\", \"drum\", \"piano\", \"ukulele\"]"}
{"cat":"instruments","slot":"part","value":"skin","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"All the constitutive parts of skin.\";         A textual example of the semantic relation is \"can have skin\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['drum', 'tambourine', 'banjo', 'guitar', 'violin', 'cello', 'accordion', 'harmonica', 'xylophone', 'maracas']"}
{"cat":"instruments","slot":"part","value":"fallboard","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"All the constitutive parts of fallboard.\";         A textual example of the semantic relation is \"can have fallboard\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['piano', 'harpsichord', 'spinet', 'clavichord', 'organ', 'accordion', 'harmonium', 'harp', 'guitar', 'lute']"}
{"cat":"instruments","slot":"part","value":"chin rest","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"All the constitutive parts of chin rest.\";         A textual example of the semantic relation is \"can have chin rest\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['violin', 'viola', 'cello', 'double bass', 'bassoon', 'oboe', 'clarinet', 'flute', 'recorder', 'trumpet']"}
{"cat":"instruments","slot":"part","value":"screw","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"All the constitutive parts of screw.\";         A textual example of the semantic relation is \"can have screw\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['screwdriver', 'screw', 'bolt', 'nut', 'washer', 'rivet', 'fastener', 'clamp', 'bracket', 'connector']"}
{"cat":"instruments","slot":"part","value":"surface","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"All the constitutive parts of surface.\";         A textual example of the semantic relation is \"can have surface\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['violin', 'guitar', 'piano', 'drum', 'trumpet', 'saxophone', 'flute', 'clarinet', 'oboe', 'cymbal']"}
{"cat":"instruments","slot":"part","value":"membrane","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"All the constitutive parts of membrane.\";         A textual example of the semantic relation is \"can have membrane\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['drum', 'timpani', 'xylophone', 'marimba', 'vibraphone', 'snare drum', 'bass drum', 'tom-tom', 'cymbal', 'triangle']"}
{"cat":"instruments","slot":"part","value":"pedal","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"All the constitutive parts of pedal.\";         A textual example of the semantic relation is \"can have pedal\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['organ', 'piano', 'harpsichord', 'clavinet', 'synthesizer', 'electric piano', 'celesta', 'harmonium', 'accordion']"}
{"cat":"instruments","slot":"part","value":"leg","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"All the constitutive parts of leg.\";         A textual example of the semantic relation is \"can have leg\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['piano', 'guitar', 'violin', 'drum', 'trumpet', 'saxophone', 'flute', 'cello', 'clarinet', 'oboe']"}
{"cat":"instruments","slot":"part","value":"piano action","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"All the constitutive parts of piano action.\";         A textual example of the semantic relation is \"can have piano action\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['hammer', 'key', 'string', 'damper', 'pedal', 'soundboard', 'bridge', 'frame', 'pin', 'capstan']"}
{"cat":"instruments","slot":"part","value":"sustaining pedal","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"All the constitutive parts of sustaining pedal.\";         A textual example of the semantic relation is \"can have sustaining pedal\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['piano', 'grand piano', 'upright piano', 'keyboard', 'organ', 'synthesizer', 'harpsichord', 'celesta', 'harmonium', 'clavichord']"}
{"cat":"instruments","slot":"part","value":"hammer","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"All the constitutive parts of hammer.\";         A textual example of the semantic relation is \"can have hammer\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['head', 'handle', 'claw', 'face', 'eye', 'shank', 'bevel', 'peen', 'haft', 'grip']"}
{"cat":"instruments","slot":"part","value":"soft pedal","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"All the constitutive parts of soft pedal.\";         A textual example of the semantic relation is \"can have soft pedal\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['piano', 'keyboard', 'organ', 'harpsichord', 'celesta', 'synthesizer', 'clavichord', 'harmonium', 'electric piano', 'digital piano']"}
{"cat":"instruments","slot":"part","value":"rope","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"All the constitutive parts of rope.\";         A textual example of the semantic relation is \"can have rope\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['guitar', 'violin', 'piano', 'drum', 'trumpet', 'flute', 'saxophone', 'clarinet', 'cello', 'harp']"}
{"cat":"instruments","slot":"part","value":"soundboard","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"All the constitutive parts of soundboard.\";         A textual example of the semantic relation is \"can have soundboard\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['piano', 'guitar', 'violin', 'cello', 'harp', 'banjo', 'ukulele', 'mandolin', 'lute', 'sitar']"}
{"cat":"instruments","slot":"part","value":"button","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"All the constitutive parts of button.\";         A textual example of the semantic relation is \"can have button\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['piano', 'guitar', 'violin', 'trumpet', 'drum', 'flute', 'saxophone', 'clarinet', 'cello']"}
{"cat":"instruments","slot":"part","value":"fiddlestick","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"All the constitutive parts of fiddlestick.\";         A textual example of the semantic relation is \"can have fiddlestick\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['fiddle', 'stick', 'bow', 'strings', 'bridge', 'fingerboard', 'nut', 'tailpiece', 'tuning pegs', 'soundpost']"}
{"cat":"instruments","slot":"part","value":"pleat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"All the constitutive parts of pleat.\";         A textual example of the semantic relation is \"can have pleat\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"accordion\", \"bagpipe\", \"banjo\", \"guitar\", \"harmonica\", \"harp\", \"lute\", \"mandolin\", \"sitar\", \"violin\"]"}
{"cat":"instruments","slot":"part","value":"loud pedal","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"All the constitutive parts of loud pedal.\";         A textual example of the semantic relation is \"can have loud pedal\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['piano', 'organ', 'harmonium', 'cello', 'violin', 'viola', 'double bass', 'clarinet', 'oboe', 'bassoon']"}
{"cat":"instruments","slot":"part","value":"music rack","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"All the constitutive parts of music rack.\";         A textual example of the semantic relation is \"can have music rack\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['violin', 'cello', 'piano', 'guitar', 'drums', 'trumpet', 'saxophone', 'flute', 'clarinet']"}
{"cat":"instruments","slot":"part","value":"bellows","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"All the constitutive parts of bellows.\";         A textual example of the semantic relation is \"can have bellows\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['accordion', 'bagpipe', 'concertina', 'harmonium', 'melodeon', 'organ', 'squeezebox', 'pump organ', 'harmonica']"}
{"cat":"instruments","slot":"part","value":"head","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"All the constitutive parts of head.\";         A textual example of the semantic relation is \"can have head\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['guitar', 'drum', 'violin', 'cello', 'trumpet', 'flute', 'saxophone', 'clarinet', 'oboe', 'bassoon']"}
{"cat":"instruments","slot":"colorPattern","value":"black","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"All the features that refer to the color or texture of black.\";         A textual example of the semantic relation is \"can be black\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['piano', 'violin', 'guitar', 'drum', 'trumpet', 'saxophone', 'flute', 'cello', 'trombone', 'clarinet']"}
{"cat":"instruments","slot":"colorPattern","value":"white","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"All the features that refer to the color or texture of white.\";         A textual example of the semantic relation is \"can be white\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['violin', 'cello', 'piano', 'guitar', 'flute', 'clarinet', 'trumpet', 'drum', 'saxophone', 'harp']"}
{"cat":"instruments","slot":"colorPattern","value":"white","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"All the features that refer to the color or texture of white.\";         A textual example of the semantic relation is \"can be white\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['violin', 'cello', 'piano', 'guitar', 'flute', 'clarinet', 'trumpet', 'drum', 'saxophone', 'harp']"}
{"cat":"instruments","slot":"colorPattern","value":"black","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"All the features that refer to the color or texture of black.\";         A textual example of the semantic relation is \"can be black\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['piano', 'violin', 'guitar', 'drum', 'trumpet', 'saxophone', 'flute', 'cello', 'trombone', 'clarinet']"}
{"cat":"instruments","slot":"colorPattern","value":"brown","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"All the features that refer to the color or texture of brown.\";         A textual example of the semantic relation is \"can be brown\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"violin\", \"guitar\", \"cello\", \"double bass\", \"oboe\", \"bassoon\", \"clarinet\", \"flute\", \"trumpet\", \"saxophone\"]"}
{"cat":"instruments","slot":"colorPattern","value":"brown","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"All the features that refer to the color or texture of brown.\";         A textual example of the semantic relation is \"can be brown\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"violin\", \"guitar\", \"cello\", \"double bass\", \"oboe\", \"bassoon\", \"clarinet\", \"flute\", \"trumpet\", \"saxophone\"]"}
{"cat":"instruments","slot":"colorPattern","value":"silver","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"All the features that refer to the color or texture of silver.\";         A textual example of the semantic relation is \"can be silver\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['flute', 'trumpet', 'violin', 'piano', 'guitar', 'drum', 'cymbal', 'harmonica', 'clarinet', 'saxophone']"}
{"cat":"instruments","slot":"colorPattern","value":"silver","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"All the features that refer to the color or texture of silver.\";         A textual example of the semantic relation is \"can be silver\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['flute', 'trumpet', 'violin', 'piano', 'guitar', 'drum', 'cymbal', 'harmonica', 'clarinet', 'saxophone']"}
{"cat":"instruments","slot":"purpose","value":"play","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"All of the purposes for which play is interacted with.\";         A textual example of the semantic relation is \"are used to play\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"guitar\", \"piano\", \"violin\", \"drums\", \"trumpet\", \"saxophone\", \"flute\", \"cello\", \"clarinet\", \"ukulele\"]"}
{"cat":"instruments","slot":"material","value":"metal","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"Material of which metal is composed.\";         A textual example of the semantic relation is \"can be made of metal\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"guitar\", \"piano\", \"trumpet\", \"violin\", \"drums\", \"harmonica\", \"flute\", \"saxophone\", \"clarinet\", \"trombone\"]"}
{"cat":"instruments","slot":"material","value":"steel","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"Material of which steel is composed.\";         A textual example of the semantic relation is \"can be made of steel\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['guitar', 'violin', 'piano', 'trumpet', 'drum', 'saxophone', 'flute', 'clarinet', 'trombone', 'cymbal']"}
{"cat":"instruments","slot":"material","value":"plastic","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"Material of which plastic is composed.\";         A textual example of the semantic relation is \"can be made of plastic\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"flute\", \"clarinet\", \"saxophone\", \"trumpet\", \"trombone\", \"violin\", \"cello\", \"guitar\", \"piano\", \"drums\"]"}
{"cat":"instruments","slot":"material","value":"ivory","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"Material of which ivory is composed.\";         A textual example of the semantic relation is \"can be made of ivory\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['piano', 'keyboard', 'harpsichord', 'organ', 'flute', 'recorder', 'oboe', 'clarinet', 'horn', 'trumpet']"}
{"cat":"instruments","slot":"material","value":"felt","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"Material of which felt is composed.\";         A textual example of the semantic relation is \"can be made of felt\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"piano\", \"violin\", \"cello\", \"guitar\", \"drum\", \"trumpet\", \"saxophone\", \"clarinet\", \"flute\", \"oboe\"]"}
{"cat":"instruments","slot":"material","value":"aluminium","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"Material of which aluminium is composed.\";         A textual example of the semantic relation is \"can be made of aluminium\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['flute', 'saxophone', 'trumpet', 'clarinet', 'trombone', 'tuba', 'guitar', 'violin', 'cymbals', 'xylophone']"}
{"cat":"instruments","slot":"material","value":"leather","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"Material of which leather is composed.\";         A textual example of the semantic relation is \"can be made of leather\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['whip', 'lash', 'strap', 'belt', 'saddle', 'gloves', 'boots', 'jacket', 'bag', 'wallet']"}
{"cat":"instruments","slot":"material","value":"cork","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"Material of which cork is composed.\";         A textual example of the semantic relation is \"can be made of cork\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['flute', 'clarinet', 'oboe', 'saxophone', 'trumpet', 'trombone', 'violin', 'viola', 'cello', 'double bass']"}
{"cat":"instruments","slot":"material","value":"ebony","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"Material of which ebony is composed.\";         A textual example of the semantic relation is \"can be made of ebony\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['piano', 'violin', 'guitar', 'cello', 'flute', 'clarinet', 'oboe', 'trumpet', 'trombone', 'saxophone']"}
{"cat":"instruments","slot":"material","value":"wood","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"Material of which wood is composed.\";         A textual example of the semantic relation is \"can be made of wood\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['violin', 'guitar', 'piano', 'cello', 'flute', 'clarinet', 'oboe', 'bassoon', 'trumpet', 'drum']"}
{"cat":"instruments","slot":"material","value":"brass","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"Material of which brass is composed.\";         A textual example of the semantic relation is \"can be made of brass\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"trumpet\", \"trombone\", \"tuba\", \"euphonium\", \"cornet\", \"flugelhorn\", \"french horn\", \"sousaphone\", \"baritone horn\", \"mellophone\"]"}
{"cat":"instruments","slot":"part","value":"string","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"All the constitutive parts of string.\";         A textual example of the semantic relation is \"can have string\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['violin', 'viola', 'cello', 'double bass', 'guitar', 'ukulele', 'banjo', 'harp', 'lyre', 'zither']"}
{"cat":"instruments","slot":"generalization","value":"musical instrument","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"Classification of musical instrument related to hypernyms.\";         A textual example of the semantic relation is \"are musical instrument\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['piano', 'guitar', 'violin', 'flute', 'drums', 'trumpet', 'saxophone', 'cello', 'accordion', 'ukulele']"}
{"cat":"instruments","slot":"generalization","value":"device","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"Classification of device related to hypernyms.\";         A textual example of the semantic relation is \"are device\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['piano', 'guitar', 'violin', 'trumpet', 'drums', 'saxophone', 'flute', 'clarinet', 'cello', 'trombone']"}
{"cat":"instruments","slot":"generalization","value":"stringed instrument","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"Classification of stringed instrument related to hypernyms.\";         A textual example of the semantic relation is \"are stringed instrument\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['guitar', 'violin', 'cello', 'ukulele', 'mandolin', 'banjo', 'harp', 'sitar', 'koto', 'lyre']"}
{"cat":"instruments","slot":"generalization","value":"wind instrument","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"Classification of wind instrument related to hypernyms.\";         A textual example of the semantic relation is \"are wind instrument\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['flute', 'oboe', 'clarinet', 'bassoon', 'saxophone', 'trumpet', 'horn', 'trombone', 'tuba', 'bagpipe']"}
{"cat":"instruments","slot":"generalization","value":"wind","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"Classification of wind related to hypernyms.\";         A textual example of the semantic relation is \"are wind\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['flute', 'oboe', 'clarinet', 'bassoon', 'saxophone', 'trumpet', 'trombone', 'french horn', 'tuba', 'euphonium']"}
{"cat":"instruments","slot":"generalization","value":"percussion instrument","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"Classification of percussion instrument related to hypernyms.\";         A textual example of the semantic relation is \"are percussion instrument\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['drum', 'cymbal', 'triangle', 'maracas', 'xylophone', 'vibraphone', 'tambourine', 'castanets', 'claves', 'gong']"}
{"cat":"instruments","slot":"generalization","value":"instrument","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"Classification of instrument related to hypernyms.\";         A textual example of the semantic relation is \"are instrument\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['piano', 'guitar', 'violin', 'trumpet', 'drums', 'flute', 'saxophone', 'clarinet', 'trombone', 'ukulele']"}
{"cat":"instruments","slot":"generalization","value":"woodwind","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"Classification of woodwind related to hypernyms.\";         A textual example of the semantic relation is \"are woodwind\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['clarinet', 'flute', 'oboe', 'saxophone', 'bassoon', 'piccolo', 'recorder', 'bagpipes', 'pan flute', 'harmonica']"}
{"cat":"instruments","slot":"generalization","value":"percussion","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"Classification of percussion related to hypernyms.\";         A textual example of the semantic relation is \"are percussion\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"drum\", \"cymbal\", \"triangle\", \"xylophone\", \"marimba\", \"vibraphone\", \"glockenspiel\", \"timpani\", \"claves\", \"bells\"]"}
{"cat":"instruments","slot":"generalization","value":"woodwind instrument","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"Classification of woodwind instrument related to hypernyms.\";         A textual example of the semantic relation is \"are woodwind instrument\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['clarinet', 'oboe', 'flute', 'saxophone', 'bassoon', 'recorder', 'bagpipe', 'piccolo', 'pan flute', 'shakuhachi']"}
{"cat":"instruments","slot":"generalization","value":"percussive instrument","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"Classification of percussive instrument related to hypernyms.\";         A textual example of the semantic relation is \"are percussive instrument\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"drum\", \"cymbal\", \"triangle\", \"tambourine\", \"maracas\", \"castanets\", \"xylophone\", \"glockenspiel\", \"vibraphone\", \"timpani\"]"}
{"cat":"instruments","slot":"generalization","value":"keyboard instrument","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"Classification of keyboard instrument related to hypernyms.\";         A textual example of the semantic relation is \"are keyboard instrument\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['piano', 'organ', 'harpsichord', 'synthesizer', 'clavinet', 'melodica', 'celesta', 'harmonium', 'accordion']"}
{"cat":"instruments","slot":"generalization","value":"beating-reed instrument","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"Classification of beating-reed instrument related to hypernyms.\";         A textual example of the semantic relation is \"are beating-reed instrument\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['clarinet', 'saxophone', 'oboe', 'bagpipe', 'harmonica', 'accordion', 'organ', 'bassoon', 'recorder', 'flute']"}
{"cat":"instruments","slot":"generalization","value":"reed instrument","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"Classification of reed instrument related to hypernyms.\";         A textual example of the semantic relation is \"are reed instrument\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['oboe', 'clarinet', 'saxophone', 'bagpipe', 'sheng', 'harmonica', 'accordion', 'organ', 'flute', 'piccolo']"}
{"cat":"instruments","slot":"generalization","value":"instrumentation","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"Classification of instrumentation related to hypernyms.\";         A textual example of the semantic relation is \"are instrumentation\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['guitar', 'piano', 'violin', 'trumpet', 'drums', 'flute', 'saxophone', 'cello', 'accordion', 'ukulele']"}
{"cat":"instruments","slot":"generalization","value":"instrumentality","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"Classification of instrumentality related to hypernyms.\";         A textual example of the semantic relation is \"are instrumentality\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['piano', 'violin', 'guitar', 'drums', 'trumpet', 'saxophone', 'flute', 'clarinet', 'oboe', 'trombone']"}
{"cat":"instruments","slot":"generalization","value":"free-reed instrument","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"Classification of free-reed instrument related to hypernyms.\";         A textual example of the semantic relation is \"are free-reed instrument\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['harmonica', 'accordion', 'concertina', 'melodica', 'bandoneon', 'sheng', 'mouth organ', 'reed organ', 'free reed aerophone', 'harmonium']"}
{"cat":"instruments","slot":"generalization","value":"double-reed instrument","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"Classification of double-reed instrument related to hypernyms.\";         A textual example of the semantic relation is \"are double-reed instrument\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['oboe', 'bassoon', 'cor anglais', 'heckelphone', 'shawm', 'bagpipe', 'zurna', 'suona', 'duduk', 'shehnai']"}
{"cat":"instruments","slot":"generalization","value":"single-reed woodwind","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"Classification of single-reed woodwind related to hypernyms.\";         A textual example of the semantic relation is \"are single-reed woodwind\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['clarinet', 'saxophone', 'oboe', 'bassoon', 'bagpipe', 'harmonica', 'shawm', 'zurna', 'duduk', 'suona']"}
{"cat":"instruments","slot":"generalization","value":"double reed","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"Classification of double reed related to hypernyms.\";         A textual example of the semantic relation is \"are double reed\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['oboe', 'bassoon', 'cor anglais', 'heckelphone', 'sarrusophone', 'contrabassoon', 'bagpipe', 'shawm', 'zurna', 'suona']"}
{"cat":"instruments","slot":"generalization","value":"single-reed instrument","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"Classification of single-reed instrument related to hypernyms.\";         A textual example of the semantic relation is \"are single-reed instrument\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['clarinet', 'oboe', 'saxophone', 'bagpipe', 'shawm', 'bassoon', 'English horn', 'sarrusophone', 'bass clarinet', 'contrabass clarinet']"}
{"cat":"instruments","slot":"generalization","value":"bowed stringed instrument","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"Classification of bowed stringed instrument related to hypernyms.\";         A textual example of the semantic relation is \"are bowed stringed instrument\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['violin', 'viola', 'cello', 'double bass', 'rebec', 'hardanger fiddle', 'nyckelharpa', 'erhu', 'koky\u016b', 'gadulka']"}
{"cat":"instruments","slot":"generalization","value":"brass instrument","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"Classification of brass instrument related to hypernyms.\";         A textual example of the semantic relation is \"are brass instrument\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"trumpet\", \"trombone\", \"tuba\", \"cornet\", \"euphonium\", \"sousaphone\", \"flugelhorn\", \"french horn\", \"baritone horn\", \"mellophone\"]"}
{"cat":"instruments","slot":"generalization","value":"electronic musical instrument","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"Classification of electronic musical instrument related to hypernyms.\";         A textual example of the semantic relation is \"are electronic musical instrument\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['synthesizer', 'keyboard', 'drum machine', 'sampler', 'sequencer', 'groovebox', 'workstation', 'sound module', 'controller', 'effects processor']"}
{"cat":"instruments","slot":"generalization","value":"guitar","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"Classification of guitar related to hypernyms.\";         A textual example of the semantic relation is \"are guitar\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['guitar', 'acoustic guitar', 'electric guitar', 'bass guitar', 'classical guitar', 'folk guitar', 'flamenco guitar', 'jazz guitar', 'rock guitar', 'blues guitar']"}
{"cat":"instruments","slot":"generalization","value":"chordophone","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"Classification of chordophone related to hypernyms.\";         A textual example of the semantic relation is \"are chordophone\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['guitar', 'violin', 'cello', 'piano', 'harp', 'banjo', 'mandolin', 'ukulele', 'lute', 'zither']"}
{"cat":"instruments","slot":"generalization","value":"flute","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"Classification of flute related to hypernyms.\";         A textual example of the semantic relation is \"are flute\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"flute\", \"piccolo\", \"recorder\", \"pan flute\", \"ocarina\", \"transverse flute\", \"end-blown flute\", \"side-blown flute\", \"double flute\"]"}
{"cat":"instruments","slot":"generalization","value":"electronic instrument","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"Classification of electronic instrument related to hypernyms.\";         A textual example of the semantic relation is \"are electronic instrument\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['synthesizer', 'keyboard', 'drum machine', 'sampler', 'sequencer', 'effects processor', 'mixer', 'controller', 'recorder', 'speaker']"}
{"cat":"instruments","slot":"generalization","value":"transverse flute","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"Classification of transverse flute related to hypernyms.\";         A textual example of the semantic relation is \"are transverse flute\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['recorder', 'fife', 'piccolo', 'flageolet', 'pan flute', 'shakuhachi', 'bansuri', 'quena', 'tin whistle', 'ocarina']"}
{"cat":"instruments","slot":"howToUse","value":"play","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"All the actions or states required to operate, employ, interact with or perceive the existence of play.\";         A textual example of the semantic relation is \"can be used for play\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['violin', 'piano', 'guitar', 'drums', 'trumpet', 'clarinet', 'flute', 'saxophone', 'cello', 'ukulele']"}
{"cat":"instruments","slot":"part","value":"reed","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"All the constitutive parts of reed.\";         A textual example of the semantic relation is \"can have reed\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['clarinet', 'oboe', 'saxophone', 'bagpipe', 'harmonica', 'accordion', 'bassoon', 'organ', 'piano', 'violin']"}
{"cat":"instruments","slot":"part","value":"keyboard","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"All the constitutive parts of keyboard.\";         A textual example of the semantic relation is \"can have keyboard\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['piano', 'organ', 'synthesizer', 'harpsichord', 'clavichord', 'harmonium', 'melodica', 'accordion', 'digital piano', 'electric piano']"}
{"cat":"instruments","slot":"generalization","value":"reed","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"Classification of reed related to hypernyms.\";         A textual example of the semantic relation is \"are reed\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['oboe', 'clarinet', 'saxophone', 'bagpipe', 'harmonica', 'accordion', 'organ', 'bassoon', 'flute', 'piccolo']"}
{"cat":"instruments","slot":"generalization","value":"keyboard","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"Classification of keyboard related to hypernyms.\";         A textual example of the semantic relation is \"are keyboard\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['piano', 'organ', 'synthesizer', 'harpsichord', 'clavichord', 'accordion', 'harmonium', 'melodica', 'electric piano', 'digital piano']"}
{"cat":"instruments","slot":"generalization","value":"string","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"Classification of string related to hypernyms.\";         A textual example of the semantic relation is \"are string\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['violin', 'viola', 'cello', 'bass', 'guitar', 'mandolin', 'banjo', 'harp', 'lute', 'zither']"}
{"cat":"instruments","slot":"generalization","value":"brass","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"Classification of brass related to hypernyms.\";         A textual example of the semantic relation is \"are brass\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"trumpet\", \"trombone\", \"tuba\", \"french horn\", \"cornet\", \"euphonium\", \"sousaphone\", \"flugelhorn\", \"bugle\", \"baritone horn\"]"}
{"cat":"instruments","slot":"generalization","value":"wood","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"instruments\";         The returned words must satisfy the semantic relation \"Classification of wood related to hypernyms.\";         A textual example of the semantic relation is \"are wood\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['violin', 'guitar', 'piano', 'cello', 'flute', 'clarinet', 'oboe', 'bassoon', 'trumpet', 'drum']"}
{"cat":"artifacts","slot":"sound","value":"ping","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"All the entries with which the sound of ping can be described.\";         A textual example of the semantic relation is \"can ping\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"sonar\", \"radar\", \"ping\", \"echo\", \"signal\", \"transmitter\", \"receiver\", \"sounder\", \"locator\", \"detector\"]"}
{"cat":"artifacts","slot":"howToUse","value":"wear","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"All the actions or states required to operate, employ, interact with or perceive the existence of wear.\";         A textual example of the semantic relation is \"can be used for wear\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['bracelet', 'necklace', 'watch', 'ring', 'earring', 'cufflink', 'tie clip', 'brooch', 'pendant', 'pin']"}
{"cat":"artifacts","slot":"howToUse","value":"wield","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"All the actions or states required to operate, employ, interact with or perceive the existence of wield.\";         A textual example of the semantic relation is \"can be used for wield\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['sword', 'shield', 'spear', 'bow', 'axe', 'staff', 'mace', 'dagger', 'halberd', 'warhammer']"}
{"cat":"artifacts","slot":"howToUse","value":"fasten","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"All the actions or states required to operate, employ, interact with or perceive the existence of fasten.\";         A textual example of the semantic relation is \"can be used for fasten\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['screwdriver', 'hammer', 'nails', 'screws', 'rivets', 'clamps', 'wrench', 'bolts', 'adhesive', 'zip ties']"}
{"cat":"artifacts","slot":"howToUse","value":"don","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"All the actions or states required to operate, employ, interact with or perceive the existence of don.\";         A textual example of the semantic relation is \"can be used for don\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"sword\", \"shield\", \"bow\", \"arrow\", \"axe\", \"spear\", \"dagger\", \"staff\", \"mace\", \"warhammer\"]"}
{"cat":"artifacts","slot":"bodyPart","value":"chin","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"All the body parts which are involved in interacting with chin.\";         A textual example of the semantic relation is \"can have or be used with chin\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['chin', 'jaw', 'teeth', 'tongue', 'lips', 'cheeks', 'neck', 'head', 'hands', 'fingers']"}
{"cat":"artifacts","slot":"bodyPart","value":"ring","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"All the body parts which are involved in interacting with ring.\";         A textual example of the semantic relation is \"can have or be used with ring\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"finger\", \"hand\", \"ring\", \"jewelry\", \"bracelet\", \"necklace\", \"earring\", \"watch\", \"pendant\", \"amulet\"]"}
{"cat":"artifacts","slot":"bodyPart","value":"head","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"All the body parts which are involved in interacting with head.\";         A textual example of the semantic relation is \"can have or be used with head\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['helmet', 'hat', 'crown', 'headband', 'headphones', 'headset', 'headrest', 'hood', 'veil', 'wig']"}
{"cat":"artifacts","slot":"bodyPart","value":"wrist","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"All the body parts which are involved in interacting with wrist.\";         A textual example of the semantic relation is \"can have or be used with wrist\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['watch', 'bracelet', 'hand', 'finger', 'thumb', 'arm', 'elbow', 'shoulder', 'neck', 'head']"}
{"cat":"artifacts","slot":"place","value":"clothes shop","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"All the entities in which clothes shop can be experienced, found or perceived.\";         A textual example of the semantic relation is \"can be found or used in clothes shops\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"mannequin\", \"clothing rack\", \"dressing room\", \"cash register\", \"price tag\", \"hanger\", \"clothing label\", \"display case\", \"mirror\", \"shopping bag\"]"}
{"cat":"artifacts","slot":"place","value":"building site","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"All the entities in which building site can be experienced, found or perceived.\";         A textual example of the semantic relation is \"can be found or used in building sites\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"hammer\", \"nail\", \"screwdriver\", \"wrench\", \"level\", \"tape measure\", \"saw\", \"drill\", \"chisel\", \"paintbrush\"]"}
{"cat":"artifacts","slot":"place","value":"hairdresser","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"All the entities in which hairdresser can be experienced, found or perceived.\";         A textual example of the semantic relation is \"can be found or used in hairdressers\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['hairdryer', 'scissors', 'comb', 'hairbrush', 'hair clippers', 'razor', 'hair spray', 'hair gel', 'hair straightener', 'hair curler']"}
{"cat":"artifacts","slot":"place","value":"bedroom","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"All the entities in which bedroom can be experienced, found or perceived.\";         A textual example of the semantic relation is \"can be found or used in bedrooms\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['bed', 'dresser', 'nightstand', 'wardrobe', 'mirror', 'carpet', 'curtains', 'pillows', 'blankets', 'lamp']"}
{"cat":"artifacts","slot":"place","value":"bathroom","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"All the entities in which bathroom can be experienced, found or perceived.\";         A textual example of the semantic relation is \"can be found or used in bathrooms\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['shower', 'toilet', 'sink', 'mirror', 'towel', 'soap', 'toothbrush', 'toothpaste', 'shampoo', 'conditioner']"}
{"cat":"artifacts","slot":"bodyPart","value":"bracelet","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"All the body parts which are involved in interacting with bracelet.\";         A textual example of the semantic relation is \"can have or be used with bracelet\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['wrist', 'hand', 'arm', 'finger', 'palm', 'ankle', 'foot', 'leg', 'toe', 'thumb']"}
{"cat":"artifacts","slot":"efficiency","value":"waterproof","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"Positive (efficiency) or negative (inefficiency) features of waterproof related to their function.\";         A textual example of the semantic relation is \"can be waterproof\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"waterproof\", \"water-resistant\", \"water-repellent\", \"water-tight\", \"water-sealed\", \"water-protected\", \"water-shielded\", \"water-proofed\", \"water-defended\", \"water-guarded\"]"}
{"cat":"artifacts","slot":"efficiency","value":"fragile","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"Positive (efficiency) or negative (inefficiency) features of fragile related to their function.\";         A textual example of the semantic relation is \"can be fragile\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['durable', 'resilient', 'sturdy', 'robust', 'fragile', 'brittle', 'delicate', 'fragility', 'breakable', 'frailty']"}
{"cat":"artifacts","slot":"efficiency","value":"strong","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"Positive (efficiency) or negative (inefficiency) features of strong related to their function.\";         A textual example of the semantic relation is \"can be strong\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['durable', 'reliable', 'efficient', 'effective', 'sturdy', 'resilient', 'robust', 'long-lasting', 'solid', 'tough']"}
{"cat":"artifacts","slot":"efficiency","value":"resistant","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"Positive (efficiency) or negative (inefficiency) features of resistant related to their function.\";         A textual example of the semantic relation is \"can be resistant\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['durable', 'resilient', 'sturdy', 'robust', 'long-lasting', 'reliable', 'tough', 'hardy', 'unbreakable', 'weather-resistant']"}
{"cat":"artifacts","slot":"purpose","value":"write","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"All of the purposes for which write is interacted with.\";         A textual example of the semantic relation is \"are used to write\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['pen', 'pencil', 'marker', 'chalk', 'quill', 'typewriter', 'stylus', 'keyboard', 'ink', 'paper']"}
{"cat":"artifacts","slot":"purpose","value":"safety","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"All of the purposes for which safety is interacted with.\";         A textual example of the semantic relation is \"are used for safety\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['helmet', 'seatbelt', 'safety goggles', 'life jacket', 'fire extinguisher', 'smoke detector', 'safety harness', 'safety net', 'safety glass', 'safety gloves']"}
{"cat":"artifacts","slot":"purpose","value":"climbing","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"All of the purposes for which climbing is interacted with.\";         A textual example of the semantic relation is \"are used for climbing\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['rope', 'harness', 'carabiner', 'belay device', 'helmet', 'chalk bag', 'climbing shoes', 'quickdraws', 'ascender', 'ice axe']"}
{"cat":"artifacts","slot":"purpose","value":"fight","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"All of the purposes for which fight is interacted with.\";         A textual example of the semantic relation is \"are used for fight\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['sword', 'shield', 'axe', 'mace', 'spear', 'bow', 'arrow', 'dagger', 'staff', 'gauntlet']"}
{"cat":"artifacts","slot":"purpose","value":"sport","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"All of the purposes for which sport is interacted with.\";         A textual example of the semantic relation is \"are used for sport\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['tennis racket', 'baseball bat', 'golf club', 'hockey stick', 'soccer ball', 'basketball', 'boxing gloves', 'wrestling singlet', 'swimming goggles', 'track shoes']"}
{"cat":"artifacts","slot":"purpose","value":"hang","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"All of the purposes for which hang is interacted with.\";         A textual example of the semantic relation is \"are used to hang\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['hook', 'nail', 'clothes hanger', 'picture frame', 'curtain rod', 'key holder', 'coat rack', 'shelf', 'pegboard', 'clothesline']"}
{"cat":"artifacts","slot":"purpose","value":"reflect","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"All of the purposes for which reflect is interacted with.\";         A textual example of the semantic relation is \"are used to reflect\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['mirror', 'prism', 'lens', 'reflector', 'polished surface', 'shiny object', 'metal', 'glass', 'water', 'silver']"}
{"cat":"artifacts","slot":"purpose","value":"groom","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"All of the purposes for which groom is interacted with.\";         A textual example of the semantic relation is \"are used to groom\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['comb', 'brush', 'razor', 'hair dryer', 'hair straightener', 'nail clippers', 'toothbrush', 'shaving cream', 'hair gel', 'hair spray']"}
{"cat":"artifacts","slot":"user","value":"secretary","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"All the kinds of living beings which are able to operate, employ, interact with or perceive secretary.\";         A textual example of the semantic relation is \"are used by secretaries\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['typewriter', 'computer', 'phone', 'stapler', 'printer', 'paper', 'pencil', 'file cabinet', 'desk', 'chair']"}
{"cat":"artifacts","slot":"user","value":"woman","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"All the kinds of living beings which are able to operate, employ, interact with or perceive woman.\";         A textual example of the semantic relation is \"are used by women\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['lipstick', 'high-heels', 'purse', 'hairbrush', 'mirror', 'makeup', 'jewelry', 'dress', 'shoes', 'handbag']"}
{"cat":"artifacts","slot":"user","value":"riot police","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"All the kinds of living beings which are able to operate, employ, interact with or perceive riot police.\";         A textual example of the semantic relation is \"are used by riot polices\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['baton', 'shield', 'helmet', 'gas mask', 'pepper spray', 'tear gas', 'riot gear', 'body armor', 'crowd control barriers', 'flash-bang grenades']"}
{"cat":"artifacts","slot":"user","value":"soldier","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"All the kinds of living beings which are able to operate, employ, interact with or perceive soldier.\";         A textual example of the semantic relation is \"are used by soldiers\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['uniform', 'helmet', 'gun', 'knife', 'backpack', 'boots', 'communication device', 'night vision goggles', 'flak jacket', 'medical kit']"}
{"cat":"artifacts","slot":"user","value":"climber","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"All the kinds of living beings which are able to operate, employ, interact with or perceive climber.\";         A textual example of the semantic relation is \"are used by climbers\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['climbing_rope', 'carabiner', 'harness', 'helmet', 'belay_device', 'ice_axe', 'crampons', 'mountaineering_boots', 'chalk_bag', 'climbing_shoes']"}
{"cat":"artifacts","slot":"user","value":"writer","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"All the kinds of living beings which are able to operate, employ, interact with or perceive writer.\";         A textual example of the semantic relation is \"are used by writers\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"typewriter\", \"pen\", \"ink\", \"paper\", \"computer\", \"keyboard\", \"mouse\", \"stylus\", \"tablet\", \"notebook\"]"}
{"cat":"artifacts","slot":"user","value":"cyclist","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"All the kinds of living beings which are able to operate, employ, interact with or perceive cyclist.\";         A textual example of the semantic relation is \"are used by cyclists\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['bicycle', 'helmet', 'gloves', 'pump', 'pedals', 'handlebars', 'seat', 'chain', 'wheels', 'brakes']"}
{"cat":"artifacts","slot":"user","value":"horseman","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"All the kinds of living beings which are able to operate, employ, interact with or perceive horseman.\";         A textual example of the semantic relation is \"are used by horsemen\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"whip\", \"spur\", \"reins\", \"saddle\", \"bridle\", \"bit\", \"stirrup\", \"horse\", \"harness\", \"horseshoe\"]"}
{"cat":"artifacts","slot":"user","value":"motorcyclist","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"All the kinds of living beings which are able to operate, employ, interact with or perceive motorcyclist.\";         A textual example of the semantic relation is \"are used by motorcyclists\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['helmet', 'gloves', 'jacket', 'boots', 'goggles', 'knee pads', 'elbow pads', 'backpack', 'toolkit', 'map']"}
{"cat":"artifacts","slot":"shape","value":"circular","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"Form of circular.\";         A textual example of the semantic relation is \"can be circular\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['coin', 'medallion', 'disk', 'ring', 'wheel', 'compass', 'button', 'badge', 'seal', 'plate']"}
{"cat":"artifacts","slot":"shape","value":"round","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"Form of round.\";         A textual example of the semantic relation is \"can be round\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"coin\", \"button\", \"medal\", \"wheel\", \"plate\", \"mirror\", \"marble\", \"watch\", \"ball\", \"bottle cap\"]"}
{"cat":"artifacts","slot":"shape","value":"rond","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"Form of rond.\";         A textual example of the semantic relation is \"can be rond\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['coin', 'ring', 'medallion', 'amulet', 'seal', 'token', 'charm', 'pendant', 'bangle', 'talisman']"}
{"cat":"artifacts","slot":"shape","value":"arched","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"Form of arched.\";         A textual example of the semantic relation is \"can be arched\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"bow\", \"bridge\", \"gate\", \"arch\", \"door\", \"window\", \"gateway\", \"portal\", \"entrance\", \"passageway\"]"}
{"cat":"artifacts","slot":"shape","value":"spherical","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"Form of spherical.\";         A textual example of the semantic relation is \"can be spherical\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['ball', 'bubble', 'globe', 'marble', 'orange', 'pearl', 'planet', 'sphere', 'sun', 'world']"}
{"cat":"artifacts","slot":"colorPattern","value":"black","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"All the features that refer to the color or texture of black.\";         A textual example of the semantic relation is \"can be black\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['coal', 'ink', 'tar', 'jet', 'onyx', 'ebony', 'black pearl', 'black diamond', 'black gold', 'black opal']"}
{"cat":"artifacts","slot":"colorPattern","value":"golden","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"All the features that refer to the color or texture of golden.\";         A textual example of the semantic relation is \"can be golden\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['golden', 'yellow', 'shiny', 'lustrous', 'bright', 'gleaming', 'radiant', 'metallic', 'precious', 'opulent']"}
{"cat":"artifacts","slot":"colorPattern","value":"sparkly","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"All the features that refer to the color or texture of sparkly.\";         A textual example of the semantic relation is \"can be sparkly\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['diamond', 'crystal', 'jewel', 'gemstone', 'sequin', 'glitter', 'rhinestone', 'bead', 'mirror', 'metal']"}
{"cat":"artifacts","slot":"colorPattern","value":"white","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"All the features that refer to the color or texture of white.\";         A textual example of the semantic relation is \"can be white\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"porcelain\", \"marble\", \"ivory\", \"pearl\", \"snow\", \"silk\", \"milk\", \"paper\", \"chalk\", \"bone\"]"}
{"cat":"artifacts","slot":"colorPattern","value":"white","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"All the features that refer to the color or texture of white.\";         A textual example of the semantic relation is \"can be white\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"porcelain\", \"marble\", \"ivory\", \"pearl\", \"snow\", \"silk\", \"milk\", \"paper\", \"chalk\", \"bone\"]"}
{"cat":"artifacts","slot":"colorPattern","value":"black","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"All the features that refer to the color or texture of black.\";         A textual example of the semantic relation is \"can be black\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['coal', 'ink', 'tar', 'jet', 'onyx', 'ebony', 'black pearl', 'black diamond', 'black gold', 'black opal']"}
{"cat":"artifacts","slot":"colorPattern","value":"silver","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"All the features that refer to the color or texture of silver.\";         A textual example of the semantic relation is \"can be silver\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"silverware\", \"silver\", \"silver-plated\", \"silvered\", \"silvering\", \"silver-colored\", \"silver-toned\", \"silver-hued\", \"silver-like\", \"silvered\"]"}
{"cat":"artifacts","slot":"purpose","value":"shade","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"All of the purposes for which shade is interacted with.\";         A textual example of the semantic relation is \"are used for shade\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['umbrella', 'parasol', 'awning', 'canopy', 'shelter', 'tent', 'tree', 'hat', 'sunglasses', 'curtain']"}
{"cat":"artifacts","slot":"purpose","value":"shelter","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"All of the purposes for which shelter is interacted with.\";         A textual example of the semantic relation is \"are used for shelter\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['tent', 'house', 'apartment', 'cabin', 'igloo', 'yurt', 'teepee', 'shed', 'garage', 'bunker']"}
{"cat":"artifacts","slot":"bodyPart","value":"jewelry","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"All the body parts which are involved in interacting with jewelry.\";         A textual example of the semantic relation is \"can have or be used with jewelry\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"neck\", \"wrist\", \"ear\", \"finger\", \"ankle\", \"nose\", \"toe\", \"hair\", \"body\", \"lips\"]"}
{"cat":"artifacts","slot":"part","value":"clasp","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"All the constitutive parts of clasp.\";         A textual example of the semantic relation is \"can have clasp\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"brooch\", \"bracelet\", \"necklace\", \"ring\", \"pendant\", \"watch\", \"earring\", \"cufflink\", \"locket\", \"tie clip\"]"}
{"cat":"artifacts","slot":"part","value":"fastener","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"All the constitutive parts of fastener.\";         A textual example of the semantic relation is \"can have fastener\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"bolt\", \"screw\", \"nut\", \"rivet\", \"pin\", \"clamp\", \"clip\", \"hook\", \"buckle\", \"zipper\"]"}
{"cat":"artifacts","slot":"part","value":"tip","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"All the constitutive parts of tip.\";         A textual example of the semantic relation is \"can have tip\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['pen', 'pencil', 'marker', 'fountain pen', 'quill', 'stylus', 'dip pen', 'brush pen', 'ballpoint pen', 'gel pen']"}
{"cat":"artifacts","slot":"part","value":"bead","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"All the constitutive parts of bead.\";         A textual example of the semantic relation is \"can have bead\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"bead\", \"string\", \"thread\", \"wire\", \"clasp\", \"fastener\", \"pendant\", \"gemstone\", \"crystal\", \"metal\"]"}
{"cat":"artifacts","slot":"part","value":"ink","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"All the constitutive parts of ink.\";         A textual example of the semantic relation is \"can have ink\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"quill\", \"pen\", \"nib\", \"inkwell\", \"fountain pen\", \"ballpoint pen\", \"rollerball pen\", \"marker\", \"brush\", \"stylus\"]"}
{"cat":"artifacts","slot":"part","value":"lever","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"All the constitutive parts of lever.\";         A textual example of the semantic relation is \"can have lever\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"fulcrum\", \"effort\", \"resistance\", \"pivot\", \"force\", \"mechanical advantage\", \"lever arm\", \"torque\", \"moment arm\", \"lever\"]"}
{"cat":"artifacts","slot":"part","value":"platen","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"All the constitutive parts of platen.\";         A textual example of the semantic relation is \"can have platen\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['platen', 'press', 'plate', 'printing', 'machine', 'roller', 'ink', 'paper', 'substrate', 'impression']"}
{"cat":"artifacts","slot":"part","value":"knob","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"All the constitutive parts of knob.\";         A textual example of the semantic relation is \"can have knob\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"knob\", \"handle\", \"switch\", \"button\", \"dial\", \"lever\", \"toggle\", \"slider\", \"wheel\", \"grip\"]"}
{"cat":"artifacts","slot":"part","value":"pickup","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"All the constitutive parts of pickup.\";         A textual example of the semantic relation is \"can have pickup\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"magnet\", \"coil\", \"pole\", \"bobbin\", \"core\", \"wire\", \"screw\", \"adhesive\", \"plastic\", \"metal\"]"}
{"cat":"artifacts","slot":"part","value":"parasol","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"All the constitutive parts of parasol.\";         A textual example of the semantic relation is \"can have parasol\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"handle\", \"ribs\", \"shaft\", \"spreaders\", \"ferrule\", \"fabric\", \"tip\", \"cap\", \"ring\", \"spring\"]"}
{"cat":"artifacts","slot":"part","value":"shaft","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"All the constitutive parts of shaft.\";         A textual example of the semantic relation is \"can have shaft\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['blade', 'handle', 'haft', 'haft', 'haft', 'haft', 'haft', 'haft', 'haft', 'haft']"}
{"cat":"artifacts","slot":"part","value":"felloe","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"All the constitutive parts of felloe.\";         A textual example of the semantic relation is \"can have felloe\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['wheel', 'rim', 'hub', 'spokes', 'tire', 'axle', 'bearing', 'valve', 'lug', 'rotor']"}
{"cat":"artifacts","slot":"part","value":"rib","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"All the constitutive parts of rib.\";         A textual example of the semantic relation is \"can have rib\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"bone\", \"cartilage\", \"connective tissue\", \"fat\", \"muscle\", \"nerve\", \"skin\", \"tendon\", \"vascular tissue\", \"bone marrow\"]"}
{"cat":"artifacts","slot":"part","value":"felly","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"All the constitutive parts of felly.\";         A textual example of the semantic relation is \"can have felly\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['wheel', 'axle', 'rim', 'spoke', 'hub', 'tire', 'bearing', 'nipple', 'valve', 'seal']"}
{"cat":"artifacts","slot":"part","value":"cartridge","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"All the constitutive parts of cartridge.\";         A textual example of the semantic relation is \"can have cartridge\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['shell', 'case', 'primer', 'powder', 'bullet', 'cap', 'propellant', 'projectile', 'firing pin', 'brass']"}
{"cat":"artifacts","slot":"part","value":"key","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"All the constitutive parts of key.\";         A textual example of the semantic relation is \"can have key\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"key\", \"lock\", \"keychain\", \"keyring\", \"keyhole\", \"keypad\", \"keypunch\", \"keyboard\", \"keyboard\", \"keylogger\"]"}
{"cat":"artifacts","slot":"part","value":"handle","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"All the constitutive parts of handle.\";         A textual example of the semantic relation is \"can have handle\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['knife', 'sword', 'axe', 'hammer', 'screwdriver', 'wrench', 'pliers', 'spanner', 'chisel', 'saw']"}
{"cat":"artifacts","slot":"part","value":"pendent","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"All the constitutive parts of pendent.\";         A textual example of the semantic relation is \"can have pendent\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"necklace\", \"bracelet\", \"amulet\", \"talisman\", \"pendant\", \"earring\", \"ring\", \"brooch\", \"watch\", \"medallion\"]"}
{"cat":"artifacts","slot":"part","value":"typewriter carriage","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"All the constitutive parts of typewriter carriage.\";         A textual example of the semantic relation is \"can have typewriter carriage\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"platen\", \"carriage return\", \"line spacing\", \"carriage\", \"ink ribbon\", \"typewriter\", \"paper\", \"lever\", \"keys\", \"printing mechanism\"]"}
{"cat":"artifacts","slot":"part","value":"typewriter keyboard","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"All the constitutive parts of typewriter keyboard.\";         A textual example of the semantic relation is \"can have typewriter keyboard\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['key', 'spacebar', 'shift', 'return', 'backspace', 'tab', 'caps lock', 'num lock', 'scroll lock']"}
{"cat":"artifacts","slot":"part","value":"tone arm","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"All the constitutive parts of tone arm.\";         A textual example of the semantic relation is \"can have tone arm\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"counterweight\", \"headshell\", \"cartridge\", \"stylus\", \"armrest\", \"armboard\", \"bearing\", \"cable\", \"mounting\"]"}
{"cat":"artifacts","slot":"part","value":"angle","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"All the constitutive parts of angle.\";         A textual example of the semantic relation is \"can have angle\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['protractor', 'compass', 'ruler', 'set square', 'angle finder', 'angle gauge', 'trigonometry table', 'slide rule', 'calculator']"}
{"cat":"artifacts","slot":"part","value":"radio chassis","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"All the constitutive parts of radio chassis.\";         A textual example of the semantic relation is \"can have radio chassis\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"radio chassis\", \"tuning knob\", \"volume knob\", \"power switch\", \"speaker\", \"antenna\", \"amplifier\", \"tuner\", \"display\", \"input\/output ports\"]"}
{"cat":"artifacts","slot":"part","value":"changer","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"All the constitutive parts of changer.\";         A textual example of the semantic relation is \"can have changer\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"coin\", \"token\", \"medal\", \"chip\", \"bill\", \"note\", \"cash\", \"money\", \"currency\", \"change\"]"}
{"cat":"artifacts","slot":"part","value":"buckle","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"All the constitutive parts of buckle.\";         A textual example of the semantic relation is \"can have buckle\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['buckle', 'clasp', 'fastener', 'latch', 'hook', 'toggle', 'strap', 'belt', 'band', 'loop']"}
{"cat":"artifacts","slot":"part","value":"record changer","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"All the constitutive parts of record changer.\";         A textual example of the semantic relation is \"can have record changer\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"turntable\", \"stylus\", \"cartridge\", \"tonearm\", \"platter\", \"motor\", \"belt\", \"plinth\", \"dust cover\", \"counterweight\"]"}
{"cat":"artifacts","slot":"part","value":"frame","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"All the constitutive parts of frame.\";         A textual example of the semantic relation is \"can have frame\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['painting', 'sculpture', 'vase', 'statue', 'mask', 'pottery', 'tapestry', 'mosaic', 'furniture', 'jewelry']"}
{"cat":"artifacts","slot":"part","value":"eraser","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"All the constitutive parts of eraser.\";         A textual example of the semantic relation is \"can have eraser\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['rubber', 'plastic', 'foam', 'fabric', 'paper', 'metal', 'wood', 'glass', 'leather', 'clay']"}
{"cat":"artifacts","slot":"part","value":"turntable","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"All the constitutive parts of turntable.\";         A textual example of the semantic relation is \"can have turntable\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"turntable\", \"platter\", \"tonearm\", \"cartridge\", \"stylus\", \"motor\", \"belt\", \"pitch control\", \"counterweight\", \"headshell\"]"}
{"cat":"artifacts","slot":"part","value":"ferrule","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"All the constitutive parts of ferrule.\";         A textual example of the semantic relation is \"can have ferrule\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['pencil', 'brush', 'pen', 'marker', 'crayon', 'chalk', 'paintbrush', 'quill', 'stylus', 'charcoal']"}
{"cat":"artifacts","slot":"part","value":"beaver","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"All the constitutive parts of beaver.\";         A textual example of the semantic relation is \"can have beaver\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['beaver', 'fur', 'teeth', 'tail', 'pelt', 'castoreum', 'anal gland secretion', 'scent gland secretion', 'fat']"}
{"cat":"artifacts","slot":"part","value":"keyboard","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"All the constitutive parts of keyboard.\";         A textual example of the semantic relation is \"can have keyboard\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"keyboard\", \"keys\", \"spacebar\", \"shift\", \"control\", \"alt\", \"capslock\", \"enter\", \"backspace\"]"}
{"cat":"artifacts","slot":"part","value":"bell","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"All the constitutive parts of bell.\";         A textual example of the semantic relation is \"can have bell\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"bell\", \"clapper\", \"handle\", \"yoke\", \"rim\", \"crown\", \"skirt\", \"sound bow\", \"tongue\", \"tuning slots\"]"}
{"cat":"artifacts","slot":"part","value":"pickup arm","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"All the constitutive parts of pickup arm.\";         A textual example of the semantic relation is \"can have pickup arm\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['pickup arm', 'cartridge', 'stylus', 'tonearm', 'turntable', 'headshell', 'counterweight', 'anti-skate mechanism', 'bias adjustment', 'arm base']"}
{"cat":"artifacts","slot":"part","value":"rim","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"All the constitutive parts of rim.\";         A textual example of the semantic relation is \"can have rim\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['wheel', 'bicycle', 'car', 'cup', 'plate', 'saucer', 'clock', 'watch', 'glasses', 'camera']"}
{"cat":"artifacts","slot":"part","value":"carriage","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"All the constitutive parts of carriage.\";         A textual example of the semantic relation is \"can have carriage\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['wheel', 'axle', 'frame', 'seat', 'harness', 'shaft', 'suspension', 'brake', 'steering', 'body']"}
{"cat":"artifacts","slot":"part","value":"pendant","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"All the constitutive parts of pendant.\";         A textual example of the semantic relation is \"can have pendant\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['amulet', 'charm', 'medallion', 'talisman', 'pendant', 'necklace', 'bracelet', 'ring', 'earring', 'brooch']"}
{"cat":"artifacts","slot":"part","value":"panel","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"All the constitutive parts of panel.\";         A textual example of the semantic relation is \"can have panel\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['display', 'monitor', 'screen', 'LCD', 'LED', 'OLED', 'touchscreen', 'projector', 'TV', 'computer']"}
{"cat":"artifacts","slot":"part","value":"ribbon","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"All the constitutive parts of ribbon.\";         A textual example of the semantic relation is \"can have ribbon\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['bow', 'knot', 'ribbon', 'tape', 'string', 'thread', 'fabric', 'yarn', 'cord', 'lace']"}
{"cat":"artifacts","slot":"part","value":"strap","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"All the constitutive parts of strap.\";         A textual example of the semantic relation is \"can have strap\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"watch\", \"camera\", \"bag\", \"purse\", \"backpack\", \"satchel\", \"wallet\", \"phone\", \"bracelet\", \"necklace\"]"}
{"cat":"artifacts","slot":"part","value":"visor","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"All the constitutive parts of visor.\";         A textual example of the semantic relation is \"can have visor\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['visor', 'helmet', 'mask', 'shield', 'goggles', 'spectacles', 'eyewear', 'headgear', 'protective gear']"}
{"cat":"artifacts","slot":"part","value":"gore","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"All the constitutive parts of gore.\";         A textual example of the semantic relation is \"can have gore\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['blood', 'guts', 'entrails', 'limbs', 'flesh', 'bones', 'organs', 'tissue', 'skin', 'viscera']"}
{"cat":"artifacts","slot":"part","value":"auto-changer","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"All the constitutive parts of auto-changer.\";         A textual example of the semantic relation is \"can have auto-changer\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['tray', 'motor', 'sensor', 'gear', 'belt', 'switch', 'circuit', 'LED', 'button', 'lens']"}
{"cat":"artifacts","slot":"purpose","value":"protection","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"All of the purposes for which protection is interacted with.\";         A textual example of the semantic relation is \"are used for protection\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"shield\", \"armor\", \"helmet\", \"sword\", \"mace\", \"axe\", \"spear\", \"bow\", \"dagger\", \"buckler\"]"}
{"cat":"artifacts","slot":"material","value":"plastic","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"Material of which plastic is composed.\";         A textual example of the semantic relation is \"can be made of plastic\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"toy\", \"bottle\", \"bag\", \"cup\", \"phone\", \"container\", \"fork\", \"spoon\", \"straw\", \"pen\"]"}
{"cat":"artifacts","slot":"material","value":"metal","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"Material of which metal is composed.\";         A textual example of the semantic relation is \"can be made of metal\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['sword', 'knife', 'axe', 'spear', 'helmet', 'shield', 'armor', 'jewelry', 'coins', 'tools']"}
{"cat":"artifacts","slot":"material","value":"fibre","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"Material of which fibre is composed.\";         A textual example of the semantic relation is \"can be made of fibre\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['cotton', 'wool', 'linen', 'silk', 'rayon', 'polyester', 'acrylic', 'nylon', 'viscose', 'lyocell']"}
{"cat":"artifacts","slot":"material","value":"leather","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"Material of which leather is composed.\";         A textual example of the semantic relation is \"can be made of leather\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"boots\", \"jacket\", \"gloves\", \"belt\", \"wallet\", \"bag\", \"shoes\", \"saddle\", \"harness\", \"sheath\"]"}
{"cat":"artifacts","slot":"material","value":"elastic","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"Material of which elastic is composed.\";         A textual example of the semantic relation is \"can be made of elastic\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['rubber', 'latex', 'polyurethane', 'spandex', 'nylon', 'polyester', 'cotton', 'wool', 'silk', 'leather']"}
{"cat":"artifacts","slot":"material","value":"pearl","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"Material of which pearl is composed.\";         A textual example of the semantic relation is \"can be made of pearl\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['pearl', 'jewelry', 'necklace', 'earrings', 'bracelet', 'ring', 'brooch', 'cufflinks', 'pendant', 'tiara']"}
{"cat":"artifacts","slot":"material","value":"thread","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"Material of which thread is composed.\";         A textual example of the semantic relation is \"can be made of thread\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['cotton', 'silk', 'wool', 'polyester', 'nylon', 'linen', 'rayon', 'viscose', 'acrylic', 'polypropylene']"}
{"cat":"artifacts","slot":"material","value":"wood","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"Material of which wood is composed.\";         A textual example of the semantic relation is \"can be made of wood\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['chest', 'table', 'chair', 'box', 'cabinet', 'stool', 'desk', 'bed', 'shelf', 'door']"}
{"cat":"artifacts","slot":"material","value":"polycarbonate","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"Material of which polycarbonate is composed.\";         A textual example of the semantic relation is \"can be made of polycarbonate\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"lenses\", \"eyeglasses\", \"sunglasses\", \"headlights\", \"CDs\", \"DVDs\", \"compact discs\", \"digital versatile discs\", \"bulletproof glass\", \"greenhouses\"]"}
{"cat":"artifacts","slot":"material","value":"canvas","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"Material of which canvas is composed.\";         A textual example of the semantic relation is \"can be made of canvas\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['canvas', 'cotton', 'linen', 'polyester', 'nylon', 'rayon', 'acrylic', 'oil', 'watercolor', 'gesso']"}
{"cat":"artifacts","slot":"material","value":"fiberglass","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"Material of which fiberglass is composed.\";         A textual example of the semantic relation is \"can be made of fiberglass\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"carbon fiber\", \"resin\", \"epoxy\", \"polyester\", \"glass\", \"plastic\", \"aluminum\", \"steel\", \"wood\", \"concrete\"]"}
{"cat":"artifacts","slot":"material","value":"steel","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"Material of which steel is composed.\";         A textual example of the semantic relation is \"can be made of steel\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['knife', 'sword', 'axe', 'helmet', 'shield', 'armor', 'gun', 'screwdriver', 'wrench', 'hammer']"}
{"cat":"artifacts","slot":"material","value":"grease","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"Material of which grease is composed.\";         A textual example of the semantic relation is \"can be made of grease\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['animal', 'fat', 'oil', 'petroleum', 'lard', 'butter', 'soap', 'wax', 'tallow', 'lanolin']"}
{"cat":"artifacts","slot":"material","value":"glass","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"Material of which glass is composed.\";         A textual example of the semantic relation is \"can be made of glass\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"vase\", \"bottle\", \"window\", \"mirror\", \"lens\", \"goblet\", \"jar\", \"tumbler\", \"bowl\", \"container\"]"}
{"cat":"artifacts","slot":"colorPattern","value":"gold","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"All the features that refer to the color or texture of gold.\";         A textual example of the semantic relation is \"can be gold\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"golden\", \"gilded\", \"yellow\", \"shiny\", \"metallic\", \"lustrous\", \"bright\", \"rich\", \"precious\", \"radiant\"]"}
{"cat":"artifacts","slot":"part","value":"canopy","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"All the constitutive parts of canopy.\";         A textual example of the semantic relation is \"can have canopy\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"fabric\", \"cloth\", \"textile\", \"roof\", \"covering\", \"shade\", \"umbrella\", \"awning\", \"tent\", \"shelter\"]"}
{"cat":"artifacts","slot":"material","value":"silver","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"Material of which silver is composed.\";         A textual example of the semantic relation is \"can be made of silver\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"jewelry\", \"cutlery\", \"coins\", \"watches\", \"ornaments\", \"trophies\", \"tableware\", \"silverware\", \"candlesticks\", \"vases\"]"}
{"cat":"artifacts","slot":"material","value":"gold","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"Material of which gold is composed.\";         A textual example of the semantic relation is \"can be made of gold\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"ring\", \"coin\", \"necklace\", \"bracelet\", \"watch\", \"earring\", \"crown\", \"brooch\", \"pendant\", \"belt\"]"}
{"cat":"artifacts","slot":"material","value":"cloth","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"Material of which cloth is composed.\";         A textual example of the semantic relation is \"can be made of cloth\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['cotton', 'wool', 'silk', 'linen', 'polyester', 'rayon', 'acrylic', 'nylon', 'spandex', 'viscose']"}
{"cat":"artifacts","slot":"material","value":"fabric","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"Material of which fabric is composed.\";         A textual example of the semantic relation is \"can be made of fabric\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['cotton', 'linen', 'wool', 'silk', 'polyester', 'rayon', 'nylon', 'acrylic', 'velvet', 'denim']"}
{"cat":"artifacts","slot":"colorPattern","value":"silver","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"All the features that refer to the color or texture of silver.\";         A textual example of the semantic relation is \"can be silver\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"silverware\", \"silver\", \"silver-plated\", \"silvered\", \"silvering\", \"silver-colored\", \"silver-toned\", \"silver-hued\", \"silver-like\", \"silvered\"]"}
{"cat":"artifacts","slot":"part","value":"bracelet","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"All the constitutive parts of bracelet.\";         A textual example of the semantic relation is \"can have bracelet\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"chain\", \"gemstone\", \"clasp\", \"bead\", \"band\", \"link\", \"pendant\", \"ring\", \"bracelet\", \"jewelry\"]"}
{"cat":"artifacts","slot":"part","value":"shell","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"All the constitutive parts of shell.\";         A textual example of the semantic relation is \"can have shell\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"crab\", \"turtle\", \"snail\", \"clam\", \"oyster\", \"scallop\", \"conch\", \"lobster\", \"shrimp\", \"crayfish\"]"}
{"cat":"artifacts","slot":"part","value":"gem","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"All the constitutive parts of gem.\";         A textual example of the semantic relation is \"can have gem\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"diamond\", \"ruby\", \"sapphire\", \"emerald\", \"topaz\", \"quartz\", \"opal\", \"amethyst\", \"citrine\", \"turquoise\"]"}
{"cat":"artifacts","slot":"material","value":"gem","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"Material of which gem is composed.\";         A textual example of the semantic relation is \"can be made of gem\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"diamond\", \"sapphire\", \"ruby\", \"emerald\", \"amethyst\", \"topaz\", \"citrine\", \"aquamarine\", \"garnet\", \"opal\"]"}
{"cat":"artifacts","slot":"generalization","value":"device","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"Classification of device related to hypernyms.\";         A textual example of the semantic relation is \"are device\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['artifact', 'device', 'gadget', 'instrument', 'machine', 'tool', 'utensil', 'appliance', 'equipment', 'contraption']"}
{"cat":"artifacts","slot":"generalization","value":"artifact","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"Classification of artifact related to hypernyms.\";         A textual example of the semantic relation is \"are artifact\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['sword', 'shield', 'axe', 'mace', 'spear', 'bow', 'arrow', 'dagger', 'helm', 'armor']"}
{"cat":"artifacts","slot":"generalization","value":"artefact","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"Classification of artefact related to hypernyms.\";         A textual example of the semantic relation is \"are artefact\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['sword', 'shield', 'spear', 'axe', 'mace', 'bow', 'arrow', 'helmet', 'armor', 'dagger']"}
{"cat":"artifacts","slot":"generalization","value":"covering","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"Classification of covering related to hypernyms.\";         A textual example of the semantic relation is \"are covering\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['artifact', 'relic', 'antiquity', 'curio', 'heirloom', 'treasure', 'fossil', 'specimen', 'memorabilia', 'curiosity']"}
{"cat":"artifacts","slot":"generalization","value":"instrumentation","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"Classification of instrumentation related to hypernyms.\";         A textual example of the semantic relation is \"are instrumentation\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"compass\", \"telescope\", \"microscope\", \"thermometer\", \"barometer\", \"sextant\", \"chronometer\", \"spectroscope\", \"camera\", \"magnifying glass\"]"}
{"cat":"artifacts","slot":"generalization","value":"instrumentality","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"Classification of instrumentality related to hypernyms.\";         A textual example of the semantic relation is \"are instrumentality\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['sword', 'spear', 'shield', 'bow', 'arrow', 'axe', 'mace', 'dagger', 'staff', 'halberd']"}
{"cat":"artifacts","slot":"generalization","value":"clothing","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"Classification of clothing related to hypernyms.\";         A textual example of the semantic relation is \"are clothing\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['shirt', 'pants', 'jacket', 'dress', 'skirt', 'shorts', 'hat', 'shoes', 'socks', 'gloves']"}
{"cat":"artifacts","slot":"generalization","value":"consumer goods","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"Classification of consumer goods related to hypernyms.\";         A textual example of the semantic relation is \"are consumer goods\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"television\", \"computer\", \"smartphone\", \"tablet\", \"camera\", \"headphones\", \"watch\", \"speaker\", \"microwave\", \"toaster\"]"}
{"cat":"artifacts","slot":"generalization","value":"protective covering","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"Classification of protective covering related to hypernyms.\";         A textual example of the semantic relation is \"are protective covering\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['helmet', 'mask', 'shield', 'gloves', 'armor', 'vest', 'goggles', 'scarf', 'hat', 'coat']"}
{"cat":"artifacts","slot":"generalization","value":"article of clothing","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"Classification of article of clothing related to hypernyms.\";         A textual example of the semantic relation is \"are article of clothing\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['shirt', 'dress', 'pants', 'skirt', 'jacket', 'coat', 'hat', 'scarf', 'gloves', 'shoes']"}
{"cat":"artifacts","slot":"generalization","value":"wearable","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"Classification of wearable related to hypernyms.\";         A textual example of the semantic relation is \"are wearable\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['bracelet', 'necklace', 'ring', 'watch', 'earrings', 'brooch', 'cufflinks', 'pendant', 'tie clip', 'headband']"}
{"cat":"artifacts","slot":"generalization","value":"furniture","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"Classification of furniture related to hypernyms.\";         A textual example of the semantic relation is \"are furniture\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"chair\", \"table\", \"sofa\", \"bed\", \"desk\", \"cabinet\", \"dresser\", \"bookcase\", \"coffee table\", \"armchair\"]"}
{"cat":"artifacts","slot":"generalization","value":"vesture","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"Classification of vesture related to hypernyms.\";         A textual example of the semantic relation is \"are vesture\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['vest', 'cassock', 'gown', 'robe', 'tunic', 'shirt', 'blouse', 'coat', 'jacket', 'dress']"}
{"cat":"artifacts","slot":"generalization","value":"wear","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"Classification of wear related to hypernyms.\";         A textual example of the semantic relation is \"are wear\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['bracelet', 'necklace', 'ring', 'watch', 'earring', 'brooch', 'pendant', 'cufflink', 'tie clip', 'belt buckle']"}
{"cat":"artifacts","slot":"generalization","value":"habiliment","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"Classification of habiliment related to hypernyms.\";         A textual example of the semantic relation is \"are habiliment\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"shirt\", \"pants\", \"dress\", \"shoes\", \"hat\", \"scarf\", \"gloves\", \"belt\", \"jacket\", \"coat\"]"}
{"cat":"artifacts","slot":"generalization","value":"setup","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"Classification of setup related to hypernyms.\";         A textual example of the semantic relation is \"are setup\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['artifact', 'relic', 'fossil', 'monument', 'memorial', 'statue', 'sculpture', 'painting', 'manuscript', 'document']"}
{"cat":"artifacts","slot":"generalization","value":"apparatus","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"Classification of apparatus related to hypernyms.\";         A textual example of the semantic relation is \"are apparatus\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['artifact', 'relic', 'antiquity', 'curio', 'heirloom', 'memento', 'treasure', 'vestige', 'remnant', 'token']"}
{"cat":"artifacts","slot":"generalization","value":"equipment","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"Classification of equipment related to hypernyms.\";         A textual example of the semantic relation is \"are equipment\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"sword\", \"shield\", \"axe\", \"bow\", \"arrow\", \"spear\", \"staff\", \"dagger\", \"helmet\", \"armor\"]"}
{"cat":"artifacts","slot":"generalization","value":"duplicator","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"Classification of duplicator related to hypernyms.\";         A textual example of the semantic relation is \"are duplicator\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['duplicator', 'copying machine', 'photocopier', 'Xerox machine', 'printer', 'scanner', 'fax machine', 'multifunction device', 'reproducer', 'cloner']"}
{"cat":"artifacts","slot":"generalization","value":"copier","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"Classification of copier related to hypernyms.\";         A textual example of the semantic relation is \"are copier\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['photocopier', 'duplicator', 'copying machine', 'reproducer', 'replicator', 'Xerox machine', 'mimeograph', 'offset press', 'printing press', 'facsimile machine']"}
{"cat":"artifacts","slot":"generalization","value":"material","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"Classification of material related to hypernyms.\";         A textual example of the semantic relation is \"are material\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['artifact', 'relic', 'fossil', 'specimen', 'document', 'manuscript', 'monument', 'statue', 'painting', 'sculpture']"}
{"cat":"artifacts","slot":"generalization","value":"body covering","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"Classification of body covering related to hypernyms.\";         A textual example of the semantic relation is \"are body covering\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"clothing\", \"garments\", \"apparel\", \"attire\", \"dress\", \"fashion\", \"outfit\", \"wardrobe\", \"costume\", \"uniform\"]"}
{"cat":"artifacts","slot":"generalization","value":"armour plate","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"Classification of armour plate related to hypernyms.\";         A textual example of the semantic relation is \"are armour plate\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"armour\", \"plate\", \"shield\", \"mail\", \"scale\", \"lamellar\", \"brigandine\", \"cuirass\", \"breastplate\", \"gauntlet\"]"}
{"cat":"artifacts","slot":"generalization","value":"bedclothes","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"Classification of bedclothes related to hypernyms.\";         A textual example of the semantic relation is \"are bedclothes\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['duvet', 'quilt', 'comforter', 'blanket', 'sheet', 'pillowcase', 'mattress', 'bedspread', 'coverlet', 'bedding']"}
{"cat":"artifacts","slot":"generalization","value":"commodity","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"Classification of commodity related to hypernyms.\";         A textual example of the semantic relation is \"are commodity\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['artifact', 'relic', 'antiquity', 'curio', 'heirloom', 'treasure', 'trophy', 'memento', 'souvenir', 'trinket']"}
{"cat":"artifacts","slot":"generalization","value":"textile","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"Classification of textile related to hypernyms.\";         A textual example of the semantic relation is \"are textile\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['fabric', 'cloth', 'material', 'yarn', 'thread', 'weave', 'knit', 'embroidery', 'lace', 'tapestry']"}
{"cat":"artifacts","slot":"generalization","value":"shield","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"Classification of shield related to hypernyms.\";         A textual example of the semantic relation is \"are shield\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['shield', 'buckler', 'kite shield', 'tower shield', 'heater shield', 'targe', 'round shield', 'pavise', 'scutum', 'aspis']"}
{"cat":"artifacts","slot":"generalization","value":"structure","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"Classification of structure related to hypernyms.\";         A textual example of the semantic relation is \"are structure\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"artifact\", \"relic\", \"fossil\", \"specimen\", \"antiquity\", \"curio\", \"heirloom\", \"treasure\", \"memento\", \"memorabilia\"]"}
{"cat":"artifacts","slot":"generalization","value":"armour","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"Classification of armour related to hypernyms.\";         A textual example of the semantic relation is \"are armour\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['cuirass', 'gauntlet', 'greaves', 'pauldron', 'sabatons', 'vambrace', 'breastplate', 'helm', 'shield', 'hauberk']"}
{"cat":"artifacts","slot":"generalization","value":"plate","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"Classification of plate related to hypernyms.\";         A textual example of the semantic relation is \"are plate\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['dish', 'bowl', 'tray', 'platter', 'saucer', 'charger', 'casserole', 'salver', 'platter', 'platter']"}
{"cat":"artifacts","slot":"generalization","value":"bedding","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"Classification of bedding related to hypernyms.\";         A textual example of the semantic relation is \"are bedding\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"blanket\", \"comforter\", \"duvet\", \"quilt\", \"sheet\", \"pillowcase\", \"mattress pad\", \"bed skirt\", \"bolster\"]"}
{"cat":"artifacts","slot":"generalization","value":"garment","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"Classification of garment related to hypernyms.\";         A textual example of the semantic relation is \"are garment\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"shirt\", \"pants\", \"dress\", \"skirt\", \"jacket\", \"coat\", \"hat\", \"gloves\", \"scarf\", \"socks\"]"}
{"cat":"artifacts","slot":"generalization","value":"stuff","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"Classification of stuff related to hypernyms.\";         A textual example of the semantic relation is \"are stuff\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"sword\", \"shield\", \"helmet\", \"armor\", \"spear\", \"dagger\", \"axe\", \"bow\", \"arrow\", \"staff\"]"}
{"cat":"artifacts","slot":"generalization","value":"plate armour","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"Classification of plate armour related to hypernyms.\";         A textual example of the semantic relation is \"are plate armour\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['breastplate', 'pauldron', 'gorget', 'tassets', 'cuirass', 'vambrace', 'rerebrace', 'greave', 'sabaton', 'spaulder']"}
{"cat":"artifacts","slot":"generalization","value":"paper","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"Classification of paper related to hypernyms.\";         A textual example of the semantic relation is \"are paper\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['scroll', 'parchment', 'papyrus', 'codex', 'manuscript', 'book', 'notebook', 'journal', 'magazine', 'newspaper']"}
{"cat":"artifacts","slot":"generalization","value":"mechanism","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"Classification of mechanism related to hypernyms.\";         A textual example of the semantic relation is \"are mechanism\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"artifact\", \"relic\", \"antiquity\", \"curio\", \"heirloom\", \"treasure\", \"memento\", \"memorabilia\", \"fossil\", \"specimen\"]"}
{"cat":"artifacts","slot":"generalization","value":"bed clothing","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"Classification of bed clothing related to hypernyms.\";         A textual example of the semantic relation is \"are bed clothing\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['blanket', 'comforter', 'duvet', 'quilt', 'bedspread', 'coverlet', 'throw', 'spread', 'bedding']"}
{"cat":"artifacts","slot":"generalization","value":"cloth covering","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"Classification of cloth covering related to hypernyms.\";         A textual example of the semantic relation is \"are cloth covering\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['veil', 'shroud', 'curtain', 'drape', 'coverlet', 'pall', 'canopy', 'awning', 'tent', 'umbrella']"}
{"cat":"artifacts","slot":"generalization","value":"sheet","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"Classification of sheet related to hypernyms.\";         A textual example of the semantic relation is \"are sheet\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['parchment', 'scroll', 'papyrus', 'vellum', 'codex', 'tablet', 'manuscript', 'charter', 'document', 'chart']"}
{"cat":"artifacts","slot":"generalization","value":"mechanical device","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"Classification of mechanical device related to hypernyms.\";         A textual example of the semantic relation is \"are mechanical device\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"clock\", \"watch\", \"compass\", \"camera\", \"microscope\", \"telescope\", \"sextant\", \"barometer\", \"thermometer\", \"gyroscope\"]"}
{"cat":"artifacts","slot":"generalization","value":"construction","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"Classification of construction related to hypernyms.\";         A textual example of the semantic relation is \"are construction\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['building', 'structure', 'monument', 'sculpture', 'statue', 'temple', 'pyramid', 'castle', 'palace', 'fortress']"}
{"cat":"artifacts","slot":"generalization","value":"plate armor","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"Classification of plate armor related to hypernyms.\";         A textual example of the semantic relation is \"are plate armor\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['cuirass', 'pauldron', 'greave', 'vambrace', 'rerebrace', 'tasset', 'sabaton', 'gorget', 'bevor', 'plackart']"}
{"cat":"artifacts","slot":"generalization","value":"writing paper","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"Classification of writing paper related to hypernyms.\";         A textual example of the semantic relation is \"are writing paper\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['stationery', 'notebook', 'journal', 'diary', 'planner', 'sketchbook', 'scrapbook', 'letterhead', 'envelope', 'postcard']"}
{"cat":"artifacts","slot":"generalization","value":"character printer","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"Classification of character printer related to hypernyms.\";         A textual example of the semantic relation is \"are character printer\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"dot matrix printer\", \"daisy wheel printer\", \"line printer\", \"band printer\", \"chain printer\", \"ball printer\", \"typewriter\", \"teletype\", \"impact printer\", \"band printer\"]"}
{"cat":"artifacts","slot":"generalization","value":"scale","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"Classification of scale related to hypernyms.\";         A textual example of the semantic relation is \"are scale\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['scale', 'balance', 'weighing machine', 'weighbridge', 'steelyard', 'beam balance', 'spring balance', 'triple beam balance', 'digital scale', 'analytical balance']"}
{"cat":"artifacts","slot":"generalization","value":"serial printer","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"Classification of serial printer related to hypernyms.\";         A textual example of the semantic relation is \"are serial printer\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['dot matrix printer', 'daisy wheel printer', 'line printer', 'chain printer', 'band printer', 'impact printer', 'inkjet printer', 'laser printer', 'thermal printer', 'plotter']"}
{"cat":"artifacts","slot":"generalization","value":"armor plating","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"Classification of armor plating related to hypernyms.\";         A textual example of the semantic relation is \"are armor plating\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['armor', 'plate', 'shield', 'mail', 'scale', 'lamellar', 'brigandine', 'jack', 'cuirass', 'gambeson']"}
{"cat":"artifacts","slot":"generalization","value":"flat solid","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"Classification of flat solid related to hypernyms.\";         A textual example of the semantic relation is \"are flat solid\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['coin', 'medal', 'token', 'plate', 'disk', 'tablet', 'plaque', 'tile', 'shield', 'board']"}
{"cat":"artifacts","slot":"generalization","value":"armor plate","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"Classification of armor plate related to hypernyms.\";         A textual example of the semantic relation is \"are armor plate\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['armor', 'plate', 'metal', 'shield', 'mail', 'scale', 'lame', 'cuirass', 'breastplate', 'gambeson']"}
{"cat":"artifacts","slot":"generalization","value":"good","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"Classification of good related to hypernyms.\";         A textual example of the semantic relation is \"are good\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['sword', 'spear', 'shield', 'armor', 'helmet', 'axe', 'mace', 'dagger', 'bow', 'arrow']"}
{"cat":"artifacts","slot":"generalization","value":"armor","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"Classification of armor related to hypernyms.\";         A textual example of the semantic relation is \"are armor\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['chainmail', 'plate', 'leather', 'scale', 'bronze', 'iron', 'steel', 'wood', 'cloth', 'bone']"}
{"cat":"artifacts","slot":"generalization","value":"simple machine","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"Classification of simple machine related to hypernyms.\";         A textual example of the semantic relation is \"are simple machine\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['lever', 'pulley', 'inclined plane', 'wheel and axle', 'wedge', 'screw', 'gear', 'ramp', 'hinge', 'crank']"}
{"cat":"artifacts","slot":"generalization","value":"optical device","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"Classification of optical device related to hypernyms.\";         A textual example of the semantic relation is \"are optical device\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"telescope\", \"microscope\", \"binoculars\", \"monocular\", \"periscope\", \"kaleidoscope\", \"camera\", \"projector\", \"spectacles\", \"loupe\"]"}
{"cat":"artifacts","slot":"generalization","value":"scute","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"Classification of scute related to hypernyms.\";         A textual example of the semantic relation is \"are scute\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"shield\", \"buckler\", \"tortoise\", \"turtle\", \"carapace\", \"scutum\", \"armor\", \"shell\", \"protection\", \"defense\"]"}
{"cat":"artifacts","slot":"generalization","value":"trade good","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"Classification of trade good related to hypernyms.\";         A textual example of the semantic relation is \"are trade good\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"pottery\", \"weapons\", \"jewelry\", \"textiles\", \"ceramics\", \"metalwork\", \"glassware\", \"leather goods\", \"porcelain\", \"silk\"]"}
{"cat":"artifacts","slot":"generalization","value":"printing machine","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"Classification of printing machine related to hypernyms.\";         A textual example of the semantic relation is \"are printing machine\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"printer\", \"press\", \"machine\", \"device\", \"equipment\", \"system\", \"apparatus\", \"instrument\", \"mechanism\", \"gadget\"]"}
{"cat":"artifacts","slot":"generalization","value":"printer","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"Classification of printer related to hypernyms.\";         A textual example of the semantic relation is \"are printer\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['printer', 'copier', 'scanner', 'fax machine', 'multifunction device', 'laser printer', 'inkjet printer', '3D printer', 'plotter', 'dot matrix printer']"}
{"cat":"artifacts","slot":"generalization","value":"character-at-a-time printer","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"Classification of character-at-a-time printer related to hypernyms.\";         A textual example of the semantic relation is \"are character-at-a-time printer\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"typewriter\", \"teletype\", \"dot-matrix printer\", \"daisy wheel printer\", \"chain printer\", \"ball printer\", \"band printer\", \"chain printer\", \"daisy wheel printer\", \"dot-matrix printer\"]"}
{"cat":"artifacts","slot":"generalization","value":"reflector","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"Classification of reflector related to hypernyms.\";         A textual example of the semantic relation is \"are reflector\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"mirror\", \"lens\", \"prism\", \"telescope\", \"microscope\", \"periscope\", \"camera\", \"binoculars\", \"kaleidoscope\", \"sextant\"]"}
{"cat":"artifacts","slot":"generalization","value":"container","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"Classification of container related to hypernyms.\";         A textual example of the semantic relation is \"are container\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['jar', 'vase', 'urn', 'casket', 'chest', 'box', 'crate', 'barrel', 'canister', 'bucket']"}
{"cat":"artifacts","slot":"generalization","value":"source of illumination","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"Classification of source of illumination related to hypernyms.\";         A textual example of the semantic relation is \"are source of illumination\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"lamp\", \"torch\", \"candle\", \"lantern\", \"flashlight\", \"headlamp\", \"spotlight\", \"floodlight\", \"projector\", \"fireplace\"]"}
{"cat":"artifacts","slot":"generalization","value":"headgear","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"Classification of headgear related to hypernyms.\";         A textual example of the semantic relation is \"are headgear\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['helmet', 'hat', 'cap', 'beret', 'beanie', 'top hat', 'bowler hat', 'fedora', 'cowboy hat', 'baseball cap']"}
{"cat":"artifacts","slot":"generalization","value":"tool","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"Classification of tool related to hypernyms.\";         A textual example of the semantic relation is \"are tool\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['sword', 'hammer', 'chisel', 'saw', 'knife', 'axe', 'spear', 'bow', 'arrow', 'shield']"}
{"cat":"artifacts","slot":"generalization","value":"utensil","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"Classification of utensil related to hypernyms.\";         A textual example of the semantic relation is \"are utensil\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"knife\", \"spoon\", \"fork\", \"bowl\", \"plate\", \"cup\", \"pot\", \"pan\", \"ladle\", \"whisk\"]"}
{"cat":"artifacts","slot":"generalization","value":"decoration","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"Classification of decoration related to hypernyms.\";         A textual example of the semantic relation is \"are decoration\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['vase', 'statue', 'painting', 'tapestry', 'sculpture', 'urn', 'mosaic', 'mask', 'bust', 'pottery']"}
{"cat":"artifacts","slot":"generalization","value":"accessory","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"Classification of accessory related to hypernyms.\";         A textual example of the semantic relation is \"are accessory\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"crown\", \"scepter\", \"throne\", \"chalice\", \"shield\", \"armor\", \"ring\", \"pendant\", \"sword\", \"spear\"]"}
{"cat":"artifacts","slot":"generalization","value":"ornamentation","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"Classification of ornamentation related to hypernyms.\";         A textual example of the semantic relation is \"are ornamentation\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['tapestry', 'mosaic', 'sculpture', 'painting', 'vase', 'statue', 'carving', 'pottery', 'jewelry', 'furniture']"}
{"cat":"artifacts","slot":"generalization","value":"ornament","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"Classification of ornament related to hypernyms.\";         A textual example of the semantic relation is \"are ornament\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['necklace', 'bracelet', 'ring', 'earring', 'brooch', 'pendant', 'tiepin', 'cufflink', 'watch', 'headband']"}
{"cat":"artifacts","slot":"generalization","value":"adornment","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"Classification of adornment related to hypernyms.\";         A textual example of the semantic relation is \"are adornment\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['necklace', 'bracelet', 'ring', 'earring', 'brooch', 'pendant', 'cufflink', 'tiepin', 'watch', 'headband']"}
{"cat":"artifacts","slot":"generalization","value":"implement","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"Classification of implement related to hypernyms.\";         A textual example of the semantic relation is \"are implement\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['sword', 'dagger', 'spear', 'axe', 'mace', 'bow', 'arrow', 'shield', 'helmet', 'armor']"}
{"cat":"artifacts","slot":"generalization","value":"protective cover","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"Classification of protective cover related to hypernyms.\";         A textual example of the semantic relation is \"are protective cover\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['shield', 'armor', 'helmet', 'gloves', 'mask', 'vest', 'gauntlet', 'greaves', 'cuff', 'buckler']"}
{"cat":"artifacts","slot":"generalization","value":"machine","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"Classification of machine related to hypernyms.\";         A textual example of the semantic relation is \"are machine\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['computer', 'robot', 'printer', 'scanner', 'fax machine', 'typewriter', 'calculator', 'copier', 'plotter', 'CNC machine']"}
{"cat":"artifacts","slot":"generalization","value":"whole","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"Classification of whole related to hypernyms.\";         A textual example of the semantic relation is \"are whole\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['sword', 'shield', 'helmet', 'armor', 'spear', 'axe', 'mace', 'bow', 'arrow', 'quiver']"}
{"cat":"artifacts","slot":"generalization","value":"unit","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"Classification of unit related to hypernyms.\";         A textual example of the semantic relation is \"are unit\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['artifact', 'relic', 'curio', 'heirloom', 'antiquity', 'memento', 'treasure', 'trophy', 'souvenir', 'curiosity']"}
{"cat":"artifacts","slot":"generalization","value":"headdress","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"Classification of headdress related to hypernyms.\";         A textual example of the semantic relation is \"are headdress\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['crown', 'diadem', 'tiara', 'coronet', 'turban', 'helmet', 'hat', 'wig', 'veil', 'hood']"}
{"cat":"artifacts","slot":"generalization","value":"jewelry","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"Classification of jewelry related to hypernyms.\";         A textual example of the semantic relation is \"are jewelry\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"bracelet\", \"necklace\", \"ring\", \"earring\", \"pendant\", \"brooch\", \"cufflink\", \"tie clip\", \"watch\", \"bangle\"]"}
{"cat":"artifacts","slot":"generalization","value":"protection","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"Classification of protection related to hypernyms.\";         A textual example of the semantic relation is \"are protection\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"shield\", \"armor\", \"sword\", \"dagger\", \"axe\", \"mace\", \"spear\", \"bow\", \"quiver\", \"helm\"]"}
{"cat":"artifacts","slot":"part","value":"glass","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"All the constitutive parts of glass.\";         A textual example of the semantic relation is \"can have glass\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['stained', 'crystal', 'mirror', 'window', 'bottle', 'lens', 'prism', 'beaker', 'flask', 'vase']"}
{"cat":"artifacts","slot":"generalization","value":"shell","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"Classification of shell related to hypernyms.\";         A textual example of the semantic relation is \"are shell\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['shell', 'clamshell', 'conch', 'mussel', 'oyster', 'scallop', 'snail', 'whelk', 'abalone', 'cockle']"}
{"cat":"artifacts","slot":"generalization","value":"shelter","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"Classification of shelter related to hypernyms.\";         A textual example of the semantic relation is \"are shelter\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['tent', 'house', 'cabin', 'hut', 'shack', 'yurt', 'igloo', 'teepee', 'caravan', 'lodge']"}
{"cat":"artifacts","slot":"generalization","value":"shade","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"Classification of shade related to hypernyms.\";         A textual example of the semantic relation is \"are shade\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['umbra', 'penumbra', 'shadow', 'shade', 'obscuration', 'darkness', 'gloom', 'dimness', 'blackness', 'obscurity']"}
{"cat":"artifacts","slot":"generalization","value":"cloth","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"Classification of cloth related to hypernyms.\";         A textual example of the semantic relation is \"are cloth\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['shirt', 'pants', 'dress', 'skirt', 't-shirt', 'blouse', 'jacket', 'sweater', 'coat', 'hat']"}
{"cat":"artifacts","slot":"generalization","value":"fabric","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"Classification of fabric related to hypernyms.\";         A textual example of the semantic relation is \"are fabric\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['cloth', 'fabric', 'textile', 'linen', 'silk', 'wool', 'cotton', 'velvet', 'satin', 'chiffon']"}
{"cat":"artifacts","slot":"generalization","value":"canopy","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"artifacts\";         The returned words must satisfy the semantic relation \"Classification of canopy related to hypernyms.\";         A textual example of the semantic relation is \"are canopy\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['canopy', 'awning', 'roof', 'cover', 'shelter', 'umbrella', 'tent', 'shade', 'parasol', 'sunshade']"}
{"cat":"tools","slot":"user","value":"sailor","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"All the kinds of living beings which are able to operate, employ, interact with or perceive sailor.\";         A textual example of the semantic relation is \"are used by sailors\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['anchor', 'boat', 'compass', 'fishing rod', 'hammer', 'knife', 'map', 'rope', 'sail', 'sextant']"}
{"cat":"tools","slot":"user","value":"farmer","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"All the kinds of living beings which are able to operate, employ, interact with or perceive farmer.\";         A textual example of the semantic relation is \"are used by farmers\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['plough', 'hoe', 'tractor', 'combine harvester', 'seeder', 'sprayer', 'fork', 'rake', 'watering can', 'shears']"}
{"cat":"tools","slot":"size","value":"small","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"Size of small.\";         A textual example of the semantic relation is \"can be small\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['hammer', 'screwdriver', 'pliers', 'wrench', 'saw', 'chisel', 'knife', 'file', 'level', 'tape measure']"}
{"cat":"tools","slot":"howToUse","value":"stand up","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"All the actions or states required to operate, employ, interact with or perceive the existence of stand up.\";         A textual example of the semantic relation is \"can be used for stand up\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['microphone', 'guitar', 'stool', 'stand', 'stage', 'speaker', 'spotlight', 'comedian', 'audience', 'humor']"}
{"cat":"tools","slot":"howToUse","value":"hold","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"All the actions or states required to operate, employ, interact with or perceive the existence of hold.\";         A textual example of the semantic relation is \"can be used for hold\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['hammer', 'screwdriver', 'wrench', 'pliers', 'clamp', 'vice', 'hand', 'grip', 'toolbox']"}
{"cat":"tools","slot":"place","value":"kitchen","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"All the entities in which kitchen can be experienced, found or perceived.\";         A textual example of the semantic relation is \"can be found or used in kitchens\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['knife', 'spatula', 'whisk', 'rolling pin', 'mixing bowl', 'can opener', 'grater', 'tongs', 'peeler', 'colander']"}
{"cat":"tools","slot":"accessory","value":"toolbox","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"All those objects that may have to do with toolbox. The constraint is that there must be a physical contact and that the use of such object is strictly necessary for toolbox.\";         A textual example of the semantic relation is \"are related with toolbox\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['hammer', 'screwdriver', 'wrench', 'pliers', 'tape measure', 'level', 'saw', 'drill', 'chisel', 'file']"}
{"cat":"tools","slot":"place","value":"shed","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"All the entities in which shed can be experienced, found or perceived.\";         A textual example of the semantic relation is \"can be found or used in sheds\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['hammer', 'screwdriver', 'pliers', 'wrench', 'saw', 'drill', 'level', 'chisel', 'file', 'clamp']"}
{"cat":"tools","slot":"place","value":"garden","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"All the entities in which garden can be experienced, found or perceived.\";         A textual example of the semantic relation is \"can be found or used in gardens\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['spade', 'pruning shears', 'watering can', 'hoe', 'rake', 'garden fork', 'trowel', 'gloves', 'wheelbarrow', 'garden hose']"}
{"cat":"tools","slot":"accessory","value":"screwdriver","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"All those objects that may have to do with screwdriver. The constraint is that there must be a physical contact and that the use of such object is strictly necessary for screwdriver.\";         A textual example of the semantic relation is \"are related with screwdriver\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['wrench', 'pliers', 'hammer', 'screwdriver', 'drill', 'saw', 'chisel', 'file', 'level', 'tape measure']"}
{"cat":"tools","slot":"accessory","value":"rod","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"All those objects that may have to do with rod. The constraint is that there must be a physical contact and that the use of such object is strictly necessary for rod.\";         A textual example of the semantic relation is \"are related with rod\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['hammer', 'saw', 'drill', 'wrench', 'pliers', 'chisel', 'file', 'screwdriver', 'level', 'measuring tape']"}
{"cat":"tools","slot":"place","value":"laboratory","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"All the entities in which laboratory can be experienced, found or perceived.\";         A textual example of the semantic relation is \"can be found or used in laboratories\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"microscope\", \"pipette\", \"beaker\", \"test tube\", \"spectrophotometer\", \"centrifuge\", \"scalpel\", \"forceps\", \"tweezers\", \"bunsen burner\"]"}
{"cat":"tools","slot":"accessory","value":"bolt","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"All those objects that may have to do with bolt. The constraint is that there must be a physical contact and that the use of such object is strictly necessary for bolt.\";         A textual example of the semantic relation is \"are related with bolt\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['wrench', 'socket', 'ratchet', 'screwdriver', 'pliers', 'hammer', 'screw', 'nut', 'bolt', 'spanner']"}
{"cat":"tools","slot":"accessory","value":"staple","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"All those objects that may have to do with staple. The constraint is that there must be a physical contact and that the use of such object is strictly necessary for staple.\";         A textual example of the semantic relation is \"are related with staple\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"stapler\", \"staple remover\", \"staple gun\", \"staple puller\", \"staple pliers\", \"staple cutter\", \"staple hammer\", \"staple knife\", \"staple driver\", \"staple punch\"]"}
{"cat":"tools","slot":"place","value":"hairdresser","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"All the entities in which hairdresser can be experienced, found or perceived.\";         A textual example of the semantic relation is \"can be found or used in hairdressers\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['hairdryer', 'comb', 'scissors', 'brush', 'razor', 'hair straightener', 'hair curler', 'hair clippers', 'hairspray', 'mirror']"}
{"cat":"tools","slot":"accessory","value":"knob","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"All those objects that may have to do with knob. The constraint is that there must be a physical contact and that the use of such object is strictly necessary for knob.\";         A textual example of the semantic relation is \"are related with knob\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"wrench\", \"screwdriver\", \"pliers\", \"hammer\", \"saw\", \"drill\", \"chisel\", \"file\", \"level\", \"trowel\"]"}
{"cat":"tools","slot":"purpose","value":"build","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"All of the purposes for which build is interacted with.\";         A textual example of the semantic relation is \"are used to build\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['hammer', 'screwdriver', 'wrench', 'level', 'tape measure', 'saw', 'drill', 'chisel', 'pliers', 'crowbar']"}
{"cat":"tools","slot":"purpose","value":"cooking","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"All of the purposes for which cooking is interacted with.\";         A textual example of the semantic relation is \"are used for cooking\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['knife', 'spatula', 'whisk', 'mixing bowl', 'rolling pin', 'measuring cup', 'colander', 'tongs', 'grater', 'peeler']"}
{"cat":"tools","slot":"purpose","value":"agriculture","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"All of the purposes for which agriculture is interacted with.\";         A textual example of the semantic relation is \"are used for agriculture\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['plow', 'tractor', 'hoe', 'rake', 'seeder', 'harvester', 'sprayer', 'irrigator', 'combine', 'tiller']"}
{"cat":"tools","slot":"purpose","value":"lock","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"All of the purposes for which lock is interacted with.\";         A textual example of the semantic relation is \"are used to lock\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['key', 'padlock', 'combination', 'deadbolt', 'hasp', 'latch', 'cylinder', 'tumbler', 'lever', 'wrench']"}
{"cat":"tools","slot":"purpose","value":"weeding","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"All of the purposes for which weeding is interacted with.\";         A textual example of the semantic relation is \"are used for weeding\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['hoe', 'rake', 'cultivator', 'trowel', 'garden fork', 'pruning shears', 'garden knife', 'weed puller', 'hand weeder', 'garden sprayer']"}
{"cat":"tools","slot":"purpose","value":"pick up","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"All of the purposes for which pick up is interacted with.\";         A textual example of the semantic relation is \"are used to pick up\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"tongs\", \"tweezers\", \"fork\", \"spoon\", \"chopsticks\", \"grabber\", \"clamp\", \"pliers\", \"hook\", \"claws\"]"}
{"cat":"tools","slot":"purpose","value":"cut","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"All of the purposes for which cut is interacted with.\";         A textual example of the semantic relation is \"are used to cut\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['knife', 'scissors', 'saw', 'axe', 'chainsaw', 'razor', 'hedge trimmer', 'pruning shears', 'rotary cutter', 'wire cutters']"}
{"cat":"tools","slot":"purpose","value":"moor","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"All of the purposes for which moor is interacted with.\";         A textual example of the semantic relation is \"are used to moor\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['anchor', 'rope', 'cleat', 'winch', 'chain', 'shackle', 'dockline', 'fender', 'piling', 'bitt']"}
{"cat":"tools","slot":"purpose","value":"secure","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"All of the purposes for which secure is interacted with.\";         A textual example of the semantic relation is \"are used for secure\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['padlock', 'key', 'bolt', 'clasp', 'latch', 'lock', 'safe', 'tamper-proof', 'fastener', 'seal']"}
{"cat":"tools","slot":"purpose","value":"dock","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"All of the purposes for which dock is interacted with.\";         A textual example of the semantic relation is \"are used to dock\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['dock', 'slip', 'berth', 'mooring', 'cleat', 'bitt', 'piling', 'fender', 'line', 'winch']"}
{"cat":"tools","slot":"purpose","value":"grip","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"All of the purposes for which grip is interacted with.\";         A textual example of the semantic relation is \"are used to grip\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['pliers', 'wrench', 'screwdriver', 'hammer', 'claw hammer', 'tongs', 'clamps', 'vice', 'grips', 'vise']"}
{"cat":"tools","slot":"purpose","value":"clamp","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"All of the purposes for which clamp is interacted with.\";         A textual example of the semantic relation is \"are used to clamp\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"vice\", \"pliers\", \"clamp\", \"wrench\", \"hammer\", \"screwdriver\", \"saw\", \"drill\", \"chisel\"]"}
{"cat":"tools","slot":"purpose","value":"serve","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"All of the purposes for which serve is interacted with.\";         A textual example of the semantic relation is \"are used to serve\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"hammer\", \"screwdriver\", \"wrench\", \"pliers\", \"saw\", \"drill\", \"chisel\", \"level\", \"measuring tape\", \"flashlight\"]"}
{"cat":"tools","slot":"purpose","value":"fasten","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"All of the purposes for which fasten is interacted with.\";         A textual example of the semantic relation is \"are used for fasten\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['hammer', 'screwdriver', 'wrench', 'pliers', 'tape measure', 'level', 'saw', 'drill', 'chisel', 'nails']"}
{"cat":"tools","slot":"purpose","value":"secure","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"All of the purposes for which secure is interacted with.\";         A textual example of the semantic relation is \"are used to secure\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['padlock', 'key', 'bolt', 'lock', 'clamp', 'latch', 'fastener', 'screw', 'nail', 'zipper']"}
{"cat":"tools","slot":"purpose","value":"dig","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"All of the purposes for which dig is interacted with.\";         A textual example of the semantic relation is \"are used to dig\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['shovel', 'spade', 'trowel', 'hoe', 'mattock', 'pickaxe', 'post hole digger', 'garden fork', 'rake', 'cultivator']"}
{"cat":"tools","slot":"purpose","value":"clamp","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"All of the purposes for which clamp is interacted with.\";         A textual example of the semantic relation is \"are used for clamp\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['vise', 'wrench', 'pliers', 'hammer', 'screwdriver', 'drill', 'saw', 'file', 'chisel', 'ruler']"}
{"cat":"tools","slot":"purpose","value":"tighten","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"All of the purposes for which tighten is interacted with.\";         A textual example of the semantic relation is \"are used to tighten\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['wrench', 'screwdriver', 'pliers', 'hammer', 'nut driver', 'socket', 'ratchet', 'spanner', 'clamp', 'crowbar']"}
{"cat":"tools","slot":"accessory","value":"screw","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"All those objects that may have to do with screw. The constraint is that there must be a physical contact and that the use of such object is strictly necessary for screw.\";         A textual example of the semantic relation is \"are related with screw\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['screwdriver', 'wrench', 'pliers', 'hammer', 'drill', 'saw', 'chisel', 'level', 'tape measure', 'screw']"}
{"cat":"tools","slot":"shape","value":"elongated","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"Form of elongated.\";         A textual example of the semantic relation is \"can be elongated\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['ruler', 'pencil', 'chalk', 'screwdriver', 'hammer', 'wrench', 'knife', 'saw', 'trowel', 'paintbrush']"}
{"cat":"tools","slot":"shape","value":"long","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"Form of long.\";         A textual example of the semantic relation is \"can be long\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['ruler', 'saw', 'knife', 'spoon', 'fork', 'hammer', 'screwdriver', 'wrench', 'pliers', 'chisel']"}
{"cat":"tools","slot":"shape","value":"curved","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"Form of curved.\";         A textual example of the semantic relation is \"can be curved\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['saw', 'hammer', 'chisel', 'claw', 'knife', 'axe', 'sickle', 'hoe', 'spade', 'adze']"}
{"cat":"tools","slot":"shape","value":"cylindrical","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"Form of cylindrical.\";         A textual example of the semantic relation is \"can be cylindrical\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['screwdriver', 'wrench', 'hammer', 'pliers', 'saw', 'drill', 'chisel', 'level', 'trowel', 'sledgehammer']"}
{"cat":"tools","slot":"shape","value":"triangular","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"Form of triangular.\";         A textual example of the semantic relation is \"can be triangular\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"saw\", \"knife\", \"chisel\", \"scraper\", \"awl\", \"pickaxe\", \"axe\", \"shovel\", \"rake\", \"trowel\"]"}
{"cat":"tools","slot":"part","value":"handle","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"All the constitutive parts of handle.\";         A textual example of the semantic relation is \"can have handle\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['hammer', 'screwdriver', 'wrench', 'pliers', 'axe', 'saw', 'chisel', 'knife', 'spanner', 'crowbar']"}
{"cat":"tools","slot":"part","value":"blade","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"All the constitutive parts of blade.\";         A textual example of the semantic relation is \"can have blade\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['knife', 'sword', 'axe', 'scissors', 'saw', 'chisel', 'razor', 'machete', 'hatchet', 'cleaver']"}
{"cat":"tools","slot":"part","value":"edge","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"All the constitutive parts of edge.\";         A textual example of the semantic relation is \"can have edge\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['knife', 'sword', 'razor', 'scissors', 'saw', 'axe', 'chisel', 'plane', 'file', 'grinder']"}
{"cat":"tools","slot":"part","value":"head","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"All the constitutive parts of head.\";         A textual example of the semantic relation is \"can have head\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['hammer', 'screwdriver', 'wrench', 'chisel', 'saw', 'drill', 'axe', 'pliers', 'crowbar', 'file']"}
{"cat":"tools","slot":"part","value":"shank","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"All the constitutive parts of shank.\";         A textual example of the semantic relation is \"can have shank\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['screwdriver', 'hammer', 'wrench', 'pliers', 'saw', 'drill', 'chisel', 'file', 'knife', 'axe']"}
{"cat":"tools","slot":"part","value":"fluke","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"All the constitutive parts of fluke.\";         A textual example of the semantic relation is \"can have fluke\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['screwdriver', 'hammer', 'wrench', 'pliers', 'saw', 'drill', 'level', 'tape measure', 'chisel', 'file']"}
{"cat":"tools","slot":"part","value":"hammerhead","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"All the constitutive parts of hammerhead.\";         A textual example of the semantic relation is \"can have hammerhead\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['head', 'handle', 'wedge', 'eye', 'face', 'claw', 'peen', 'bevel', 'cheek', 'haft']"}
{"cat":"tools","slot":"part","value":"pinhead","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"All the constitutive parts of pinhead.\";         A textual example of the semantic relation is \"can have pinhead\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"pin\", \"head\", \"shaft\", \"point\", \"tip\", \"barrel\", \"cap\", \"spring\", \"clip\", \"grip\"]"}
{"cat":"tools","slot":"part","value":"thread","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"All the constitutive parts of thread.\";         A textual example of the semantic relation is \"can have thread\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['spool', 'bobbin', 'shuttle', 'needle', 'spindle', 'reel', 'hook', 'loom', 'spindle', 'grommet']"}
{"cat":"tools","slot":"part","value":"stock","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"All the constitutive parts of stock.\";         A textual example of the semantic relation is \"can have stock\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['stock', 'screwdriver', 'hammer', 'wrench', 'pliers', 'saw', 'drill', 'level', 'tape measure']"}
{"cat":"tools","slot":"part","value":"rake handle","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"All the constitutive parts of rake handle.\";         A textual example of the semantic relation is \"can have rake handle\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['handle', 'grip', 'shaft', 'tines', 'head', 'ferrule', 'rivets', 'bolts', 'screws', 'wood']"}
{"cat":"tools","slot":"part","value":"point","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"All the constitutive parts of point.\";         A textual example of the semantic relation is \"can have point\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"pencil\", \"pen\", \"marker\", \"crayon\", \"chalk\", \"stylus\", \"quill\", \"brush\", \"paint\", \"ink\"]"}
{"cat":"tools","slot":"part","value":"clinch","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"All the constitutive parts of clinch.\";         A textual example of the semantic relation is \"can have clinch\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"hammer\", \"screwdriver\", \"wrench\", \"pliers\", \"chisel\", \"saw\", \"drill\", \"level\", \"tape measure\", \"socket set\"]"}
{"cat":"tools","slot":"part","value":"hoe handle","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"All the constitutive parts of hoe handle.\";         A textual example of the semantic relation is \"can have hoe handle\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['wood', 'metal', 'plastic', 'rubber', 'leather', 'bamboo', 'steel', 'aluminum', 'brass', 'copper']"}
{"cat":"tools","slot":"part","value":"ring","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"All the constitutive parts of ring.\";         A textual example of the semantic relation is \"can have ring\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"hammer\", \"screwdriver\", \"wrench\", \"pliers\", \"chisel\", \"saw\", \"drill\", \"level\", \"tape measure\", \"socket set\"]"}
{"cat":"tools","slot":"part","value":"razorblade","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"All the constitutive parts of razorblade.\";         A textual example of the semantic relation is \"can have razorblade\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['blade', 'edge', 'handle', 'guard', 'screw', 'nut', 'pin', 'spring', 'cap', 'plate']"}
{"cat":"tools","slot":"part","value":"stem","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"All the constitutive parts of stem.\";         A textual example of the semantic relation is \"can have stem\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"hammer\", \"saw\", \"wrench\", \"pliers\", \"screwdriver\", \"chisel\", \"file\", \"level\", \"trowel\", \"drill\"]"}
{"cat":"tools","slot":"part","value":"slot","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"All the constitutive parts of slot.\";         A textual example of the semantic relation is \"can have slot\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['hammer', 'screwdriver', 'wrench', 'pliers', 'saw', 'drill', 'chisel', 'level', 'tape measure', 'sander']"}
{"cat":"tools","slot":"part","value":"arm","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"All the constitutive parts of arm.\";         A textual example of the semantic relation is \"can have arm\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['screwdriver', 'hammer', 'wrench', 'pliers', 'saw', 'drill', 'chisel', 'file', 'level', 'trowel']"}
{"cat":"tools","slot":"material","value":"metal","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"Material of which metal is composed.\";         A textual example of the semantic relation is \"can be made of metal\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['hammer', 'screwdriver', 'wrench', 'pliers', 'saw', 'chisel', 'file', 'knife', 'drill', 'level']"}
{"cat":"tools","slot":"material","value":"steel","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"Material of which steel is composed.\";         A textual example of the semantic relation is \"can be made of steel\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['hammer', 'wrench', 'screwdriver', 'pliers', 'chisel', 'saw', 'drill', 'file', 'knife', 'crowbar']"}
{"cat":"tools","slot":"material","value":"plastic","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"Material of which plastic is composed.\";         A textual example of the semantic relation is \"can be made of plastic\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['spatula', 'brush', 'comb', 'toothbrush', 'fork', 'spoon', 'knife', 'scissors', 'pencil', 'ruler']"}
{"cat":"tools","slot":"material","value":"iron","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"Material of which iron is composed.\";         A textual example of the semantic relation is \"can be made of iron\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['hammer', 'wrench', 'saw', 'anvil', 'chisel', 'pliers', 'crowbar', 'tongs', 'file', 'vice']"}
{"cat":"tools","slot":"material","value":"wood","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"Material of which wood is composed.\";         A textual example of the semantic relation is \"can be made of wood\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['saw', 'hammer', 'chisel', 'plane', 'axe', 'file', 'drill', 'screwdriver', 'mallet', 'wrench']"}
{"cat":"tools","slot":"colorPattern","value":"silver","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"All the features that refer to the color or texture of silver.\";         A textual example of the semantic relation is \"can be silver\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['hammer', 'screwdriver', 'wrench', 'pliers', 'saw', 'drill', 'chisel', 'file', 'level', 'trowel']"}
{"cat":"tools","slot":"colorPattern","value":"silver","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"All the features that refer to the color or texture of silver.\";         A textual example of the semantic relation is \"can be silver\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['hammer', 'screwdriver', 'wrench', 'pliers', 'saw', 'drill', 'chisel', 'file', 'level', 'trowel']"}
{"cat":"tools","slot":"colorPattern","value":"black","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"All the features that refer to the color or texture of black.\";         A textual example of the semantic relation is \"can be black\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['hammer', 'screwdriver', 'wrench', 'pliers', 'saw', 'drill', 'chisel', 'file', 'level', 'trowel']"}
{"cat":"tools","slot":"colorPattern","value":"brown","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"All the features that refer to the color or texture of brown.\";         A textual example of the semantic relation is \"can be brown\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"hammer\", \"screwdriver\", \"wrench\", \"pliers\", \"saw\", \"drill\", \"chisel\", \"file\", \"level\", \"trowel\"]"}
{"cat":"tools","slot":"colorPattern","value":"brown","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"All the features that refer to the color or texture of brown.\";         A textual example of the semantic relation is \"can be brown\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"hammer\", \"screwdriver\", \"wrench\", \"pliers\", \"saw\", \"drill\", \"chisel\", \"file\", \"level\", \"trowel\"]"}
{"cat":"tools","slot":"colorPattern","value":"black","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"All the features that refer to the color or texture of black.\";         A textual example of the semantic relation is \"can be black\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['hammer', 'screwdriver', 'wrench', 'pliers', 'saw', 'drill', 'chisel', 'file', 'level', 'trowel']"}
{"cat":"tools","slot":"colorPattern","value":"golden","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"All the features that refer to the color or texture of golden.\";         A textual example of the semantic relation is \"can be golden\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['golden hammer', 'golden saw', 'golden screwdriver', 'golden wrench', 'golden pliers', 'golden chisel', 'golden file', 'golden drill', 'golden level', 'golden tape measure']"}
{"cat":"tools","slot":"accessory","value":"fastener","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"All those objects that may have to do with fastener. The constraint is that there must be a physical contact and that the use of such object is strictly necessary for fastener.\";         A textual example of the semantic relation is \"are related with fastener\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"screwdriver\", \"hammer\", \"wrench\", \"pliers\", \"ratchet\", \"socket\", \"saw\", \"drill\", \"chisel\", \"crowbar\"]"}
{"cat":"tools","slot":"generalization","value":"fastening","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"Classification of fastening related to hypernyms.\";         A textual example of the semantic relation is \"are fastening\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"nail\", \"screw\", \"bolt\", \"rivet\", \"staple\", \"clamp\", \"pin\", \"clip\", \"hook\", \"toggle\"]"}
{"cat":"tools","slot":"generalization","value":"fixing","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"Classification of fixing related to hypernyms.\";         A textual example of the semantic relation is \"are fixing\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['hammer', 'screwdriver', 'wrench', 'pliers', 'saw', 'drill', 'chisel', 'level', 'tape measure', 'sander']"}
{"cat":"tools","slot":"generalization","value":"holdfast","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"Classification of holdfast related to hypernyms.\";         A textual example of the semantic relation is \"are holdfast\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"hammer\", \"screwdriver\", \"wrench\", \"pliers\", \"saw\", \"drill\", \"chisel\", \"level\", \"tape measure\", \"socket set\"]"}
{"cat":"tools","slot":"generalization","value":"edge tool","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"Classification of edge tool related to hypernyms.\";         A textual example of the semantic relation is \"are edge tool\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['knife', 'sword', 'razor', 'chisel', 'axe', 'saw', 'scissors', 'file', 'plane', 'shears']"}
{"cat":"tools","slot":"generalization","value":"machine","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"Classification of machine related to hypernyms.\";         A textual example of the semantic relation is \"are machine\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['hammer', 'saw', 'wrench', 'drill', 'pliers', 'screwdriver', 'chisel', 'file', 'level', 'trowel']"}
{"cat":"tools","slot":"generalization","value":"lever","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"Classification of lever related to hypernyms.\";         A textual example of the semantic relation is \"are lever\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['crowbar', 'hammer', 'screwdriver', 'wrench', 'pliers', 'saw', 'chisel', 'axe', 'knife', 'tongs']"}
{"cat":"tools","slot":"generalization","value":"mechanism","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"Classification of mechanism related to hypernyms.\";         A textual example of the semantic relation is \"are mechanism\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['hammer', 'screwdriver', 'wrench', 'pliers', 'saw', 'drill', 'chisel', 'level', 'trowel', 'measuring tape']"}
{"cat":"tools","slot":"generalization","value":"cutting implement","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"Classification of cutting implement related to hypernyms.\";         A textual example of the semantic relation is \"are cutting implement\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['knife', 'saw', 'axe', 'scissors', 'chisel', 'razor', 'shears', 'blade', 'sword', 'hatchet']"}
{"cat":"tools","slot":"generalization","value":"simple machine","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"Classification of simple machine related to hypernyms.\";         A textual example of the semantic relation is \"are simple machine\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['lever', 'pulley', 'wedge', 'screw', 'inclined plane', 'wheel and axle', 'hammer', 'saw', 'chisel', 'knife']"}
{"cat":"tools","slot":"generalization","value":"knife","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"Classification of knife related to hypernyms.\";         A textual example of the semantic relation is \"are knife\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"knife\", \"blade\", \"cutting tool\", \"utensil\", \"kitchen tool\", \"weapon\", \"sharp object\", \"carving tool\", \"hunting tool\", \"pocket knife\"]"}
{"cat":"tools","slot":"generalization","value":"compound lever","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"Classification of compound lever related to hypernyms.\";         A textual example of the semantic relation is \"are compound lever\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['wrench', 'hammer', 'screwdriver', 'pliers', 'crowbar', 'saw', 'chisel', 'drill', 'file', 'level']"}
{"cat":"tools","slot":"generalization","value":"connexion","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"Classification of connexion related to hypernyms.\";         A textual example of the semantic relation is \"are connexion\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"screwdriver\", \"hammer\", \"wrench\", \"pliers\", \"saw\", \"drill\", \"chisel\", \"plane\", \"level\", \"trowel\"]"}
{"cat":"tools","slot":"generalization","value":"kitchen utensil","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"Classification of kitchen utensil related to hypernyms.\";         A textual example of the semantic relation is \"are kitchen utensil\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['spoon', 'fork', 'knife', 'whisk', 'ladle', 'grater', 'peeler', 'rolling pin', 'can opener', 'colander']"}
{"cat":"tools","slot":"generalization","value":"scissors","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"Classification of scissors related to hypernyms.\";         A textual example of the semantic relation is \"are scissors\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['shears', 'knife', 'blade', 'cutting tool', 'hand tool', 'gardening tool', 'sewing tool', 'kitchen tool', 'pliers', 'saw']"}
{"cat":"tools","slot":"generalization","value":"connector","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"Classification of connector related to hypernyms.\";         A textual example of the semantic relation is \"are connector\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"wrench\", \"pliers\", \"hammer\", \"screwdriver\", \"socket\", \"ratchet\", \"crowbar\", \"level\", \"chisel\"]"}
{"cat":"tools","slot":"generalization","value":"opener","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"Classification of opener related to hypernyms.\";         A textual example of the semantic relation is \"are opener\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"screwdriver\", \"hammer\", \"wrench\", \"pliers\", \"saw\", \"drill\", \"chisel\", \"level\", \"trowel\", \"measuring tape\"]"}
{"cat":"tools","slot":"generalization","value":"pair of scissors","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"Classification of pair of scissors related to hypernyms.\";         A textual example of the semantic relation is \"are pair of scissors\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['knife', 'scissors', 'hammer', 'saw', 'wrench', 'pliers', 'drill', 'screwdriver', 'chisel', 'file']"}
{"cat":"tools","slot":"generalization","value":"bottle opener","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"Classification of bottle opener related to hypernyms.\";         A textual example of the semantic relation is \"are bottle opener\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"corkscrew\", \"can opener\", \"screwdriver\", \"hammer\", \"pliers\", \"wrench\", \"saw\", \"drill\", \"level\", \"tape measure\"]"}
{"cat":"tools","slot":"generalization","value":"weapon","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"Classification of weapon related to hypernyms.\";         A textual example of the semantic relation is \"are weapon\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['knife', 'sword', 'axe', 'spear', 'bow', 'gun', 'crossbow', 'mace', 'staff', 'whip']"}
{"cat":"tools","slot":"generalization","value":"structure","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"Classification of structure related to hypernyms.\";         A textual example of the semantic relation is \"are structure\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['hammer', 'screwdriver', 'wrench', 'pliers', 'saw', 'drill', 'level', 'tape measure', 'chisel']"}
{"cat":"tools","slot":"generalization","value":"connecter","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"Classification of connecter related to hypernyms.\";         A textual example of the semantic relation is \"are connecter\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['hammer', 'screwdriver', 'wrench', 'pliers', 'saw', 'drill', 'level', 'tape measure', 'chisel', 'file']"}
{"cat":"tools","slot":"generalization","value":"surgical instrument","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"Classification of surgical instrument related to hypernyms.\";         A textual example of the semantic relation is \"are surgical instrument\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"scalpel\", \"forceps\", \"scissors\", \"retractor\", \"needle holder\", \"hemostat\", \"suture\", \"trocar\", \"cannula\", \"electrocautery\"]"}
{"cat":"tools","slot":"generalization","value":"form","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"Classification of form related to hypernyms.\";         A textual example of the semantic relation is \"are form\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['hammer', 'screwdriver', 'wrench', 'pliers', 'chisel', 'saw', 'drill', 'level', 'trowel', 'plane']"}
{"cat":"tools","slot":"generalization","value":"impedimenta","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"Classification of impedimenta related to hypernyms.\";         A textual example of the semantic relation is \"are impedimenta\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"hammer\", \"screwdriver\", \"wrench\", \"pliers\", \"saw\", \"drill\", \"level\", \"tape measure\", \"chisel\", \"file\"]"}
{"cat":"tools","slot":"generalization","value":"shape","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"Classification of shape related to hypernyms.\";         A textual example of the semantic relation is \"are shape\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['hammer', 'screwdriver', 'wrench', 'pliers', 'chisel', 'saw', 'drill', 'level', 'trowel', 'file']"}
{"cat":"tools","slot":"generalization","value":"impediment","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"Classification of impediment related to hypernyms.\";         A textual example of the semantic relation is \"are impediment\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"hammer\", \"screwdriver\", \"wrench\", \"pliers\", \"chisel\", \"saw\", \"drill\", \"level\", \"tape measure\", \"sander\"]"}
{"cat":"tools","slot":"generalization","value":"attachment","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"Classification of attachment related to hypernyms.\";         A textual example of the semantic relation is \"are attachment\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['hammer', 'screwdriver', 'wrench', 'pliers', 'saw', 'drill', 'level', 'tape measure', 'chisel', 'file']"}
{"cat":"tools","slot":"generalization","value":"medical instrument","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"Classification of medical instrument related to hypernyms.\";         A textual example of the semantic relation is \"are medical instrument\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"stethoscope\", \"syringe\", \"scalpel\", \"forceps\", \"tongs\", \"clamp\", \"retractor\", \"speculum\", \"trocar\", \"catheter\"]"}
{"cat":"tools","slot":"generalization","value":"line","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"Classification of line related to hypernyms.\";         A textual example of the semantic relation is \"are line\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['screwdriver', 'hammer', 'wrench', 'pliers', 'saw', 'drill', 'chisel', 'level', 'trowel', 'measuring tape']"}
{"cat":"tools","slot":"generalization","value":"paper","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"Classification of paper related to hypernyms.\";         A textual example of the semantic relation is \"are paper\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['pen', 'pencil', 'marker', 'highlighter', 'ruler', 'stapler', 'scissors', 'tape', 'glue', 'staples']"}
{"cat":"tools","slot":"generalization","value":"inclined plane","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"Classification of inclined plane related to hypernyms.\";         A textual example of the semantic relation is \"are inclined plane\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['wrench', 'hammer', 'screwdriver', 'pliers', 'saw', 'drill', 'chisel', 'plane', 'level', 'measuring tape']"}
{"cat":"tools","slot":"generalization","value":"instrument","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"Classification of instrument related to hypernyms.\";         A textual example of the semantic relation is \"are instrument\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['hammer', 'screwdriver', 'wrench', 'pliers', 'saw', 'drill', 'chisel', 'level', 'trowel', 'measuring tape']"}
{"cat":"tools","slot":"generalization","value":"playing card","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"Classification of playing card related to hypernyms.\";         A textual example of the semantic relation is \"are playing card\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['scissors', 'knife', 'saw', 'hammer', 'wrench', 'pliers', 'screwdriver', 'drill', 'chisel', 'plane']"}
{"cat":"tools","slot":"generalization","value":"seal","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"Classification of seal related to hypernyms.\";         A textual example of the semantic relation is \"are seal\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['hammer', 'saw', 'wrench', 'pliers', 'screwdriver', 'drill', 'chisel', 'level', 'trowel', 'measuring tape']"}
{"cat":"tools","slot":"generalization","value":"connective","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"Classification of connective related to hypernyms.\";         A textual example of the semantic relation is \"are connective\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"hammer\", \"screwdriver\", \"wrench\", \"pliers\", \"saw\", \"drill\", \"chisel\", \"plane\", \"level\", \"trowel\"]"}
{"cat":"tools","slot":"generalization","value":"ligament","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"Classification of ligament related to hypernyms.\";         A textual example of the semantic relation is \"are ligament\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['hammer', 'screwdriver', 'wrench', 'pliers', 'saw', 'drill', 'chisel', 'level', 'trowel', 'claw hammer']"}
{"cat":"tools","slot":"generalization","value":"construction","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"Classification of construction related to hypernyms.\";         A textual example of the semantic relation is \"are construction\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['hammer', 'saw', 'drill', 'wrench', 'level', 'pliers', 'chisel', 'screwdriver', 'trowel', 'crowbar']"}
{"cat":"tools","slot":"generalization","value":"tumbler","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"Classification of tumbler related to hypernyms.\";         A textual example of the semantic relation is \"are tumbler\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"hammer\", \"screwdriver\", \"wrench\", \"pliers\", \"saw\", \"drill\", \"chisel\", \"level\", \"trowel\", \"measuring tape\"]"}
{"cat":"tools","slot":"generalization","value":"obstruction","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"Classification of obstruction related to hypernyms.\";         A textual example of the semantic relation is \"are obstruction\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['hammer', 'screwdriver', 'wrench', 'pliers', 'saw', 'drill', 'level', 'tape measure', 'chisel', 'file']"}
{"cat":"tools","slot":"generalization","value":"obstructor","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"Classification of obstructor related to hypernyms.\";         A textual example of the semantic relation is \"are obstructor\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"hammer\", \"screwdriver\", \"wrench\", \"pliers\", \"saw\", \"drill\", \"chisel\", \"file\", \"level\", \"trowel\"]"}
{"cat":"tools","slot":"generalization","value":"weapon system","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"Classification of weapon system related to hypernyms.\";         A textual example of the semantic relation is \"are weapon system\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['sword', 'axe', 'spear', 'bow', 'crossbow', 'gun', 'cannon', 'missile', 'bomb', 'grenade']"}
{"cat":"tools","slot":"generalization","value":"surgical knife","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"Classification of surgical knife related to hypernyms.\";         A textual example of the semantic relation is \"are surgical knife\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"scalpel\", \"lancet\", \"bistoury\", \"curette\", \"scissors\", \"forceps\", \"needle holder\", \"hemostat\", \"retractor\", \"speculum\"]"}
{"cat":"tools","slot":"generalization","value":"card","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"Classification of card related to hypernyms.\";         A textual example of the semantic relation is \"are card\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['hammer', 'screwdriver', 'wrench', 'pliers', 'saw', 'drill', 'level', 'tape measure', 'chisel', 'sander']"}
{"cat":"tools","slot":"generalization","value":"filter","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"Classification of filter related to hypernyms.\";         A textual example of the semantic relation is \"are filter\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"hammer\", \"screwdriver\", \"wrench\", \"pliers\", \"saw\", \"drill\", \"level\", \"tape measure\", \"chisel\"]"}
{"cat":"tools","slot":"generalization","value":"claw","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"Classification of claw related to hypernyms.\";         A textual example of the semantic relation is \"are claw\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['pliers', 'hammer', 'screwdriver', 'wrench', 'chisel', 'saw', 'drill', 'file', 'level', 'measuring tape']"}
{"cat":"tools","slot":"generalization","value":"hook","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"Classification of hook related to hypernyms.\";         A textual example of the semantic relation is \"are hook\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"hook\", \"pliers\", \"hammer\", \"screwdriver\", \"wrench\", \"saw\", \"drill\", \"chisel\", \"level\", \"trowel\"]"}
{"cat":"tools","slot":"generalization","value":"curved shape","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"Classification of curved shape related to hypernyms.\";         A textual example of the semantic relation is \"are curved shape\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['sickle', 'crescent', 'hoe', 'scythe', 'gouge', 'adze', 'crescent wrench', 'crescent moon', 'bow', 'hatchet']"}
{"cat":"tools","slot":"generalization","value":"obstructer","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"Classification of obstructer related to hypernyms.\";         A textual example of the semantic relation is \"are obstructer\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['hammer', 'screwdriver', 'wrench', 'pliers', 'saw', 'drill', 'chisel', 'level', 'trowel', 'measuring tape']"}
{"cat":"tools","slot":"generalization","value":"bond","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"Classification of bond related to hypernyms.\";         A textual example of the semantic relation is \"are bond\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['hammer', 'screwdriver', 'wrench', 'pliers', 'saw', 'drill', 'chisel', 'file', 'level', 'trowel']"}
{"cat":"tools","slot":"generalization","value":"connection","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"Classification of connection related to hypernyms.\";         A textual example of the semantic relation is \"are connection\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['hammer', 'screwdriver', 'wrench', 'pliers', 'chisel', 'saw', 'drill', 'level', 'trowel', 'spanner']"}
{"cat":"tools","slot":"generalization","value":"strainer","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"Classification of strainer related to hypernyms.\";         A textual example of the semantic relation is \"are strainer\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['colander', 'sieve', 'filter', 'strainer', 'cheesecloth', 'tea strainer', 'coffee filter', 'mesh', 'tea infuser', 'tea ball']"}
{"cat":"tools","slot":"generalization","value":"curve","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"Classification of curve related to hypernyms.\";         A textual example of the semantic relation is \"are curve\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['compass', 'protractor', 'ruler', 'set square', 'slide rule', 'straightedge', 't-square', 'trammel', 'vernier caliper']"}
{"cat":"tools","slot":"generalization","value":"bar","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"Classification of bar related to hypernyms.\";         A textual example of the semantic relation is \"are bar\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['hammer', 'screwdriver', 'wrench', 'pliers', 'chisel', 'saw', 'drill', 'level', 'trowel', 'measuring tape']"}
{"cat":"tools","slot":"generalization","value":"tool","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"Classification of tool related to hypernyms.\";         A textual example of the semantic relation is \"are tool\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['hammer', 'screwdriver', 'wrench', 'pliers', 'saw', 'drill', 'chisel', 'file', 'level', 'trowel']"}
{"cat":"tools","slot":"generalization","value":"utensil","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"Classification of utensil related to hypernyms.\";         A textual example of the semantic relation is \"are utensil\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"hammer\", \"screwdriver\", \"wrench\", \"pliers\", \"saw\", \"drill\", \"chisel\", \"file\", \"level\", \"trowel\"]"}
{"cat":"tools","slot":"generalization","value":"implement","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"Classification of implement related to hypernyms.\";         A textual example of the semantic relation is \"are implement\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"hammer\", \"screwdriver\", \"wrench\", \"pliers\", \"chisel\", \"saw\", \"drill\", \"level\", \"trowel\", \"plane\"]"}
{"cat":"tools","slot":"generalization","value":"object","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"Classification of object related to hypernyms.\";         A textual example of the semantic relation is \"are object\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"hammer\", \"screwdriver\", \"wrench\", \"pliers\", \"saw\", \"drill\", \"level\", \"tape measure\", \"chisel\"]"}
{"cat":"tools","slot":"generalization","value":"device","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"Classification of device related to hypernyms.\";         A textual example of the semantic relation is \"are device\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['hammer', 'screwdriver', 'wrench', 'pliers', 'saw', 'drill', 'chisel', 'file', 'level', 'trowel']"}
{"cat":"tools","slot":"generalization","value":"instrumentation","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"Classification of instrumentation related to hypernyms.\";         A textual example of the semantic relation is \"are instrumentation\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['hammer', 'screwdriver', 'wrench', 'pliers', 'saw', 'drill', 'chisel', 'level', 'trowel', 'claw']"}
{"cat":"tools","slot":"generalization","value":"hand tool","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"Classification of hand tool related to hypernyms.\";         A textual example of the semantic relation is \"are hand tool\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"hammer\", \"screwdriver\", \"wrench\", \"pliers\", \"saw\", \"chisel\", \"file\", \"knife\", \"level\", \"trowel\"]"}
{"cat":"tools","slot":"generalization","value":"instrumentality","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"Classification of instrumentality related to hypernyms.\";         A textual example of the semantic relation is \"are instrumentality\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['hammer', 'screwdriver', 'wrench', 'pliers', 'saw', 'drill', 'chisel', 'level', 'tape measure', 'sander']"}
{"cat":"tools","slot":"generalization","value":"restraint","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"Classification of restraint related to hypernyms.\";         A textual example of the semantic relation is \"are restraint\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['hammer', 'screwdriver', 'wrench', 'pliers', 'saw', 'drill', 'chisel', 'level', 'tape measure', 'sledgehammer']"}
{"cat":"tools","slot":"generalization","value":"constraint","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"Classification of constraint related to hypernyms.\";         A textual example of the semantic relation is \"are constraint\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['hammer', 'screwdriver', 'wrench', 'pliers', 'saw', 'drill', 'chisel', 'level', 'trowel', 'plane']"}
{"cat":"tools","slot":"generalization","value":"cutting tool","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"Classification of cutting tool related to hypernyms.\";         A textual example of the semantic relation is \"are cutting tool\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"knife\", \"saw\", \"scissors\", \"axe\", \"chisel\", \"razor\", \"shears\", \"file\", \"drill\"]"}
{"cat":"tools","slot":"generalization","value":"artifact","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"Classification of artifact related to hypernyms.\";         A textual example of the semantic relation is \"are artifact\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"hammer\", \"screwdriver\", \"wrench\", \"pliers\", \"saw\", \"drill\", \"chisel\", \"file\", \"level\", \"tape measure\"]"}
{"cat":"tools","slot":"generalization","value":"cutter","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"Classification of cutter related to hypernyms.\";         A textual example of the semantic relation is \"are cutter\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['saw', 'knife', 'scissors', 'axe', 'chisel', 'gouge', 'drill', 'router', 'plane', 'lathe']"}
{"cat":"tools","slot":"generalization","value":"mechanical device","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"Classification of mechanical device related to hypernyms.\";         A textual example of the semantic relation is \"are mechanical device\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['hammer', 'screwdriver', 'wrench', 'pliers', 'saw', 'drill', 'chisel', 'file', 'level', 'clamp']"}
{"cat":"tools","slot":"generalization","value":"artefact","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"Classification of artefact related to hypernyms.\";         A textual example of the semantic relation is \"are artefact\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['hammer', 'screwdriver', 'wrench', 'pliers', 'saw', 'drill', 'chisel', 'file', 'level', 'measuring tape']"}
{"cat":"tools","slot":"generalization","value":"cutlery","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"Classification of cutlery related to hypernyms.\";         A textual example of the semantic relation is \"are cutlery\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"knife\", \"fork\", \"spoon\", \"scissors\", \"razor\", \"saw\", \"hammer\", \"wrench\", \"pliers\", \"chisel\"]"}
{"cat":"tools","slot":"generalization","value":"fastener","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"Classification of fastener related to hypernyms.\";         A textual example of the semantic relation is \"are fastener\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['nail', 'screw', 'bolt', 'rivet', 'pin', 'clamp', 'staple', 'tack', 'clip']"}
{"cat":"tools","slot":"generalization","value":"screw","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"Classification of screw related to hypernyms.\";         A textual example of the semantic relation is \"are screw\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['screwdriver', 'wrench', 'hammer', 'pliers', 'saw', 'drill', 'chisel', 'level', 'tape measure', 'socket set']"}
{"cat":"tools","slot":"generalization","value":"arm","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"tools\";         The returned words must satisfy the semantic relation \"Classification of arm related to hypernyms.\";         A textual example of the semantic relation is \"are arm\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['sword', 'axe', 'mace', 'spear', 'bow', 'crossbow', 'dart', 'knife', 'dagger', 'slingshot']"}
{"cat":"containers","slot":"bodyPart","value":"shoulder","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"All the body parts which are involved in interacting with shoulder.\";         A textual example of the semantic relation is \"can have or be used with shoulder\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['bucket', 'can', 'carton', 'crate', 'jar', 'pail', 'pot', 'sack', 'tank', 'vase']"}
{"cat":"containers","slot":"bodyPart","value":"hand","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"All the body parts which are involved in interacting with hand.\";         A textual example of the semantic relation is \"can have or be used with hand\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"box\", \"bag\", \"basket\", \"jar\", \"can\", \"crate\", \"carton\", \"tub\", \"bucket\", \"vase\"]"}
{"cat":"containers","slot":"user","value":"woman","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"All the kinds of living beings which are able to operate, employ, interact with or perceive woman.\";         A textual example of the semantic relation is \"are used by women\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"purse\", \"handbag\", \"wallet\", \"makeup bag\", \"cosmetic case\", \"jewelry box\", \"shoe box\", \"clutch\", \"tote\", \"backpack\"]"}
{"cat":"containers","slot":"user","value":"waiter","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"All the kinds of living beings which are able to operate, employ, interact with or perceive waiter.\";         A textual example of the semantic relation is \"are used by waiters\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['plate', 'bowl', 'cup', 'glass', 'tray', 'pitcher', 'carrier', 'container', 'basket', 'bucket']"}
{"cat":"containers","slot":"efficiency","value":"impermeable","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"Positive (efficiency) or negative (inefficiency) features of impermeable related to their function.\";         A textual example of the semantic relation is \"can be impermeable\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['waterproof', 'airtight', 'leakproof', 'watertight', 'sealed', 'hermetic', 'impervious', 'non-porous', 'impenetrable', 'tight']"}
{"cat":"containers","slot":"efficiency","value":"recyclable","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"Positive (efficiency) or negative (inefficiency) features of recyclable related to their function.\";         A textual example of the semantic relation is \"can be recyclable\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['reusable', 'durable', 'biodegradable', 'eco-friendly', 'compostable', 'recyclable', 'sustainable', 'green', 'environmentally conscious', 'ecological']"}
{"cat":"containers","slot":"efficiency","value":"recycled","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"Positive (efficiency) or negative (inefficiency) features of recycled related to their function.\";         A textual example of the semantic relation is \"can be recycled\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['reusable', 'durable', 'biodegradable', 'compostable', 'eco-friendly', 'sustainable', 'recyclable', 'non-toxic', 'renewable', 'energy-efficient']"}
{"cat":"containers","slot":"efficiency","value":"breakable","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"Positive (efficiency) or negative (inefficiency) features of breakable related to their function.\";         A textual example of the semantic relation is \"can be breakable\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"fragile\", \"delicate\", \"sturdy\", \"durable\", \"strong\", \"resilient\", \"robust\", \"tough\", \"hardy\", \"unbreakable\"]"}
{"cat":"containers","slot":"colorPattern","value":"transparent","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"All the features that refer to the color or texture of transparent.\";         A textual example of the semantic relation is \"can be transparent\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"glass\", \"plastic\", \"crystal\", \"acrylic\", \"polycarbonate\", \"plexiglass\", \"quartz\", \"ceramic\", \"porcelain\", \"transparent\"]"}
{"cat":"containers","slot":"colorPattern","value":"green","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"All the features that refer to the color or texture of green.\";         A textual example of the semantic relation is \"can be green\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"jar\", \"bottle\", \"canister\", \"crate\", \"box\", \"chest\", \"barrel\", \"vase\", \"tub\", \"bucket\"]"}
{"cat":"containers","slot":"colorPattern","value":"green","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"All the features that refer to the color or texture of green.\";         A textual example of the semantic relation is \"can be green\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"jar\", \"bottle\", \"canister\", \"crate\", \"box\", \"chest\", \"barrel\", \"vase\", \"tub\", \"bucket\"]"}
{"cat":"containers","slot":"colorPattern","value":"brown","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"All the features that refer to the color or texture of brown.\";         A textual example of the semantic relation is \"can be brown\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['box', 'bag', 'basket', 'crate', 'jar', 'barrel', 'chest', 'carton', 'canister', 'tub']"}
{"cat":"containers","slot":"colorPattern","value":"brown","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"All the features that refer to the color or texture of brown.\";         A textual example of the semantic relation is \"can be brown\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['box', 'bag', 'basket', 'crate', 'jar', 'barrel', 'chest', 'carton', 'canister', 'tub']"}
{"cat":"containers","slot":"colorPattern","value":"cream","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"All the features that refer to the color or texture of cream.\";         A textual example of the semantic relation is \"can be cream\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['jug', 'pitcher', 'vase', 'urn', 'carafe', 'ewer', 'crock', 'urn', 'pot', 'jar']"}
{"cat":"containers","slot":"purpose","value":"carry","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"All of the purposes for which carry is interacted with.\";         A textual example of the semantic relation is \"are used to carry\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['backpack', 'purse', 'suitcase', 'briefcase', 'bag', 'box', 'basket', 'jar', 'container', 'crate']"}
{"cat":"containers","slot":"purpose","value":"store","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"All of the purposes for which store is interacted with.\";         A textual example of the semantic relation is \"are used to store\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['box', 'bag', 'jar', 'canister', 'crate', 'chest', 'carton', 'barrel', 'container', 'basket']"}
{"cat":"containers","slot":"purpose","value":"cleaning","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"All of the purposes for which cleaning is interacted with.\";         A textual example of the semantic relation is \"are used for cleaning\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['bucket', 'mop', 'broom', 'duster', 'vacuum', 'sponge', 'rag', 'scrub brush', 'dish soap', 'cleaning solution']"}
{"cat":"containers","slot":"purpose","value":"shopping","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"All of the purposes for which shopping is interacted with.\";         A textual example of the semantic relation is \"are used for shopping\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"bag\", \"box\", \"cart\", \"basket\", \"crate\", \"jar\", \"can\", \"container\", \"packet\", \"sack\"]"}
{"cat":"containers","slot":"purpose","value":"gardening","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"All of the purposes for which gardening is interacted with.\";         A textual example of the semantic relation is \"are used for gardening\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['pot', 'planter', 'trowel', 'watering can', 'gloves', 'pruning shears', 'rake', 'spade', 'hoe', 'garden hose']"}
{"cat":"containers","slot":"purpose","value":"storage","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"All of the purposes for which storage is interacted with.\";         A textual example of the semantic relation is \"are used for storage\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['box', 'bag', 'basket', 'jar', 'can', 'crate', 'chest', 'drawer', 'bucket', 'tub']"}
{"cat":"containers","slot":"purpose","value":"tote","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"All of the purposes for which tote is interacted with.\";         A textual example of the semantic relation is \"are used to tote\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"bag\", \"box\", \"basket\", \"crate\", \"bucket\", \"tote\", \"pouch\", \"jar\", \"canister\", \"container\"]"}
{"cat":"containers","slot":"efficiency","value":"shaped","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"Positive (efficiency) or negative (inefficiency) features of shaped related to their function.\";         A textual example of the semantic relation is \"can be shaped\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['can be shaped', 'are durable', 'are reusable', 'are stackable', 'are lightweight', 'are airtight', 'are leak-proof', 'are insulated', 'are portable', 'are versatile']"}
{"cat":"containers","slot":"efficiency","value":"plastic","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"Positive (efficiency) or negative (inefficiency) features of plastic related to their function.\";         A textual example of the semantic relation is \"can be plastic\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"plastic\", \"recyclable\", \"durable\", \"lightweight\", \"flexible\", \"transparent\", \"insulating\", \"resistant\", \"stackable\", \"affordable\"]"}
{"cat":"containers","slot":"place","value":"kitchen","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"All the entities in which kitchen can be experienced, found or perceived.\";         A textual example of the semantic relation is \"can be found or used in kitchens\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['fridge', 'oven', 'microwave', 'dishwasher', 'sink', 'cabinet', 'countertop', 'stove', 'toaster', 'blender']"}
{"cat":"containers","slot":"place","value":"supermarket","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"All the entities in which supermarket can be experienced, found or perceived.\";         A textual example of the semantic relation is \"can be found or used in supermarkets\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['shopping bag', 'cart', 'aisle', 'shelf', 'freezer', 'refrigerator', 'produce section', 'bakery', 'deli', 'checkout counter']"}
{"cat":"containers","slot":"place","value":"restaurant","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"All the entities in which restaurant can be experienced, found or perceived.\";         A textual example of the semantic relation is \"can be found or used in restaurants\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"plate\", \"bowl\", \"cup\", \"glass\", \"table\", \"chair\", \"tray\", \"menu\", \"kitchen\", \"bar\"]"}
{"cat":"containers","slot":"place","value":"shop","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"All the entities in which shop can be experienced, found or perceived.\";         A textual example of the semantic relation is \"can be found or used in shops\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"box\", \"bag\", \"basket\", \"cart\", \"trolley\", \"crate\", \"container\", \"packaging\", \"display\", \"rack\"]"}
{"cat":"containers","slot":"place","value":"cafeteria","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"All the entities in which cafeteria can be experienced, found or perceived.\";         A textual example of the semantic relation is \"can be found or used in cafeterias\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"tray\", \"plate\", \"bowl\", \"cup\", \"glass\", \"container\", \"cart\", \"counter\", \"table\", \"booth\"]"}
{"cat":"containers","slot":"place","value":"canteen","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"All the entities in which canteen can be experienced, found or perceived.\";         A textual example of the semantic relation is \"can be found or used in canteens\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"lunchbox\", \"tray\", \"plate\", \"bowl\", \"cup\", \"glass\", \"mug\", \"fork\", \"spoon\", \"knife\"]"}
{"cat":"containers","slot":"place","value":"pub","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"All the entities in which pub can be experienced, found or perceived.\";         A textual example of the semantic relation is \"can be found or used in pubs\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"beer mug\", \"shot glass\", \"wine glass\", \"pint glass\", \"cocktail glass\", \"pitcher\", \"barrel\", \"keg\", \"cask\", \"flagon\"]"}
{"cat":"containers","slot":"place","value":"cellar","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"All the entities in which cellar can be experienced, found or perceived.\";         A textual example of the semantic relation is \"can be found or used in cellars\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['barrel', 'crate', 'cask', 'vat', 'tub', 'jar', 'bin', 'chest', 'box', 'carton']"}
{"cat":"containers","slot":"place","value":"garden","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"All the entities in which garden can be experienced, found or perceived.\";         A textual example of the semantic relation is \"can be found or used in gardens\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"greenhouse\", \"planter\", \"vase\", \"watering can\", \"garden bed\", \"garden shed\", \"pot\", \"garden hose\", \"raised bed\", \"compost bin\"]"}
{"cat":"containers","slot":"place","value":"beach","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"All the entities in which beach can be experienced, found or perceived.\";         A textual example of the semantic relation is \"can be found or used in beaches\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"beach chair\", \"beach umbrella\", \"beach towel\", \"beach bag\", \"beach cooler\", \"beach cart\", \"beach tent\", \"beach canopy\", \"beach wagon\", \"beach basket\"]"}
{"cat":"containers","slot":"efficiency","value":"shaped","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"Positive (efficiency) or negative (inefficiency) features of shaped related to their function.\";         A textual example of the semantic relation is \"can be shaped\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['can be shaped', 'are durable', 'are reusable', 'are stackable', 'are lightweight', 'are airtight', 'are leak-proof', 'are insulated', 'are portable', 'are versatile']"}
{"cat":"containers","slot":"efficiency","value":"recycled","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"Positive (efficiency) or negative (inefficiency) features of recycled related to their function.\";         A textual example of the semantic relation is \"can be recycled\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['reusable', 'durable', 'biodegradable', 'compostable', 'eco-friendly', 'sustainable', 'recyclable', 'non-toxic', 'renewable', 'energy-efficient']"}
{"cat":"containers","slot":"part","value":"bung","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"All the constitutive parts of bung.\";         A textual example of the semantic relation is \"can have bung\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['can', 'jar', 'barrel', 'cask', 'vase', 'urn', 'flagon', 'demijohn', 'carboy', 'canteen']"}
{"cat":"containers","slot":"part","value":"hoop","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"All the constitutive parts of hoop.\";         A textual example of the semantic relation is \"can have hoop\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['barrel', 'basket', 'box', 'can', 'carton', 'chest', 'crate', 'jar', 'tub', 'vase']"}
{"cat":"containers","slot":"part","value":"lid","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"All the constitutive parts of lid.\";         A textual example of the semantic relation is \"can have lid\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"can\", \"jar\", \"box\", \"bottle\", \"container\", \"vial\", \"tin\", \"bucket\", \"bag\", \"pail\"]"}
{"cat":"containers","slot":"part","value":"label","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"All the constitutive parts of label.\";         A textual example of the semantic relation is \"can have label\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['box', 'bag', 'jar', 'can', 'bottle', 'crate', 'carton', 'tub', 'bucket', 'container']"}
{"cat":"containers","slot":"part","value":"tap","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"All the constitutive parts of tap.\";         A textual example of the semantic relation is \"can have tap\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['faucet', 'spigot', 'valve', 'handle', 'stem', 'seat', 'washer', 'nut', 'body', 'outlet']"}
{"cat":"containers","slot":"part","value":"stave","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"All the constitutive parts of stave.\";         A textual example of the semantic relation is \"can have stave\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['barrel', 'cask', 'tub', 'bucket', 'pail', 'vessel', 'jar', 'can', 'box', 'crate']"}
{"cat":"containers","slot":"part","value":"rear of tube","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"All the constitutive parts of rear of tube.\";         A textual example of the semantic relation is \"can have rear of tube\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['tube', 'can', 'box', 'jar', 'bottle', 'container', 'bag', 'sack', 'carton', 'packet']"}
{"cat":"containers","slot":"part","value":"cental","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"All the constitutive parts of cental.\";         A textual example of the semantic relation is \"can have cental\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['box', 'bag', 'bottle', 'jar', 'container', 'canister', 'vessel', 'tank', 'barrel', 'crate']"}
{"cat":"containers","slot":"part","value":"strap","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"All the constitutive parts of strap.\";         A textual example of the semantic relation is \"can have strap\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"bag\", \"purse\", \"backpack\", \"suitcase\", \"duffel bag\", \"briefcase\", \"wallet\", \"satchel\", \"tote\", \"clutch\"]"}
{"cat":"containers","slot":"part","value":"zipper","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"All the constitutive parts of zipper.\";         A textual example of the semantic relation is \"can have zipper\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['pouch', 'bag', 'purse', 'wallet', 'backpack', 'duffel', 'suitcase', 'briefcase', 'container', 'box']"}
{"cat":"containers","slot":"part","value":"rear of barrel","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"All the constitutive parts of rear of barrel.\";         A textual example of the semantic relation is \"can have rear of barrel\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['can', 'jar', 'vial', 'flask', 'bottle', 'tube', 'cartridge', 'cask', 'container', 'drum']"}
{"cat":"containers","slot":"part","value":"compartment","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"All the constitutive parts of compartment.\";         A textual example of the semantic relation is \"can have compartment\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['box', 'bag', 'jar', 'bottle', 'can', 'tub', 'crate', 'carton', 'casket', 'container']"}
{"cat":"containers","slot":"part","value":"pocket","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"All the constitutive parts of pocket.\";         A textual example of the semantic relation is \"can have pocket\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['pocket', 'wallet', 'purse', 'bag', 'backpack', 'satchel', 'briefcase', 'suitcase', 'duffel bag', 'container']"}
{"cat":"containers","slot":"part","value":"base","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"All the constitutive parts of base.\";         A textual example of the semantic relation is \"can have base\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['box', 'bag', 'jar', 'can', 'bottle', 'tube', 'carton', 'crate', 'casket', 'container']"}
{"cat":"containers","slot":"part","value":"cap","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"All the constitutive parts of cap.\";         A textual example of the semantic relation is \"can have cap\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['can', 'jar', 'bottle', 'box', 'bag', 'carton', 'crate', 'barrel', 'tank', 'chest']"}
{"cat":"containers","slot":"part","value":"hundredweight","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"All the constitutive parts of hundredweight.\";         A textual example of the semantic relation is \"can have hundredweight\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['barrel', 'bin', 'box', 'carton', 'crate', 'drum', 'package', 'sack', 'tub', 'vat']"}
{"cat":"containers","slot":"part","value":"cwt","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"All the constitutive parts of cwt.\";         A textual example of the semantic relation is \"can have cwt\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['box', 'bag', 'jar', 'canister', 'crate', 'barrel', 'chest', 'carton', 'bucket', 'tub']"}
{"cat":"containers","slot":"part","value":"neck","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"All the constitutive parts of neck.\";         A textual example of the semantic relation is \"can have neck\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['bottle', 'flask', 'jar', 'vial', 'carboy', 'demijohn', 'carafe', 'decanter', 'canteen', 'cask']"}
{"cat":"containers","slot":"part","value":"centner","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"All the constitutive parts of centner.\";         A textual example of the semantic relation is \"can have centner\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['box', 'bag', 'jar', 'can', 'bottle', 'barrel', 'crate', 'carton', 'chest', 'casket']"}
{"cat":"containers","slot":"part","value":"quintal","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"All the constitutive parts of quintal.\";         A textual example of the semantic relation is \"can have quintal\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['box', 'crate', 'barrel', 'carton', 'jar', 'canister', 'vessel', 'tub', 'bin', 'sack']"}
{"cat":"containers","slot":"part","value":"rim","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"All the constitutive parts of rim.\";         A textual example of the semantic relation is \"can have rim\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"can\", \"jar\", \"bottle\", \"vase\", \"cup\", \"bowl\", \"bucket\", \"barrel\", \"box\", \"bag\"]"}
{"cat":"containers","slot":"part","value":"breech","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"All the constitutive parts of breech.\";         A textual example of the semantic relation is \"can have breech\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['box', 'bag', 'drawer', 'jar', 'canister', 'container', 'chest', 'carton', 'crate', 'tub']"}
{"cat":"containers","slot":"part","value":"spigot","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"All the constitutive parts of spigot.\";         A textual example of the semantic relation is \"can have spigot\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"barrel\", \"bucket\", \"canister\", \"cask\", \"container\", \"flagon\", \"jug\", \"tank\", \"vessel\", \"wineskin\"]"}
{"cat":"containers","slot":"part","value":"short hundredweight","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"All the constitutive parts of short hundredweight.\";         A textual example of the semantic relation is \"can have short hundredweight\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['barrel', 'bin', 'box', 'canister', 'carton', 'crate', 'drum', 'package', 'sack', 'tub']"}
{"cat":"containers","slot":"part","value":"spout","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"All the constitutive parts of spout.\";         A textual example of the semantic relation is \"can have spout\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['bottle', 'jug', 'teapot', 'pitcher', 'carafe', 'flagon', 'canteen', 'jerrican', 'demijohn', 'cask']"}
{"cat":"containers","slot":"part","value":"bottlecap","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"All the constitutive parts of bottlecap.\";         A textual example of the semantic relation is \"can have bottlecap\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['can', 'bottle', 'cap', 'lid', 'top', 'seal', 'closure', 'container', 'vessel', 'receptacle']"}
{"cat":"containers","slot":"part","value":"mouth","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"All the constitutive parts of mouth.\";         A textual example of the semantic relation is \"can have mouth\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['jar', 'bottle', 'can', 'box', 'bag', 'tin', 'carton', 'pouch', 'container', 'packet']"}
{"cat":"containers","slot":"part","value":"brim","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"All the constitutive parts of brim.\";         A textual example of the semantic relation is \"can have brim\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"cup\", \"mug\", \"glass\", \"goblet\", \"beaker\", \"pitcher\", \"bowl\", \"vase\", \"jar\", \"flask\"]"}
{"cat":"containers","slot":"part","value":"zip","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"All the constitutive parts of zip.\";         A textual example of the semantic relation is \"can have zip\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"bag\", \"box\", \"case\", \"chest\", \"drawer\", \"envelope\", \"jar\", \"pouch\", \"sack\", \"suitcase\"]"}
{"cat":"containers","slot":"part","value":"cork","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"All the constitutive parts of cork.\";         A textual example of the semantic relation is \"can have cork\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"bottle\", \"barrel\", \"cask\", \"flask\", \"jar\", \"vial\", \"box\", \"bag\", \"crate\", \"carton\"]"}
{"cat":"containers","slot":"part","value":"clasp","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"All the constitutive parts of clasp.\";         A textual example of the semantic relation is \"can have clasp\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['purse', 'wallet', 'bag', 'box', 'chest', 'container', 'envelope', 'pouch', 'suitcase', 'tote']"}
{"cat":"containers","slot":"part","value":"stopper","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"All the constitutive parts of stopper.\";         A textual example of the semantic relation is \"can have stopper\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['bottle', 'jar', 'can', 'flask', 'vial', 'tube', 'barrel', 'carton', 'box', 'bag']"}
{"cat":"containers","slot":"part","value":"handle","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"All the constitutive parts of handle.\";         A textual example of the semantic relation is \"can have handle\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"can\", \"jar\", \"bucket\", \"box\", \"bag\", \"bottle\", \"tub\", \"barrel\", \"carton\", \"crate\"]"}
{"cat":"containers","slot":"content","value":"liquid","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"All the entities which might be contained within liquid, without being constitutive parts of it.\";         A textual example of the semantic relation is \"contain liquids\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['bottle', 'jar', 'vial', 'flask', 'canister', 'barrel', 'cask', 'tank', 'container', 'vessel']"}
{"cat":"containers","slot":"content","value":"wine","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"All the entities which might be contained within wine, without being constitutive parts of it.\";         A textual example of the semantic relation is \"contain wines\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"barrel\", \"bottle\", \"cask\", \"carboy\", \"demijohn\", \"flagon\", \"jug\", \"keg\", \"pitcher\", \"tankard\"]"}
{"cat":"containers","slot":"content","value":"drink","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"All the entities which might be contained within drink, without being constitutive parts of it.\";         A textual example of the semantic relation is \"contain drinks\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['cup', 'glass', 'mug', 'bottle', 'flask', 'pitcher', 'jug', 'carafe', 'steins', 'tankard']"}
{"cat":"containers","slot":"content","value":"beer","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"All the entities which might be contained within beer, without being constitutive parts of it.\";         A textual example of the semantic relation is \"contain beers\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"barrel\", \"bottle\", \"can\", \"cask\", \"flagon\", \"growler\", \"jug\", \"keg\", \"pitcher\", \"stein\"]"}
{"cat":"containers","slot":"content","value":"grocery","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"All the entities which might be contained within grocery, without being constitutive parts of it.\";         A textual example of the semantic relation is \"contain groceries\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['bag', 'box', 'can', 'carton', 'crate', 'jar', 'package', 'pouch', 'tin', 'tub']"}
{"cat":"containers","slot":"content","value":"liquor","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"All the entities which might be contained within liquor, without being constitutive parts of it.\";         A textual example of the semantic relation is \"contain liquors\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['barrel', 'bottle', 'cask', 'decanter', 'flask', 'jug', 'keg', 'pitcher', 'tankard', 'vessel']"}
{"cat":"containers","slot":"content","value":"sand","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"All the entities which might be contained within sand, without being constitutive parts of it.\";         A textual example of the semantic relation is \"contain sand\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['bucket', 'sandbag', 'box', 'jar', 'bag', 'tub', 'vase', 'container', 'vessel', 'canister']"}
{"cat":"containers","slot":"content","value":"biscuit","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"All the entities which might be contained within biscuit, without being constitutive parts of it.\";         A textual example of the semantic relation is \"contain biscuits\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['tin', 'box', 'jar', 'bag', 'container', 'packet', 'carton', 'canister', 'basket', 'crate']"}
{"cat":"containers","slot":"content","value":"soda","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"All the entities which might be contained within soda, without being constitutive parts of it.\";         A textual example of the semantic relation is \"contain sodas\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['bottle', 'can', 'flask', 'jar', 'keg', 'packet', 'pitcher', 'tank', 'vessel', 'vial']"}
{"cat":"containers","slot":"content","value":"gardening","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"All the entities which might be contained within gardening, without being constitutive parts of it.\";         A textual example of the semantic relation is \"contain gardenings\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"pot\", \"planter\", \"vase\", \"tub\", \"basket\", \"box\", \"barrel\", \"sack\", \"bag\", \"can\"]"}
{"cat":"containers","slot":"content","value":"backpack","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"All the entities which might be contained within backpack, without being constitutive parts of it.\";         A textual example of the semantic relation is \"contain backpacks\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['books', 'notebooks', 'pens', 'pens', 'papers', 'folders', 'calculator', 'water bottle', 'snacks', 'umbrella']"}
{"cat":"containers","slot":"content","value":"wallet","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"All the entities which might be contained within wallet, without being constitutive parts of it.\";         A textual example of the semantic relation is \"contain wallets\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['money', 'credit card', 'debit card', 'ID card', 'business card', 'receipt', 'key', 'coin', 'gift card', 'photograph']"}
{"cat":"containers","slot":"content","value":"flower","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"All the entities which might be contained within flower, without being constitutive parts of it.\";         A textual example of the semantic relation is \"contain flowers\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['vase', 'pot', 'bouquet', 'basket', 'jar', 'planter', 'box', 'bag', 'container', 'holder']"}
{"cat":"containers","slot":"content","value":"muffin","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"All the entities which might be contained within muffin, without being constitutive parts of it.\";         A textual example of the semantic relation is \"contain muffins\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['box', 'basket', 'bag', 'container', 'tin', 'carton', 'crate', 'pack', 'case', 'pail']"}
{"cat":"containers","slot":"content","value":"water","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"All the entities which might be contained within water, without being constitutive parts of it.\";         A textual example of the semantic relation is \"contain water\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"bucket\", \"tub\", \"pool\", \"glass\", \"bottle\", \"reservoir\", \"pond\", \"lake\", \"ocean\", \"sea\"]"}
{"cat":"containers","slot":"content","value":"ice","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"All the entities which might be contained within ice, without being constitutive parts of it.\";         A textual example of the semantic relation is \"contain ices\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"glass\", \"cup\", \"bowl\", \"tray\", \"bucket\", \"cooler\", \"freezer\", \"fridge\", \"icebox\", \"container\"]"}
{"cat":"containers","slot":"content","value":"spray","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"All the entities which might be contained within spray, without being constitutive parts of it.\";         A textual example of the semantic relation is \"contain sprays\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['can', 'bottle', 'sprayer', 'dispenser', 'container', 'aerosol', 'packaging', 'cartridge', 'tube', 'pump']"}
{"cat":"containers","slot":"content","value":"haversack","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"All the entities which might be contained within haversack, without being constitutive parts of it.\";         A textual example of the semantic relation is \"contain haversacks\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['water', 'food', 'clothes', 'medicine', 'tools', 'weapons', 'maps', 'compass', 'flashlight', 'first-aid kit']"}
{"cat":"containers","slot":"content","value":"purse","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"All the entities which might be contained within purse, without being constitutive parts of it.\";         A textual example of the semantic relation is \"contain purses\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['coins', 'keys', 'wallet', 'makeup', 'phone', 'tissues', 'receipts', 'gum', 'mints', 'lipstick']"}
{"cat":"containers","slot":"content","value":"lunch","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"All the entities which might be contained within lunch, without being constitutive parts of it.\";         A textual example of the semantic relation is \"contain lunches\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['lunchbox', 'picnic basket', 'cooler', 'thermos', 'paper bag', 'plastic container', 'cloth napkin', 'insulated bag', 'food pouch', 'bento box']"}
{"cat":"containers","slot":"material","value":"metal","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"Material of which metal is composed.\";         A textual example of the semantic relation is \"can be made of metal\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['bucket', 'canister', 'casket', 'chest', 'coffin', 'container', 'cradle', 'drum', 'kettle', 'receptacle']"}
{"cat":"containers","slot":"material","value":"wood","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"Material of which wood is composed.\";         A textual example of the semantic relation is \"can be made of wood\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['chest', 'casket', 'crate', 'box', 'trunk', 'barrel', 'carton', 'cabinet', 'bucket', 'tub']"}
{"cat":"containers","slot":"material","value":"ceramic","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"Material of which ceramic is composed.\";         A textual example of the semantic relation is \"can be made of ceramic\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['bowl', 'mug', 'vase', 'plate', 'teapot', 'jar', 'pitcher', 'casserole', 'saucer', 'pot']"}
{"cat":"containers","slot":"material","value":"polyester","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"Material of which polyester is composed.\";         A textual example of the semantic relation is \"can be made of polyester\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['shirt', 'pants', 'dress', 'jacket', 'skirt', 'blouse', 'shorts', 'sweater', 'suit', 'coat']"}
{"cat":"containers","slot":"material","value":"cotton","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"Material of which cotton is composed.\";         A textual example of the semantic relation is \"can be made of cotton\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['cloth', 'fabric', 'textile', 'yarn', 'thread', 'string', 'rope', 'cord', 'twine', 'lanyard']"}
{"cat":"containers","slot":"material","value":"canvas","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"Material of which canvas is composed.\";         A textual example of the semantic relation is \"can be made of canvas\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['canvas', 'cotton', 'linen', 'polyester', 'nylon', 'rayon', 'acrylic', 'wool', 'silk', 'jute']"}
{"cat":"containers","slot":"material","value":"fibre","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"Material of which fibre is composed.\";         A textual example of the semantic relation is \"can be made of fibre\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"cotton\", \"linen\", \"wool\", \"silk\", \"jute\", \"hemp\", \"bamboo\", \"ramie\", \"flax\", \"rayon\"]"}
{"cat":"containers","slot":"material","value":"fabric","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"Material of which fabric is composed.\";         A textual example of the semantic relation is \"can be made of fabric\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['cotton', 'polyester', 'silk', 'wool', 'linen', 'rayon', 'nylon', 'acrylic', 'velvet', 'denim']"}
{"cat":"containers","slot":"material","value":"cloth","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"Material of which cloth is composed.\";         A textual example of the semantic relation is \"can be made of cloth\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"cloth\", \"fabric\", \"textile\", \"linen\", \"cotton\", \"wool\", \"silk\", \"rayon\", \"polyester\", \"nylon\"]"}
{"cat":"containers","slot":"material","value":"leather","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"Material of which leather is composed.\";         A textual example of the semantic relation is \"can be made of leather\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['wallet', 'purse', 'bag', 'satchel', 'briefcase', 'backpack', 'journal', 'portfolio', 'sheath', 'holster']"}
{"cat":"containers","slot":"material","value":"wicker","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"Material of which wicker is composed.\";         A textual example of the semantic relation is \"can be made of wicker\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"basket\", \"hamper\", \"furniture\", \"tray\", \"box\", \"chair\", \"table\", \"storage\", \"container\", \"seat\"]"}
{"cat":"containers","slot":"material","value":"clay","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"Material of which clay is composed.\";         A textual example of the semantic relation is \"can be made of clay\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['pot', 'vase', 'jar', 'bowl', 'teapot', 'mug', 'plate', 'casserole', 'statue', 'brick']"}
{"cat":"containers","slot":"material","value":"aluminum","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"Material of which aluminum is composed.\";         A textual example of the semantic relation is \"can be made of aluminum\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"can\", \"soda can\", \"aluminum can\", \"beer can\", \"tin can\", \"pop can\", \"beverage can\", \"food can\", \"aerosol can\", \"aluminum container\"]"}
{"cat":"containers","slot":"material","value":"paper","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"Material of which paper is composed.\";         A textual example of the semantic relation is \"can be made of paper\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"envelope\", \"folder\", \"notebook\", \"book\", \"box\", \"bag\", \"carton\", \"package\", \"container\", \"package\"]"}
{"cat":"containers","slot":"shape","value":"hollow","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"Form of hollow.\";         A textual example of the semantic relation is \"can be hollow\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['box', 'bag', 'jar', 'bottle', 'canister', 'crate', 'tub', 'vase', 'barrel', 'bucket']"}
{"cat":"containers","slot":"shape","value":"round","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"Form of round.\";         A textual example of the semantic relation is \"can be round\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['pot', 'bowl', 'jar', 'tub', 'bucket', 'vase', 'barrel', 'drum', 'urn', 'kettle']"}
{"cat":"containers","slot":"shape","value":"circular","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"Form of circular.\";         A textual example of the semantic relation is \"can be circular\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['bottle', 'jar', 'can', 'vase', 'bowl', 'cup', 'bucket', 'barrel', 'tank', 'drum']"}
{"cat":"containers","slot":"shape","value":"cylindrical","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"Form of cylindrical.\";         A textual example of the semantic relation is \"can be cylindrical\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"barrel\", \"canister\", \"drum\", \"jar\", \"vase\", \"bottle\", \"tank\", \"cylinder\", \"bucket\", \"flask\"]"}
{"cat":"containers","slot":"shape","value":"conical","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"Form of conical.\";         A textual example of the semantic relation is \"can be conical\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['cone', 'funnel', 'chalice', 'beaker', 'vase', 'horn', 'trumpet', 'bell', 'cup', 'goblet']"}
{"cat":"containers","slot":"shape","value":"curved","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"Form of curved.\";         A textual example of the semantic relation is \"can be curved\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\n            \"basket\",\n            \"bowl\",\n            \"barrel\",\n            \"bucket\",\n            \"pot\",\n            \"sack\",\n            \"tub\",\n            \"vase\",\n            \"box\",\n            \"jar\"\n        ]"}
{"cat":"containers","slot":"shape","value":"rectangular","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"Form of rectangular.\";         A textual example of the semantic relation is \"can be rectangular\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['box', 'carton', 'crate', 'packet', 'sack', 'tub', 'vessel', 'bin', 'case', 'casket']"}
{"cat":"containers","slot":"shape","value":"square","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"Form of square.\";         A textual example of the semantic relation is \"can be square\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\n            \"box\",\n            \"chest\",\n            \"crate\",\n            \"cube\",\n            \"pack\",\n            \"package\",\n            \"parcel\",\n            \"sack\",\n            \"tub\",\n            \"vault\"\n        ]"}
{"cat":"containers","slot":"shape","value":"flat","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"Form of flat.\";         A textual example of the semantic relation is \"can be flat\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"box\", \"bag\", \"tray\", \"container\", \"drawer\", \"cabinet\", \"chest\", \"carton\", \"crate\", \"packet\"]"}
{"cat":"containers","slot":"shape","value":"dry","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"Form of dry.\";         A textual example of the semantic relation is \"can be dry\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"box\", \"jar\", \"vase\", \"canister\", \"basket\", \"bag\", \"bucket\", \"tub\", \"barrel\", \"chest\"]"}
{"cat":"containers","slot":"material","value":"plastic","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"Material of which plastic is composed.\";         A textual example of the semantic relation is \"can be made of plastic\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['bottle', 'jar', 'container', 'box', 'bag', 'tub', 'canister', 'carton', 'packaging', 'case']"}
{"cat":"containers","slot":"efficiency","value":"reusable","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"Positive (efficiency) or negative (inefficiency) features of reusable related to their function.\";         A textual example of the semantic relation is \"can be reusable\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['reusable', 'durable', 'versatile', 'stackable', 'collapsible', 'insulated', 'portable', 'spacious', 'lightweight', 'compact']"}
{"cat":"containers","slot":"part","value":"glass","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"All the constitutive parts of glass.\";         A textual example of the semantic relation is \"can have glass\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['bottle', 'jar', 'vase', 'flask', 'tumbler', 'glass', 'beaker', 'pitcher', 'goblet', 'carboy']"}
{"cat":"containers","slot":"content","value":"bag","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"All the entities which might be contained within bag, without being constitutive parts of it.\";         A textual example of the semantic relation is \"contain bags\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['books', 'clothes', 'toys', 'food', 'water', 'money', 'gadgets', 'documents', 'stationery', 'accessories']"}
{"cat":"containers","slot":"material","value":"reusable","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"Material of which reusable is composed.\";         A textual example of the semantic relation is \"can be made of reusable\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['plastic', 'metal', 'glass', 'cloth', 'paper', 'ceramic', 'wood', 'bamboo', 'stainless steel', 'silicone']"}
{"cat":"containers","slot":"material","value":"glass","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"Material of which glass is composed.\";         A textual example of the semantic relation is \"can be made of glass\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"bottle\", \"jar\", \"vase\", \"glass\", \"goblet\", \"flask\", \"tumbler\", \"beaker\", \"carboy\", \"decanter\"]"}
{"cat":"containers","slot":"material","value":"recycled","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"Material of which recycled is composed.\";         A textual example of the semantic relation is \"can be made of recycled\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['paper', 'plastic', 'glass', 'metal', 'cardboard', 'aluminum', 'steel', 'recycled', 'material', 'waste']"}
{"cat":"containers","slot":"generalization","value":"instrumentality","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"Classification of instrumentality related to hypernyms.\";         A textual example of the semantic relation is \"are instrumentality\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['box', 'bag', 'bottle', 'jar', 'canister', 'crate', 'carton', 'container', 'vessel', 'receptacle']"}
{"cat":"containers","slot":"generalization","value":"instrumentation","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"Classification of instrumentation related to hypernyms.\";         A textual example of the semantic relation is \"are instrumentation\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"jar\", \"can\", \"box\", \"bag\", \"bottle\", \"barrel\", \"carton\", \"crate\", \"container\", \"case\"]"}
{"cat":"containers","slot":"generalization","value":"artefact","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"Classification of artefact related to hypernyms.\";         A textual example of the semantic relation is \"are artefact\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"jar\", \"bucket\", \"box\", \"canister\", \"carton\", \"crate\", \"drum\", \"sack\", \"tank\", \"vase\"]"}
{"cat":"containers","slot":"generalization","value":"artifact","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"Classification of artifact related to hypernyms.\";         A textual example of the semantic relation is \"are artifact\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['box', 'bag', 'bottle', 'jar', 'can', 'container', 'vessel', 'carton', 'crate', 'packet']"}
{"cat":"containers","slot":"generalization","value":"container","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"Classification of container related to hypernyms.\";         A textual example of the semantic relation is \"are container\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"jar\", \"can\", \"bottle\", \"box\", \"bag\", \"bucket\", \"tub\", \"carton\", \"crate\", \"casket\"]"}
{"cat":"containers","slot":"generalization","value":"receptacle","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"Classification of receptacle related to hypernyms.\";         A textual example of the semantic relation is \"are receptacle\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['box', 'bag', 'basket', 'jar', 'canister', 'tub', 'bucket', 'crate', 'carton', 'chest']"}
{"cat":"containers","slot":"generalization","value":"vessel","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"Classification of vessel related to hypernyms.\";         A textual example of the semantic relation is \"are vessel\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"box\", \"jar\", \"can\", \"bag\", \"bottle\", \"bucket\", \"carton\", \"crate\", \"tub\", \"vase\"]"}
{"cat":"containers","slot":"generalization","value":"unit","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"Classification of unit related to hypernyms.\";         A textual example of the semantic relation is \"are unit\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['box', 'bag', 'bottle', 'jar', 'canister', 'crate', 'carton', 'chest', 'casket', 'container']"}
{"cat":"containers","slot":"generalization","value":"cookware","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"Classification of cookware related to hypernyms.\";         A textual example of the semantic relation is \"are cookware\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['pot', 'pan', 'skillet', 'saucepan', 'stockpot', 'dutch oven', 'wok', 'griddle', 'steamer', 'roaster']"}
{"cat":"containers","slot":"generalization","value":"passage","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"Classification of passage related to hypernyms.\";         A textual example of the semantic relation is \"are passage\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['box', 'jar', 'canister', 'vase', 'bottle', 'tank', 'bucket', 'bag', 'carton', 'crate']"}
{"cat":"containers","slot":"generalization","value":"food product","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"Classification of food product related to hypernyms.\";         A textual example of the semantic relation is \"are food product\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['jar', 'can', 'box', 'bag', 'bottle', 'tin', 'carton', 'crate', 'barrel', 'container']"}
{"cat":"containers","slot":"generalization","value":"conduit","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"Classification of conduit related to hypernyms.\";         A textual example of the semantic relation is \"are conduit\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"box\", \"bag\", \"jar\", \"canister\", \"crate\", \"carton\", \"chest\", \"barrel\", \"vase\", \"basket\"]"}
{"cat":"containers","slot":"generalization","value":"supporting structure","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"Classification of supporting structure related to hypernyms.\";         A textual example of the semantic relation is \"are supporting structure\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"box\", \"bag\", \"jar\", \"can\", \"bottle\", \"tank\", \"crate\", \"carton\", \"bin\", \"container\"]"}
{"cat":"containers","slot":"generalization","value":"nutrient","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"Classification of nutrient related to hypernyms.\";         A textual example of the semantic relation is \"are nutrient\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"bowl\", \"jar\", \"canister\", \"vial\", \"tub\", \"bin\", \"bucket\", \"carton\", \"crate\", \"cask\"]"}
{"cat":"containers","slot":"generalization","value":"avoirdupois unit","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"Classification of avoirdupois unit related to hypernyms.\";         A textual example of the semantic relation is \"are avoirdupois unit\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['pound', 'ounce', 'grain', 'stone', 'quarter', 'hundredweight', 'ton', 'carat', 'dram', 'pennyweight']"}
{"cat":"containers","slot":"generalization","value":"package","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"Classification of package related to hypernyms.\";         A textual example of the semantic relation is \"are package\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['box', 'bag', 'jar', 'can', 'bottle', 'crate', 'carton', 'tin', 'container', 'packet']"}
{"cat":"containers","slot":"generalization","value":"tubing","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"Classification of tubing related to hypernyms.\";         A textual example of the semantic relation is \"are tubing\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['tube', 'pipe', 'hose', 'conduit', 'duct', 'channel', 'canal', 'flue', 'chute', 'shaft']"}
{"cat":"containers","slot":"generalization","value":"parcel","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"Classification of parcel related to hypernyms.\";         A textual example of the semantic relation is \"are parcel\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"box\", \"bag\", \"crate\", \"carton\", \"jar\", \"canister\", \"basket\", \"container\", \"package\", \"envelope\"]"}
{"cat":"containers","slot":"generalization","value":"foodstuff","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"Classification of foodstuff related to hypernyms.\";         A textual example of the semantic relation is \"are foodstuff\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['jar', 'can', 'bottle', 'box', 'bag', 'carton', 'crate', 'tin', 'tub', 'package']"}
{"cat":"containers","slot":"generalization","value":"tube","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"Classification of tube related to hypernyms.\";         A textual example of the semantic relation is \"are tube\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['box', 'bag', 'jar', 'can', 'bottle', 'vase', 'pot', 'bucket', 'bin', 'container']"}
{"cat":"containers","slot":"generalization","value":"cooking utensil","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"Classification of cooking utensil related to hypernyms.\";         A textual example of the semantic relation is \"are cooking utensil\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"pot\", \"pan\", \"bowl\", \"jar\", \"canister\", \"tin\", \"bottle\", \"casserole\", \"kettle\", \"cauldron\"]"}
{"cat":"containers","slot":"generalization","value":"construction","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"Classification of construction related to hypernyms.\";         A textual example of the semantic relation is \"are construction\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['box', 'bag', 'can', 'jar', 'crate', 'carton', 'bottle', 'barrel', 'bin', 'bucket']"}
{"cat":"containers","slot":"generalization","value":"sheaf","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"Classification of sheaf related to hypernyms.\";         A textual example of the semantic relation is \"are sheaf\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['bag', 'box', 'canister', 'carton', 'crate', 'jar', 'package', 'sack', 'tin', 'vessel']"}
{"cat":"containers","slot":"generalization","value":"mass unit","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"Classification of mass unit related to hypernyms.\";         A textual example of the semantic relation is \"are mass unit\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['barrel', 'box', 'canister', 'carton', 'crate', 'jar', 'package', 'sack', 'tank', 'vessel']"}
{"cat":"containers","slot":"generalization","value":"unit of measurement","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"Classification of unit of measurement related to hypernyms.\";         A textual example of the semantic relation is \"are unit of measurement\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"bucket\", \"box\", \"can\", \"carton\", \"crate\", \"jar\", \"packet\", \"sack\", \"tub\", \"vial\"]"}
{"cat":"containers","slot":"generalization","value":"meal","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"Classification of meal related to hypernyms.\";         A textual example of the semantic relation is \"are meal\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['bowl', 'plate', 'cup', 'mug', 'glass', 'bottle', 'can', 'jar', 'box', 'bag']"}
{"cat":"containers","slot":"generalization","value":"structure","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"Classification of structure related to hypernyms.\";         A textual example of the semantic relation is \"are structure\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"box\", \"bag\", \"jar\", \"canister\", \"crate\", \"vase\", \"chest\", \"tub\", \"bottle\", \"carton\"]"}
{"cat":"containers","slot":"generalization","value":"whole","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"Classification of whole related to hypernyms.\";         A textual example of the semantic relation is \"are whole\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"box\", \"jar\", \"bag\", \"can\", \"bottle\", \"crate\", \"carton\", \"tub\", \"barrel\", \"container\"]"}
{"cat":"containers","slot":"generalization","value":"framework","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"Classification of framework related to hypernyms.\";         A textual example of the semantic relation is \"are framework\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"box\", \"bag\", \"bottle\", \"jar\", \"can\", \"carton\", \"crate\", \"barrel\", \"tank\", \"vessel\"]"}
{"cat":"containers","slot":"generalization","value":"kitchen utensil","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"Classification of kitchen utensil related to hypernyms.\";         A textual example of the semantic relation is \"are kitchen utensil\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['bowl', 'pot', 'pan', 'kettle', 'colander', 'mixing bowl', 'casserole dish', 'saucepan', 'frying pan', 'baking dish']"}
{"cat":"containers","slot":"generalization","value":"bundle","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"Classification of bundle related to hypernyms.\";         A textual example of the semantic relation is \"are bundle\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"box\", \"bag\", \"jar\", \"can\", \"bottle\", \"crate\", \"carton\", \"tube\", \"container\", \"package\"]"}
{"cat":"containers","slot":"generalization","value":"food","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"Classification of food related to hypernyms.\";         A textual example of the semantic relation is \"are food\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['bowl', 'box', 'can', 'carton', 'jar', 'package', 'pouch', 'sack', 'tin', 'tub']"}
{"cat":"containers","slot":"generalization","value":"utensil","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"Classification of utensil related to hypernyms.\";         A textual example of the semantic relation is \"are utensil\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"jar\", \"can\", \"vase\", \"bottle\", \"box\", \"bag\", \"bucket\", \"tub\", \"barrel\", \"crate\"]"}
{"cat":"containers","slot":"shape","value":"shaped","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"Form of shaped.\";         A textual example of the semantic relation is \"can be shaped\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['box', 'jar', 'bag', 'bottle', 'can', 'carton', 'crate', 'tin', 'tube', 'vase']"}
{"cat":"containers","slot":"efficiency","value":"plastic","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"Positive (efficiency) or negative (inefficiency) features of plastic related to their function.\";         A textual example of the semantic relation is \"can be plastic\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        [\"plastic\", \"recyclable\", \"durable\", \"lightweight\", \"flexible\", \"transparent\", \"insulating\", \"resistant\", \"stackable\", \"affordable\"]"}
{"cat":"containers","slot":"material","value":"plastic","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"Material of which plastic is composed.\";         A textual example of the semantic relation is \"can be made of plastic\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['bottle', 'jar', 'container', 'box', 'bag', 'tub', 'canister', 'carton', 'packaging', 'case']"}
{"cat":"containers","slot":"shape","value":"shaped","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"Form of shaped.\";         A textual example of the semantic relation is \"can be shaped\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['box', 'jar', 'bag', 'bottle', 'can', 'carton', 'crate', 'tin', 'tube', 'vase']"}
{"cat":"containers","slot":"content","value":"reusable","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"All the entities which might be contained within reusable, without being constitutive parts of it.\";         A textual example of the semantic relation is \"contain reusables\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['bag', 'box', 'bucket', 'can', 'carton', 'crate', 'jar', 'package', 'tin', 'tub']"}
{"cat":"containers","slot":"generalization","value":"bag","prompt":"### Instruction: \n        Provide a list of 10 words that belong to the category \"containers\";         The returned words must satisfy the semantic relation \"Classification of bag related to hypernyms.\";         A textual example of the semantic relation is \"are bag\";         The desired output is: words in a python list. \n        ### Response: \n        Output: ","result":"\n        ['box', 'crate', 'jar', 'canister', 'basket', 'bucket', 'container', 'carton', 'chest', 'tub']"}
